C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN .\app.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe app.c LARGE OMF2 DEBUG BROWSE PRINT(.\app.lst) OBJECT(.\app.obj) WARNINGLEV
                    -EL(0)

line level    source

   1          
   2          #define MANGLED_NESC_APP_C
   3          #define nx_struct struct
   4          #define nx_union union
   5          #define dbg(mode, format) ((void)0)
   6          #define dbg_clear(mode, format) ((void)0)
   7          #define dbg_active(mode) 0
   8          //# 8 "/opt/atos/tos/chips/cc2530/mcs51/keil_stdint.h"
   9          typedef signed char int8_t;
  10          typedef short int16_t;
  11          
  12          
  13          
  14          typedef long int32_t;
  15          
  16          
  17          /*typedef long long int int64_t;*/
  18          
  19          
  20          
  21          
  22          typedef unsigned char uint8_t;
  23          typedef unsigned short uint16_t;
  24          
  25          
  26          
  27          typedef unsigned long uint32_t;
  28          
  29          
  30          /*typedef unsigned long long int uint64_t;*/
  31          //# 19 "/opt/atos/tos/chips/cc2530/mcs51/stdint.h"
  32          typedef signed char int_least8_t;
  33          typedef short int int_least16_t;
  34          typedef long int_least32_t;
  35          
  36          
  37          
  38          /*__extension__*/ 
  39          typedef
  40                   float* int_least64_t;
  41                
  42          
  43          
  44          
  45          typedef unsigned char uint_least8_t;
  46          typedef unsigned short uint_least16_t;
  47          typedef unsigned long uint_least32_t;
  48          
  49          
  50          
  51          /*__extension__*/ 
  52          typedef 
  53                   float* uint_least64_t;
  54                
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 2   

  55          
  56          
  57          
  58          
  59          
  60          
  61          typedef signed char int_fast8_t;
  62          
  63          
  64          
  65          
  66          
  67          typedef int int_fast16_t;
  68          typedef int int_fast32_t;
  69          /*__extension__*/ 
  70          typedef
  71                   float* int_fast64_t;
  72                
  73          
  74          
  75          
  76          typedef unsigned char uint_fast8_t;
  77          
  78          
  79          
  80          
  81          
  82          typedef unsigned int uint_fast16_t;
  83          typedef unsigned int uint_fast32_t;
  84          /*__extension__*/ 
  85          typedef 
  86                   float* uint_fast64_t;
  87                
  88          //# 79 "/opt/atos/tos/chips/cc2530/mcs51/stdint.h" 3
  89          typedef int intptr_t;
  90          
  91          
  92          typedef unsigned int uintptr_t;
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          
 101          /*__extension__*/ 
 102          typedef
 103                   float* intmax_t;
 104                
 105          /*__extension__*/ 
 106          typedef 
 107                   float* uintmax_t;
 108                
 109          //# 231 "/usr/include/inttypes.h"
 110          //#line 228
 111          typedef struct __nesc_unnamed4242 {
 112            intmax_t quot;
 113            intmax_t rem;
 114          } imaxdiv_t;
 115          //# 235 "/usr/lib/ncc/nesc_nx.h"
 116          static   /*inline*/   uint8_t __nesc_ntoh_uint8(const void *source);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 3   

 117          
 118          
 119          
 120          
 121          static   /*inline*/   uint8_t __nesc_hton_uint8(void *target, uint8_t value);
 122          
 123          
 124          
 125          
 126          
 127          static   /*inline*/   uint8_t __nesc_ntoh_leuint8(const void *source);
 128          
 129          
 130          
 131          
 132          static   /*inline*/   uint8_t __nesc_hton_leuint8(void *target, uint8_t value);
 133          
 134          
 135          
 136          
 137          
 138          static   /*inline*/   int8_t __nesc_ntoh_int8(const void *source);
 139          //#line 257
 140          static   /*inline*/   int8_t __nesc_hton_int8(void *target, int8_t value);
 141          //#line 276
 142          static   /*inline*/   uint16_t __nesc_ntoh_leuint16(const void *source);
 143          
 144          
 145          
 146          
 147          static   /*inline*/   uint16_t __nesc_hton_leuint16(void *target, uint16_t value);
 148          //#line 385
 149          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nx_int8_t;typedef int8_t __nesc_nxbase_nx_in
             -t8_t  ;
 150          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nx_int16_t;typedef int16_t __nesc_nxbase_nx_
             -int16_t  ;
 151          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nx_int32_t;typedef int32_t __nesc_nxbase_nx_
             -int32_t  ;
 152          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nx_int64_t;/*typedef int64_t __nesc_nxbase_n
             -x_int64_t  ;*/
 153          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nx_uint8_t;typedef uint8_t __nesc_nxbase_nx_
             -uint8_t  ;
 154          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nx_uint16_t;typedef uint16_t __nesc_nxbase_n
             -x_uint16_t  ;
 155          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nx_uint32_t;typedef uint32_t __nesc_nxbase_n
             -x_uint32_t  ;
 156          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nx_uint64_t;/*typedef uint64_t __nesc_nxbase
             -_nx_uint64_t  ;*/
 157          
 158          
 159          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nxle_int8_t;typedef int8_t __nesc_nxbase_nxl
             -e_int8_t  ;
 160          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nxle_int16_t;typedef int16_t __nesc_nxbase_n
             -xle_int16_t  ;
 161          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nxle_int32_t;typedef int32_t __nesc_nxbase_n
             -xle_int32_t  ;
 162          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nxle_int64_t;/*typedef int64_t __nesc_nxbase
             -_nxle_int64_t  ;*/
 163          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nxle_uint8_t;typedef uint8_t __nesc_nxbase_n
             -xle_uint8_t  ;
 164          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nxle_uint16_t;typedef uint16_t __nesc_nxbase
             -_nxle_uint16_t  ;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 4   

 165          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nxle_uint32_t;typedef uint32_t __nesc_nxbase
             -_nxle_uint32_t  ;
 166          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nxle_uint64_t;/*typedef uint64_t __nesc_nxba
             -se_nxle_uint64_t  ;*/
 167          //# 26 "/usr/include/machine/_types.h"
 168          typedef signed char __int8_t;
 169          typedef unsigned char __uint8_t;
 170          
 171          
 172          
 173          
 174          
 175          
 176          
 177          
 178          typedef signed short __int16_t;
 179          typedef unsigned short __uint16_t;
 180          
 181          
 182          
 183          
 184          
 185          
 186          
 187          
 188          typedef __int16_t __int_least16_t;
 189          typedef __uint16_t __uint_least16_t;
 190          //# 58 "/usr/include/machine/_types.h" 3
 191          typedef signed int __int32_t;
 192          typedef unsigned int __uint32_t;
 193          //#line 76
 194          typedef __int32_t __int_least32_t;
 195          typedef __uint32_t __uint_least32_t;
 196          //#line 99
 197          /*typedef signed long long __int64_t;*/
 198          /*typedef unsigned long long __uint64_t;*/
 199          //# 14 "/usr/include/sys/lock.h"
 200          typedef void *_LOCK_T;
 201          //# 14 "/usr/include/sys/_types.h"
 202          typedef long _off_t;
 203          /*__extension__*/ 
 204          //#line 15
 205          typedef
 206                   float* _off64_t;
 207                
 208          
 209          
 210          typedef int _ssize_t;
 211          //# 354 "/usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h" 3
 212          typedef unsigned int wint_t;
 213          //# 35 "/usr/include/sys/_types.h"
 214          //#line 27
 215          typedef struct __nesc_unnamed4243 {
 216          
 217            int __count;
 218            union __nesc_unnamed4244 {
 219          
 220              wint_t __wch;
 221              unsigned char __wchb[4];
 222            } __value;
 223          } _mbstate_t;
 224          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 5   

 225          typedef _LOCK_T _flock_t;
 226          
 227          
 228          typedef void *_iconv_t;
 229          //# 151 "/usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h" 3
 230          typedef int ptrdiff_t;
 231          //#line 213
 232          typedef unsigned int size_t;
 233          //#line 325
 234          typedef short unsigned int wchar_t;
 235          //# 19 "/usr/include/machine/types.h"
 236          typedef long int __off_t;
 237          typedef int __pid_t;
 238          
 239          /*__extension__*/ 
 240          //#line 22
 241          typedef
 242                   float* __loff_t;
 243                
 244          //# 92 "/usr/include/sys/types.h"
 245          typedef unsigned char u_char;
 246          typedef unsigned short u_short;
 247          typedef unsigned int u_int;
 248          typedef unsigned long u_long;
 249          
 250          
 251          
 252          typedef unsigned short ushort;
 253          typedef unsigned int uint;
 254          
 255          
 256          
 257          typedef unsigned long clock_t;
 258          
 259          
 260          
 261          
 262          typedef long time_t;
 263          
 264          
 265          
 266          
 267          struct timespec {
 268            time_t tv_sec;
 269            long tv_nsec;
 270          };
 271          
 272          struct itimerspec {
 273            struct timespec it_interval;
 274            struct timespec it_value;
 275          };
 276          
 277          
 278          typedef long daddr_t;
 279          typedef char *caddr_t;
 280          //# 180 "/usr/include/sys/types.h" 3
 281          typedef int pid_t;
 282          
 283          
 284          
 285          typedef _ssize_t ssize_t;
 286          //#line 203
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 6   

 287          typedef unsigned short nlink_t;
 288          //#line 225
 289          typedef long fd_mask;
 290          
 291          
 292          
 293          
 294          
 295          
 296          
 297          
 298          
 299          //#line 233
 300          typedef struct _types_fd_set {
 301            fd_mask fds_bits[(64 + (sizeof(fd_mask ) * 8 - 1)) / (sizeof(fd_mask ) * 8)];
 302          } _types_fd_set;
 303          //#line 256
 304          typedef unsigned long clockid_t;
 305          
 306          
 307          
 308          
 309          typedef unsigned long timer_t;
 310          
 311          
 312          
 313          typedef unsigned long useconds_t;
 314          typedef long suseconds_t;
 315          //# 26 "/usr/include/cygwin/types.h"
 316          typedef struct timespec timespec_t;
 317          
 318          
 319          
 320          
 321          typedef struct timespec timestruc_t;
 322          
 323          
 324          
 325          
 326          
 327          typedef _off64_t off_t;
 328          
 329          
 330          
 331          
 332          
 333          typedef __loff_t loff_t;
 334          
 335          
 336          
 337          typedef short __dev16_t;
 338          typedef unsigned long __dev32_t;
 339          
 340          typedef __dev32_t dev_t;
 341          
 342          
 343          
 344          
 345          
 346          
 347          
 348          typedef long blksize_t;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 7   

 349          
 350          
 351          
 352          
 353          typedef long __blkcnt32_t;
 354          typedef
 355                   float* __blkcnt64_t;
 356                
 357          
 358          typedef __blkcnt64_t blkcnt_t;
 359          
 360          
 361          
 362          
 363          
 364          
 365          
 366          typedef unsigned long fsblkcnt_t;
 367          
 368          
 369          
 370          
 371          typedef unsigned long fsfilcnt_t;
 372          
 373          
 374          
 375          
 376          typedef unsigned short __uid16_t;
 377          typedef unsigned long __uid32_t;
 378          
 379          typedef __uid32_t uid_t;
 380          
 381          
 382          
 383          
 384          
 385          
 386          
 387          typedef unsigned short __gid16_t;
 388          typedef unsigned long __gid32_t;
 389          
 390          typedef __gid32_t gid_t;
 391          
 392          
 393          
 394          
 395          
 396          
 397          
 398          typedef unsigned long __ino32_t;
 399          typedef 
 400                   float* __ino64_t;
 401                
 402          
 403          typedef __ino64_t ino_t;
 404          
 405          
 406          
 407          
 408          
 409          
 410          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 8   

 411          
 412          typedef unsigned long id_t;
 413          //# 140 "/usr/include/cygwin/types.h" 3
 414          struct flock {
 415            short l_type;
 416            short l_whence;
 417            off_t l_start;
 418            off_t l_len;
 419          
 420            pid_t l_pid;
 421          };
 422          
 423          
 424          
 425          
 426          
 427          
 428          
 429          typedef
 430                   float* key_t;
 431                
 432          
 433          
 434          
 435          
 436          
 437          
 438          
 439          typedef unsigned long vm_offset_t;
 440          
 441          
 442          
 443          
 444          typedef unsigned long vm_size_t;
 445          
 446          
 447          
 448          
 449          typedef void *vm_object_t;
 450          
 451          
 452          
 453          
 454          typedef unsigned char u_int8_t;
 455          
 456          
 457          
 458          typedef __uint16_t u_int16_t;
 459          
 460          
 461          
 462          typedef __uint32_t u_int32_t;
 463          
 464          
 465          
 466          /*typedef __uint64_t u_int64_t;*/
 467          
 468          
 469          
 470          
 471          typedef __int32_t register_t;
 472          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 9   

 473          
 474          
 475          
 476          typedef char *addr_t;
 477          
 478          
 479          
 480          
 481          typedef unsigned mode_t;
 482          
 483          
 484          
 485          
 486          
 487          typedef struct __pthread_t {
 488          //#line 211
 489            char __dummy;
 490          } *
 491          //#line 211
 492          pthread_t;
 493          typedef struct __pthread_mutex_t {
 494          //#line 212
 495            char __dummy;
 496          } *
 497          //#line 212
 498          pthread_mutex_t;
 499          
 500          typedef struct __pthread_key_t {
 501          //#line 214
 502            char __dummy;
 503          } *
 504          //#line 214
 505          pthread_key_t;
 506          typedef struct __pthread_attr_t {
 507          //#line 215
 508            char __dummy;
 509          } *
 510          //#line 215
 511          pthread_attr_t;
 512          typedef struct __pthread_mutexattr_t {
 513          //#line 216
 514            char __dummy;
 515          } *
 516          //#line 216
 517          pthread_mutexattr_t;
 518          typedef struct __pthread_condattr_t {
 519          //#line 217
 520            char __dummy;
 521          } *
 522          //#line 217
 523          pthread_condattr_t;
 524          typedef struct __pthread_cond_t {
 525          //#line 218
 526            char __dummy;
 527          } *
 528          //#line 218
 529          pthread_cond_t;
 530          
 531          
 532          
 533          
 534          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 10  

 535          
 536          
 537          //#line 221
 538          typedef struct __nesc_unnamed4245 {
 539          
 540            pthread_mutex_t mutex;
 541            int state;
 542          } 
 543          pthread_once_t;
 544          typedef struct __pthread_rwlock_t {
 545          //#line 227
 546            char __dummy;
 547          } *
 548          //#line 227
 549          pthread_rwlock_t;
 550          typedef struct __pthread_rwlockattr_t {
 551          //#line 228
 552            char __dummy;
 553          } *
 554          //#line 228
 555          pthread_rwlockattr_t;
 556          //# 30 "/opt/atos/tos/chips/cc2530/mcs51/stdio.h"
 557          extern int sprintf(char *, const char *, ...);
 558          //# 7 "/opt/atos/tos/chips/cc2530/mcs51/string.h"
 559          extern void *memcpy(void *s1, void *s2, int n);
 560          
 561          extern void *memset(void *s, char val, int n);
 562          //# 19 "/usr/include/sys/reent.h"
 563          typedef unsigned long __ULong;
 564          //# 40 "/usr/include/sys/reent.h" 3
 565          struct _Bigint {
 566          
 567            struct _Bigint *_next;
 568            int _k, _maxwds, _sign, _wds;
 569            __ULong _x[1];
 570          };
 571          
 572          
 573          struct __tm {
 574          
 575            int __tm_sec;
 576            int __tm_min;
 577            int __tm_hour;
 578            int __tm_mday;
 579            int __tm_mon;
 580            int __tm_year;
 581            int __tm_wday;
 582            int __tm_yday;
 583            int __tm_isdst;
 584          };
 585          
 586          
 587          
 588          
 589          
 590          
 591          
 592          struct _on_exit_args {
 593            void *_fnargs[32];
 594            void *_dso_handle[32];
 595          
 596            __ULong _fntypes;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 11  

 597          
 598          
 599            __ULong _is_cxa;
 600          };
 601          
 602          
 603          
 604          
 605          
 606          
 607          
 608          
 609          
 610          struct _atexit {
 611            struct _atexit *_next;
 612            int _ind;
 613          
 614            void (*_fns[32])(void );
 615            struct _on_exit_args _on_exit_args;
 616          };
 617          
 618          
 619          
 620          
 621          
 622          
 623          
 624          
 625          
 626          struct __sbuf {
 627            unsigned char *_base;
 628            int _size;
 629          };
 630          
 631          
 632          
 633          
 634          
 635          
 636          typedef long _fpos_t;
 637          
 638          
 639          
 640          typedef _off64_t _fpos64_t;
 641          //#line 166
 642          struct __sFILE {
 643            unsigned char *_p;
 644            int _r;
 645            int _w;
 646            short _flags;
 647            short _file;
 648            struct __sbuf _bf;
 649            int _lbfsize;
 650          
 651          
 652          
 653          
 654          
 655          
 656            void *_cookie;
 657          
 658            _ssize_t /*__attribute((__cdecl__))*/ (*_read)(void *_cookie, char *_buf, int _n);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 12  

 659            _ssize_t /*__attribute((__cdecl__))*/ (*_write)(void *_cookie, const char *_buf, int _n);
 660          
 661            _fpos_t /*__attribute((__cdecl__))*/ (*_seek)(void *_cookie, _fpos_t _offset, int _whence);
 662            int /*__attribute((__cdecl__))*/ (*_close)(void *_cookie);
 663          
 664          
 665            struct __sbuf _ub;
 666            unsigned char *_up;
 667            int _ur;
 668          
 669          
 670            unsigned char _ubuf[3];
 671            unsigned char _nbuf[1];
 672          
 673          
 674            struct __sbuf _lb;
 675          
 676          
 677            int _blksize;
 678            int _offset;
 679          
 680          
 681            struct _reent *__data;
 682          
 683          
 684          
 685            _flock_t _lock;
 686          };
 687          
 688          
 689          
 690          struct __sFILE64 {
 691            unsigned char *_p;
 692            int _r;
 693            int _w;
 694            short _flags;
 695            short _file;
 696            struct __sbuf _bf;
 697            int _lbfsize;
 698          
 699            struct _reent *__data;
 700          
 701          
 702            void *_cookie;
 703          
 704            _ssize_t /*__attribute((__cdecl__))*/ (*_read)(void *_cookie, char *_buf, int _n);
 705            _ssize_t /*__attribute((__cdecl__))*/ (*_write)(void *_cookie, const char *_buf, int _n);
 706          
 707            _fpos_t /*__attribute((__cdecl__))*/ (*_seek)(void *_cookie, _fpos_t _offset, int _whence);
 708            int /*__attribute((__cdecl__))*/ (*_close)(void *_cookie);
 709          
 710          
 711            struct __sbuf _ub;
 712            unsigned char *_up;
 713            int _ur;
 714          
 715          
 716            unsigned char _ubuf[3];
 717            unsigned char _nbuf[1];
 718          
 719          
 720            struct __sbuf _lb;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 13  

 721          
 722          
 723            int _blksize;
 724            int _flags2;
 725          
 726            _off64_t _offset;
 727            _fpos64_t /*__attribute((__cdecl__))*/ (*_seek64)(void *_cookie, _fpos64_t _offset, int _whence);
 728          
 729          
 730            _flock_t _lock;
 731          };
 732          
 733          typedef struct __sFILE64 __FILE;
 734          
 735          
 736          
 737          
 738          struct _glue {
 739          
 740            struct _glue *_next;
 741            int _niobs;
 742            __FILE *_iobs;
 743          };
 744          //#line 290
 745          struct _rand48 {
 746            unsigned short _seed[3];
 747            unsigned short _mult[3];
 748            unsigned short _add;
 749          };
 750          //#line 565
 751          struct _reent {
 752          
 753            int _errno;
 754          
 755          
 756          
 757          
 758            __FILE *_stdin, *_stdout, *_stderr;
 759          
 760            int _inc;
 761            char _emergency[25];
 762          
 763            int _current_category;
 764            const char *_current_locale;
 765          
 766            int __sdidinit;
 767          
 768            void /*__attribute((__cdecl__))*/ (*__cleanup)(struct _reent *);
 769          
 770          
 771            struct _Bigint *_result;
 772            int _result_k;
 773            struct _Bigint *_p5s;
 774            struct _Bigint **_freelist;
 775          
 776          
 777            int _cvtlen;
 778            char *_cvtbuf;
 779          
 780            union __nesc_unnamed4246 {
 781          
 782              struct __nesc_unnamed4247 {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 14  

 783          
 784                unsigned int _unused_rand;
 785                char *_strtok_last;
 786                char _asctime_buf[26];
 787                struct __tm _localtime_buf;
 788                int _gamma_signgam;
 789                /*__extension__*/ 
 790                   float* _rand_next;
 791                
 792                struct _rand48 _r48;
 793                _mbstate_t _mblen_state;
 794                _mbstate_t _mbtowc_state;
 795                _mbstate_t _wctomb_state;
 796                char _l64a_buf[8];
 797                char _signal_buf[24];
 798                int _getdate_err;
 799                _mbstate_t _mbrlen_state;
 800                _mbstate_t _mbrtowc_state;
 801                _mbstate_t _mbsrtowcs_state;
 802                _mbstate_t _wcrtomb_state;
 803                _mbstate_t _wcsrtombs_state;
 804              } _reent;
 805          
 806          
 807          
 808              struct __nesc_unnamed4248 {
 809          
 810          
 811                unsigned char *_nextf[30];
 812                unsigned int _nmalloc[30];
 813              } _unused;
 814            } _new;
 815          
 816          
 817            struct _atexit *_atexit;
 818            struct _atexit _atexit0;
 819          
 820          
 821            void (**_sig_func)(int );
 822          
 823          
 824          
 825          
 826            struct _glue __sglue;
 827            __FILE __sf[3];
 828          };
 829          //#line 799
 830          struct _reent;
 831          struct _reent;
 832          
 833          
 834          
 835          
 836          
 837          
 838          
 839          
 840          
 841          struct _reent;
 842          //# 32 "/usr/include/stdlib.h"
 843          //#line 28
 844          typedef struct __nesc_unnamed4249 {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 15  

 845          
 846            int quot;
 847            int rem;
 848          } div_t;
 849          
 850          
 851          
 852          
 853          
 854          //#line 34
 855          typedef struct __nesc_unnamed4250 {
 856          
 857            long quot;
 858            long rem;
 859          } ldiv_t;
 860          
 861          
 862          
 863          
 864          
 865          
 866          //#line 41
 867          typedef struct __nesc_unnamed4251 {
 868          
 869          
 870                   float* quot;
 871                
 872          
 873                   float* rem;
 874                
 875          } lldiv_t;
 876          //# 11 "/usr/include/math.h"
 877          union __dmath {
 878          
 879            __ULong i[2];
 880            double d;
 881          };
 882          
 883          union __fmath {
 884          
 885            __ULong i[1];
 886            float f;
 887          };
 888          
 889          union __ldmath {
 890          
 891            __ULong i[4];
 892            long double ld;
 893          };
 894          //# 111 "/usr/include/math.h" 3
 895          typedef float float_t;
 896          typedef double double_t;
 897          //#line 344
 898          struct exception {
 899          
 900          
 901            int type;
 902            char *name;
 903            double arg1;
 904            double arg2;
 905            double retval;
 906            int err;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 16  

 907          };
 908          //#line 399
 909          enum __fdlibm_version {
 910          
 911            __fdlibm_ieee = -1, 
 912            __fdlibm_svid, 
 913            __fdlibm_xopen, 
 914            __fdlibm_posix
 915          };
 916          
 917          
 918          
 919          
 920          enum __fdlibm_version;
 921          //# 20 "/opt/tinyos-2.x/tos/system/tos.h"
 922          typedef uint8_t bool;
 923          enum __nesc_unnamed4252 {
 924          //#line 21
 925            FALSE = 0, TRUE = 1
 926          };
 927          typedef nx_int8_t nx_bool;
 928          uint16_t TOS_NODE_ID = 1;
 929          
 930          
 931          
 932          
 933          
 934          /*struct __nesc_attr_atmostonce {
 935          };*/
 936          //#line 31
 937          /*struct __nesc_attr_atleastonce {
 938          };*/
 939          //#line 32
 940          /*struct __nesc_attr_exactlyonce {
 941          };*/
 942          //# 6 "/opt/tinyos-2.x/tos/types/AM.h"
 943          typedef nx_uint8_t nx_am_id_t;
 944          typedef nx_uint8_t nx_am_group_t;
 945          typedef nx_uint16_t nx_am_addr_t;
 946          
 947          typedef uint8_t am_id_t;
 948          typedef uint8_t am_group_t;
 949          typedef uint16_t am_addr_t;
 950          
 951          enum __nesc_unnamed4253 {
 952            AM_BROADCAST_ADDR = 0xffff
 953          };
 954          
 955          
 956          
 957          
 958          
 959          
 960          
 961          
 962          
 963          enum __nesc_unnamed4254 {
 964            TOS_AM_GROUP = 0x22, 
 965            TOS_AM_ADDRESS = 1
 966          };
 967          
 968          // TinyOS's ioCC2530.h is replaced by IAR/KEIL's 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 17  

 969          #include "ioCC2530.h"
 970          
 971          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/RfConstant.h"
 972          enum rf_fcs_enums {
 973            RF_FCS_CRC_OK_MASK = 0x80, 
 974            RF_FCS_CORRELATION_MASK = 0x7F
 975          };
 976          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/RfAck.h"
 977          //#line 10
 978          typedef nx_struct _rf_ack_t {
 979          
 980          
 981            nx_uint8_t dsn;
 982          
 983          
 984          
 985          
 986            nx_uint16_t parent;
 987            nx_uint16_t parent_cost;
 988            nx_uint8_t hopcount;
 989            nx_uint8_t buffer_pressure;
 990          
 991            nx_bool forward_full;
 992            nx_bool receive_this_msg;
 993          } /*__attribute__((packed))*/ 
 994          //#line 39
 995          rf_ack_t;
 996          //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/RfMessage.h"
 997          //#line 13
 998          typedef nx_struct _rf_header_t {
 999          
1000            nxle_uint8_t length;
1001            nxle_uint16_t fcf;
1002            nxle_uint8_t dsn;
1003            nxle_uint16_t destpan;
1004            nxle_uint16_t dest;
1005            nxle_uint16_t src;
1006            nxle_uint8_t type;
1007          
1008            nxle_uint8_t security;
1009          } /*__attribute__((packed))*/ rf_header_t;
1010          
1011          
1012          
1013          
1014          
1015          
1016          
1017          //#line 29
1018          typedef nx_struct _rf_footer_t {
1019          
1020            nx_uint8_t i;
1021          } /*__attribute__((packed))*/ rf_footer_t;
1022          //#line 51
1023          //#line 39
1024          typedef nx_struct _rf_meta_data_t {
1025          
1026            nx_int8_t rssi;
1027            nx_uint8_t lqi;
1028            nx_bool crc;
1029            nx_bool ack;
1030          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 18  

1031            nx_uint8_t resource_id;
1032            nx_uint8_t route_resource_id;
1033          
1034          
1035            rf_ack_t ack_msg;
1036          } /*__attribute__((packed))*/ rf_meta_data_t;
1037          //# 38 "/opt/atos/tos/lib/atos/net/AtosMac/IEEE802154.h"
1038          enum ieee154_fcf_enums {
1039            IEEE154_FCF_FRAME_TYPE = 0, 
1040            IEEE154_FCF_SECURITY_ENABLED = 3, 
1041            IEEE154_FCF_FRAME_PENDING = 4, 
1042            IEEE154_FCF_ACK_REQ = 5, 
1043            IEEE154_FCF_INTRAPAN = 6, 
1044            IEEE154_FCF_DEST_ADDR_MODE = 10, 
1045            IEEE154_FCF_SRC_ADDR_MODE = 14
1046          };
1047          
1048          enum ieee154_fcf_type_enums {
1049            IEEE154_TYPE_BEACON = 0, 
1050            IEEE154_TYPE_DATA = 1, 
1051            IEEE154_TYPE_ACK = 2, 
1052            IEEE154_TYPE_MAC_CMD = 3
1053          };
1054          
1055          enum iee154_fcf_addr_mode_enums {
1056            IEEE154_ADDR_NONE = 0, 
1057            IEEE154_ADDR_SHORT = 2, 
1058            IEEE154_ADDR_EXT = 3
1059          };
1060          //# 16 "/opt/atos/tos/platforms/antc5/platform_message.h"
1061          //#line 13
1062          typedef union message_header {
1063            rf_header_t header;
1064          } 
1065          message_header_t;
1066          
1067          
1068          
1069          //#line 18
1070          typedef union TOSRadioFooter {
1071            rf_footer_t footer;
1072          } message_footer_t;
1073          
1074          
1075          
1076          //#line 22
1077          typedef union TOSRadioMeta_data {
1078            rf_meta_data_t meta;
1079          } message_meta_data_t;
1080          //# 19 "/opt/tinyos-2.x/tos/types/message.h"
1081          //#line 14
1082          typedef nx_struct message_t {
1083            nx_uint8_t header[sizeof(message_header_t )];
1084            nx_uint8_t _data[127 - (sizeof(rf_header_t ) - 1 + sizeof(uint16_t )) - 0 + sizeof(uint16_t )];
1085            nx_uint8_t footer[sizeof(message_footer_t )];
1086            nx_uint8_t meta_data[sizeof(message_meta_data_t )];
1087          } /*__attribute__((packed))*/ message_t;
1088          //# 13 "/opt/atos/tos/platforms/antc5/platform.h"
1089          uint16_t TOS_IEEE_SADDR = TOS_AM_ADDRESS;
1090          uint16_t TOS_IEEE_PANID = TOS_AM_GROUP;
1091          //# 5 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTask.h"
1092          extern uint8_t TopTaskMgrP__m_task_flag[];
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 19  

1093          //# 36 "/opt/tinyos-2.x/tos/types/TinyError.h"
1094          enum __nesc_unnamed4261 {
1095            FAIL = 1, 
1096            ESIZE = 2, 
1097            ECANCEL = 3, 
1098            EOFF = 4, 
1099            EBUSY = 5, 
1100            EINVAL = 6, 
1101            ERETRY = 7, 
1102            ERESERVE = 8, 
1103            EALREADY = 9
1104          };
1105          
1106          typedef uint8_t error_t  ;
1107          
1108          static  /*inline*/  error_t ecombine(error_t r1, error_t r2);
1109          //# 62 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
1110          typedef uint8_t __nesc_atomic_t;
1111          
1112          static   /*inline*/   void __nesc_disable_interrupt(void);
1113          static   /*inline*/   void __nesc_enable_interrupt(void);
1114          
1115          
1116          
1117          
1118          
1119            /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )  ;
1120          
1121          
1122          
1123          
1124          
1125            /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)  ;
1126          //#line 98
1127          __nesc_atomic_t m_critical_state;
1128          //# 39 "/opt/atos/tos/chips/cc2530/timer/hardware/CC2530Timer.h"
1129          enum __nesc_unnamed4262 {
1130            CC2530_SLEEP_OSC32K_CALDIS = 7, 
1131            CC2530_SLEEP_XOSC_STB = 6, 
1132            CC2530_SLEEP_HFRC_STB = 5, 
1133            CC2530_SLEEP_DIV = 3, 
1134            CC2530_SLEEP_OSC_PD = 2, 
1135            CC2530_SLEEP_MODE = 0, 
1136            CC2530_SLEEP_MODE_MASK = 3
1137          };
1138          
1139          enum __nesc_unnamed4263 {
1140            CC2530_SLEEP_POWERMODE_0 = 0, 
1141            CC2530_SLEEP_POWERMODE_1 = 1, 
1142            CC2530_SLEEP_POWERMODE_2 = 2, 
1143            CC2530_SLEEP_POWERMODE_3 = 3
1144          };
1145          
1146          enum __nesc_unnamed4264 {
1147            CC2530_CLKCON_OSC32K = 7, 
1148            CC2530_CLKCON_OSC = 6, 
1149            CC2530_CLKCON_TICKSPD = 3, 
1150            CC2530_CLKCON_CLKSPD = 0, 
1151            CC2530_CLKCON_TICKSPD_MASK = 0x38
1152          };
1153          
1154          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 20  

1155          
1156          
1157          enum cc2530_tick_spd_t {
1158            CC2530_TICKF_DIV_1 = 0x0 << CC2530_CLKCON_TICKSPD, 
1159            CC2530_TICKF_DIV_2 = 0x1 << CC2530_CLKCON_TICKSPD, 
1160            CC2530_TICKF_DIV_4 = 0x2 << CC2530_CLKCON_TICKSPD, 
1161            CC2530_TICKF_DIV_8 = 0x3 << CC2530_CLKCON_TICKSPD, 
1162            CC2530_TICKF_DIV_16 = 0x4 << CC2530_CLKCON_TICKSPD, 
1163            CC2530_TICKF_DIV_32 = 0x5 << CC2530_CLKCON_TICKSPD, 
1164            CC2530_TICKF_DIV_64 = 0x6 << CC2530_CLKCON_TICKSPD, 
1165            CC2530_TICKF_DIV_128 = 0x7 << CC2530_CLKCON_TICKSPD
1166          };
1167          
1168          
1169          
1170          
1171          
1172          
1173          
1174          
1175          
1176          
1177          enum __nesc_unnamed4265 {
1178            CC2530_T1CTL_DIV = 0x2, 
1179            CC2530_T1CTL_MODE = 0x0, 
1180            CC2530_T1CTL_MODE_MASK = 0x3, 
1181            CC2530_T1CTL_DIV_MASK = 0xc
1182          };
1183          
1184          
1185          
1186          
1187          enum __nesc_unnamed4266 {
1188            CC2530_T1STAT_OVFIF = 0x5, 
1189            CC2530_T1STAT_CH4IF = 0x4, 
1190            CC2530_T1STAT_CH3IF = 0x3, 
1191            CC2530_T1STAT_CH2IF = 0x2, 
1192            CC2530_T1STAT_CH1IF = 0x1, 
1193            CC2530_T1STAT_CH0IF = 0x0, 
1194            CC2530_T1STAT_IF_MASK = 0x1f
1195          };
1196          
1197          
1198          
1199          
1200          
1201          enum cc2530_timer1_mode_t {
1202            CC2530_TIMER1_MODE_OFF = 0x0 << CC2530_T1CTL_MODE, 
1203            CC2530_TIMER1_MODE_FREE = 0x1 << CC2530_T1CTL_MODE, 
1204            CC2530_TIMER1_MODE_MODULO = 0x2 << CC2530_T1CTL_MODE, 
1205            CC2530_TIMER1_MODE_UPDOWN = 0x3 << CC2530_T1CTL_MODE
1206          };
1207          
1208          
1209          
1210          
1211          
1212          
1213          enum cc2530_timer1_if_t {
1214            CC2530_T1_OVFIF = 1 << CC2530_T1STAT_OVFIF, 
1215            CC2530_T1_CH4IF = 1 << CC2530_T1STAT_CH2IF, 
1216            CC2530_T1_CH3IF = 1 << CC2530_T1STAT_CH1IF, 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 21  

1217            CC2530_T1_CH2IF = 1 << CC2530_T1STAT_CH2IF, 
1218            CC2530_T1_CH1IF = 1 << CC2530_T1STAT_CH1IF, 
1219            CC2530_T1_CH0IF = 1 << CC2530_T1STAT_CH0IF
1220          };
1221          
1222          
1223          
1224          
1225          
1226          enum cc2530_timer1_prescaler_t {
1227            CC2530_TIMER1_DIV_1 = 0x0 << CC2530_T1CTL_DIV, 
1228            CC2530_TIMER1_DIV_8 = 0x1 << CC2530_T1CTL_DIV, 
1229            CC2530_TIMER1_DIV_32 = 0x2 << CC2530_T1CTL_DIV, 
1230            CC2530_TIMER1_DIV_128 = 0x3 << CC2530_T1CTL_DIV
1231          };
1232          
1233          
1234          
1235          
1236          
1237          enum __nesc_unnamed4267 {
1238            CC2530_T1CCTLx_CPSEL = 0x7, 
1239            CC2530_T1CCTLx_IM = 0x6, 
1240            CC2530_T1CCTLx_CMP = 0x3, 
1241            CC2530_T1CCTLx_MODE = 0x2, 
1242            CC2530_T1CCTLx_CAP = 0x0
1243          };
1244          
1245          
1246          
1247          
1248          
1249          
1250          
1251          
1252          
1253          
1254          enum cc2530_timerMAC_mode_t {
1255            CC2530_TIMERMAC_MODE_IDLE = 0x0, 
1256            CC2530_TIMERMAC_MODE_RUN = 0x1
1257          };
1258          
1259          
1260          
1261          
1262          
1263          enum cc2530_timerMAC_T2CNF_t {
1264            CC2530_T2CNF_CMPIF = 0x7, 
1265            CC2530_T2CNF_PERIF = 0x6, 
1266            CC2530_T2CNF_OFCMPIF = 0x5, 
1267            CC2530_T2CNF_CMSEL = 0x3, 
1268            CC2530_T2CNF_SYNC = 0x1, 
1269            CC2530_T2CNF_RUN = 0x0
1270          };
1271          
1272          
1273          
1274          
1275          
1276          
1277          enum cc2530_timerMAC_T2PEROF2_t {
1278            CC2530_T2PEROF2_CMPIM = 0x7, 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 22  

1279            CC2530_T2PEROF2_PERIM = 0x6, 
1280            CC2530_T2PEROF2_OFCMPIM = 0x5
1281          };
1282          
1283          enum cc2530_timerMAC_if_t {
1284            CC2530_TMAC_CMPIF = 1 << CC2530_T2CNF_CMPIF, 
1285            CC2530_TMAC_PERIF = 1 << CC2530_T2CNF_PERIF, 
1286            CC2530_TMAC_OFCMPIF = 1 << CC2530_T2CNF_OFCMPIF
1287          };
1288          
1289          enum cc2530_timerMAC_interval_t {
1290            CC2530_TIMERWDT_32768 = 0, 
1291            CC2530_TIMERWDT_8192 = 1, 
1292            CC2530_TIMERWDT_512 = 2, 
1293            CC2530_TIMERWDT_64 = 3
1294          };
1295          //#line 217
1296          enum __nesc_unnamed4268 {
1297            CC2530_TIMIF_OVFIM = 0x6
1298          };
1299          
1300          enum cc2530_timer34_if_t {
1301            CC2530_TIMIF_T4CH1IF = 0x5, 
1302            CC2530_TIMIF_T4CH0IF = 0x4, 
1303            CC2530_TIMIF_T4OVFIF = 0x3, 
1304            CC2530_TIMIF_T3CH1IF = 0x2, 
1305            CC2530_TIMIF_T3CH0IF = 0x1, 
1306            CC2530_TIMIF_T3OVFIF = 0x0
1307          };
1308          
1309          
1310          
1311          
1312          
1313          
1314          enum cc2530_timer3_4_mode_t {
1315            CC2530_TIMER3_4_MODE_FREE = 0x0, 
1316            CC2530_TIMER3_4_MODE_DOWN = 0x1, 
1317            CC2530_TIMER3_4_MODE_MODULO = 0x2, 
1318            CC2530_TIMER3_4_MODE_UPDOWN = 0x3
1319          };
1320          
1321          
1322          
1323          
1324          
1325          enum __nesc_unnamed4269 {
1326            CC2530_T34CTL_DIV = 0x5, 
1327            CC2530_T34CTL_START = 0x4, 
1328            CC2530_T34CTL_OVFIM = 0x3, 
1329            CC2530_T34CTL_WDTIF = 0x3, 
1330            CC2530_T34CTL_CLR = 0x2, 
1331            CC2530_T34CTL_MODE = 0x0, 
1332            CC2530_T34CTL_MODE_MASK = 0x3, 
1333            CC2530_T34CTL_DIV_MASK = 0xe0
1334          };
1335          
1336          
1337          
1338          
1339          
1340          enum cc2530_timer3_4_prescaler_t {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 23  

1341            CC2530_TIMER3_4_DIV_1 = 0x0 << CC2530_T34CTL_DIV, 
1342            CC2530_TIMER3_4_DIV_2 = 0x1 << CC2530_T34CTL_DIV, 
1343            CC2530_TIMER3_4_DIV_4 = 0x2 << CC2530_T34CTL_DIV, 
1344            CC2530_TIMER3_4_DIV_8 = 0x3 << CC2530_T34CTL_DIV, 
1345            CC2530_TIMER3_4_DIV_16 = 0x4 << CC2530_T34CTL_DIV, 
1346            CC2530_TIMER3_4_DIV_32 = 0x5 << CC2530_T34CTL_DIV, 
1347            CC2530_TIMER3_4_DIV_64 = 0x6 << CC2530_T34CTL_DIV, 
1348            CC2530_TIMER3_4_DIV_128 = 0x7 << CC2530_T34CTL_DIV
1349          };
1350          
1351          
1352          
1353          
1354          
1355          
1356          
1357          
1358          
1359          
1360          enum __nesc_unnamed4270 {
1361            CC2530_WDCTL_CLR = 0x4, 
1362            CC2530_WDCTL_EN = 0x3, 
1363            CC2530_WDCTL_MODE = 0x2, 
1364            CC2530_WDCTL_INT = 0x0, 
1365            CC2530_WDCTL_INT_MASK = 0x3
1366          };
1367          
1368          enum cc2530_timerWDT_mode_t {
1369            CC2530_TIMERWDT_MODE_WDT = 0x0 << CC2530_WDCTL_MODE, 
1370            CC2530_TIMERWDT_MODE_TIMER = 0x1 << CC2530_WDCTL_MODE
1371          };
1372          //# 6 "/opt/atos/tos/lib/atos/common/AtosError.h"
1373          enum __nesc_unnamed4271 {
1374          
1375          
1376            ERR_RF_TX_GO_FAIL = 50, 
1377          
1378          
1379            ERR_MAC_CONGESTION_FAIL = 51, 
1380            ERR_MAC_SEND_RESOURCE_EXISTS = 52, 
1381            ERR_MAC_SEND_RESOURCE_FULL = 53, 
1382          
1383            ERR_MAC_NO_ACK = 54, 
1384            ERR_MAC_RETRY_MAX = 55, 
1385          
1386          
1387            ERR_ROUTE_SELECT_ROUTE_FAIL = 56, 
1388            ERR_ROUTE_SEND_P2P_FAIL = 57, 
1389          
1390            ERR_ROUTE_SEND_QUEUE_EXISTS = 58, 
1391            ERR_ROUTE_SEND_QUEUE_FULL = 59, 
1392            ERR_ROUTE_SEND_QUEUE_FAIL = 60, 
1393          
1394            ERR_ROUTE_FUNSION_ERROR = 61, 
1395            ERR_ROUTE_FUNSION_NO_ENOUGH = 62, 
1396          
1397            ERR_ROUTE_DISABLED = 63, 
1398            ERR_ROUTE_FORWARD_INVALID = 64
1399          };
1400          //# 9 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
1401          int uart_debug_level = 9;
1402          //# 11 "/opt/atos/tos/chips/cc2530/mcs51/stdarg.h"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 24  

1403          typedef char *va_list;
1404          //# 8 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
1405          static  /*inline*/  void uart0SetBaud(uint32_t baud);
1406          //#line 34
1407          static  /*inline*/  void uart0PinMap(bool map);
1408          
1409          
1410          
1411          
1412          
1413          
1414          
1415          
1416          
1417          static  /*inline*/  void uart0SetMode(void);
1418          
1419          
1420          
1421          
1422          
1423          static  /*inline*/  void uart0Init(uint32_t baud);
1424          
1425          
1426          
1427          
1428          
1429          
1430          static void uart0PutChar(char c);
1431          //# 28 "/opt/atos/tos/lib/atos/power/McuSleep.h"
1432          typedef message_t message_t_xdata_pm0;
1433          //# 34 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
1434          uint8_t uart_debug_buf[256];
1435          uint8_t current_task_id = 255;
1436          
1437          
1438          
1439          
1440          static  /*inline*/  void ATOS_DEBUG_UART_INIT(void);
1441          
1442          
1443          
1444          
1445          
1446          static  /*inline*/  void ATOS_DEBUG_UART_PUTC(char c);
1447          
1448          
1449          
1450          
1451          
1452          
1453          
1454          
1455          static void ATOS_DEBUG_UART_PRINT(void);
1456          //# 7 "/opt/atos/tos/lib/atos/kernel/AtosTask/AtosTask.h"
1457          enum atostask_run_flag_t {
1458          
1459            ATOSTASK_RUN_FLAG_ALL = 1 << 0, 
1460            ATOSTASK_RUN_FLAG_SYNC = 1 << 1, 
1461            ATOSTASK_RUN_FLAG_UNSYNC = 1 << 2, 
1462          
1463            ATOSTASK_RUN_FLAG_STOPPED = 1 << 3
1464          };
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 25  

1465          
1466          enum atostask_mgr_ctrl_t {
1467          
1468            ATOSTASK_CTRL_IS_ENABLED, 
1469            ATOSTASK_CTRL_ENABLE, 
1470            ATOSTASK_CTRL_DISABLE, 
1471          
1472            ATOSTASK_CTRL_IS_STARTED, 
1473            ATOSTASK_CTRL_START, 
1474            ATOSTASK_CTRL_STOP, 
1475          
1476            ATOSTASK_CTRL_IS_RUNNING
1477          };
1478          //# 10 "/opt/atos/tos/lib/atos/sensor/drv/DS18B20/DS18B20.h"
1479          //#line 6
1480          typedef struct __nesc_unnamed4272 {
1481          
1482            bool minus;
1483            uint16_t value;
1484          } ds18b20_temperature_t;
1485          //#line 24
1486          enum __nesc_unnamed4273 {
1487          
1488          
1489            DS18B20_SEARCH_ROM = 0xF0, 
1490            DS18B20_READ_ROM = 0x33, 
1491            DS18B20_MATCH_ROM = 0x55, 
1492            DS18B20_SKIP_ROM = 0xCC, 
1493            DS18B20_ALARM_SEARCH = 0xEC, 
1494          
1495          
1496            DS18B20_CONVERT_T = 0x44, 
1497            DS18B20_WRITE_SCRATCHPAD = 0x4E, 
1498            DS18B20_READ_SCRATCHPAD = 0xBE, 
1499            DS18B20_COPY_SCRATCHPAD = 0x48, 
1500            DS18B20_RECALL_E2 = 0xB8, 
1501            DS18B20_READ_POWER_SUPPLY = 0xB4
1502          };
1503          //# 39 "/opt/atos/tos/lib/atos/devices/gps/common/GpsData.h"
1504          //#line 17
1505          typedef struct _gps__data_t {
1506          
1507            bool available;
1508          
1509          
1510            uint8_t hour;
1511            uint8_t minute;
1512            uint8_t second;
1513            uint16_t ms;
1514          
1515          
1516            bool location_ok;
1517          
1518          
1519            double longitude;
1520            char longitude_flag;
1521          
1522            double latitude;
1523            char latitude_flag;
1524          } 
1525          
1526          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 26  

1527          gps__data_t;
1528          //# 245 "/opt/atos/tos/lib/atos/sensor/SensorCollection.h"
1529          //#line 241
1530          typedef struct _sensor_id_t {
1531          
1532            uint8_t id;
1533            uint8_t len;
1534          } sensor_id_t;
1535          //# 29 "/opt/tinyos-2.x/tos/lib/timer/Timer.h"
1536          typedef struct __nesc_unnamed4274 {
1537          //#line 29
1538            int notUsed;
1539          } 
1540          //#line 29
1541          TMilli;
1542          typedef struct __nesc_unnamed4275 {
1543          //#line 30
1544            int notUsed;
1545          } 
1546          //#line 30
1547          T32khz;
1548          typedef struct __nesc_unnamed4276 {
1549          //#line 31
1550            int notUsed;
1551          } 
1552          //#line 31
1553          TMicro;
1554          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMac.h"
1555          //#line 9
1556          typedef struct _rf_rmac_header_t {
1557          
1558            uint8_t dsn;
1559            uint8_t ack_req;
1560          } rf_rmac_header_t;
1561          
1562          
1563          uint8_t rf_rmac_dsn = 1;
1564          //# 11 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.h"
1565          enum __nesc_unnamed4277 {
1566          
1567            ANSTD_DATA_TYPE_NODE_STATUS_UP = 0x21, 
1568            ANSTD_DATA_TYPE_DISCOVERY = 0x22, 
1569            ANSTD_DATA_TYPE_SETIEEE = 0x23, 
1570            ANSTD_DATA_TYPE_REBOOT = 0x24, 
1571            ANSTD_DATA_TYPE_TRACE = 0x25, 
1572            ANSTD_DATA_TYPE_TRACE_ACK = 0x26
1573          };
1574          
1575          
1576          
1577          
1578          //#line 21
1579          typedef struct _anstd_header_t {
1580          
1581            uint8_t _data_type;
1582          } anstd_header_t;
1583          //#line 40
1584          //#line 26
1585          typedef struct _anstd_node_status_t {
1586          
1587            uint8_t _data_type;
1588            uint8_t device_type;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 27  

1589            uint8_t industry_code;
1590            uint8_t application_code;
1591            uint16_t program_id;
1592            uint16_t program_version;
1593            uint8_t ieee[8];
1594            uint8_t node_type;
1595            uint8_t node_status;
1596            uint8_t rf_channel;
1597            uint8_t battery;
1598            uint8_t signal_strength;
1599          } anstd_node_status_t;
1600          
1601          
1602          
1603          
1604          
1605          
1606          
1607          
1608          
1609          //#line 43
1610          typedef struct _anstd_discovery_t {
1611          
1612            uint8_t _data_type;
1613            uint8_t device_type;
1614            uint8_t rf_channel;
1615            uint16_t node_group;
1616            uint16_t node_id;
1617          } anstd_discovery_t;
1618          
1619          
1620          
1621          
1622          
1623          
1624          
1625          
1626          //#line 53
1627          typedef struct _anstd_setieee_t {
1628          
1629            uint8_t _data_type;
1630            uint16_t node_group;
1631            uint16_t node_id;
1632            uint8_t ieee[8];
1633          } anstd_setieee_t;
1634          
1635          
1636          
1637          
1638          
1639          
1640          
1641          
1642          //#line 62
1643          typedef struct _anstd_reboot_t {
1644          
1645            uint8_t _data_type;
1646            uint16_t node_group;
1647            uint16_t node_id;
1648            uint8_t delay_time;
1649          } anstd_reboot_t;
1650          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 28  

1651          
1652          
1653          
1654          
1655          
1656          
1657          //#line 71
1658          typedef struct _anstd_trace_item_t {
1659          
1660            uint16_t node_id;
1661            int8_t forward_rssi;
1662            int8_t backward_rssi;
1663          } anstd_trace_item_t;
1664          
1665          
1666          
1667          
1668          
1669          
1670          
1671          
1672          //#line 77
1673          typedef struct _anstd_trace_t {
1674          
1675            uint8_t _data_type;
1676            uint8_t trace_dsn;
1677            uint16_t node_group;
1678            uint8_t total_count;
1679            uint8_t traced_count;
1680            anstd_trace_item_t items[1];
1681          } anstd_trace_t;
1682          
1683          
1684          
1685          typedef anstd_trace_t anstd_trace_ack_t;
1686          //# 7 "/opt/atos/tos/lib/atos/atp/atpcmd/app/AtpCmdPacketCommon.h"
1687          enum __nesc_unnamed4278 {
1688          
1689            ATP_CMD_MAX_RECEIVE_PACKET = 128
1690          };
1691          
1692          enum __nesc_unnamed4279 {
1693          
1694            ATP_CMD_SOF_ID_1 = 0x37, 
1695            ATP_CMD_SOF_ID_2 = 0xA9, 
1696          
1697            ATP_CMD_STATE_SOF_1 = 0, 
1698            ATP_CMD_STATE_SOF_2 = 1, 
1699            ATP_CMD_STATE_HEADER = 2, 
1700            ATP_CMD_STATE_HCS = 3, 
1701            ATP_CMD_STATE_DATA = 4, 
1702            ATP_CMD_STATE_PCS = 5
1703          };
1704          //#line 42
1705          //#line 35
1706          typedef struct _atp_cmd_packet {
1707          
1708            uint8_t cmd;
1709            uint16_t len;
1710            uint8_t hcs;
1711            uint8_t _data[ATP_CMD_MAX_RECEIVE_PACKET];
1712            uint8_t pcs;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 29  

1713          } atp_cmd_packet_t;
1714          
1715          
1716          
1717          
1718          
1719          
1720          enum __nesc_unnamed4280 {
1721          
1722            ATP_CMD_HEADER_SIZE_ALL = sizeof(uint8_t ) + sizeof(uint16_t ) + sizeof(uint8_t ), 
1723            ATP_CMD_HEADER_SIZE = sizeof(uint8_t ) + sizeof(uint16_t ), 
1724            ATP_CMD_HEADER_CMD_SIZE = sizeof(uint8_t ), 
1725            ATP_CMD_HEADER_LEN_SIZE = sizeof(uint16_t ), 
1726            ATP_CMD_HEADER_HCS_SIZE = sizeof(uint8_t )
1727          };
1728          //# 15 "/opt/atos/tos/lib/atos/atp/atpapp/AtpAppPacket.h"
1729          //#line 10
1730          typedef struct _atp_app_packet_header_t {
1731          
1732            uint8_t industry_code;
1733            uint8_t application_code;
1734            uint8_t _data_type;
1735          } atp_app_packet_header_t;
1736          //# 8 "/opt/atos/tos/lib/atos/atp/atpcmd/AtpCmdStd.h"
1737          enum __nesc_unnamed4281 {
1738          
1739            ATP_STD_CMD = 0xf0, 
1740            ATP_STD_INDUSTRY_CODE = 0xff, 
1741            ATP_STD_APPLICATION_CODE = 0x01
1742          };
1743          
1744          enum __nesc_unnamed4282 {
1745          
1746            ATP_STD_DATA_TYPE_PING = 0x01, 
1747            ATP_STD_DATA_TYPE_PING_ACK = 0x81, 
1748            ATP_STD_DATA_TYPE_DISCOVERY = 0x02, 
1749            ATP_STD_DATA_TYPE_DISCOVERY_ACK = 0x82, 
1750            ATP_STD_DATA_TYPE_SET_IEEE_ADDR = 0x03, 
1751            ATP_STD_DATA_TYPE_REBOOT = 0x04
1752          };
1753          
1754          enum __nesc_unnamed4283 {
1755          
1756            ATP_STD_EQUIPMENT_TYPE_PC = 0x01, 
1757            ATP_STD_EQUIPMENT_TYPE_GATEWAY = 0x02, 
1758            ATP_STD_EQUIPMENT_TYPE_NODE = 0x03
1759          };
1760          
1761          
1762          
1763          
1764          //#line 32
1765          typedef struct _atp_std_general_info_t_ {
1766          
1767            uint8_t equipment_type;
1768          } as_general_info_t;
1769          
1770          
1771          
1772          
1773          
1774          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 30  

1775          
1776          //#line 37
1777          typedef struct _atp_std_gateway_info_t_ {
1778          
1779            uint8_t industry_code;
1780            uint8_t application_code;
1781            uint8_t ieee_addr[8];
1782            uint8_t radio_channel;
1783          } as_gateway_info_t;
1784          
1785          
1786          
1787          
1788          
1789          
1790          
1791          
1792          
1793          
1794          //#line 45
1795          typedef struct _atp_std_node_info_t_ {
1796          
1797            uint8_t industry_code;
1798            uint8_t application_code;
1799            uint8_t ieee_addr[8];
1800            uint8_t node_type;
1801            uint8_t radio_channel;
1802            uint8_t battery_capacity;
1803            uint8_t radio_quality;
1804          } as_node_info_t;
1805          
1806          
1807          
1808          
1809          //#line 56
1810          typedef struct _atp_std_ping_extra_t_ {
1811          
1812            uint8_t config;
1813          } as_ping_extra_t;
1814          
1815          
1816          
1817          
1818          
1819          //#line 61
1820          typedef struct _atp_std_discovery_extra_t_ {
1821          
1822            uint8_t radio_channel;
1823            uint16_t addr_area;
1824          } as_discovery_extra_t;
1825          
1826          
1827          
1828          
1829          //#line 67
1830          typedef struct _atp_std_ieee_addr_extra_t_ {
1831          
1832            uint8_t ieee_addr[8];
1833          } as_ieee_addr_extra_t;
1834          typedef TMilli DigRFNodeP__Timer1__precision_tag;
1835          typedef TMilli SHTP__WaitTimer__precision_tag;
1836          typedef TMilli RealMainP__FakeTimer__precision_tag;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 31  

1837          enum HplCC2530Timer1C____nesc_unnamed4284 {
1838            HplCC2530Timer1C__TOP_TASK_ID = 0U
1839          };
1840          typedef T32khz /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency;
1841          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm2__precision_tag;
1842          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__size_type;
1843          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm0__precision_tag;
1844          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__size_type;
1845          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Counter__precision_tag;
1846          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__size_type;
1847          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm1__precision_tag;
1848          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__size_type;
1849          enum /*HilTimerMilliC.AlarmMilli32C.AlarmFrom*/Alarm32khz16C__0____nesc_unnamed4285 {
1850            Alarm32khz16C__0__ALARM_ID = 0U
1851          };
1852          typedef TMilli /*CounterMilli32C.Transform*/TransformCounterC__0__to_precision_tag;
1853          typedef uint32_t /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type;
1854          typedef T32khz /*CounterMilli32C.Transform*/TransformCounterC__0__from_precision_tag;
1855          typedef uint16_t /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type;
1856          typedef uint32_t /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type;
1857          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__from_precision_tag /*CounterMilli32C.Transform*
             -/TransformCounterC__0__CounterFrom__precision_tag;
1858          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type /*CounterMilli32C.Transform*/Tra
             -nsformCounterC__0__CounterFrom__size_type;
1859          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__to_precision_tag /*CounterMilli32C.Transform*/T
             -ransformCounterC__0__Counter__precision_tag;
1860          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Trans
             -formCounterC__0__Counter__size_type;
1861          typedef TMilli /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag;
1862          typedef uint32_t /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type;
1863          typedef T32khz /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_precision_tag;
1864          typedef uint16_t /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type;
1865          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__Alarm__precision_tag;
1866          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Alarm__size_type;
1867          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_precision_tag /*HilTimerMilliC.
             -AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__precision_tag;
1868          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type /*HilTimerMilliC.Alar
             -mMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type;
1869          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__Counter__precision_tag;
1870          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Counter__size_type;
1871          typedef TMilli /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag;
1872          typedef /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag /*HilTimerMilliC.AlarmToTimerC*/Al
             -armToTimerC__0__Alarm__precision_tag;
1873          typedef uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type;
1874          typedef /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag /*HilTimerMilliC.AlarmToTimerC*/Al
             -armToTimerC__0__Timer__precision_tag;
1875          typedef TMilli /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag;
1876          typedef /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__TimerFrom__precision_tag;
1877          typedef /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__Timer__precision_tag;
1878          typedef TMilli /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag;
1879          typedef /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag /*HilTimerMilliC.Count
             -erToLocalTimeC*/CounterToLocalTimeC__0__LocalTime__precision_tag;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 32  

1880          typedef /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag /*HilTimerMilliC.Count
             -erToLocalTimeC*/CounterToLocalTimeC__0__Counter__precision_tag;
1881          typedef uint32_t /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__size_type;
1882          typedef TMilli /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__TimeoutTimer__precision_tag;
1883          typedef TMilli /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__AckTimer__precision_tag;
1884          enum /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC__0___
             -_nesc_unnamed4286 {
1885            AMResourceC__0__AM_RESOURCE_ID = 0U
1886          };
1887          enum AMResourceCenterC____nesc_unnamed4287 {
1888            AMResourceCenterC__AM_RESOURCE_COUNT = 4U
1889          };
1890          typedef message_t */*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t;
1891          typedef message_t */*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t;
1892          typedef /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__t;
1893          typedef T32khz RfMacBaseCsmaP__BackoffTimer__precision_tag;
1894          typedef uint32_t RfMacBaseCsmaP__BackoffTimer__size_type;
1895          enum RfHardwareRxC____nesc_unnamed4288 {
1896            RfHardwareRxC__TOP_TASK_ID = 1U
1897          };
1898          enum /*RfMacBaseCsmaC.Alarm32khz32C.Alarm32khz16C*/Alarm32khz16C__1____nesc_unnamed4289 {
1899            Alarm32khz16C__1__ALARM_ID = 1U
1900          };
1901          typedef T32khz /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag;
1902          typedef uint32_t /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type;
1903          typedef T32khz /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_precision_tag;
1904          typedef uint16_t /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type;
1905          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag /*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__Alarm__precision_tag;
1906          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm3
             -2khz32C.Transform*/TransformAlarmC__1__Alarm__size_type;
1907          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_precision_tag /*RfMacBaseCsmaC.
             -Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__precision_tag;
1908          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type /*RfMacBaseCsmaC.Alar
             -m32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__size_type;
1909          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag /*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__Counter__precision_tag;
1910          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm3
             -2khz32C.Transform*/TransformAlarmC__1__Counter__size_type;
1911          typedef T32khz /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_precision_tag;
1912          typedef uint32_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type;
1913          typedef T32khz /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_precision_tag;
1914          typedef uint16_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type;
1915          typedef uint16_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type;
1916          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_precision_tag /*Counter32khz32C.Tr
             -ansformCounterC*/TransformCounterC__1__CounterFrom__precision_tag;
1917          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type /*Counter32khz32C.Transf
             -ormCounterC*/TransformCounterC__1__CounterFrom__size_type;
1918          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_precision_tag /*Counter32khz32C.Tran
             -sformCounterC*/TransformCounterC__1__Counter__precision_tag;
1919          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transfor
             -mCounterC*/TransformCounterC__1__Counter__size_type;
1920          typedef TMilli AtosNetStdP__RebootTimer__precision_tag;
1921          typedef TMilli /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__TimeoutTimer__precision_tag;
1922          typedef TMilli /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__AckTimer__precision_tag;
1923          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC__2__
             -__nesc_unnamed4290 {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 33  

1924            AMResourceC__2__AM_RESOURCE_ID = 1U
1925          };
1926          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__3____nesc_unnamed42
             -91 {
1927            AMResourceC__3__AM_RESOURCE_ID = 2U
1928          };
1929          enum DsnFilterCenterC____nesc_unnamed4292 {
1930            DsnFilterCenterC__DSN_FILTER_COUNT = 1U
1931          };
1932          enum /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__1____nesc_unnamed429
             -3 {
1933            AMResourceC__1__AM_RESOURCE_ID = 3U
1934          };
1935          //# 4 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHT.nc"
1936          static  void DigRFNodeP__SHT__readDone(error_t arg_0x7eb73d70, uint16_t arg_0x7eb73f08, uint16_t arg_0x7eb
             -650b8);
1937          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
1938          static  void DigRFNodeP__Boot__booted(void);
1939          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
1940          static  void DigRFNodeP__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
1941          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
1942          static  void DigRFNodeP__Timer1__fired(void);
1943          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
1944          static  message_t *DigRFNodeP__Receive__receive(message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t a
             -rg_0x7eb45a68);
1945          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1946          static  void DigRFNodeP__sensorDataTask__runTask(void);
1947          //#line 64
1948          static  void DigRFNodeP__sendMsgTask__runTask(void);
1949          //# 5 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHT.nc"
1950          static  void SHTP__SHT__calcRealValue(float *arg_0x7eb65570, float *arg_0x7eb65718, uint16_t arg_0x7eb658b
             -0, uint16_t arg_0x7eb65a48);
1951          //#line 3
1952          static  error_t SHTP__SHT__read(void);
1953          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1954          static  error_t SHTP__Init__init(void);
1955          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
1956          static  void SHTP__WaitTimer__fired(void);
1957          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1958          static  void SHTP__readDoneTask__runTask(void);
1959          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1960          static  error_t PlatformP__Init__init(void);
1961          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
1962          static  void WatchDogP__WatchDog__resetCpu(void);
1963          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
1964          static   void FlashIEEEP__ActiveMessageAddress__changed(void);
1965          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1966          static  error_t FlashIEEEP__Init__init(void);
1967          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
1968          static  void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *arg_0x7ea013d8);
1969          //#line 5
1970          static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void);
1971          
1972          static  void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea02f08);
1973          
1974          
1975          
1976          static  void FlashIEEEP__FlashIEEE__WriteToAM(void);
1977          //#line 4
1978          static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void);
1979          
1980          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 34  

1981          
1982          
1983          
1984          static  void FlashIEEEP__FlashIEEE__WriteToRegister(void);
1985          //# 44 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
1986          static   am_addr_t ActiveMessageAddressC__amAddress(void);
1987          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
1988          static   am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void);
1989          
1990          
1991          
1992          
1993          static   am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void);
1994          //#line 43
1995          static   void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t arg_0x7e9f3e58, am_addr_t
             - arg_0x7e9e6010);
1996          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
1997          static  error_t HalFlashP__HalFlash__read(uint8_t *arg_0x7e9e3190, uint32_t arg_0x7e9e3320, uint16_t arg_0
             -x7e9e34b0);
1998          
1999          
2000          
2001          static  error_t HalFlashP__HalFlash__erase(uint32_t arg_0x7e9e1170);
2002          //#line 5
2003          static  error_t HalFlashP__HalFlash__write(uint32_t arg_0x7e9e3958, uint8_t *arg_0x7e9e3b00, uint16_t arg_
             -0x7e9e3c90);
2004          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2005          static  error_t HalFlashP__Init__init(void);
2006          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2007          static  void RealMainP__FakeTimer__fired(void);
2008          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2009          static  void RealMainP__fakeTask__runTask(void);
2010          //#line 56
2011          static   error_t SchedulerBasicP__TaskBasic__postTask(
2012          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2013          uint8_t arg_0x7ec64200);
2014          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2015          static  void SchedulerBasicP__TaskBasic__default__runTask(
2016          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2017          uint8_t arg_0x7ec64200);
2018          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
2019          static  void SchedulerBasicP__Scheduler__init(void);
2020          //#line 61
2021          static  void SchedulerBasicP__Scheduler__taskLoop(void);
2022          //#line 54
2023          static  bool SchedulerBasicP__Scheduler__runNextTask(void);
2024          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
2025          static  error_t McuSleepP__ModuleReset__default__reset(uint8_t arg_0x7ebe5310);
2026          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
2027          static   void McuSleepP__McuSleep__sleep(void);
2028          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
2029          static  void McuSleepP__McuSleepControl__default__beforeSleep(void);
2030          
2031          static  void McuSleepP__McuSleepControl__default__afterWakeup(void);
2032          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
2033          static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void);
2034          static  void TopTaskMgrP__TopTaskMgr__runTasks(void);
2035          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2036          static  void TopTaskMgrP__TopTaskHandler__default__handler(
2037          //# 6 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
2038          uint8_t arg_0x7ebb0aa8);
2039          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 35  

2040          static  void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void);
2041          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2042          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fired(void);
2043          //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
2044          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__default__captured
             -(uint16_t arg_0x7e8e7ba0);
2045          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2046          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(/*HplCC2530Timer1C
             -.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__size_type arg_0x7e920e78, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530
             -Timer1P__0__Alarm0__size_type arg_0x7e917030);
2047          //#line 62
2048          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void);
2049          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2050          static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void);
2051          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2052          static   /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__size_type /*HplCC2530Timer1C.H
             -plCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void);
2053          
2054          
2055          
2056          
2057          
2058          
2059          static   bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPending(void);
2060          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2061          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(/*HplCC2530Timer1C
             -.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__size_type arg_0x7e920e78, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530
             -Timer1P__0__Alarm1__size_type arg_0x7e917030);
2062          //#line 62
2063          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void);
2064          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2065          static  void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handler(void);
2066          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2067          static  void PlatformInterruptC__INT_UART1_TX__default__fired(void);
2068          //#line 4
2069          static  void PlatformInterruptC__INT_UART1_RX__default__fired(void);
2070          //#line 4
2071          static  void PlatformInterruptC__INT_UART0_TX__default__fired(void);
2072          //#line 4
2073          static  void PlatformInterruptC__INT_ST__default__fired(void);
2074          //#line 4
2075          static  void PlatformInterruptC__INT_P0__default__fired(void);
2076          //#line 4
2077          static  void PlatformInterruptC__INT_P1__default__fired(void);
2078          //#line 4
2079          static  void PlatformInterruptC__INT_UART0_RX__default__fired(void);
2080          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2081          static   void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void);
2082          //#line 53
2083          static   /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__size_type /*CounterMilli32C.Transform
             -*/TransformCounterC__0__Counter__get(void);
2084          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2085          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type /*HilTimerMilliC.A
             -larmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void);
2086          //#line 92
2087          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*HilTimerMilli
             -C.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type arg_0x7e920e78, /*HilTimerMilliC.AlarmMilli32C.Transform
             -*/TransformAlarmC__0__Alarm__size_type arg_0x7e917030);
2088          //#line 105
2089          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type /*HilTimerMilliC.A
             -larmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void);
2090          //#line 62
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 36  

2091          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void);
2092          
2093          
2094          
2095          
2096          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(void);
2097          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2098          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow(void);
2099          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2100          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void);
2101          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2102          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void);
2103          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2104          static  uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void);
2105          //#line 118
2106          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t arg_0x7eb051
             -20, uint32_t arg_0x7eb052b0);
2107          //#line 67
2108          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void);
2109          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2110          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask(void);
2111          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2112          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void);
2113          //#line 72
2114          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(
2115          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2116          uint8_t arg_0x7e769030);
2117          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2118          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(
2119          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2120          uint8_t arg_0x7e769030, 
2121          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2122          uint32_t arg_0x7eb13e50);
2123          
2124          
2125          
2126          
2127          
2128          
2129          
2130          
2131          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(
2132          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2133          uint8_t arg_0x7e769030, 
2134          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2135          uint32_t arg_0x7eb11498);
2136          
2137          
2138          
2139          
2140          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(
2141          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2142          uint8_t arg_0x7e769030);
2143          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2144          static   void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow(void);
2145          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2146          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__SubAMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
2147          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2148          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__resendTask__runTask(void);
2149          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 37  

2150          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
2151          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2152          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__AtosControl__start(void);
2153          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2154          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__SubAMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
2155          //#line 69
2156          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__0__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
2157          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2158          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__TimeoutTimer__fired(void);
2159          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2160          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__signalDoneTask__runTask(void);
2161          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2162          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__AckTimer__fired(void);
2163          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2164          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__0__AtosControl__start(void);
2165          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2166          static  message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
             -dP*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
2167          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2168          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResource
             -P*/AMResourceP__0__AMResource__sendDone(message_t *arg_0x7e6460a8, error_t arg_0x7e646230);
2169          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2170          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResou
             -rceP*/AMResourceP__0__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
2171          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2172          static  error_t AMResourceCenterP__AMResource__send(
2173          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
2174          uint8_t arg_0x7e631dd8, 
2175          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2176          am_addr_t arg_0x7e647888, message_t *arg_0x7e647a38, uint8_t arg_0x7e647bc0);
2177          static  void AMResourceCenterP__AMResource__default__sendDone(
2178          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
2179          uint8_t arg_0x7e631dd8, 
2180          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2181          message_t *arg_0x7e6460a8, error_t arg_0x7e646230);
2182          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
2183          static  void AMResourceCenterP__CoreSend__sendDone(message_t *arg_0x7e6264c0, error_t arg_0x7e626648);
2184          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2185          static  error_t AMResourceCenterP__AtosControl__start(void);
2186          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
2187          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__sendDone(m
             -essage_t *arg_0x7e6264c0, error_t arg_0x7e626648);
2188          //#line 7
2189          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__send(messa
             -ge_t *arg_0x7e627998, uint8_t arg_0x7e627b20);
2190          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2191          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__runTask(void)
             -;
2192          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2193          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosControl__start(v
             -oid);
2194          //# 32 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
2195          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__head(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 38  

2196          //#line 49
2197          static  error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*AMResourceCen
             -terC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t arg_0x7e606930);
2198          
2199          
2200          
2201          
2202          
2203          
2204          
2205          
2206          
2207          
2208          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t arg_0x7e606ea8);
2209          
2210          
2211          
2212          
2213          
2214          
2215          static  void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void);
2216          //#line 24
2217          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(void);
2218          //#line 65
2219          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t arg_0x7e604990);
2220          //#line 40
2221          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void);
2222          //#line 9
2223          static  bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void);
2224          
2225          
2226          
2227          
2228          
2229          
2230          
2231          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void);
2232          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2233          static   void RfMacBaseCsmaP__BackoffTimer__fired(void);
2234          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
2235          static  error_t RfMacBaseCsmaP__CoreSend__send(message_t *arg_0x7e627998, uint8_t arg_0x7e627b20);
2236          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2237          static  void RfMacBaseCsmaP__signalDoneTask__runTask(void);
2238          //#line 64
2239          static  void RfMacBaseCsmaP__doGo__runTask(void);
2240          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2241          static  error_t RfMacBaseCsmaP__AtosControl__start(void);
2242          //#line 4
2243          static  error_t RfHardwareP__AtosControl__start(void);
2244          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
2245          static  void RfPowerP__RfPower__oscOn(void);
2246          //#line 6
2247          static  void RfPowerP__RfPower__radioOn(void);
2248          //#line 4
2249          static  void RfPowerP__RfPower__reset(void);
2250          
2251          
2252          
2253          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 39  

2254          static  void RfPowerP__RfPower__rxOn(void);
2255          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
2256          static  void RfConfigP__RfConfig__flush(void);
2257          
2258          
2259          
2260          
2261          static  uint8_t RfConfigP__RfConfig__getChannel(void);
2262          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2263          static  error_t RfConfigP__Init__init(void);
2264          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2265          static   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void);
2266          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
2267          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(void);
2268          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2269          static   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void);
2270          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2271          static  error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void);
2272          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2273          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void);
2274          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2275          static  void RfInterruptsP__INT_RFERR__fired(void);
2276          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2277          static   error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void);
2278          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2279          static  void RfInterruptsP__INT_RF__fired(void);
2280          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2281          static   error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void);
2282          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
2283          static  error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *arg_0x7e5a9c98, uint8_t arg_0x7e5a9e20);
2284          static  error_t RfHardwareTxP__RfHardwareTx__txGo(void);
2285          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2286          static  error_t RfHardwareTxP__StdControl__start(void);
2287          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2288          static   /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type /*RfMacBaseCsmaC.A
             -larm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void);
2289          //#line 92
2290          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*RfMacBaseCsma
             -C.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type arg_0x7e920e78, /*RfMacBaseCsmaC.Alarm32khz32C.Transform
             -*/TransformAlarmC__1__Alarm__size_type arg_0x7e917030);
2291          //#line 55
2292          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*RfMacBaseCsmaC.
             -Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type arg_0x7e921d18);
2293          
2294          
2295          
2296          
2297          
2298          
2299          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void);
2300          
2301          
2302          
2303          
2304          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(void);
2305          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2306          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow(void);
2307          //#line 71
2308          static   void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflow(void);
2309          //#line 53
2310          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__size_type /*Counter32khz32C.T
             -ransformCounterC*/TransformCounterC__1__Counter__get(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 40  

2311          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
2312          static   uint16_t CC2530RandomLfsrP__Random__rand16(void);
2313          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2314          static  error_t CC2530RandomLfsrP__Init__init(void);
2315          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2316          static  uint8_t RfPacketP__Packet__payloadLength(message_t *arg_0x7eb23a40);
2317          //#line 108
2318          static  void *RfPacketP__Packet__getPayload(message_t *arg_0x7eb21e20, uint8_t *arg_0x7eb20010);
2319          //#line 83
2320          static  void RfPacketP__Packet__setPayloadLength(message_t *arg_0x7eb210d0, uint8_t arg_0x7eb21258);
2321          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2322          static   void RfPacketP__ActiveMessageAddress__changed(void);
2323          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
2324          static  am_group_t RfPacketP__AMPacket__group(message_t *arg_0x7eb31590);
2325          //#line 77
2326          static  am_addr_t RfPacketP__AMPacket__source(message_t *arg_0x7eb35688);
2327          //#line 57
2328          static  am_addr_t RfPacketP__AMPacket__address(void);
2329          
2330          
2331          
2332          
2333          
2334          
2335          
2336          
2337          
2338          static  am_addr_t RfPacketP__AMPacket__destination(message_t *arg_0x7eb350a8);
2339          //#line 110
2340          static  void RfPacketP__AMPacket__setSource(message_t *arg_0x7eb345c8, am_addr_t arg_0x7eb34758);
2341          //#line 92
2342          static  void RfPacketP__AMPacket__setDestination(message_t *arg_0x7eb35c50, am_addr_t arg_0x7eb35de0);
2343          //#line 136
2344          static  am_id_t RfPacketP__AMPacket__type(message_t *arg_0x7eb32660);
2345          //#line 125
2346          static  bool RfPacketP__AMPacket__isForMe(message_t *arg_0x7eb34f00);
2347          //#line 176
2348          static  void RfPacketP__AMPacket__setGroup(message_t *arg_0x7eb31c20, am_group_t arg_0x7eb31db0);
2349          
2350          
2351          
2352          
2353          
2354          
2355          
2356          static  am_group_t RfPacketP__AMPacket__localGroup(void);
2357          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
2358          static  uint8_t RfPacketP__PacketEx__packetHeaderSize(void);
2359          
2360          
2361          static  bool RfPacketP__PacketEx__isValidPacket(message_t *arg_0x7e6f74e8);
2362          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2363          static  uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *arg_0x7eb23a40);
2364          //#line 108
2365          static  void *RfReliableMacPacketP__Packet__getPayload(message_t *arg_0x7eb21e20, uint8_t *arg_0x7eb20010)
             -;
2366          //#line 83
2367          static  void RfReliableMacPacketP__Packet__setPayloadLength(message_t *arg_0x7eb210d0, uint8_t arg_0x7eb21
             -258);
2368          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
2369          static  uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void);
2370          static  void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *arg_0x7e6f7010);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 41  

2371          
2372          static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *arg_0x7e6f74e8);
2373          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
2374          static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e695b48, uint8_t arg
             -_0x7e695cd8, message_t *arg_0x7e695e88, rf_ack_t *arg_0x7e694068);
2375          static  void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e694540, message_t *
             -arg_0x7e6946f0, rf_ack_t *arg_0x7e6948a0);
2376          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
2377          static  uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t *arg_0x7e41596
             -8, uint8_t arg_0x7e415af8, message_t *arg_0x7e415ca8, rf_ack_t *arg_0x7e415e58);
2378          static  void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t *arg_0x7e41436
             -8, message_t *arg_0x7e414518, rf_ack_t *arg_0x7e4146c8);
2379          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2380          static  message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__0__SubReceive__receive(message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
2381          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2382          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__sendAckTask__runTask(void);
2383          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2384          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__AMSendAck__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
2385          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2386          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__0__AtosControl__start(void);
2387          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
2388          static  void RfActiveMessageP__CoreReceive__receive(message_t *arg_0x7e3be030);
2389          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2390          static  message_t *RfActiveMessageP__Snoop__default__receive(
2391          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
2392          uint8_t arg_0x7e3c3bb0, 
2393          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2394          message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
2395          //#line 67
2396          static  message_t *RfActiveMessageP__Receive__default__receive(
2397          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
2398          uint8_t arg_0x7e3c33f8, 
2399          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2400          message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
2401          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2402          static  error_t RfActiveMessageP__AtosControl__start(void);
2403          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
2404          static  void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *arg_0x7e56b7e8, uint8_t arg_0x7e56b970);
2405          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2406          static  error_t AtosMacP__AtosControl__start(void);
2407          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2408          static  void AtosNetStdP__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
2409          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2410          static  message_t *AtosNetStdP__Receive__receive(message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t 
             -arg_0x7eb45a68);
2411          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
2412          static  void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *arg_0x7e3546a8);
2413          
2414          static  void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *arg_0x7e3521f8, anstd_trace_ack
             -_t *arg_0x7e3523b8);
2415          //#line 15
2416          static  void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *arg_0x7e355d20);
2417          
2418          
2419          static  void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *arg_0x7e354b58, anstd_trace_t *arg
             -_0x7e354d08);
2420          //#line 6
2421          static  error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t arg_0x7e359d68);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 42  

2422          
2423          
2424          
2425          
2426          
2427          static  void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *arg_0x7e3551e0);
2428          
2429          static  void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *arg_0x7e355698, anstd_node_
             -status_t *arg_0x7e355850);
2430          
2431          static  void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *arg_0x7e3541f8);
2432          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2433          static  void AtosNetStdP__nodeStatusUpTask__runTask(void);
2434          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2435          static  void AtosNetStdP__RebootTimer__fired(void);
2436          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2437          static  void AtosNetStdP__rebootTask__runTask(void);
2438          //#line 64
2439          static  void AtosNetStdP__sendDoneCheck__runTask(void);
2440          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2441          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__SubAMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
2442          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2443          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__resendTask__runTask(void);
2444          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2445          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
2446          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2447          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AtosControl__start(void);
2448          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2449          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__SubAMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
2450          //#line 69
2451          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
2452          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2453          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__fired(void);
2454          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2455          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__signalDoneTask__runTask(void);
2456          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2457          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__fired(void);
2458          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2459          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__AtosControl__start(void);
2460          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2461          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSe
             -ndP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68)
             -;
2462          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2463          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourc
             -eP*/AMResourceP__1__AMResource__sendDone(message_t *arg_0x7e6460a8, error_t arg_0x7e646230);
2464          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2465          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMReso
             -urceP*/AMResourceP__1__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
2466          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2467          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__SubReceive__receive(message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 43  

2468          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2469          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__sendAckTask__runTask(void);
2470          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2471          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMSendAck__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
2472          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2473          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__AtosControl__start(void);
2474          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2475          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP_
             -_2__AMResource__sendDone(message_t *arg_0x7e6460a8, error_t arg_0x7e646230);
2476          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2477          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourc
             -eP__2__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
2478          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
2479          static  bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(
2480          //# 5 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
2481          uint8_t arg_0x7e261dc0, 
2482          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
2483          uint16_t arg_0x7e3f3b78, uint8_t arg_0x7e3f3d00);
2484          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2485          static  error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void);
2486          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2487          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__
             -3__AMResource__sendDone(message_t *arg_0x7e6460a8, error_t arg_0x7e646230);
2488          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2489          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResource
             -P__3__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
2490          //# 5 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHT.nc"
2491          static  void DigRFNodeP__SHT__calcRealValue(float *arg_0x7eb65570, float *arg_0x7eb65718, uint16_t arg_0x7
             -eb658b0, uint16_t arg_0x7eb65a48);
2492          //#line 3
2493          static  error_t DigRFNodeP__SHT__read(void);
2494          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2495          static  error_t DigRFNodeP__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_
             -0x7eb558c8);
2496          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2497          static  void *DigRFNodeP__Packet__getPayload(message_t *arg_0x7eb21e20, uint8_t *arg_0x7eb20010);
2498          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2499          static  void DigRFNodeP__Timer1__startPeriodic(uint32_t arg_0x7eb13e50);
2500          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2501          static   error_t DigRFNodeP__sensorDataTask__postTask(void);
2502          //#line 56
2503          static   error_t DigRFNodeP__sendMsgTask__postTask(void);
2504          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2505          static  error_t DigRFNodeP__AtosControl__start(void);
2506          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
2507          static  am_addr_t DigRFNodeP__AMPacket__source(message_t *arg_0x7eb35688);
2508          //# 30 "DigRFNodeP.nc"
2509          enum DigRFNodeP____nesc_unnamed4294 {
2510          //#line 30
2511            DigRFNodeP__sensorDataTask = 0U
2512          };
2513          //#line 30
2514          typedef int DigRFNodeP____nesc_sillytask_sensorDataTask[];
2515          
2516          
2517          
2518          
2519          
2520          enum DigRFNodeP____nesc_unnamed4295 {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 44  

2521          //#line 36
2522            DigRFNodeP__sendMsgTask = 1U
2523          };
2524          //#line 36
2525          typedef int DigRFNodeP____nesc_sillytask_sendMsgTask[DigRFNodeP__sendMsgTask];
2526          //#line 23
2527          message_t DigRFNodeP__m_sensor_msg;
2528          
2529          
2530          
2531          uint8_t *DigRFNodeP__p_sensor_payload;
2532          uint16_t DigRFNodeP__dest_address;
2533          
2534          static  /*inline*/   void DigRFNodeP__sensorDataTask__runTask(void);
2535          
2536          
2537          
2538          
2539          
2540          static  /*inline*/   void DigRFNodeP__sendMsgTask__runTask(void);
2541          
2542          
2543          
2544          
2545          
2546          
2547          
2548          
2549          static  /*inline*/   void DigRFNodeP__AMSend__sendDone(message_t *msg, error_t success);
2550          
2551          
2552          
2553          
2554          
2555          
2556          static  /*inline*/   void DigRFNodeP__Boot__booted(void);
2557          //#line 64
2558          static  /*inline*/   void DigRFNodeP__SHT__readDone(error_t result, uint16_t temperature, uint16_t humidit
             -y);
2559          //#line 90
2560          static  /*inline*/   message_t *DigRFNodeP__Receive__receive(message_t *msg, void *payload, uint8_t len);
2561          //#line 106
2562          static  /*inline*/   void DigRFNodeP__Timer1__fired(void);
2563          //# 4 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHT.nc"
2564          static  void SHTP__SHT__readDone(error_t arg_0x7eb73d70, uint16_t arg_0x7eb73f08, uint16_t arg_0x7eb650b8)
             -;
2565          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2566          static  void SHTP__WaitTimer__startOneShot(uint32_t arg_0x7eb11498);
2567          
2568          
2569          
2570          
2571          static  void SHTP__WaitTimer__stop(void);
2572          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2573          static   error_t SHTP__readDoneTask__postTask(void);
2574          //# 47 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHTP.nc"
2575          enum SHTP____nesc_unnamed4296 {
2576          //#line 47
2577            SHTP__readDoneTask = 2U
2578          };
2579          //#line 47
2580          typedef int SHTP____nesc_sillytask_readDoneTask[SHTP__readDoneTask];
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 45  

2581          //#line 29
2582          enum SHTP____nesc_unnamed4297 {
2583          
2584            SHTP__SHT_STATE_NONE, 
2585            SHTP__SHT_STATE_TEMP, 
2586            SHTP__SHT_STATE_HUMI
2587          };
2588          
2589          uint8_t SHTP__m_state = SHTP__SHT_STATE_NONE;
2590          
2591          uint8_t SHTP__tick;
2592          
2593          uint8_t SHTP__m_error = 0;
2594          
2595          uint16_t SHTP__m_temperature;
2596          uint16_t SHTP__m_humidity;
2597          uint8_t SHTP__m_checksum;
2598          uint8_t *SHTP__p_value;
2599          
2600          
2601          
2602          static  /*inline*/   error_t SHTP__Init__init(void);
2603          
2604          
2605          
2606          
2607          
2608          
2609          static uint8_t SHTP__sendByte(uint8_t value);
2610          //#line 96
2611          static uint8_t SHTP__recvByte(uint8_t ack);
2612          //#line 137
2613          static uint8_t SHTP__start(void);
2614          //#line 169
2615          static  /*inline*/  void SHTP__reset(void);
2616          //#line 217
2617          static uint8_t SHTP__cmdMeasure(void);
2618          //#line 249
2619          static  /*inline*/   void SHTP__WaitTimer__fired(void);
2620          //#line 284
2621          static  /*inline*/   void SHTP__readDoneTask__runTask(void);
2622          
2623          
2624          
2625          
2626          
2627          
2628          
2629          
2630          
2631          
2632          static  /*inline*/   error_t SHTP__SHT__read(void);
2633          //#line 322
2634          static  /*inline*/   void SHTP__SHT__calcRealValue(float *temperature, float *humidity, uint16_t raw_tempe
             -ratue, uint16_t raw_humidity);
2635          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2636          static  error_t PlatformP__PlatformInit__init(void);
2637          //# 11 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
2638          static error_t PlatformP__clockSelect32k(uint8_t source);
2639          //#line 29
2640          static void PlatformP__clockSetMainSrc(uint8_t source);
2641          //#line 52
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 46  

2642          static  /*inline*/   error_t PlatformP__Init__init(void);
2643          //# 8 "/opt/atos/tos/chips/cc2530/watchdog/WatchDogP.nc"
2644          static  void WatchDogP__WatchDog__resetCpu(void);
2645          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
2646          static  error_t FlashIEEEP__HalFlash__read(uint8_t *arg_0x7e9e3190, uint32_t arg_0x7e9e3320, uint16_t arg_
             -0x7e9e34b0);
2647          
2648          
2649          
2650          static  error_t FlashIEEEP__HalFlash__erase(uint32_t arg_0x7e9e1170);
2651          //#line 5
2652          static  error_t FlashIEEEP__HalFlash__write(uint32_t arg_0x7e9e3958, uint8_t *arg_0x7e9e3b00, uint16_t arg
             -_0x7e9e3c90);
2653          //# 43 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2654          static   void FlashIEEEP__ActiveMessageAddress__setAddress(am_group_t arg_0x7e9f3e58, am_addr_t arg_0x7e9e
             -6010);
2655          //# 47 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
2656          uint8_t FlashIEEEP__m_ieee[8];
2657          uint8_t FlashIEEEP__m_ieee_flash[8];
2658          
2659          
2660          
2661          static  /*inline*/  void FlashIEEEP__ieeeProtect(void);
2662          //#line 108
2663          static void FlashIEEEP__readFromFlash(void);
2664          //#line 129
2665          static  /*inline*/   error_t FlashIEEEP__Init__init(void);
2666          //#line 144
2667          static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void);
2668          
2669          
2670          
2671          
2672          
2673          static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void);
2674          
2675          
2676          
2677          
2678          
2679          
2680          
2681          
2682          
2683          
2684          static  /*inline*/   void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *ieee);
2685          
2686          
2687          
2688          
2689          static  /*inline*/   void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *ieee);
2690          //#line 193
2691          static  void FlashIEEEP__FlashIEEE__WriteToRegister(void);
2692          //#line 217
2693          static  void FlashIEEEP__FlashIEEE__WriteToAM(void);
2694          
2695          
2696          
2697          
2698          
2699          
2700          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 47  

2701          
2702          
2703          
2704          static  /*inline*/    void FlashIEEEP__ActiveMessageAddress__changed(void);
2705          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2706          static   void ActiveMessageAddressC__ActiveMessageAddress__changed(void);
2707          //# 51 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
2708          am_addr_t ActiveMessageAddressC__addr = TOS_AM_ADDRESS;
2709          
2710          
2711          am_group_t ActiveMessageAddressC__group = TOS_AM_GROUP;
2712          
2713          
2714          
2715          
2716          
2717          
2718          static  /*inline*/    am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void);
2719          
2720          
2721          
2722          
2723          
2724          
2725          
2726          
2727          static  /*inline*/    void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t myGroup, am_
             -addr_t myAddr);
2728          //#line 82
2729          static  /*inline*/    am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void);
2730          //#line 95
2731          static   am_addr_t ActiveMessageAddressC__amAddress(void);
2732          //# 35 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
2733          void HalFlashP__HalCC2530FlashRead(uint8_t *destination, uint32_t source, uint16_t length);
2734          void HalFlashP__HalCC2530FlashWrite(uint32_t destination, uint8_t *source, uint16_t length);
2735          
2736          static  /*inline*/   error_t HalFlashP__Init__init(void);
2737          
2738          
2739          
2740          
2741          
2742          static  /*inline*/   error_t HalFlashP__HalFlash__read(uint8_t *destination, uint32_t source, uint16_t len
             -gth);
2743          
2744          
2745          
2746          
2747          
2748          
2749          static  /*inline*/   error_t HalFlashP__HalFlash__write(uint32_t destination, uint8_t *source, uint16_t le
             -ngth);
2750          
2751          
2752          
2753          
2754          
2755          
2756          static  error_t HalFlashP__HalFlash__erase(uint32_t address);
2757          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2758          static  error_t RealMainP__SoftwareInit__init(void);
2759          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 48  

2760          static  void RealMainP__Boot__booted(void);
2761          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2762          static  error_t RealMainP__PlatformInit__init(void);
2763          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2764          static   error_t RealMainP__fakeTask__postTask(void);
2765          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
2766          static  void RealMainP__Scheduler__init(void);
2767          //#line 61
2768          static  void RealMainP__Scheduler__taskLoop(void);
2769          //#line 54
2770          static  bool RealMainP__Scheduler__runNextTask(void);
2771          //# 103 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
2772          enum RealMainP____nesc_unnamed4298 {
2773          //#line 103
2774            RealMainP__fakeTask = 3U
2775          };
2776          //#line 103
2777          typedef int RealMainP____nesc_sillytask_fakeTask[RealMainP__fakeTask];
2778          //#line 56
2779          int main(void)   ;
2780          //#line 103
2781          static  /*inline*/   void RealMainP__fakeTask__runTask(void);
2782          
2783          
2784          
2785          
2786          
2787          
2788          
2789          static  /*inline*/   void RealMainP__FakeTimer__fired(void);
2790          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2791          static  void SchedulerBasicP__TaskBasic__runTask(
2792          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2793          uint8_t arg_0x7ec64200);
2794          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
2795          static  bool SchedulerBasicP__TopTaskMgr__hasTasks(void);
2796          static  void SchedulerBasicP__TopTaskMgr__runTasks(void);
2797          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
2798          static  void SchedulerBasicP__AtosScheduler__periodScheduler(void);
2799          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
2800          static   void SchedulerBasicP__McuSleep__sleep(void);
2801          //# 54 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2802          enum SchedulerBasicP____nesc_unnamed4299 {
2803          
2804            SchedulerBasicP__NUM_TASKS = 18U + 1, 
2805            SchedulerBasicP__NO_TASK = 255
2806          };
2807          
2808          uint8_t SchedulerBasicP__m_head = 0;
2809          uint8_t SchedulerBasicP__m_tail = 0;
2810          uint8_t SchedulerBasicP__m_next[SchedulerBasicP__NUM_TASKS];
2811          
2812          
2813          
2814          
2815          
2816          
2817          
2818          
2819          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void);
2820          //#line 108
2821          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 49  

2822          //#line 132
2823          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id);
2824          //#line 181
2825          static  /*inline*/   void SchedulerBasicP__Scheduler__init(void);
2826          //#line 198
2827          static  bool SchedulerBasicP__Scheduler__runNextTask(void);
2828          //#line 215
2829          static  /*inline*/   void SchedulerBasicP__Scheduler__taskLoop(void);
2830          //#line 264
2831          static   error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id);
2832          
2833          
2834          
2835          
2836          static   void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id);
2837          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
2838          static  error_t McuSleepP__ModuleReset__reset(uint8_t arg_0x7ebe5310);
2839          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
2840          static  void McuSleepP__McuSleepControl__beforeSleep(void);
2841          
2842          static  void McuSleepP__McuSleepControl__afterWakeup(void);
2843          //# 12 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
2844          bool McuSleepP__m_need_sleep = FALSE;
2845          //#line 36
2846          static  /*inline*/    void McuSleepP__McuSleep__sleep(void);
2847          //#line 78
2848          static  /*inline*/    void McuSleepP__McuSleepControl__default__beforeSleep(void);
2849          
2850          
2851          static  /*inline*/    void McuSleepP__McuSleepControl__default__afterWakeup(void);
2852          
2853          
2854          static  /*inline*/    error_t McuSleepP__ModuleReset__default__reset(uint8_t reset_level);
2855          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2856          static  void TopTaskMgrP__TopTaskHandler__handler(
2857          //# 6 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
2858          uint8_t arg_0x7ebb0aa8);
2859          
2860          
2861          
2862          enum TopTaskMgrP____nesc_unnamed4300 {
2863          
2864            TopTaskMgrP__TOP_TASK_COUNT = 2U
2865          };
2866          
2867           uint8_t TopTaskMgrP__m_task_flag[TopTaskMgrP__TOP_TASK_COUNT];
2868          
2869          
2870          
2871          
2872          
2873          
2874          static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void);
2875          //#line 40
2876          static  /*inline*/   void TopTaskMgrP__TopTaskMgr__runTasks(void);
2877          //#line 57
2878          static  /*inline*/    void TopTaskMgrP__TopTaskHandler__default__handler(uint8_t n);
2879          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2880          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__fired(void);
2881          //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
2882          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__captured(uint16_t
             - arg_0x7e8e7ba0);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 50  

2883          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2884          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__fired(void);
2885          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2886          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow(void);
2887          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2888          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__fired(void);
2889          //# 38 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
2890          static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void);
2891          //#line 78
2892          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void);
2893          //#line 121
2894          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(uint1
             -6_t t0, uint16_t dt);
2895          //#line 159
2896          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void);
2897          //#line 200
2898          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(uint1
             -6_t t0, uint16_t dt);
2899          //#line 316
2900          static   uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void);
2901          
2902          
2903          
2904          
2905          
2906          
2907          
2908          
2909          
2910          
2911          static  /*inline*/    bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPe
             -nding(void);
2912          //#line 402
2913          uint8_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag = 0x00;
2914          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handle
             -r(void);
2915          //#line 454
2916          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void);
2917          //#line 534
2918          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fir
             -ed(void);
2919          
2920          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__def
             -ault__captured(uint16_t time);
2921          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2922          static  void PlatformInterruptC__INT_RFERR__fired(void);
2923          //#line 4
2924          static  void PlatformInterruptC__INT_TIM1__fired(void);
2925          //#line 4
2926          static  void PlatformInterruptC__INT_UART1_TX__fired(void);
2927          //#line 4
2928          static  void PlatformInterruptC__INT_RF__fired(void);
2929          //#line 4
2930          static  void PlatformInterruptC__INT_UART1_RX__fired(void);
2931          //#line 4
2932          static  void PlatformInterruptC__INT_UART0_TX__fired(void);
2933          //#line 4
2934          static  void PlatformInterruptC__INT_ST__fired(void);
2935          //#line 4
2936          static  void PlatformInterruptC__INT_P0__fired(void);
2937          //#line 4
2938          static  void PlatformInterruptC__INT_P1__fired(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 51  

2939          //#line 4
2940          static  void PlatformInterruptC__INT_UART0_RX__fired(void);
2941          //# 22 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
2942          void __vector_0(void);
2943          //#line 35
2944          void __vector_16(void);
2945          //#line 55
2946          void __vector_9(void);
2947          //#line 69
2948          void __vector_2(void);
2949          
2950          
2951          
2952          
2953          
2954          
2955          static  /*inline*/    void PlatformInterruptC__INT_UART0_RX__default__fired(void);
2956          
2957          
2958          
2959          
2960          void __vector_7(void);
2961          
2962          
2963          
2964          
2965          
2966          
2967          static  /*inline*/    void PlatformInterruptC__INT_UART0_TX__default__fired(void);
2968          
2969          
2970          
2971          
2972          
2973          void __vector_3(void);
2974          
2975          
2976          
2977          
2978          
2979          
2980          static  /*inline*/    void PlatformInterruptC__INT_UART1_RX__default__fired(void);
2981          
2982          
2983          
2984          
2985          void __vector_14(void);
2986          
2987          
2988          
2989          
2990          
2991          
2992          static  /*inline*/    void PlatformInterruptC__INT_UART1_TX__default__fired(void);
2993          
2994          
2995          
2996          
2997          
2998          void __vector_5(void);
2999          
3000          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 52  

3001          
3002          
3003          
3004          
3005          static  /*inline*/    void PlatformInterruptC__INT_ST__default__fired(void);
3006          
3007          
3008          
3009          
3010          
3011          void __vector_13(void);
3012          
3013          
3014          
3015          
3016          
3017          
3018          void __vector_15(void);
3019          
3020          
3021          
3022          
3023          
3024          
3025          static  /*inline*/    void PlatformInterruptC__INT_P0__default__fired(void);
3026          
3027          
3028          
3029          
3030          
3031          static  /*inline*/    void PlatformInterruptC__INT_P1__default__fired(void);
3032          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3033          static   /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__size_type /*CounterMilli32C.Trans
             -form*/TransformCounterC__0__CounterFrom__get(void);
3034          
3035          
3036          
3037          
3038          
3039          
3040          static   bool /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending(void);
3041          
3042          
3043          
3044          
3045          
3046          
3047          
3048          
3049          
3050          
3051          static   void /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow(void);
3052          //# 56 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
3053          /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type /*CounterMilli32C.Transform*/Transform
             -CounterC__0__m_upper = 0;
3054          
3055          enum /*CounterMilli32C.Transform*/TransformCounterC__0____nesc_unnamed4301 {
3056          
3057            TransformCounterC__0__LOW_SHIFT_RIGHT = 5, 
3058            TransformCounterC__0__HIGH_SHIFT_LEFT = 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__fr
             -om_size_type ) - /*CounterMilli32C.Transform*/TransformCounterC__0__LOW_SHIFT_RIGHT, 
3059            TransformCounterC__0__NUM_UPPER_BITS = 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__to_
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 53  

             -size_type ) - 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type ) + 5, 
3060          
3061          
3062          
3063            TransformCounterC__0__OVERFLOW_MASK = /*CounterMilli32C.Transform*/TransformCounterC__0__NUM_UPPER_BITS 
             -? ((/*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type )2 << (/*CounterMilli32C.Transform*/TransformCou
             -nterC__0__NUM_UPPER_BITS - 1)) - 1 : 0
3064          };
3065          
3066          static   /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Tran
             -sformCounterC__0__Counter__get(void);
3067          //#line 125
3068          static  /*inline*/    void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void);
3069          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3070          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired(void);
3071          //#line 92
3072          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt(/*HilTimerM
             -illiC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type arg_0x7e920e78, /*HilTimerMilliC.AlarmMilli32C.T
             -ransform*/TransformAlarmC__0__AlarmFrom__size_type arg_0x7e917030);
3073          //#line 62
3074          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop(void);
3075          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3076          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__size_type /*HilTimerMilliC
             -.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__get(void);
3077          //# 67 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
3078          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_t0;
3079          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_dt;
3080          
3081          enum /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0____nesc_unnamed4302 {
3082          
3083            TransformAlarmC__0__MAX_DELAY_LOG2 = 8 * sizeof(/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarm
             -C__0__from_size_type ) - 1 - 5, 
3084            TransformAlarmC__0__MAX_DELAY = (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_t
             -ype )1 << /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY_LOG2
3085          };
3086          
3087          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void);
3088          
3089          
3090          
3091          
3092          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void);
3093          
3094          
3095          
3096          
3097          
3098          
3099          
3100          
3101          
3102          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void)
             -;
3103          
3104          
3105          
3106          
3107          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 54  

3108          //#line 140
3109          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*
             -HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/T
             -ransformAlarmC__0__to_size_type dt);
3110          //#line 155
3111          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(
             -void);
3112          //#line 170
3113          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow
             -(void);
3114          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3115          static   /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.AlarmToTimerC
             -*/AlarmToTimerC__0__Alarm__getNow(void);
3116          //#line 92
3117          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(/*HilTimerMilliC.AlarmToTim
             -erC*/AlarmToTimerC__0__Alarm__size_type arg_0x7e920e78, /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_ty
             -pe arg_0x7e917030);
3118          //#line 105
3119          static   /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.AlarmToTimerC
             -*/AlarmToTimerC__0__Alarm__getAlarm(void);
3120          //#line 62
3121          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop(void);
3122          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3123          static   error_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__postTask(void);
3124          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3125          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired(void);
3126          //# 81 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
3127          enum /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0____nesc_unnamed4303 {
3128          //#line 81
3129            AlarmToTimerC__0__firedTask = 4U
3130          };
3131          //#line 81
3132          typedef int /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0____nesc_sillytask_firedTask[/*HilTimerMilliC.
             -AlarmToTimerC*/AlarmToTimerC__0__firedTask];
3133          //#line 44
3134          uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt = 0;
3135          bool /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot = FALSE;
3136          
3137          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(uint32_t t0, uint32_t dt,
             - bool oneshot);
3138          //#line 73
3139          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void);
3140          
3141          
3142          
3143          
3144          
3145          
3146          
3147          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void);
3148          //#line 93
3149          static  /*inline*/    void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void);
3150          //#line 113
3151          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t
             - t0, uint32_t dt);
3152          
3153          
3154          
3155          
3156          static  /*inline*/   uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void);
3157          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3158          static   error_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 55  

3159          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3160          static  uint32_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow(void);
3161          //#line 118
3162          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt(uint32_t ar
             -g_0x7eb05120, uint32_t arg_0x7eb052b0);
3163          //#line 67
3164          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop(void);
3165          
3166          
3167          
3168          
3169          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(
3170          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
3171          uint8_t arg_0x7e769030);
3172          //#line 59
3173          enum /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4304 {
3174          //#line 59
3175            VirtualizeTimerC__0__updateFromTimer = 5U
3176          };
3177          //#line 59
3178          typedef int /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_sillytask_updateFromTimer[/*Hil
             -TimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer];
3179          //#line 42
3180          enum /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4305 {
3181          
3182            VirtualizeTimerC__0__NUM_TIMERS = 8U, 
3183            VirtualizeTimerC__0__END_OF_LIST = 255
3184          };
3185          
3186          
3187          
3188          
3189          
3190          
3191          
3192          
3193          //#line 48
3194          typedef struct /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4306 {
3195          
3196            uint32_t t0;
3197            uint32_t dt;
3198            bool isoneshot : 1;
3199            bool isrunning : 1;
3200            bool _reserved : 6;
3201          } /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t;
3202          
3203          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t /*HilTimerMilliC.VirtualizeTimerC*/Virtual
             -izeTimerC__0__m_timers[/*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS];
3204          
3205          
3206          
3207          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(uint32_t now);
3208          //#line 98
3209          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask
             -(void);
3210          //#line 152
3211          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void);
3212          
3213          
3214          
3215          
3216          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 56  

3217          
3218          
3219          
3220          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(uint8_t num, uint32_t t0, u
             -int32_t dt, bool isoneshot);
3221          //#line 174
3222          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(uint8_t num, uin
             -t32_t dt);
3223          
3224          
3225          
3226          
3227          
3228          
3229          
3230          
3231          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(uint8_t num, uint
             -32_t dt);
3232          
3233          
3234          
3235          
3236          
3237          
3238          
3239          
3240          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(uint8_t num)
             -;
3241          //#line 232
3242          static  /*inline*/    void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(u
             -int8_t num);
3243          //# 47 "/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc"
3244          static  /*inline*/    void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow
             -(void);
3245          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3246          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__SubAMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
3247          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3248          static  void */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__PacketEx__getPacketHeader(message_t *arg_0x7e6f7010);
3249          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3250          static   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__0__resendTask__postTask(void);
3251          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3252          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
3253          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3254          static  uint8_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__Packet__payloadLength(message_t *arg_0x7eb23a40);
3255          //#line 83
3256          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__Packet__setPayloadLength(message_t *arg_0x7eb210d0, uint8_t arg_0x7eb21258);
3257          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
3258          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__SubAtosControl__start(void);
3259          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3260          static  am_addr_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__0__AMPacket__destination(message_t *arg_0x7eb350a8);
3261          //#line 92
3262          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__AMPacket__setDestination(message_t *arg_0x7eb35c50, am_addr_t arg_0x7eb35de0);
3263          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 57  

3264          enum /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_0____nesc_unnamed4307 {
3265          //#line 48
3266            RfReliableMacRetrySendP__0__resendTask = 6U
3267          };
3268          //#line 48
3269          typedef int /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0____nesc_sillytask_resendTask[/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfRe
             -liableMacRetrySendP__0__resendTask];
3270          //#line 19
3271          uint8_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__m_sending = FALSE;
3272          message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__m_msg;
3273          uint8_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__m_retry_times = 0;
3274          
3275          
3276          static void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__signalDone(message_t *msg, error_t result);
3277          //#line 43
3278          static error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__doSend(message_t *msg);
3279          
3280          
3281          
3282          
3283          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfR
             -eliableMacRetrySendP__0__resendTask__runTask(void);
3284          //#line 74
3285          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
             -RfReliableMacRetrySendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3286          //#line 129
3287          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfR
             -eliableMacRetrySendP__0__SubAMSend__sendDone(message_t *msg, error_t error);
3288          //#line 150
3289          bool /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_0__m_started = FALSE;
3290          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
             -RfReliableMacRetrySendP__0__AtosControl__start(void);
3291          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3292          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__0__SubAMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
3293          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3294          static  am_addr_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__0__AMPacket__source(message_t *arg_0x7eb35688);
3295          //#line 67
3296          static  am_addr_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__0__AMPacket__destination(message_t *arg_0x7eb350a8);
3297          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3298          static  void */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__PacketEx__getPacketHeader(message_t *arg_0x7e6f7010);
3299          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3300          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
3301          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3302          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__TimeoutTimer__startOneShot(uint32_t arg_0x7eb11498);
3303          
3304          
3305          
3306          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 58  

3307          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__TimeoutTimer__stop(void);
3308          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3309          static  uint8_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__0__SubPacket__payloadLength(message_t *arg_0x7eb23a40);
3310          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
3311          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e694540, message_t *arg_0x7e6946f0, rf_ack_t 
             -*arg_0x7e6948a0);
3312          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3313          static   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__0__signalDoneTask__postTask(void);
3314          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3315          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__AckTimer__startOneShot(uint32_t arg_0x7eb11498);
3316          
3317          
3318          
3319          
3320          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__AckTimer__stop(void);
3321          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
3322          enum /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__0____nesc_unnamed4308 {
3323          //#line 31
3324            RfReliableMacSendP__0__signalDoneTask = 7U
3325          };
3326          //#line 31
3327          typedef int /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0____nesc_sillytask_signalDoneTask[/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSen
             -dC.RfReliableMacSendP*/RfReliableMacSendP__0__signalDoneTask];
3328          //#line 26
3329          uint8_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__m_sending = FALSE;
3330          message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__m_msg;
3331          error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__m_result;
3332          
3333          
3334          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliabl
             -eMacSendP*/RfReliableMacSendP__0__signalDoneTask__runTask(void);
3335          //#line 51
3336          static void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__signalDone(message_t *msg, error_t result);
3337          //#line 71
3338          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliabl
             -eMacSendP*/RfReliableMacSendP__0__AckTimer__fired(void);
3339          
3340          
3341          
3342          
3343          
3344          
3345          
3346          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliabl
             -eMacSendP*/RfReliableMacSendP__0__TimeoutTimer__fired(void);
3347          
3348          
3349          
3350          
3351          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 59  

3352          
3353          
3354          
3355          
3356          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReli
             -ableMacSendP*/RfReliableMacSendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3357          //#line 139
3358          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliabl
             -eMacSendP*/RfReliableMacSendP__0__SubAMSend__sendDone(message_t *msg, error_t error);
3359          //#line 158
3360          static  /*inline*/   message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfR
             -eliableMacSendP*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len);
3361          //#line 203
3362          bool /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__0__m_started = FALSE;
3363          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReli
             -ableMacSendP*/RfReliableMacSendP__0__AtosControl__start(void);
3364          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3365          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResou
             -rceP*/AMResourceP__0__AMResource__send(am_addr_t arg_0x7e647888, message_t *arg_0x7e647a38, uint8_t arg_0x7e647bc0);
3366          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3367          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResource
             -P*/AMResourceP__0__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
3368          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
3369          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMReso
             -urceC.AMResourceP*/AMResourceP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3370          //#line 39
3371          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourc
             -eC.AMResourceP*/AMResourceP__0__AMResource__sendDone(message_t *msg, error_t error);
3372          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3373          static  void AMResourceCenterP__AMResource__sendDone(
3374          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
3375          uint8_t arg_0x7e631dd8, 
3376          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3377          message_t *arg_0x7e6460a8, error_t arg_0x7e646230);
3378          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3379          static  void AMResourceCenterP__Packet__setPayloadLength(message_t *arg_0x7eb210d0, uint8_t arg_0x7eb21258
             -);
3380          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
3381          static  error_t AMResourceCenterP__SubAtosControl__start(void);
3382          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3383          static  error_t AMResourceCenterP__CoreSend__send(message_t *arg_0x7e627998, uint8_t arg_0x7e627b20);
3384          //# 57 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3385          static  am_addr_t AMResourceCenterP__AMPacket__address(void);
3386          //#line 110
3387          static  void AMResourceCenterP__AMPacket__setSource(message_t *arg_0x7eb345c8, am_addr_t arg_0x7eb34758);
3388          //#line 92
3389          static  void AMResourceCenterP__AMPacket__setDestination(message_t *arg_0x7eb35c50, am_addr_t arg_0x7eb35d
             -e0);
3390          //#line 176
3391          static  void AMResourceCenterP__AMPacket__setGroup(message_t *arg_0x7eb31c20, am_group_t arg_0x7eb31db0);
3392          
3393          
3394          
3395          
3396          
3397          
3398          
3399          static  am_group_t AMResourceCenterP__AMPacket__localGroup(void);
3400          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
3401          static  error_t AMResourceCenterP__AMResource__send(uint8_t resource_id, am_addr_t addr, message_t *msg, u
             -int8_t len);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 60  

3402          //#line 70
3403          static  /*inline*/   void AMResourceCenterP__CoreSend__sendDone(message_t *msg, error_t result);
3404          
3405          
3406          
3407          
3408          
3409          static   void AMResourceCenterP__AMResource__default__sendDone(uint8_t resource_id, message_t *msg, error_
             -t error);
3410          
3411          
3412          
3413          
3414          
3415          bool AMResourceCenterP__m_started = FALSE;
3416          static  /*inline*/   error_t AMResourceCenterP__AtosControl__start(void);
3417          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3418          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__send(me
             -ssage_t *arg_0x7e627998, uint8_t arg_0x7e627b20);
3419          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
3420          static   uint16_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__Random__rand16(voi
             -d);
3421          //# 49 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
3422          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__enqueue(/
             -*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t arg_0x7e606930);
3423          
3424          
3425          
3426          
3427          
3428          
3429          
3430          
3431          
3432          
3433          static  /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__element(uint8_t arg_0x7e606ea8);
3434          
3435          
3436          
3437          
3438          
3439          
3440          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__clear(void);
3441          //#line 40
3442          static  /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__dequeue(void);
3443          //#line 9
3444          static  bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__empty(void);
3445          
3446          
3447          
3448          
3449          
3450          
3451          
3452          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__size(void
             -);
3453          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3454          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(mess
             -age_t *arg_0x7e6264c0, error_t arg_0x7e626648);
3455          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 61  

3456          static   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask(
             -void);
3457          //# 23 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
3458          enum /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0____nesc_unnamed4309 {
3459          //#line 23
3460            RfMacBaseSendP__0__sendNext = 8U
3461          };
3462          //#line 23
3463          typedef int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0____nesc_sillytask_sendNex
             -t[/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext];
3464          //#line 18
3465          bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
3466          
3467          uint8_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn = 0;
3468          
3469          
3470          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__
             -runTask(void);
3471          //#line 74
3472          static  /*inline*/  int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessa
             -ge(uint8_t resource_id);
3473          //#line 93
3474          static  /*inline*/  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueM
             -essage(message_t *msg);
3475          //#line 117
3476          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSen
             -d__sendDone(message_t *msg, error_t result);
3477          //#line 139
3478          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSen
             -d__send(message_t *msg, uint8_t len);
3479          //#line 185
3480          bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_started = FALSE;
3481          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosCon
             -trol__start(void);
3482          //# 10 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
3483          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSendC.Queue
             -ExC*/QueueExC__0__queue[4];
3484          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head = 0;
3485          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail = 0;
3486          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size = 0;
3487          
3488          static  /*inline*/   bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void);
3489          
3490          
3491          
3492          
3493          
3494          
3495          
3496          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void)
             -;
3497          
3498          
3499          
3500          
3501          
3502          
3503          
3504          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(vo
             -id);
3505          
3506          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 62  

3507          
3508          
3509          
3510          
3511          
3512          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__head(void);
3513          
3514          
3515          
3516          
3517          
3518          
3519          
3520          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void);
3521          //#line 63
3522          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*
             -AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t newVal);
3523          //#line 82
3524          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t idx);
3525          //#line 96
3526          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t idx);
3527          //#line 124
3528          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void);
3529          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
3530          static  error_t RfMacBaseCsmaP__RfHardwareTx__txPrepare(uint8_t *arg_0x7e5a9c98, uint8_t arg_0x7e5a9e20);
3531          static  error_t RfMacBaseCsmaP__RfHardwareTx__txGo(void);
3532          //# 55 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3533          static   void RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__BackoffTimer__size_type arg_0x7e921d18);
3534          
3535          
3536          
3537          
3538          
3539          
3540          static   void RfMacBaseCsmaP__BackoffTimer__stop(void);
3541          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
3542          static   uint16_t RfMacBaseCsmaP__Random__rand16(void);
3543          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3544          static  void RfMacBaseCsmaP__CoreSend__sendDone(message_t *arg_0x7e6264c0, error_t arg_0x7e626648);
3545          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3546          static   error_t RfMacBaseCsmaP__signalDoneTask__postTask(void);
3547          //#line 56
3548          static   error_t RfMacBaseCsmaP__doGo__postTask(void);
3549          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
3550          static  void RfMacBaseCsmaP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea02f08);
3551          //# 53 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
3552          enum RfMacBaseCsmaP____nesc_unnamed4310 {
3553          //#line 53
3554            RfMacBaseCsmaP__signalDoneTask = 9U
3555          };
3556          //#line 53
3557          typedef int RfMacBaseCsmaP____nesc_sillytask_signalDoneTask[RfMacBaseCsmaP__signalDoneTask];
3558          //#line 105
3559          enum RfMacBaseCsmaP____nesc_unnamed4311 {
3560          //#line 105
3561            RfMacBaseCsmaP__doGo = 10U
3562          };
3563          //#line 105
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 63  

3564          typedef int RfMacBaseCsmaP____nesc_sillytask_doGo[RfMacBaseCsmaP__doGo];
3565          //#line 20
3566          enum RfMacBaseCsmaP____nesc_unnamed4312 {
3567          
3568            RfMacBaseCsmaP__RF_TIME_ACK_TURNAROUND = 7, 
3569            RfMacBaseCsmaP__RF_TIME_SYMBOL = 2, 
3570            RfMacBaseCsmaP__RF_BACKOFF_PERIOD = 20 / RfMacBaseCsmaP__RF_TIME_SYMBOL, 
3571            RfMacBaseCsmaP__RF_MIN_BACKOFF = 20 / RfMacBaseCsmaP__RF_TIME_SYMBOL, 
3572            RfMacBaseCsmaP__RF_CONGESTION_MAX = 100
3573          };
3574          
3575          
3576          enum RfMacBaseCsmaP____nesc_unnamed4313 {
3577          
3578            RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA, 
3579            RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND
3580          };
3581          
3582          
3583          uint8_t RfMacBaseCsmaP__m_test_ieee[8];
3584          
3585          
3586          uint8_t RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
3587          uint8_t RfMacBaseCsmaP__m_congestion_count = 0;
3588          error_t RfMacBaseCsmaP__m_result;
3589          message_t *RfMacBaseCsmaP__m_msg = (void *)0;
3590          bool RfMacBaseCsmaP__m_cancel = FALSE;
3591          
3592          
3593          uint8_t RfMacBaseCsmaP__m_congestion_delay = 0;
3594          uint16_t RfMacBaseCsmaP__m_this_delay = 0;
3595          uint8_t RfMacBaseCsmaP__m_this_random = 0;
3596          
3597          
3598          
3599          static  /*inline*/   void RfMacBaseCsmaP__signalDoneTask__runTask(void);
3600          
3601          
3602          
3603          
3604          
3605          
3606          
3607          
3608          
3609          
3610          static void RfMacBaseCsmaP__signalDone(error_t result);
3611          
3612          
3613          
3614          
3615          
3616          
3617          
3618          
3619          
3620          
3621          static  /*inline*/  uint32_t RfMacBaseCsmaP__initBackoffTimer(void);
3622          
3623          
3624          
3625          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 64  

3626          
3627          
3628          
3629          static  /*inline*/  uint32_t RfMacBaseCsmaP__congestionBackoffTimer(void);
3630          
3631          
3632          
3633          
3634          
3635          
3636          
3637          static  /*inline*/  void RfMacBaseCsmaP__congestion(void);
3638          //#line 105
3639          static  /*inline*/   void RfMacBaseCsmaP__doGo__runTask(void);
3640          //#line 135
3641          static  /*inline*/    void RfMacBaseCsmaP__BackoffTimer__fired(void);
3642          //#line 164
3643          static  /*inline*/   error_t RfMacBaseCsmaP__CoreSend__send(message_t *msg, uint8_t len);
3644          //#line 225
3645          bool RfMacBaseCsmaP__m_started = FALSE;
3646          static  /*inline*/   error_t RfMacBaseCsmaP__AtosControl__start(void);
3647          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
3648          static  void RfHardwareP__RfConfig__flush(void);
3649          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
3650          static  error_t RfHardwareP__RxControl__start(void);
3651          //#line 74
3652          static  error_t RfHardwareP__TxControl__start(void);
3653          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
3654          static  void RfHardwareP__RfPower__oscOn(void);
3655          //#line 6
3656          static  void RfHardwareP__RfPower__radioOn(void);
3657          //#line 4
3658          static  void RfHardwareP__RfPower__reset(void);
3659          
3660          
3661          
3662          
3663          static  void RfHardwareP__RfPower__rxOn(void);
3664          //# 19 "/opt/atos/tos/chips/rf2530/hardware/RfHardwareP.nc"
3665          static  /*inline*/   error_t RfHardwareP__AtosControl__start(void);
3666          //# 11 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
3667          static  /*inline*/   void RfPowerP__RfPower__reset(void);
3668          
3669          
3670          
3671          
3672          static  /*inline*/   void RfPowerP__RfPower__radioOn(void);
3673          //#line 85
3674          static  /*inline*/   void RfPowerP__RfPower__rxOn(void);
3675          //#line 103
3676          static  /*inline*/   void RfPowerP__RfPower__oscOn(void);
3677          //# 17 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
3678          uint8_t RfConfigP__m_channel;
3679          
3680          uint8_t RfConfigP__m_tx_power;
3681          
3682          bool RfConfigP__m_hw_auto_ack;
3683          
3684          bool RfConfigP__m_address_recognition;
3685          
3686          
3687          static  /*inline*/  void RfConfigP__writeChannel(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 65  

3688          
3689          
3690          
3691          
3692          
3693          
3694          
3695          static  /*inline*/  void RfConfigP__writeFilter(void);
3696          //#line 52
3697          static  /*inline*/  void RfConfigP__writeFIFOPThrehold(void);
3698          
3699          
3700          
3701          
3702          static  /*inline*/  void RfConfigP__writeTxPower(void);
3703          
3704          
3705          
3706          
3707          
3708          
3709          
3710          static  /*inline*/  void RfConfigP__RfConfigWrite(void);
3711          //#line 103
3712          static  /*inline*/   error_t RfConfigP__Init__init(void);
3713          //#line 135
3714          static  /*inline*/   void RfConfigP__RfConfig__flush(void);
3715          
3716          
3717          
3718          
3719          
3720          
3721          
3722          static  /*inline*/   uint8_t RfConfigP__RfConfig__getChannel(void);
3723          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3724          static   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__enableRisingEdge(void);
3725          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
3726          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__RfHardwareRx__rxPacket(uint8_t *arg_0x7e56b7
             -e8, uint8_t arg_0x7e56b970);
3727          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3728          static   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge(void);
3729          //# 23 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
3730          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[1 << 8] = { 0 };
3731          //#line 23
3732          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = 0;
3733          //#line 23
3734          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail = 0;
3735          
3736          
3737          
3738          
3739          
3740          
3741          
3742          
3743          
3744          static  /*inline*/   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void);
3745          //#line 58
3746          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[sizeof(message_t )];
3747          
3748          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 66  

3749          static bool /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(uint8_t *_data, uint8_t length);
3750          //#line 78
3751          static  /*inline*/  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket(void);
3752          //#line 141
3753          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void);
3754          //#line 153
3755          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void);
3756          //#line 176
3757          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void);
3758          
3759          
3760          
3761          
3762          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(
             -void);
3763          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3764          static   void RfInterruptsP__InterruptRFErr__fired(void);
3765          //#line 57
3766          static   void RfInterruptsP__InterruptFIFOP__fired(void);
3767          //# 36 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
3768          static  /*inline*/    error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void);
3769          //#line 59
3770          static  /*inline*/    error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void);
3771          //#line 80
3772          static  /*inline*/   void RfInterruptsP__INT_RFERR__fired(void);
3773          //#line 92
3774          static  /*inline*/   void RfInterruptsP__INT_RF__fired(void);
3775          //# 14 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
3776          static  /*inline*/  void RfHardwareTxP__writeTxfifo(uint8_t *buf, uint8_t len);
3777          //#line 27
3778          static  /*inline*/   error_t RfHardwareTxP__StdControl__start(void);
3779          //#line 45
3780          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *packet, uint8_t len);
3781          //#line 91
3782          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txGo(void);
3783          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3784          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__fired(void);
3785          //#line 92
3786          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__startAt(/*RfMacBase
             -CsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__size_type arg_0x7e920e78, /*RfMacBaseCsmaC.Alarm32khz32C.T
             -ransform*/TransformAlarmC__1__AlarmFrom__size_type arg_0x7e917030);
3787          //#line 62
3788          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__stop(void);
3789          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3790          static   /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__size_type /*RfMacBaseCsmaC
             -.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__get(void);
3791          //# 67 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
3792          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm32khz32C.
             -Transform*/TransformAlarmC__1__m_t0;
3793          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm32khz32C.
             -Transform*/TransformAlarmC__1__m_dt;
3794          
3795          enum /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1____nesc_unnamed4314 {
3796          
3797            TransformAlarmC__1__MAX_DELAY_LOG2 = 8 * sizeof(/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarm
             -C__1__from_size_type ) - 1 - 0, 
3798            TransformAlarmC__1__MAX_DELAY = (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_t
             -ype )1 << /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY_LOG2
3799          };
3800          
3801          static  /*inline*/    /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBa
             -seCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 67  

3802          //#line 91
3803          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void)
             -;
3804          
3805          
3806          
3807          
3808          static void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm(void);
3809          //#line 140
3810          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*
             -RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type t0, /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/T
             -ransformAlarmC__1__to_size_type dt);
3811          
3812          
3813          
3814          
3815          
3816          
3817          
3818          
3819          
3820          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*Rf
             -MacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type dt);
3821          
3822          
3823          
3824          
3825          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(
             -void);
3826          //#line 170
3827          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow
             -(void);
3828          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3829          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__size_type /*Counter32khz3
             -2C.TransformCounterC*/TransformCounterC__1__CounterFrom__get(void);
3830          
3831          
3832          
3833          
3834          
3835          
3836          static   bool /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__isOverflowPending(vo
             -id);
3837          
3838          
3839          
3840          
3841          
3842          
3843          
3844          
3845          
3846          
3847          static   void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__overflow(void);
3848          //# 56 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
3849          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type /*Counter32khz32C.TransformCou
             -nterC*/TransformCounterC__1__m_upper = 0;
3850          
3851          enum /*Counter32khz32C.TransformCounterC*/TransformCounterC__1____nesc_unnamed4315 {
3852          
3853            TransformCounterC__1__LOW_SHIFT_RIGHT = 0, 
3854            TransformCounterC__1__HIGH_SHIFT_LEFT = 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounter
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 68  

             -C__1__from_size_type ) - /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__LOW_SHIFT_RIGHT, 
3855            TransformCounterC__1__NUM_UPPER_BITS = 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounterC
             -__1__to_size_type ) - 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type ) + 0, 
3856          
3857          
3858          
3859            TransformCounterC__1__OVERFLOW_MASK = /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__NUM_UPP
             -ER_BITS ? ((/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type )2 << (/*Counter32khz32C.Transfo
             -rmCounterC*/TransformCounterC__1__NUM_UPPER_BITS - 1)) - 1 : 0
3860          };
3861          
3862          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transfo
             -rmCounterC*/TransformCounterC__1__Counter__get(void);
3863          //#line 125
3864          static  /*inline*/    void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflo
             -w(void);
3865          //# 10 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
3866          static  /*inline*/   error_t CC2530RandomLfsrP__Init__init(void);
3867          //#line 69
3868          static   uint16_t CC2530RandomLfsrP__Random__rand16(void);
3869          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
3870          static  void RfPacketP__WatchDog__resetCpu(void);
3871          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
3872          static   am_addr_t RfPacketP__ActiveMessageAddress__amAddress(void);
3873          
3874          
3875          
3876          
3877          static   am_group_t RfPacketP__ActiveMessageAddress__amGroup(void);
3878          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
3879          bool RfPacketP__m_address_saved = FALSE;
3880          
3881          am_addr_t RfPacketP__m_addr = TOS_AM_ADDRESS;
3882          
3883          
3884          bool RfPacketP__m_group_saved = FALSE;
3885          am_group_t RfPacketP__m_group = TOS_AM_GROUP;
3886          
3887          
3888          static  am_addr_t RfPacketP__AMPacket__address(void);
3889          //#line 49
3890          static  /*inline*/   am_addr_t RfPacketP__AMPacket__destination(message_t *amsg);
3891          
3892          
3893          
3894          
3895          static  /*inline*/   am_addr_t RfPacketP__AMPacket__source(message_t *amsg);
3896          
3897          
3898          
3899          
3900          static  /*inline*/   void RfPacketP__AMPacket__setDestination(message_t *amsg, am_addr_t addr);
3901          
3902          
3903          
3904          
3905          static  /*inline*/   void RfPacketP__AMPacket__setSource(message_t *amsg, am_addr_t addr);
3906          
3907          
3908          
3909          
3910          static  /*inline*/   bool RfPacketP__AMPacket__isForMe(message_t *amsg);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 69  

3911          
3912          
3913          
3914          
3915          
3916          
3917          static  /*inline*/   am_id_t RfPacketP__AMPacket__type(message_t *amsg);
3918          
3919          
3920          
3921          
3922          
3923          
3924          
3925          
3926          
3927          static  /*inline*/   am_group_t RfPacketP__AMPacket__group(message_t *amsg);
3928          
3929          
3930          
3931          
3932          static  /*inline*/   void RfPacketP__AMPacket__setGroup(message_t *amsg, am_group_t grp);
3933          
3934          
3935          
3936          
3937          static  /*inline*/   am_group_t RfPacketP__AMPacket__localGroup(void);
3938          //#line 124
3939          static  /*inline*/   uint8_t RfPacketP__Packet__payloadLength(message_t *msg);
3940          
3941          
3942          
3943          
3944          static  /*inline*/   void RfPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len);
3945          
3946          
3947          
3948          
3949          
3950          
3951          
3952          
3953          
3954          static  void *RfPacketP__Packet__getPayload(message_t *msg, uint8_t *len);
3955          
3956          
3957          
3958          
3959          
3960          
3961          
3962          
3963          
3964          
3965          static  /*inline*/   uint8_t RfPacketP__PacketEx__packetHeaderSize(void);
3966          
3967          
3968          
3969          
3970          
3971          
3972          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 70  

3973          
3974          
3975          static  /*inline*/   bool RfPacketP__PacketEx__isValidPacket(message_t *msg);
3976          //#line 182
3977          static  /*inline*/    void RfPacketP__ActiveMessageAddress__changed(void);
3978          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3979          static  uint8_t RfReliableMacPacketP__SubPacket__payloadLength(message_t *arg_0x7eb23a40);
3980          //#line 108
3981          static  void *RfReliableMacPacketP__SubPacket__getPayload(message_t *arg_0x7eb21e20, uint8_t *arg_0x7eb200
             -10);
3982          //#line 83
3983          static  void RfReliableMacPacketP__SubPacket__setPayloadLength(message_t *arg_0x7eb210d0, uint8_t arg_0x7e
             -b21258);
3984          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3985          static  bool RfReliableMacPacketP__SubPacketEx__isValidPacket(message_t *arg_0x7e6f74e8);
3986          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
3987          static  /*inline*/   uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *msg);
3988          
3989          
3990          
3991          
3992          static  /*inline*/   void RfReliableMacPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len);
3993          
3994          
3995          
3996          
3997          
3998          
3999          
4000          
4001          
4002          static  void *RfReliableMacPacketP__Packet__getPayload(message_t *msg, uint8_t *len);
4003          
4004          
4005          
4006          
4007          
4008          
4009          
4010          
4011          
4012          
4013          static  /*inline*/   uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void);
4014          
4015          
4016          
4017          
4018          static  /*inline*/   void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *msg);
4019          
4020          
4021          
4022          
4023          static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *msg);
4024          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
4025          static  uint8_t RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(message_t *arg_0x7e415968, uint8_
             -t arg_0x7e415af8, message_t *arg_0x7e415ca8, rf_ack_t *arg_0x7e415e58);
4026          static  void RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(message_t *arg_0x7e414368, messag
             -e_t *arg_0x7e414518, rf_ack_t *arg_0x7e4146c8);
4027          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
4028          static  /*inline*/  uint8_t RfReliableMacAckP__fillAckMessageDefault(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack);
4029          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 71  

4030          
4031          
4032          
4033          
4034          
4035          
4036          
4037          
4038          static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *receive_msg, uint8_t receiv
             -e_dsn, message_t *ack_msg, rf_ack_t *ack);
4039          
4040          
4041          
4042          
4043          
4044          
4045          
4046          
4047          
4048          
4049          static  /*inline*/   void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *send_msg, mess
             -age_t *ack_msg, rf_ack_t *ack);
4050          
4051          
4052          
4053          
4054          static  /*inline*/    uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t 
             -*receive_msg, uint8_t receive_dsn, message_t *ack_msg, rf_ack_t *ack);
4055          
4056          
4057          
4058          
4059          static  /*inline*/    void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t 
             -*send_msg, message_t *ack_msg, rf_ack_t *ack);
4060          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4061          static  void */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__0__PacketEx__getPacketHeader(message_t *arg_0x7e6f7010);
4062          
4063          static  bool /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__PacketEx__isValidPacket(message_t *arg_0x7e6f74e8);
4064          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4065          static  uint8_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__0__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e695b48, uint8_t arg_0x7e695cd8, message_t *arg_0x7e695
             -e88, rf_ack_t *arg_0x7e694068);
4066          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
4067          static  bool /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__DsnFilter__filter(uint16_t arg_0x7e3f3b78, uint8_t arg_0x7e3f3d00);
4068          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4069          static  void */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__0__SubPacket__getPayload(message_t *arg_0x7eb21e20, uint8_t *arg_0x7eb20010);
4070          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4071          static   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__0__sendAckTask__postTask(void);
4072          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4073          static  message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__0__Receive__receive(message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
4074          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4075          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__0__AMSendAck__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
4076          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4077          static  am_group_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__0__AMPacket__group(message_t *arg_0x7eb31590);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 72  

4078          //#line 77
4079          static  am_addr_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__0__AMPacket__source(message_t *arg_0x7eb35688);
4080          //#line 67
4081          static  am_addr_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__0__AMPacket__destination(message_t *arg_0x7eb350a8);
4082          //#line 92
4083          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__AMPacket__setDestination(message_t *arg_0x7eb35c50, am_addr_t arg_0x7eb35de0);
4084          //#line 176
4085          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__AMPacket__setGroup(message_t *arg_0x7eb31c20, am_group_t arg_0x7eb31db0);
4086          //# 47 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4087          enum /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__
             -0____nesc_unnamed4316 {
4088          //#line 47
4089            RfReliableMacReceiveP__0__sendAckTask = 11U
4090          };
4091          //#line 47
4092          typedef int /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0____nesc_sillytask_sendAckTask[/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfR
             -eliableMacReceiveP__0__sendAckTask];
4093          //#line 37
4094          message_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__m_ack_msg;
4095          
4096          static  /*inline*/  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfR
             -eliableMacReceiveP__0__sendAck(message_t *msg);
4097          
4098          
4099          
4100          
4101          
4102          
4103          
4104          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__0__sendAckTask__runTask(void);
4105          
4106          
4107          
4108          
4109          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__0__AMSendAck__sendDone(message_t *msg, error_t result);
4110          
4111          
4112          
4113          
4114          static  /*inline*/   message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiv
             -eP*/RfReliableMacReceiveP__0__SubReceive__receive(message_t *msg, void *payload, uint8_t len);
4115          //#line 100
4116          bool /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__
             -0__m_started = FALSE;
4117          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*
             -/RfReliableMacReceiveP__0__AtosControl__start(void);
4118          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4119          static  bool RfActiveMessageP__PacketEx__isValidPacket(message_t *arg_0x7e6f74e8);
4120          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4121          static  void *RfActiveMessageP__Packet__getPayload(message_t *arg_0x7eb21e20, uint8_t *arg_0x7eb20010);
4122          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4123          static  message_t *RfActiveMessageP__Snoop__receive(
4124          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4125          uint8_t arg_0x7e3c3bb0, 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 73  

4126          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4127          message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
4128          //#line 67
4129          static  message_t *RfActiveMessageP__Receive__receive(
4130          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4131          uint8_t arg_0x7e3c33f8, 
4132          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4133          message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
4134          //# 136 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4135          static  am_id_t RfActiveMessageP__AMPacket__type(message_t *arg_0x7eb32660);
4136          //#line 125
4137          static  bool RfActiveMessageP__AMPacket__isForMe(message_t *arg_0x7eb34f00);
4138          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4139          static  /*inline*/   void RfActiveMessageP__CoreReceive__receive(message_t *msg);
4140          //#line 51
4141          static  /*inline*/    message_t *RfActiveMessageP__Receive__default__receive(uint8_t id, message_t *msg, v
             -oid *payload, uint8_t len);
4142          //#line 67
4143          static  /*inline*/    message_t *RfActiveMessageP__Snoop__default__receive(uint8_t id, message_t *msg, voi
             -d *payload, uint8_t len);
4144          
4145          
4146          
4147          
4148          
4149          
4150          bool RfActiveMessageP__m_started = FALSE;
4151          static  /*inline*/   error_t RfActiveMessageP__AtosControl__start(void);
4152          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
4153          static  void RfMacBaseReceiveP__CoreReceive__receive(message_t *arg_0x7e3be030);
4154          //# 12 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseReceiveP.nc"
4155          static  /*inline*/   void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *buf, uint8_t len);
4156          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
4157          static   uint16_t AtosMacP__Random__rand16(void);
4158          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
4159          static  error_t AtosMacP__SubAtosControl__start(void);
4160          //#line 4
4161          static  error_t AtosMacP__HardwareAtosControl__start(void);
4162          //# 15 "/opt/atos/tos/lib/atos/net/AtosMac/AtosMacP.nc"
4163          bool AtosMacP__m_started = FALSE;
4164          
4165          static  /*inline*/   error_t AtosMacP__AtosControl__start(void);
4166          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
4167          static  uint8_t AtosNetStdP__RfConfig__getChannel(void);
4168          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4169          static  uint8_t AtosNetStdP__Packet__payloadLength(message_t *arg_0x7eb23a40);
4170          //#line 108
4171          static  void *AtosNetStdP__Packet__getPayload(message_t *arg_0x7eb21e20, uint8_t *arg_0x7eb20010);
4172          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4173          static  error_t AtosNetStdP__AMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg
             -_0x7eb558c8);
4174          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
4175          static  void AtosNetStdP__WatchDog__resetCpu(void);
4176          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
4177          static  void AtosNetStdP__AtosNetStd__receivedReboot(anstd_reboot_t *arg_0x7e3546a8);
4178          
4179          static  void AtosNetStdP__AtosNetStd__receivedTraceAck(message_t *arg_0x7e3521f8, anstd_trace_ack_t *arg_0
             -x7e3523b8);
4180          //#line 15
4181          static  void AtosNetStdP__AtosNetStd__receivedDiscovery(anstd_discovery_t *arg_0x7e355d20);
4182          
4183          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 74  

4184          static  void AtosNetStdP__AtosNetStd__receivedTrace(message_t *arg_0x7e354b58, anstd_trace_t *arg_0x7e354d
             -08);
4185          //#line 12
4186          static  void AtosNetStdP__AtosNetStd__beforeNodeStatusUp(anstd_node_status_t *arg_0x7e3551e0);
4187          
4188          static  void AtosNetStdP__AtosNetStd__receivedNodeStatusUp(message_t *arg_0x7e355698, anstd_node_status_t 
             -*arg_0x7e355850);
4189          
4190          static  void AtosNetStdP__AtosNetStd__receivedSetIEEE(anstd_setieee_t *arg_0x7e3541f8);
4191          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4192          static   error_t AtosNetStdP__nodeStatusUpTask__postTask(void);
4193          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4194          static  void AtosNetStdP__RebootTimer__startPeriodic(uint32_t arg_0x7eb13e50);
4195          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4196          static   error_t AtosNetStdP__rebootTask__postTask(void);
4197          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
4198          static  void AtosNetStdP__FlashIEEE__WriteIEEE(uint8_t *arg_0x7ea013d8);
4199          //#line 7
4200          static  void AtosNetStdP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea02f08);
4201          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4202          static  am_addr_t AtosNetStdP__AMPacket__source(message_t *arg_0x7eb35688);
4203          //#line 57
4204          static  am_addr_t AtosNetStdP__AMPacket__address(void);
4205          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4206          static   error_t AtosNetStdP__sendDoneCheck__postTask(void);
4207          //# 54 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
4208          enum AtosNetStdP____nesc_unnamed4317 {
4209          //#line 54
4210            AtosNetStdP__rebootTask = 12U
4211          };
4212          //#line 54
4213          typedef int AtosNetStdP____nesc_sillytask_rebootTask[AtosNetStdP__rebootTask];
4214          
4215          
4216          
4217          
4218          enum AtosNetStdP____nesc_unnamed4318 {
4219          //#line 59
4220            AtosNetStdP__nodeStatusUpTask = 13U
4221          };
4222          //#line 59
4223          typedef int AtosNetStdP____nesc_sillytask_nodeStatusUpTask[AtosNetStdP__nodeStatusUpTask];
4224          //#line 350
4225          enum AtosNetStdP____nesc_unnamed4319 {
4226          //#line 350
4227            AtosNetStdP__sendDoneCheck = 14U
4228          };
4229          //#line 350
4230          typedef int AtosNetStdP____nesc_sillytask_sendDoneCheck[AtosNetStdP__sendDoneCheck];
4231          //#line 43
4232          message_t AtosNetStdP__m_send_msg;
4233          uint16_t AtosNetStdP__m_ack_addr = 0xFFFF;
4234          uint8_t AtosNetStdP__m_node_status = 0;
4235          
4236          
4237          
4238          static  /*inline*/   void AtosNetStdP__RebootTimer__fired(void);
4239          
4240          
4241          
4242          
4243          static  /*inline*/   void AtosNetStdP__rebootTask__runTask(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 75  

4244          
4245          
4246          
4247          
4248          static  /*inline*/   void AtosNetStdP__nodeStatusUpTask__runTask(void);
4249          
4250          
4251          
4252          
4253          
4254          
4255          
4256          
4257          
4258          static  /*inline*/  void AtosNetStdP__receiveNodeStatusUp(message_t *msg, anstd_node_status_t *status);
4259          
4260          
4261          
4262          
4263          
4264          static  /*inline*/  void AtosNetStdP__receiveDiscovery(message_t *msg, anstd_discovery_t *discovery);
4265          
4266          
4267          
4268          
4269          
4270          
4271          
4272          
4273          static  /*inline*/  void AtosNetStdP__receiveSetIEEE(message_t *msg, anstd_setieee_t *setieee);
4274          
4275          
4276          
4277          
4278          
4279          
4280          
4281          
4282          
4283          static  /*inline*/  void AtosNetStdP__receiveReboot(message_t *msg, anstd_reboot_t *reboot);
4284          
4285          
4286          
4287          
4288          
4289          
4290          
4291          static int AtosNetStdP__indexOfTraceItem(anstd_trace_t *trace, uint16_t node_id);
4292          //#line 116
4293          static void AtosNetStdP__traceBackward(message_t *msg, anstd_trace_ack_t *trace_ack, int index);
4294          //#line 128
4295          static  /*inline*/  void AtosNetStdP__traceEnd(message_t *msg, anstd_trace_t *trace, int index);
4296          
4297          
4298          
4299          
4300          
4301          static  /*inline*/  void AtosNetStdP__traceForward(message_t *msg, anstd_trace_t *trace, int index);
4302          //#line 151
4303          static  /*inline*/  void AtosNetStdP__receiveTrace(message_t *msg, anstd_trace_t *trace);
4304          //#line 177
4305          static  /*inline*/  void AtosNetStdP__receiveTraceAck(message_t *msg, anstd_trace_ack_t *trace_ack);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 76  

4306          //#line 203
4307          static  /*inline*/   message_t *AtosNetStdP__Receive__receive(message_t *msg, void *payload, uint8_t len);
4308          //#line 241
4309          static  /*inline*/   error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t address);
4310          //#line 350
4311          static  /*inline*/   void AtosNetStdP__sendDoneCheck__runTask(void);
4312          //#line 368
4313          static  /*inline*/   void AtosNetStdP__AMSend__sendDone(message_t *msg, error_t error);
4314          
4315          
4316          
4317          
4318          
4319          
4320          
4321          
4322          
4323          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *statu
             -s);
4324          
4325          
4326          
4327          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *msg, anstd_no
             -de_status_t *status);
4328          
4329          
4330          
4331          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *discover
             -y);
4332          
4333          
4334          
4335          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *setieee);
4336          
4337          
4338          
4339          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *reboot);
4340          
4341          
4342          
4343          
4344          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *msg, anstd_trace_t *
             -trace);
4345          
4346          
4347          
4348          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *msg, anstd_trace_
             -t *trace_ack);
4349          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4350          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__SubAMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
4351          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4352          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__PacketEx__getPacketHeader(message_t *arg_0x7e6f7010);
4353          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4354          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__1__resendTask__postTask(void);
4355          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4356          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
4357          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4358          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 77  

             -cRetrySendP__1__Packet__payloadLength(message_t *arg_0x7eb23a40);
4359          //#line 83
4360          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__Packet__setPayloadLength(message_t *arg_0x7eb210d0, uint8_t arg_0x7eb21258);
4361          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
4362          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__SubAtosControl__start(void);
4363          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4364          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliable
             -MacRetrySendP__1__AMPacket__destination(message_t *arg_0x7eb350a8);
4365          //#line 92
4366          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__AMPacket__setDestination(message_t *arg_0x7eb35c50, am_addr_t arg_0x7eb35de0);
4367          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
4368          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1____nesc_unnamed4320 {
4369          //#line 48
4370            RfReliableMacRetrySendP__1__resendTask = 15U
4371          };
4372          //#line 48
4373          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1____nesc_sillytask_resendTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask];
4374          //#line 19
4375          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
             -ndP__1__m_sending = FALSE;
4376          message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_msg;
4377          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
             -ndP__1__m_retry_times = 0;
4378          
4379          
4380          static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1__signalDone(message_t *msg, error_t result);
4381          //#line 43
4382          static error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__1__doSend(message_t *msg);
4383          
4384          
4385          
4386          
4387          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask__runTask(void);
4388          //#line 74
4389          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4390          //#line 129
4391          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__SubAMSend__sendDone(message_t *msg, error_t error);
4392          //#line 150
4393          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1__m_started = FALSE;
4394          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*
             -/RfReliableMacRetrySendP__1__AtosControl__start(void);
4395          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4396          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__SubAMSend__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
4397          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4398          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
             -dP*/RfReliableMacSendP__1__AMPacket__source(message_t *arg_0x7eb35688);
4399          //#line 67
4400          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 78  

             -dP*/RfReliableMacSendP__1__AMPacket__destination(message_t *arg_0x7eb350a8);
4401          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4402          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__1__PacketEx__getPacketHeader(message_t *arg_0x7e6f7010);
4403          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4404          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
4405          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4406          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__startOneShot(uint32_t arg_0x7eb11498);
4407          
4408          
4409          
4410          
4411          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__stop(void);
4412          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4413          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__SubPacket__payloadLength(message_t *arg_0x7eb23a40);
4414          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4415          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e694540, message_t *arg_0x7e6946f0, rf_ack_t
             - *arg_0x7e6948a0);
4416          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4417          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__1__signalDoneTask__postTask(void);
4418          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4419          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__startOneShot(uint32_t arg_0x7eb11498);
4420          
4421          
4422          
4423          
4424          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__stop(void);
4425          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
4426          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__1____nesc_unnamed4321 {
4427          //#line 31
4428            RfReliableMacSendP__1__signalDoneTask = 16U
4429          };
4430          //#line 31
4431          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1____nesc_sillytask_signalDoneTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacS
             -endC.RfReliableMacSendP*/RfReliableMacSendP__1__signalDoneTask];
4432          //#line 26
4433          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending = FALSE;
4434          message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__1__m_msg;
4435          error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_result;
4436          
4437          
4438          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__signalDoneTask__runTask(void);
4439          //#line 51
4440          static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__signalDone(message_t *msg, error_t result);
4441          //#line 71
4442          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__AckTimer__fired(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 79  

4443          
4444          
4445          
4446          
4447          
4448          
4449          
4450          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__TimeoutTimer__fired(void);
4451          
4452          
4453          
4454          
4455          
4456          
4457          
4458          
4459          
4460          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4461          //#line 139
4462          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__SubAMSend__sendDone(message_t *msg, error_t error);
4463          //#line 158
4464          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len);
4465          //#line 203
4466          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__1__m_started = FALSE;
4467          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AtosControl__start(void);
4468          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4469          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMReso
             -urceP*/AMResourceP__1__AMResource__send(am_addr_t arg_0x7e647888, message_t *arg_0x7e647a38, uint8_t arg_0x7e647bc0);
4470          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4471          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourc
             -eP*/AMResourceP__1__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
4472          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4473          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMRes
             -ourceC.AMResourceP*/AMResourceP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4474          //#line 39
4475          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResour
             -ceC.AMResourceP*/AMResourceP__1__AMResource__sendDone(message_t *msg, error_t error);
4476          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4477          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__PacketEx__getPacketHeader(message_t *arg_0x7e6f7010);
4478          
4479          static  bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__PacketEx__isValidPacket(message_t *arg_0x7e6f74e8);
4480          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4481          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e695b48, uint8_t arg_0x7e695cd8, message_t *arg_0x7e69
             -5e88, rf_ack_t *arg_0x7e694068);
4482          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
4483          static  bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__DsnFilter__filter(uint16_t arg_0x7e3f3b78, uint8_t arg_0x7e3f3d00);
4484          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4485          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__SubPacket__getPayload(message_t *arg_0x7eb21e20, uint8_t *arg_0x7eb20010);
4486          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4487          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__1__sendAckTask__postTask(void);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 80  

4488          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4489          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__Receive__receive(message_t *arg_0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68);
4490          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4491          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__AMSendAck__send(am_addr_t arg_0x7eb55590, message_t *arg_0x7eb55740, uint8_t arg_0x7eb558c8);
4492          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4493          static  am_group_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__AMPacket__group(message_t *arg_0x7eb31590);
4494          //#line 77
4495          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__AMPacket__source(message_t *arg_0x7eb35688);
4496          //#line 67
4497          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__AMPacket__destination(message_t *arg_0x7eb350a8);
4498          //#line 92
4499          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMPacket__setDestination(message_t *arg_0x7eb35c50, am_addr_t arg_0x7eb35de0);
4500          //#line 176
4501          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMPacket__setGroup(message_t *arg_0x7eb31c20, am_group_t arg_0x7eb31db0);
4502          //# 47 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4503          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_1____nesc_unnamed4322 {
4504          //#line 47
4505            RfReliableMacReceiveP__1__sendAckTask = 17U
4506          };
4507          //#line 47
4508          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__1____nesc_sillytask_sendAckTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask];
4509          //#line 37
4510          message_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__m_ack_msg;
4511          
4512          static  /*inline*/  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__1__sendAck(message_t *msg);
4513          
4514          
4515          
4516          
4517          
4518          
4519          
4520          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask__runTask(void);
4521          
4522          
4523          
4524          
4525          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__AMSendAck__sendDone(message_t *msg, error_t result);
4526          
4527          
4528          
4529          
4530          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRecei
             -veP*/RfReliableMacReceiveP__1__SubReceive__receive(message_t *msg, void *payload, uint8_t len);
4531          //#line 100
4532          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_1__m_started = FALSE;
4533          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 81  

             -*/RfReliableMacReceiveP__1__AtosControl__start(void);
4534          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4535          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourc
             -eP__2__AMResource__send(am_addr_t arg_0x7e647888, message_t *arg_0x7e647a38, uint8_t arg_0x7e647bc0);
4536          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4537          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP_
             -_2__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
4538          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4539          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourc
             -eP*/AMResourceP__2__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4540          //#line 39
4541          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*
             -/AMResourceP__2__AMResource__sendDone(message_t *msg, error_t error);
4542          //# 9 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
4543          uint8_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index = 0;
4544          uint16_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[100];
4545          uint8_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[1][100];
4546          
4547          
4548          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(uint16_t 
             -addr);
4549          //#line 31
4550          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress(void);
4551          //#line 51
4552          static bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(uint16_t addr, uint8_t fie
             -ld_id, uint8_t dsn);
4553          //#line 80
4554          static  /*inline*/   error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void);
4555          //#line 92
4556          static  /*inline*/   bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(uint
             -8_t field_id, uint16_t addr, uint8_t dsn);
4557          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4558          static  error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResource
             -P__3__AMResource__send(am_addr_t arg_0x7e647888, message_t *arg_0x7e647a38, uint8_t arg_0x7e647bc0);
4559          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4560          static  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__
             -3__AMSend__sendDone(message_t *arg_0x7eb538e0, error_t arg_0x7eb53a68);
4561          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4562          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResource
             -P*/AMResourceP__3__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4563          //#line 39
4564          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/
             -AMResourceP__3__AMResource__sendDone(message_t *msg, error_t error);
4565          //# 71 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
4566             /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )
4567          //#line 71
4568          {
4569   1        __nesc_atomic_t tmp = EA;
4570   1      
4571   1      //#line 73
4572   1        EA = 0;
4573   1        return tmp;
4574   1      }
4575          
4576             /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)
4577          //#line 77
4578          {
4579   1        EA = oldSreg;
4580   1      }
4581          
4582          //# 181 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
4583          static  /*inline*/   void SchedulerBasicP__Scheduler__init(void)
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 82  

4584          {
4585   1        /* atomic removed: atomic calls only */
4586   1        {
4587   2      
4588   2      
4589   2      
4590   2      
4591   2      
4592   2      
4593   2          memset((void *)SchedulerBasicP__m_next, SchedulerBasicP__NO_TASK, sizeof SchedulerBasicP__m_next);
4594   2          SchedulerBasicP__m_head = 0;
4595   2          SchedulerBasicP__m_tail = 0;
4596   2        }
4597   1      }
4598          
4599          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
4600          #define RealMainP__Scheduler__init(void) SchedulerBasicP__Scheduler__init()
4601          //# 129 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
4602          static  /*inline*/   error_t FlashIEEEP__Init__init(void)
4603          {
4604   1        /* atomic removed: atomic calls only */
4605   1        {
4606   2      
4607   2      
4608   2          FlashIEEEP__readFromFlash();
4609   2      
4610   2          FlashIEEEP__FlashIEEE__WriteToRegister();
4611   2          FlashIEEEP__FlashIEEE__WriteToAM();
4612   2      
4613   2          {
4614   3            unsigned char __nesc_temp = 
4615   3      //#line 140
4616   3            0;
4617   3      
4618   3      //#line 140
4619   3            return __nesc_temp;
4620   3          }
4621   2        }
4622   1      }
4623          
4624          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
4625          #define PlatformP__PlatformInit__init(void) FlashIEEEP__Init__init()
4626          //# 44 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
4627          static  /*inline*/  void uart0SetMode(void)
4628          {
4629   1        U0CSR |= 0x80u | 0x40u;
4630   1        U0UCR |= 0x2u | 0x80u;
4631   1      }
4632          
4633          //#line 8
4634          static  /*inline*/  void uart0SetBaud(uint32_t baud)
4635          {
4636   1        U0GCR = baud == 1200 ? 5 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 2400 ? 6
             - + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 4800 ? 7 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) 
             ->> CC2530_CLKCON_OSC) : baud == 9600 ? 8 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 14400 ? 
             -8 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 19200 ? 9 + ((CLKCON & (1 << CC2530_CLKCON_OSC)
             -) >> CC2530_CLKCON_OSC) : baud == 28800 ? 9 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 38400
             - ? 10 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 57600 ? 10 + ((CLKCON & (1 << CC2530_CLKCON
             -_OSC)) >> CC2530_CLKCON_OSC) : baud == 76800 ? 11 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud ==
             - 115200 ? 11 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 153600 ? 12 + ((CLKCON & (1 << CC253
             -0_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 230400 ? 12 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) 
             -: baud == 307200 ? 13 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : 0;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 83  

4637   1        U0BAUD = baud == 1200 ? 59 : baud == 2400 ? 59 : baud == 4800 ? 59 : baud == 9600 ? 59 : baud == 14400 ?
             - 216 : baud == 19200 ? 59 : baud == 28800 ? 216 : baud == 38400 ? 59 : baud == 57600 ? 216 : baud == 76800 ? 59 : baud =
             -= 115200 ? 216 : baud == 153600 ? 59 : baud == 230400 ? 216 : baud == 307200 ? 59 : 0;
4638   1      }
4639          
4640          //#line 34
4641          static  /*inline*/  void uart0PinMap(bool map)
4642          {
4643   1      
4644   1      
4645   1      
4646   1        PERCFG &= ~0x1u;
4647   1      
4648   1        P0_ALT |= 0x0Cu;
4649   1      }
4650          
4651          
4652          
4653          
4654          
4655          
4656          
4657          static  /*inline*/  void uart0Init(uint32_t baud)
4658          {
4659   1        uart0PinMap(TRUE);
4660   1        uart0SetBaud(baud);
4661   1        uart0SetMode();
4662   1      }
4663          
4664          //# 40 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
4665          static  /*inline*/  void ATOS_DEBUG_UART_INIT(void)
4666          {
4667   1        {
4668   2      //#line 42
4669   2          uart0Init(9600);
4670   2        }
4671   1      //#line 42
4672   1        ;
4673   1      }
4674          
4675          //# 52 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
4676          static  /*inline*/   error_t PlatformP__Init__init(void)
4677          //#line 52
4678          {
4679   1      
4680   1      
4681   1        if (PlatformP__clockSelect32k(0) != 0) {
4682   2            PlatformP__clockSetMainSrc(1);
4683   2            if (PlatformP__clockSelect32k(0) != 0) {
4684   3              }
4685   2          }
4686   1      
4687   1        PlatformP__clockSetMainSrc(0);
4688   1      
4689   1      
4690   1        ATOS_DEBUG_UART_INIT();
4691   1      
4692   1      
4693   1      
4694   1        {
4695   2      //#line 68
4696   2          {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 84  

4697   3      //#line 68
4698   3            P1_DIR |= 1 << 2;
4699   3      //#line 68
4700   3            P1_ALT &= ~(1 << 2);
4701   3          }
4702   2      //#line 68
4703   2          ;
4704   2      //#line 68
4705   2          {
4706   3      //#line 68
4707   3            P1_DIR |= 1 << 3;
4708   3      //#line 68
4709   3            P1_ALT &= ~(1 << 3);
4710   3          }
4711   2      //#line 68
4712   2          ;
4713   2        }
4714   1      //#line 68
4715   1        ;
4716   1      
4717   1        PlatformP__PlatformInit__init();
4718   1      
4719   1        return 0;
4720   1      }
4721          
4722          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
4723          #define RealMainP__PlatformInit__init(void) PlatformP__Init__init()
4724          //# 51 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
4725          static  /*inline*/   error_t HalFlashP__HalFlash__write(uint32_t destination, uint8_t *source, uint16_t le
             -ngth)
4726          {
4727   1        HalFlashP__HalCC2530FlashWrite(destination, source, length);
4728   1      
4729   1        return 0;
4730   1      }
4731          
4732          //# 5 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
4733          #define FlashIEEEP__HalFlash__write(arg_0x7e9e3958,arg_0x7e9e3b00,arg_0x7e9e3c90) HalFlashP__HalFlash__wri
             -te(arg_0x7e9e3958, arg_0x7e9e3b00, arg_0x7e9e3c90)
4734          
4735          
4736          #define FlashIEEEP__HalFlash__erase(arg_0x7e9e1170) HalFlashP__HalFlash__erase(arg_0x7e9e1170)
4737          //# 44 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
4738          static  /*inline*/   error_t HalFlashP__HalFlash__read(uint8_t *destination, uint32_t source, uint16_t len
             -gth)
4739          {
4740   1        HalFlashP__HalCC2530FlashRead(destination, source, length);
4741   1      
4742   1        return 0;
4743   1      }
4744          
4745          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
4746          #define FlashIEEEP__HalFlash__read(arg_0x7e9e3190,arg_0x7e9e3320,arg_0x7e9e34b0) HalFlashP__HalFlash__read
             -(arg_0x7e9e3190, arg_0x7e9e3320, arg_0x7e9e34b0)
4747          //# 52 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
4748          static  /*inline*/  void FlashIEEEP__ieeeProtect(void)
4749          {
4750   1        /* atomic removed: atomic calls only */
4751   1        {
4752   2          uint8_t i;
4753   2          uint8_t tmp[0x4];
4754   2          uint8_t tmp_ieee[sizeof FlashIEEEP__m_ieee_flash];
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 85  

4755   2      
4756   2      
4757   2      
4758   2      
4759   2          for (i = 0; i < sizeof FlashIEEEP__m_ieee_flash; ++i) 
4760   2            {
4761   3      
4762   3              if (FlashIEEEP__m_ieee_flash[i] != 0xFF) 
4763   3                {
4764   4                  break;
4765   4                }
4766   3            }
4767   2      
4768   2          if (i >= sizeof FlashIEEEP__m_ieee_flash) 
4769   2            {
4770   3      
4771   3              FlashIEEEP__HalFlash__read(FlashIEEEP__m_ieee_flash, 0xF800 + 0x4, sizeof FlashIEEEP__m_ieee_flash
             -);
4772   3            }
4773   2          else 
4774   2            {
4775   3      
4776   3              FlashIEEEP__HalFlash__read(tmp_ieee, 0xF800 + 0x4, sizeof tmp_ieee);
4777   3      
4778   3              for (i = 0; i < sizeof tmp_ieee; ++i) 
4779   3                {
4780   4      
4781   4      
4782   4                  if (tmp_ieee[i] != FlashIEEEP__m_ieee_flash[i]) 
4783   4                    {
4784   5                      break;
4785   5                    }
4786   4                }
4787   3      
4788   3              if (i < sizeof tmp_ieee) 
4789   3                {
4790   4      
4791   4                  FlashIEEEP__HalFlash__read(tmp, 0xF800, 0x4);
4792   4                  FlashIEEEP__HalFlash__erase(0xF800);
4793   4      
4794   4                  FlashIEEEP__HalFlash__write(0xF800, tmp, 0x4);
4795   4                  FlashIEEEP__HalFlash__write(0xF800 + 0x4, FlashIEEEP__m_ieee_flash, sizeof FlashIEEEP__m_ieee_
             -flash);
4796   4                }
4797   3            }
4798   2        }
4799   1      }
4800          
4801          //#line 228
4802          static  /*inline*/    void FlashIEEEP__ActiveMessageAddress__changed(void)
4803          {
4804   1      }
4805          
4806          //# 182 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4807          static  /*inline*/    void RfPacketP__ActiveMessageAddress__changed(void)
4808          {
4809   1        /* atomic removed: atomic calls only */
4810   1        {
4811   2          RfPacketP__m_address_saved = FALSE;
4812   2          RfPacketP__m_group_saved = FALSE;
4813   2        }
4814   1      }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 86  

4815          
4816          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4817           /*inline*/  static   void ActiveMessageAddressC__ActiveMessageAddress__changed(void){
4818   1      //#line 58
4819   1        RfPacketP__ActiveMessageAddress__changed();
4820   1      //#line 58
4821   1        FlashIEEEP__ActiveMessageAddress__changed();
4822   1      //#line 58
4823   1      }
4824          //#line 58
4825          //# 70 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
4826          static  /*inline*/    void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t myGroup, am_
             -addr_t myAddr)
4827          //#line 70
4828          {
4829   1        /* atomic removed: atomic calls only */
4830   1      //#line 71
4831   1        {
4832   2          ActiveMessageAddressC__addr = myAddr;
4833   2          ActiveMessageAddressC__group = myGroup;
4834   2        }
4835   1        ActiveMessageAddressC__ActiveMessageAddress__changed();
4836   1      }
4837          
4838          //# 43 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4839          #define FlashIEEEP__ActiveMessageAddress__setAddress(arg_0x7e9f3e58,arg_0x7e9e6010) ActiveMessageAddressC_
             -_ActiveMessageAddress__setAddress(arg_0x7e9f3e58, arg_0x7e9e6010)
4840          //# 54 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
4841          #define RealMainP__Scheduler__runNextTask(void) SchedulerBasicP__Scheduler__runNextTask()
4842          //# 276 "/usr/lib/ncc/nesc_nx.h"
4843          static   /*inline*/   uint16_t __nesc_ntoh_leuint16(const void *source)
4844          //#line 276
4845          {
4846   1        const uint8_t *base = source;
4847   1      
4848   1      //#line 278
4849   1        return ((uint16_t )base[1] << 8) | base[0];
4850   1      }
4851          
4852          //# 49 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4853          static  /*inline*/   am_addr_t RfPacketP__AMPacket__destination(message_t *amsg)
4854          {
4855   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest);
4856   1      }
4857          
4858          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4859          #define RfReliableMacReceiveP__1__AMPacket__destination(arg_0x7eb350a8) RfPacketP__AMPacket__destination(a
             -rg_0x7eb350a8)
4860          //# 251 "/usr/lib/ncc/nesc_nx.h"
4861          static   /*inline*/   uint8_t __nesc_hton_leuint8(void *target, uint8_t value)
4862          //#line 251
4863          {
4864   1        uint8_t *base = target;
4865   1      
4866   1      //#line 253
4867   1        base[0] = value;
4868   1        return value;
4869   1      }
4870          
4871          //#line 240
4872          static   /*inline*/   uint8_t __nesc_hton_uint8(void *target, uint8_t value)
4873          //#line 240
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 87  

4874          {
4875   1        uint8_t *base = target;
4876   1      
4877   1      //#line 242
4878   1        base[0] = value;
4879   1        return value;
4880   1      }
4881          
4882          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4883          #define AMResourceP__2__AMResource__send(arg_0x7e647888,arg_0x7e647a38,arg_0x7e647bc0) AMResourceCenterP__
             -AMResource__send(AMResourceC__3__AM_RESOURCE_ID, arg_0x7e647888, arg_0x7e647a38, arg_0x7e647bc0)
4884          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4885          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourc
             -eP*/AMResourceP__2__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
4886          {
4887   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
4888   2          {
4889   3            __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 2);
4890   3            __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 241);
4891   3          }
4892   2      //#line 17
4893   2          __nesc_atomic_end(__nesc_atomic); }
4894   1      
4895   1        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__
             -AMResource__send(addr, msg, len);
4896   1      }
4897          
4898          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4899          #define RfReliableMacReceiveP__1__AMSendAck__send(arg_0x7eb55590,arg_0x7eb55740,arg_0x7eb558c8) AMResource
             -P__2__AMSend__send(arg_0x7eb55590, arg_0x7eb55740, arg_0x7eb558c8)
4900          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4901          static  /*inline*/  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__1__sendAck(message_t *msg)
4902          {
4903   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__1__AMSendAck__send(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__1__AMPacket__destination(msg), msg, sizeof(rf_ack_t )) != 0) 
4904   1          {
4905   2          }
4906   1      }
4907          
4908          
4909          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask__runTask(void)
4910          {
4911   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__1_
             -_sendAck(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack
             -_msg);
4912   1      }
4913          
4914          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4915          static  /*inline*/   void RfPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len)
4916          {
4917   1        __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length, len + (sizeof(rf_header_t ) 
             -- 1 + sizeof(uint16_t )));
4918   1      }
4919          
4920          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4921          #define AMResourceCenterP__Packet__setPayloadLength(arg_0x7eb210d0,arg_0x7eb21258) RfPacketP__Packet__setP
             -ayloadLength(arg_0x7eb210d0, arg_0x7eb21258)
4922          //# 281 "/usr/lib/ncc/nesc_nx.h"
4923          static   /*inline*/   uint16_t __nesc_hton_leuint16(void *target, uint16_t value)
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 88  

4924          //#line 281
4925          {
4926   1        uint8_t *base = target;
4927   1      
4928   1      //#line 283
4929   1        base[0] = value;
4930   1        base[1] = value >> 8;
4931   1        return value;
4932   1      }
4933          
4934          //# 91 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4935          static  /*inline*/   void RfPacketP__AMPacket__setGroup(message_t *amsg, am_group_t grp)
4936          {
4937   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->destpan, grp);
4938   1      }
4939          
4940          //# 176 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4941          #define AMResourceCenterP__AMPacket__setGroup(arg_0x7eb31c20,arg_0x7eb31db0) RfPacketP__AMPacket__setGroup
             -(arg_0x7eb31c20, arg_0x7eb31db0)
4942          //# 82 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
4943          static  /*inline*/    am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void)
4944          //#line 82
4945          {
4946   1        am_group_t myGroup;
4947   1      
4948   1        /* atomic removed: atomic calls only */
4949   1      //#line 84
4950   1        myGroup = ActiveMessageAddressC__group;
4951   1        return myGroup;
4952   1      }
4953          
4954          //# 53 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4955          #define RfPacketP__ActiveMessageAddress__amGroup(void) ActiveMessageAddressC__ActiveMessageAddress__amGrou
             -p()
4956          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
4957          #define RfPacketP__WatchDog__resetCpu(void) WatchDogP__WatchDog__resetCpu()
4958          //# 96 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4959          static  /*inline*/   am_group_t RfPacketP__AMPacket__localGroup(void)
4960          {
4961   1        /* atomic removed: atomic calls only */
4962   1        {
4963   2          if (!RfPacketP__m_group_saved) 
4964   2            {
4965   3              RfPacketP__m_group = RfPacketP__ActiveMessageAddress__amGroup();
4966   3              RfPacketP__m_group_saved = TRUE;
4967   3            }
4968   2      
4969   2      
4970   2          if (RfPacketP__m_group != RfPacketP__ActiveMessageAddress__amGroup()) 
4971   2            {
4972   3      
4973   3      
4974   3              RfPacketP__WatchDog__resetCpu();
4975   3            }
4976   2        }
4977   1      
4978   1      
4979   1        return RfPacketP__ActiveMessageAddress__amGroup();
4980   1      }
4981          
4982          //# 184 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4983          #define AMResourceCenterP__AMPacket__localGroup(void) RfPacketP__AMPacket__localGroup()
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 89  

4984          //# 59 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4985          static  /*inline*/   void RfPacketP__AMPacket__setDestination(message_t *amsg, am_addr_t addr)
4986          {
4987   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest, addr);
4988   1      }
4989          
4990          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4991          #define AMResourceCenterP__AMPacket__setDestination(arg_0x7eb35c50,arg_0x7eb35de0) RfPacketP__AMPacket__se
             -tDestination(arg_0x7eb35c50, arg_0x7eb35de0)
4992          //# 64 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4993          static  /*inline*/   void RfPacketP__AMPacket__setSource(message_t *amsg, am_addr_t addr)
4994          {
4995   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->src, addr);
4996   1      }
4997          
4998          //# 110 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4999          #define AMResourceCenterP__AMPacket__setSource(arg_0x7eb345c8,arg_0x7eb34758) RfPacketP__AMPacket__setSour
             -ce(arg_0x7eb345c8, arg_0x7eb34758)
5000          //#line 57
5001          #define AMResourceCenterP__AMPacket__address(void) RfPacketP__AMPacket__address()
5002          //# 61 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
5003          static  /*inline*/    am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void)
5004          //#line 61
5005          {
5006   1        return ActiveMessageAddressC__amAddress();
5007   1      }
5008          
5009          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
5010          #define RfPacketP__ActiveMessageAddress__amAddress(void) ActiveMessageAddressC__ActiveMessageAddress__amAd
             -dress()
5011          //# 235 "/usr/lib/ncc/nesc_nx.h"
5012          static   /*inline*/   uint8_t __nesc_ntoh_uint8(const void *source)
5013          //#line 235
5014          {
5015   1        const uint8_t *base = source;
5016   1      
5017   1      //#line 237
5018   1        return base[0];
5019   1      }
5020          
5021          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5022          #define RfMacBaseSendP__0__sendNext__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseSendP__0
             -__sendNext)
5023          //# 31 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
5024          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(vo
             -id)
5025          {
5026   1        /* atomic removed: atomic calls only */
5027   1        {
5028   2          {
5029   3            unsigned char __nesc_temp = 
5030   3      //#line 35
5031   3            4;
5032   3      
5033   3      //#line 35
5034   3            return __nesc_temp;
5035   3          }
5036   2        }
5037   1      }
5038          
5039          //#line 23
5040          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void)
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 90  

5041          {
5042   1        /* atomic removed: atomic calls only */
5043   1        {
5044   2          {
5045   3            unsigned char __nesc_temp = 
5046   3      //#line 27
5047   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size;
5048   3      
5049   3      //#line 27
5050   3            return __nesc_temp;
5051   3          }
5052   2        }
5053   1      }
5054          
5055          //#line 63
5056          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*
             -AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t newVal)
5057          {
5058   1        /* atomic removed: atomic calls only */
5059   1        {
5060   2          if (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size() < /*AMResourceCenterC.Rf
             -MacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize()) 
5061   2            {
5062   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[/*AMResourceCenterC.RfMacBaseSendC
             -.QueueExC*/QueueExC__0__tail] = newVal;
5063   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail++;
5064   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail %= 4;
5065   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size++;
5066   3              {
5067   4                unsigned char __nesc_temp = 
5068   4      //#line 73
5069   4                0;
5070   4      
5071   4      //#line 73
5072   4                return __nesc_temp;
5073   4              }
5074   3            }
5075   2          else {
5076   3              {
5077   4                unsigned char __nesc_temp = 
5078   4      //#line 77
5079   4                FAIL;
5080   4      
5081   4      //#line 77
5082   4                return __nesc_temp;
5083   4              }
5084   3            }
5085   2        }
5086   1      }
5087          
5088          //# 49 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
5089          #define RfMacBaseSendP__0__SendQueue__enqueue(arg_0x7e606930) QueueExC__0__QueueEx__enqueue(arg_0x7e606930
             -)
5090          //#line 60
5091          #define RfMacBaseSendP__0__SendQueue__element(arg_0x7e606ea8) QueueExC__0__QueueEx__element(arg_0x7e606ea8
             -)
5092          //#line 17
5093          #define RfMacBaseSendP__0__SendQueue__size(void) QueueExC__0__QueueEx__size()
5094          //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
5095          static  /*inline*/  int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessa
             -ge(uint8_t resource_id)
5096          {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 91  

5097   1        /* atomic removed: atomic calls only */
5098   1        {
5099   2          uint8_t i;
5100   2          uint8_t size = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__size()
             -;
5101   2      
5102   2      //#line 80
5103   2          for (i = 0; i < size; ++i) 
5104   2            {
5105   3              message_t *msg = (message_t *)/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0
             -__SendQueue__element(i);
5106   3      
5107   3      //#line 83
5108   3              if (msg != (void *)0 && __nesc_ntoh_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->re
             -source_id) == resource_id) 
5109   3                {
5110   4                  {
5111   5                    int __nesc_temp = 
5112   5      //#line 85
5113   5                    i;
5114   5      
5115   5      //#line 85
5116   5                    return __nesc_temp;
5117   5                  }
5118   4                }
5119   3            }
5120   2          {
5121   3            int __nesc_temp = 
5122   3      //#line 89
5123   3            -1;
5124   3      
5125   3      //#line 89
5126   3            return __nesc_temp;
5127   3          }
5128   2        }
5129   1      }
5130          
5131          //#line 93
5132          static  /*inline*/  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueM
             -essage(message_t *msg)
5133          {
5134   1        /* atomic removed: atomic calls only */
5135   1        {
5136   2          if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessage(__nesc_ntoh_u
             -int8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id)) >= 0) 
5137   2            {
5138   3              {
5139   4                unsigned char __nesc_temp = 
5140   4      //#line 99
5141   4                ERR_MAC_SEND_RESOURCE_EXISTS;
5142   4      
5143   4      //#line 99
5144   4                return __nesc_temp;
5145   4              }
5146   3            }
5147   2      
5148   2      
5149   2          if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__enqueue(msg) != 0
             -) 
5150   2            {
5151   3              {
5152   4                unsigned char __nesc_temp = 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 92  

5153   4      //#line 106
5154   4                ERR_MAC_SEND_RESOURCE_FULL;
5155   4      
5156   4      //#line 106
5157   4                return __nesc_temp;
5158   4              }
5159   3            }
5160   2      
5161   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
5162   2      
5163   2          {
5164   3            unsigned char __nesc_temp = 
5165   3      //#line 112
5166   3            0;
5167   3      
5168   3      //#line 112
5169   3            return __nesc_temp;
5170   3          }
5171   2        }
5172   1      }
5173          
5174          //#line 139
5175          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSen
             -d__send(message_t *msg, uint8_t len)
5176          {
5177   1        /* atomic removed: atomic calls only */
5178   1      
5179   1        {
5180   2      
5181   2      
5182   2      
5183   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->dsn, ++/*AMResourceCenterC.RfMacBa
             -seSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn);
5184   2      
5185   2      
5186   2      
5187   2      
5188   2      
5189   2          {
5190   3            unsigned char __nesc_temp = 
5191   3      //#line 153
5192   3            /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueMessage(msg);
5193   3      
5194   3      //#line 153
5195   3            return __nesc_temp;
5196   3          }
5197   2        }
5198   1      }
5199          
5200          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5201          #define AMResourceCenterP__CoreSend__send(arg_0x7e627998,arg_0x7e627b20) RfMacBaseSendP__0__CoreSend__send
             -(arg_0x7e627998, arg_0x7e627b20)
5202          //# 108 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
5203          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id)
5204          {
5205   1      
5206   1      
5207   1      
5208   1      
5209   1        uint8_t i = SchedulerBasicP__m_head % SchedulerBasicP__NUM_TASKS;
5210   1      
5211   1        while (i != SchedulerBasicP__m_tail) 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 93  

5212   1          {
5213   2            if (SchedulerBasicP__m_next[i] == id) 
5214   2              {
5215   3                return TRUE;
5216   3              }
5217   2      
5218   2            i = (i + 1) % SchedulerBasicP__NUM_TASKS;
5219   2            SchedulerBasicP__m_tail = SchedulerBasicP__m_tail % SchedulerBasicP__NUM_TASKS;
5220   2          }
5221   1      
5222   1        return FALSE;
5223   1      }
5224          
5225          
5226          
5227          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id)
5228          {
5229   1        /* atomic removed: atomic calls only */
5230   1      //#line 156
5231   1        {
5232   2          id = id % SchedulerBasicP__NUM_TASKS;
5233   2      
5234   2          if (!SchedulerBasicP__isWaiting(id)) 
5235   2            {
5236   3              if ((SchedulerBasicP__m_tail + 1) % SchedulerBasicP__NUM_TASKS == SchedulerBasicP__m_head) 
5237   3                {
5238   4      
5239   4                  {
5240   5                    unsigned char __nesc_temp = 
5241   5      //#line 164
5242   5                    FALSE;
5243   5      
5244   5      //#line 164
5245   5                    return __nesc_temp;
5246   5                  }
5247   4                }
5248   3              SchedulerBasicP__m_tail = SchedulerBasicP__m_tail % SchedulerBasicP__NUM_TASKS;
5249   3              SchedulerBasicP__m_next[SchedulerBasicP__m_tail] = id;
5250   3              SchedulerBasicP__m_tail = (SchedulerBasicP__m_tail + 1) % SchedulerBasicP__NUM_TASKS;
5251   3              {
5252   4                unsigned char __nesc_temp = 
5253   4      //#line 170
5254   4                TRUE;
5255   4      
5256   4      //#line 170
5257   4                return __nesc_temp;
5258   4              }
5259   3            }
5260   2          else {
5261   3              {
5262   4                unsigned char __nesc_temp = 
5263   4      //#line 174
5264   4                FALSE;
5265   4      
5266   4      //#line 174
5267   4                return __nesc_temp;
5268   4              }
5269   3            }
5270   2        }
5271   1      }
5272          
5273          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 94  

5274          #define RfReliableMacRetrySendP__1__resendTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfReli
             -ableMacRetrySendP__1__resendTask)
5275          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
5276          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__SubAMSend__sendDone(message_t *msg, error_t error)
5277          {
5278   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySend
             -P__1__m_sending) 
5279   1          {
5280   2            if (error == 0) 
5281   2              {
5282   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__signalDone(msg, error);
5283   3              }
5284   2            else 
5285   2              {
5286   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__resendTask__postTask();
5287   3              }
5288   2          }
5289   1      }
5290          
5291          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5292          #define RfReliableMacSendP__1__AMSend__sendDone(arg_0x7eb538e0,arg_0x7eb53a68) RfReliableMacRetrySendP__1_
             -_SubAMSend__sendDone(arg_0x7eb538e0, arg_0x7eb53a68)
5293          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5294          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__signalDoneTask__runTask(void)
5295          {
5296   1        message_t *msg;
5297   1        error_t result;
5298   1      
5299   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5300   2          {
5301   3            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__1__m_sending) 
5302   3              {
5303   4                {
5304   5      //#line 40
5305   5                  __nesc_atomic_end(__nesc_atomic); 
5306   5      //#line 40
5307   5                  return;
5308   5                }
5309   4              }
5310   3            msg = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg;
5311   3            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__m_result;
5312   3          }
5313   2      //#line 45
5314   2          __nesc_atomic_end(__nesc_atomic); }
5315   1      
5316   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMa
             -cSendP__1__AMSend__sendDone(msg, result);
5317   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5318   2      //#line 48
5319   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_sending = FALSE;
5320   2      //#line 48
5321   2          __nesc_atomic_end(__nesc_atomic); }
5322   1      }
5323          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 95  

5324          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5325          #define AtosNetStdP__sendDoneCheck__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__sendD
             -oneCheck)
5326          //# 368 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5327          static  /*inline*/   void AtosNetStdP__AMSend__sendDone(message_t *msg, error_t error)
5328          {
5329   1        if (error != 0) 
5330   1          {
5331   2            AtosNetStdP__sendDoneCheck__postTask();
5332   2          }
5333   1      }
5334          
5335          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5336          #define RfReliableMacRetrySendP__1__AMSend__sendDone(arg_0x7eb538e0,arg_0x7eb53a68) AtosNetStdP__AMSend__s
             -endDone(arg_0x7eb538e0, arg_0x7eb53a68)
5337          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
5338          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask__runTask(void)
5339          {
5340   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5341   2          {
5342   3            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending) 
5343   3              {
5344   4                {
5345   5      //#line 54
5346   5                  __nesc_atomic_end(__nesc_atomic); 
5347   5      //#line 54
5348   5                  return;
5349   5                }
5350   4              }
5351   3            if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__m_retry_times++ < 20) 
5352   3              {
5353   4                if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__doSend(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__m_msg) != 0) 
5354   4                  {
5355   5                    ;
5356   5                    /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__resendTask__postTask();
5357   5                  }
5358   4              }
5359   3            else 
5360   3              {
5361   4      
5362   4                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__m_msg, ERR_MAC_RETRY_MAX);
5363   4              }
5364   3          }
5365   2      //#line 70
5366   2          __nesc_atomic_end(__nesc_atomic); }
5367   1      }
5368          
5369          //# 257 "/usr/lib/ncc/nesc_nx.h"
5370          static   /*inline*/   int8_t __nesc_hton_int8(void *target, int8_t value)
5371          //#line 257
5372          {
5373   1      //#line 257
5374   1        __nesc_hton_uint8(target, value);
5375   1      //#line 257
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 96  

5376   1        return value;
5377   1      }
5378          
5379          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5380          #define RfReliableMacSendP__1__TimeoutTimer__startOneShot(arg_0x7eb11498) VirtualizeTimerC__0__Timer__star
             -tOneShot(5U, arg_0x7eb11498)
5381          //# 246 "/usr/lib/ncc/nesc_nx.h"
5382          static   /*inline*/   uint8_t __nesc_ntoh_leuint8(const void *source)
5383          //#line 246
5384          {
5385   1        const uint8_t *base = source;
5386   1      
5387   1      //#line 248
5388   1        return base[0];
5389   1      }
5390          
5391          //# 124 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
5392          static  /*inline*/   uint8_t RfPacketP__Packet__payloadLength(message_t *msg)
5393          {
5394   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length) - (sizeof(rf_header_t
             - ) - 1 + sizeof(uint16_t ));
5395   1      }
5396          
5397          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5398          #define RfReliableMacSendP__1__SubPacket__payloadLength(arg_0x7eb23a40) RfPacketP__Packet__payloadLength(a
             -rg_0x7eb23a40)
5399          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
5400          #define AMResourceP__1__AMResource__send(arg_0x7e647888,arg_0x7e647a38,arg_0x7e647bc0) AMResourceCenterP__
             -AMResource__send(AMResourceC__2__AM_RESOURCE_ID, arg_0x7e647888, arg_0x7e647a38, arg_0x7e647bc0)
5401          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5402          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMRes
             -ourceC.AMResourceP*/AMResourceP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5403          {
5404   1        /* atomic removed: atomic calls only */
5405   1        {
5406   2          __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 1);
5407   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 240U);
5408   2        }
5409   1      
5410   1        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/
             -AMResourceP__1__AMResource__send(addr, msg, len);
5411   1      }
5412          
5413          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5414          #define RfReliableMacSendP__1__SubAMSend__send(arg_0x7eb55590,arg_0x7eb55740,arg_0x7eb558c8) AMResourceP__
             -1__AMSend__send(arg_0x7eb55590, arg_0x7eb55740, arg_0x7eb558c8)
5415          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5416          #define RfReliableMacPacketP__SubPacket__getPayload(arg_0x7eb21e20,arg_0x7eb20010) RfPacketP__Packet__getP
             -ayload(arg_0x7eb21e20, arg_0x7eb20010)
5417          //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5418          static  /*inline*/   void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *msg)
5419          {
5420   1        return RfReliableMacPacketP__SubPacket__getPayload(msg, (void *)0);
5421   1      }
5422          
5423          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5424          #define RfReliableMacSendP__1__PacketEx__getPacketHeader(arg_0x7e6f7010) RfReliableMacPacketP__PacketEx__g
             -etPacketHeader(arg_0x7e6f7010)
5425          //# 89 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5426          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5427          {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 97  

5428   1        error_t result;
5429   1      
5430   1        /* atomic removed: atomic calls only */
5431   1        {
5432   2          rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfR
             -eliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(msg);
5433   2          rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
5434   2      
5435   2      
5436   2      
5437   2          if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending) 
5438   2            {
5439   3              {
5440   4                unsigned char __nesc_temp = 
5441   4      //#line 102
5442   4                FAIL;
5443   4      
5444   4      //#line 102
5445   4                return __nesc_temp;
5446   4              }
5447   3            }
5448   2          header->ack_req = addr != 0xFFFF;
5449   2      
5450   2          __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
5451   2      
5452   2          result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__SubAMSend__send(addr, msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC
             -.RfReliableMacSendP*/RfReliableMacSendP__1__SubPacket__payloadLength(msg));
5453   2      
5454   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__TimeoutTimer__startOneShot(10000);
5455   2      
5456   2          if (result == 0) 
5457   2            {
5458   3              /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_msg = msg;
5459   3              /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending = TRUE;
5460   3            }
5461   2      
5462   2          {
5463   3            unsigned char __nesc_temp = 
5464   3      //#line 119
5465   3            result;
5466   3      
5467   3      //#line 119
5468   3            return __nesc_temp;
5469   3          }
5470   2        }
5471   1      }
5472          
5473          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5474          #define RfReliableMacRetrySendP__1__SubAMSend__send(arg_0x7eb55590,arg_0x7eb55740,arg_0x7eb558c8) RfReliab
             -leMacSendP__1__AMSend__send(arg_0x7eb55590, arg_0x7eb55740, arg_0x7eb558c8)
5475          //# 46 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
5476          static  /*inline*/  void ATOS_DEBUG_UART_PUTC(char c)
5477          {
5478   1        if (c == '\n') 
5479   1          {
5480   2            {
5481   3      //#line 50
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 98  

5482   3              uart0PutChar('\r');
5483   3            }
5484   2      //#line 50
5485   2            ;
5486   2          }
5487   1        {
5488   2      //#line 52
5489   2          uart0PutChar(c);
5490   2        }
5491   1      //#line 52
5492   1        ;
5493   1      }
5494          
5495          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5496          #define VirtualizeTimerC__0__updateFromTimer__postTask(void) SchedulerBasicP__TaskBasic__postTask(Virtuali
             -zeTimerC__0__updateFromTimer)
5497          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5498          #define TransformCounterC__0__CounterFrom__get(void) HplCC2530Timer1P__0__Counter__get()
5499          //# 327 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
5500          static  /*inline*/    bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPe
             -nding(void)
5501          {
5502   1        /* atomic removed: atomic calls only */
5503   1      //#line 329
5504   1        {
5505   2          unsigned char __nesc_temp = 
5506   2      //#line 329
5507   2          T1STAT & CC2530_T1_OVFIF;
5508   2      
5509   2      //#line 329
5510   2          return __nesc_temp;
5511   2        }
5512   1      }
5513          
5514          //# 60 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5515          #define TransformCounterC__0__CounterFrom__isOverflowPending(void) HplCC2530Timer1P__0__Counter__isOverflo
             -wPending()
5516          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5517          #define RfReliableMacRetrySendP__1__AMPacket__destination(arg_0x7eb350a8) RfPacketP__AMPacket__destination
             -(arg_0x7eb350a8)
5518          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5519          #define RfReliableMacPacketP__SubPacket__payloadLength(arg_0x7eb23a40) RfPacketP__Packet__payloadLength(ar
             -g_0x7eb23a40)
5520          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5521          static  /*inline*/   uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *msg)
5522          {
5523   1        return RfReliableMacPacketP__SubPacket__payloadLength(msg) - sizeof(rf_rmac_header_t );
5524   1      }
5525          
5526          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5527          #define RfReliableMacRetrySendP__1__Packet__payloadLength(arg_0x7eb23a40) RfReliableMacPacketP__Packet__pa
             -yloadLength(arg_0x7eb23a40)
5528          //# 57 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5529          #define AtosNetStdP__AMPacket__address(void) RfPacketP__AMPacket__address()
5530          //# 128 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5531          static  /*inline*/  void AtosNetStdP__traceEnd(message_t *msg, anstd_trace_t *trace, int index)
5532          {
5533   1        trace->_data_type = ANSTD_DATA_TYPE_TRACE_ACK;
5534   1        AtosNetStdP__traceBackward(msg, (anstd_trace_ack_t *)trace, index);
5535   1      }
5536          
5537          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 99  

5538          #define AtosNetStdP__Packet__getPayload(arg_0x7eb21e20,arg_0x7eb20010) RfReliableMacPacketP__Packet__getPa
             -yload(arg_0x7eb21e20, arg_0x7eb20010)
5539          //# 350 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5540          static  /*inline*/   void AtosNetStdP__sendDoneCheck__runTask(void)
5541          {
5542   1        anstd_header_t *header = (anstd_header_t *)AtosNetStdP__Packet__getPayload(&AtosNetStdP__m_send_msg, (vo
             -id *)0);
5543   1      
5544   1        if (header->_data_type == ANSTD_DATA_TYPE_TRACE) 
5545   1          {
5546   2            anstd_trace_t *trace = (anstd_trace_t *)header;
5547   2            int index = AtosNetStdP__indexOfTraceItem(trace, AtosNetStdP__AMPacket__address());
5548   2      
5549   2      //#line 358
5550   2            AtosNetStdP__traceEnd(&AtosNetStdP__m_send_msg, trace, index);
5551   2          }
5552   1        else {
5553   2      //#line 360
5554   2          if (header->_data_type == ANSTD_DATA_TYPE_TRACE_ACK) 
5555   2            {
5556   3              anstd_trace_ack_t *trace_ack = (anstd_trace_ack_t *)header;
5557   3              int index = AtosNetStdP__indexOfTraceItem(trace_ack, AtosNetStdP__AMPacket__address());
5558   3      
5559   3      //#line 364
5560   3              AtosNetStdP__traceBackward(&AtosNetStdP__m_send_msg, trace_ack, index);
5561   3            }
5562   2          }
5563   1      }
5564          
5565          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5566          #define RfReliableMacRetrySendP__1__PacketEx__getPacketHeader(arg_0x7e6f7010) RfReliableMacPacketP__Packet
             -Ex__getPacketHeader(arg_0x7e6f7010)
5567          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5568          #define RfReliableMacRetrySendP__1__AMPacket__setDestination(arg_0x7eb35c50,arg_0x7eb35de0) RfPacketP__AMP
             -acket__setDestination(arg_0x7eb35c50, arg_0x7eb35de0)
5569          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5570          #define RfReliableMacPacketP__SubPacket__setPayloadLength(arg_0x7eb210d0,arg_0x7eb21258) RfPacketP__Packet
             -__setPayloadLength(arg_0x7eb210d0, arg_0x7eb21258)
5571          //# 25 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5572          static  /*inline*/   void RfReliableMacPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len)
5573          {
5574   1        RfReliableMacPacketP__SubPacket__setPayloadLength(msg, len + sizeof(rf_rmac_header_t ));
5575   1      }
5576          
5577          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5578          #define RfReliableMacRetrySendP__1__Packet__setPayloadLength(arg_0x7eb210d0,arg_0x7eb21258) RfReliableMacP
             -acketP__Packet__setPayloadLength(arg_0x7eb210d0, arg_0x7eb21258)
5579          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5580          #define AtosNetStdP__AMSend__send(arg_0x7eb55590,arg_0x7eb55740,arg_0x7eb558c8) RfReliableMacRetrySendP__1
             -__AMSend__send(arg_0x7eb55590, arg_0x7eb55740, arg_0x7eb558c8)
5581          //# 378 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5582          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *statu
             -s)
5583          {
5584   1      }
5585          
5586          //# 12 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
5587          #define AtosNetStdP__AtosNetStd__beforeNodeStatusUp(arg_0x7e3551e0) AtosNetStdP__AtosNetStd__default__befo
             -reNodeStatusUp(arg_0x7e3551e0)
5588          //# 161 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
5589          static  /*inline*/   void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *ieee)
5590          {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 100 

5591   1        memcpy(ieee, FlashIEEEP__m_ieee, sizeof FlashIEEEP__m_ieee);
5592   1      }
5593          
5594          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
5595          #define AtosNetStdP__FlashIEEE__GetIEEE(arg_0x7ea02f08) FlashIEEEP__FlashIEEE__GetIEEE(arg_0x7ea02f08)
5596          //# 143 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
5597          static  /*inline*/   uint8_t RfConfigP__RfConfig__getChannel(void)
5598          {
5599   1        return RfConfigP__m_channel;
5600   1      }
5601          
5602          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
5603          #define AtosNetStdP__RfConfig__getChannel(void) RfConfigP__RfConfig__getChannel()
5604          //# 241 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5605          static  /*inline*/   error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t address)
5606          {
5607   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5608   2          {
5609   3            anstd_node_status_t *status = (anstd_node_status_t *)AtosNetStdP__Packet__getPayload(&AtosNetStdP__m
             -_send_msg, (void *)0);
5610   3      
5611   3      //#line 246
5612   3            status->_data_type = ANSTD_DATA_TYPE_NODE_STATUS_UP;
5613   3            status->device_type = ATP_STD_EQUIPMENT_TYPE_NODE;
5614   3            status->industry_code = 0x00;
5615   3            status->application_code = 0x00;
5616   3      
5617   3            status->rf_channel = AtosNetStdP__RfConfig__getChannel();
5618   3      
5619   3            AtosNetStdP__FlashIEEE__GetIEEE(status->ieee);
5620   3      
5621   3            status->node_status = AtosNetStdP__m_node_status++;
5622   3      
5623   3            AtosNetStdP__AtosNetStd__beforeNodeStatusUp(status);
5624   3      
5625   3            if (AtosNetStdP__m_node_status == 0) 
5626   3              {
5627   4                AtosNetStdP__m_node_status = 1;
5628   4              }
5629   3      
5630   3            {
5631   4              unsigned char __nesc_temp = 
5632   4      //#line 264
5633   4              AtosNetStdP__AMSend__send(address, &AtosNetStdP__m_send_msg, sizeof(anstd_node_status_t ));
5634   4      
5635   4              {
5636   5      //#line 264
5637   5                __nesc_atomic_end(__nesc_atomic); 
5638   5      //#line 264
5639   5                return __nesc_temp;
5640   5              }
5641   4            }
5642   3          }
5643   2      //#line 267
5644   2          __nesc_atomic_end(__nesc_atomic); }
5645   1      }
5646          
5647          //#line 59
5648          static  /*inline*/   void AtosNetStdP__nodeStatusUpTask__runTask(void)
5649          {
5650   1        AtosNetStdP__AtosNetStd__sendNodeStatusUp(AtosNetStdP__m_ack_addr);
5651   1      }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 101 

5652          
5653          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5654          #define AtosNetStdP__RebootTimer__startPeriodic(arg_0x7eb13e50) VirtualizeTimerC__0__Timer__startPeriodic(
             -6U, arg_0x7eb13e50)
5655          //# 54 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5656          static  /*inline*/   void AtosNetStdP__rebootTask__runTask(void)
5657          {
5658   1        AtosNetStdP__RebootTimer__startPeriodic(500);
5659   1      }
5660          
5661          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5662          #define RfReliableMacReceiveP__0__AMPacket__destination(arg_0x7eb350a8) RfPacketP__AMPacket__destination(a
             -rg_0x7eb350a8)
5663          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
5664          #define AMResourceP__3__AMResource__send(arg_0x7e647888,arg_0x7e647a38,arg_0x7e647bc0) AMResourceCenterP__
             -AMResource__send(AMResourceC__1__AM_RESOURCE_ID, arg_0x7e647888, arg_0x7e647a38, arg_0x7e647bc0)
5665          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5666          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResource
             -P*/AMResourceP__3__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5667          {
5668   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5669   2          {
5670   3            __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 3);
5671   3            __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 124);
5672   3          }
5673   2      //#line 17
5674   2          __nesc_atomic_end(__nesc_atomic); }
5675   1      
5676   1        return /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3__A
             -MResource__send(addr, msg, len);
5677   1      }
5678          
5679          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5680          #define RfReliableMacReceiveP__0__AMSendAck__send(arg_0x7eb55590,arg_0x7eb55740,arg_0x7eb558c8) AMResource
             -P__3__AMSend__send(arg_0x7eb55590, arg_0x7eb55740, arg_0x7eb558c8)
5681          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5682          static  /*inline*/  void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfR
             -eliableMacReceiveP__0__sendAck(message_t *msg)
5683          {
5684   1        if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_0__AMSendAck__send(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_0__AMPacket__destination(msg), msg, sizeof(rf_ack_t )) != 0) 
5685   1          {
5686   2          }
5687   1      }
5688          
5689          
5690          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__0__sendAckTask__runTask(void)
5691          {
5692   1        /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0__
             -sendAck(&/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0__m_ack_m
             -sg);
5693   1      }
5694          
5695          //# 91 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
5696          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txGo(void)
5697          {
5698   1        uint32_t i = 0;
5699   1        error_t result = FAIL;
5700   1      
5701   1      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 102 

5702   1        RFST = 0xE9;
5703   1      
5704   1      
5705   1        while (i++ < 15000) 
5706   1          {
5707   2            if (RFIRQF1 & (1 << 1)) 
5708   2              {
5709   3                result = 0;
5710   3                break;
5711   3              }
5712   2          }
5713   1      
5714   1      
5715   1        do {
5716   2      //#line 110
5717   2            S1CON = 0x00;
5718   2      //#line 110
5719   2            RFIRQF1 = ~(1 << 1);
5720   2          }
5721   1        while (
5722   1      //#line 110
5723   1        110 == -1);
5724   1      
5725   1        return result;
5726   1      }
5727          
5728          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
5729          #define RfMacBaseCsmaP__RfHardwareTx__txGo(void) RfHardwareTxP__RfHardwareTx__txGo()
5730          //# 105 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5731          static  /*inline*/   void RfMacBaseCsmaP__doGo__runTask(void)
5732          {
5733   1        error_t result = RfMacBaseCsmaP__RfHardwareTx__txGo();
5734   1      
5735   1        if (RfMacBaseCsmaP__m_this_delay > 90) 
5736   1          {
5737   2            RfMacBaseCsmaP__m_congestion_delay = 90;
5738   2          }
5739   1        else 
5740   1          {
5741   2            if (RfMacBaseCsmaP__m_this_delay > RfMacBaseCsmaP__m_congestion_delay) 
5742   2              {
5743   3                RfMacBaseCsmaP__m_congestion_delay = (RfMacBaseCsmaP__m_this_delay + RfMacBaseCsmaP__m_congestio
             -n_delay) / 2;
5744   3              }
5745   2            else 
5746   2              {
5747   3                RfMacBaseCsmaP__m_congestion_delay = RfMacBaseCsmaP__m_this_delay;
5748   3              }
5749   2          }
5750   1      
5751   1        if (result != 0) 
5752   1          {
5753   2            RfMacBaseCsmaP__signalDone(result);
5754   2          }
5755   1        else 
5756   1          {
5757   2            RfMacBaseCsmaP__signalDone(0);
5758   2          }
5759   1      }
5760          
5761          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5762          #define RfMacBaseCsmaP__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseCsmaP
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 103 

             -__signalDoneTask)
5763          //# 70 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
5764          static  /*inline*/   void AMResourceCenterP__CoreSend__sendDone(message_t *msg, error_t result)
5765          {
5766   1        AMResourceCenterP__AMResource__sendDone(__nesc_ntoh_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta
             -_data)->resource_id), msg, result);
5767   1      }
5768          
5769          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5770          #define RfMacBaseSendP__0__CoreSend__sendDone(arg_0x7e6264c0,arg_0x7e626648) AMResourceCenterP__CoreSend__
             -sendDone(arg_0x7e6264c0, arg_0x7e626648)
5771          //# 117 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
5772          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSen
             -d__sendDone(message_t *msg, error_t result)
5773          {
5774   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5775   2          {
5776   3            if (!/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending) {
5777   4              {
5778   5      //#line 121
5779   5                __nesc_atomic_end(__nesc_atomic); 
5780   5      //#line 121
5781   5                return;
5782   5              }
5783   4              }
5784   3          }
5785   2      //#line 124
5786   2          __nesc_atomic_end(__nesc_atomic); }
5787   1        /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(msg, result);
5788   1      
5789   1        if (result != 0) 
5790   1          {
5791   2            {
5792   3      //#line 129
5793   3              {
5794   4      //#line 129
5795   4                if (100 >= uart_debug_level) {
5796   5      //#line 129
5797   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5798   6      //#line 129
5799   6                      {
5800   7      //#line 129
5801   7                        sprintf(uart_debug_buf, "RfMacBaseSendP.SubCoreSend.sendDone result%d\n", (int )result);
5802   7                      }
5803   6      //#line 130
5804   6                      __nesc_atomic_end(__nesc_atomic); }
5805   5      //#line 129
5806   5                    ATOS_DEBUG_UART_PRINT();
5807   5                  }
5808   4              }
5809   3            }
5810   2      //#line 129
5811   2            ;
5812   2          }
5813   1      
5814   1      
5815   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5816   2      //#line 133
5817   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
5818   2      //#line 133
5819   2          __nesc_atomic_end(__nesc_atomic); }
5820   1        /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 104 

5821   1      }
5822          
5823          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5824          #define RfMacBaseCsmaP__CoreSend__sendDone(arg_0x7e6264c0,arg_0x7e626648) RfMacBaseSendP__0__SubCoreSend__
             -sendDone(arg_0x7e6264c0, arg_0x7e626648)
5825          //# 53 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5826          static  /*inline*/   void RfMacBaseCsmaP__signalDoneTask__runTask(void)
5827          {
5828   1      
5829   1      
5830   1        if (RfMacBaseCsmaP__m_msg != (void *)0) 
5831   1          {
5832   2      
5833   2            RfMacBaseCsmaP__CoreSend__sendDone(RfMacBaseCsmaP__m_msg, RfMacBaseCsmaP__m_result);
5834   2          }
5835   1      }
5836          
5837          //# 52 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5838          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__0__AMSendAck__sendDone(message_t *msg, error_t result)
5839          {
5840   1      }
5841          
5842          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5843          #define AMResourceP__3__AMSend__sendDone(arg_0x7eb538e0,arg_0x7eb53a68) RfReliableMacReceiveP__0__AMSendAc
             -k__sendDone(arg_0x7eb538e0, arg_0x7eb53a68)
5844          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5845          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/
             -AMResourceP__3__AMResource__sendDone(message_t *msg, error_t error)
5846          {
5847   1      
5848   1      
5849   1      
5850   1        /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3__AMSend__
             -sendDone(msg, error);
5851   1      }
5852          
5853          //# 52 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5854          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__AMSendAck__sendDone(message_t *msg, error_t result)
5855          {
5856   1      }
5857          
5858          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5859          #define AMResourceP__2__AMSend__sendDone(arg_0x7eb538e0,arg_0x7eb53a68) RfReliableMacReceiveP__1__AMSendAc
             -k__sendDone(arg_0x7eb538e0, arg_0x7eb53a68)
5860          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5861          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*
             -/AMResourceP__2__AMResource__sendDone(message_t *msg, error_t error)
5862          {
5863   1      
5864   1      
5865   1      
5866   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__AMSend_
             -_sendDone(msg, error);
5867   1      }
5868          
5869          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5870          #define RfReliableMacSendP__1__AckTimer__startOneShot(arg_0x7eb11498) VirtualizeTimerC__0__Timer__startOne
             -Shot(4U, arg_0x7eb11498)
5871          //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5872          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 105 

             -leMacSendP*/RfReliableMacSendP__1__SubAMSend__sendDone(message_t *msg, error_t error)
5873          {
5874   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
5875   1          {
5876   2            if (error == 0) 
5877   2              {
5878   3                rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSen
             -dC.RfReliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(msg);
5879   3      
5880   3      //#line 146
5881   3                if (header->ack_req) 
5882   3                  {
5883   4                    /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__1__AckTimer__startOneShot(50);
5884   4                    return;
5885   4                  }
5886   3              }
5887   2      
5888   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(msg, error);
5889   2          }
5890   1      }
5891          
5892          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5893          #define AMResourceP__1__AMSend__sendDone(arg_0x7eb538e0,arg_0x7eb53a68) RfReliableMacSendP__1__SubAMSend__
             -sendDone(arg_0x7eb538e0, arg_0x7eb53a68)
5894          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5895          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResour
             -ceC.AMResourceP*/AMResourceP__1__AMResource__sendDone(message_t *msg, error_t error)
5896          {
5897   1      
5898   1      
5899   1      
5900   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMResou
             -rceP__1__AMSend__sendDone(msg, error);
5901   1      }
5902          
5903          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5904          #define RfReliableMacSendP__1__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacSendP__1__signalDoneTask)
5905          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5906          #define RfReliableMacSendP__0__AckTimer__startOneShot(arg_0x7eb11498) VirtualizeTimerC__0__Timer__startOne
             -Shot(2U, arg_0x7eb11498)
5907          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5908          #define RfReliableMacSendP__0__PacketEx__getPacketHeader(arg_0x7e6f7010) RfReliableMacPacketP__PacketEx__g
             -etPacketHeader(arg_0x7e6f7010)
5909          //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5910          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliabl
             -eMacSendP*/RfReliableMacSendP__0__SubAMSend__sendDone(message_t *msg, error_t error)
5911          {
5912   1        if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending) 
5913   1          {
5914   2            if (error == 0) 
5915   2              {
5916   3                rf_rmac_header_t *header = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSend
             -C.RfReliableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(msg);
5917   3      
5918   3      //#line 146
5919   3                if (header->ack_req) 
5920   3                  {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 106 

5921   4                    /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__AckTimer__startOneShot(50);
5922   4                    return;
5923   4                  }
5924   3              }
5925   2      
5926   2            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__signalDone(msg, error);
5927   2          }
5928   1      }
5929          
5930          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5931          #define AMResourceP__0__AMSend__sendDone(arg_0x7eb538e0,arg_0x7eb53a68) RfReliableMacSendP__0__SubAMSend__
             -sendDone(arg_0x7eb538e0, arg_0x7eb53a68)
5932          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5933          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourc
             -eC.AMResourceP*/AMResourceP__0__AMResource__sendDone(message_t *msg, error_t error)
5934          {
5935   1      
5936   1      
5937   1      
5938   1        /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMResour
             -ceP__0__AMSend__sendDone(msg, error);
5939   1      }
5940          
5941          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5942          #define RfReliableMacSendP__0__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacSendP__0__signalDoneTask)
5943          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
5944          #define RfMacBaseCsmaP__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
5945          //# 75 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5946          static  /*inline*/  uint32_t RfMacBaseCsmaP__initBackoffTimer(void)
5947          {
5948   1        RfMacBaseCsmaP__m_this_random = RfMacBaseCsmaP__Random__rand16() % RfMacBaseCsmaP__m_congestion_delay;
5949   1        if (RfMacBaseCsmaP__m_this_random == 0) {
5950   2      //#line 78
5951   2          RfMacBaseCsmaP__m_this_random = 1;
5952   2          }
5953   1      //#line 79
5954   1        RfMacBaseCsmaP__m_this_delay += RfMacBaseCsmaP__m_this_random;
5955   1        return (uint32_t )RfMacBaseCsmaP__m_this_random * RfMacBaseCsmaP__RF_BACKOFF_PERIOD;
5956   1      }
5957          
5958          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5959          #define TransformAlarmC__1__Counter__get(void) TransformCounterC__1__Counter__get()
5960          //# 76 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
5961          static  /*inline*/    /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBa
             -seCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void)
5962          {
5963   1        /* atomic removed: atomic calls only */
5964   1      //#line 78
5965   1        {
5966   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type __nesc_temp = 
5967   2      //#line 78
5968   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__get();
5969   2      
5970   2      //#line 78
5971   2          return __nesc_temp;
5972   2        }
5973   1      }
5974          
5975          //#line 140
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 107 

5976          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*
             -RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type t0, /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/T
             -ransformAlarmC__1__to_size_type dt)
5977          {
5978   1        /* atomic removed: atomic calls only */
5979   1        {
5980   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 = t0;
5981   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = dt;
5982   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm();
5983   2        }
5984   1      }
5985          
5986          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*Rf
             -MacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type dt)
5987          {
5988   1        /* atomic removed: atomic calls only */
5989   1      //#line 152
5990   1        /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*RfMacBaseCsmaC.Alarm32khz
             -32C.Transform*/TransformAlarmC__1__Alarm__getNow(), dt);
5991   1      }
5992          
5993          //# 55 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
5994          #define RfMacBaseCsmaP__BackoffTimer__start(arg_0x7e921d18) TransformAlarmC__1__Alarm__start(arg_0x7e921d1
             -8)
5995          //# 14 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
5996          static  /*inline*/  void RfHardwareTxP__writeTxfifo(uint8_t *buf, uint8_t len)
5997          {
5998   1        uint8_t i;
5999   1      
6000   1      //#line 17
6001   1        for (i = 0; i < len; ++i) 
6002   1          {
6003   2            RFD = buf[i];
6004   2          }
6005   1      }
6006          
6007          //#line 45
6008          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *packet, uint8_t len)
6009          {
6010   1      
6011   1        do {
6012   2      //#line 48
6013   2            RFST = 0xEE;
6014   2          }
6015   1        while (
6016   1      //#line 48
6017   1        48 == -1);
6018   1      
6019   1      
6020   1        do {
6021   2      //#line 51
6022   2            S1CON = 0x00;
6023   2      //#line 51
6024   2            RFIRQF1 = ~(1 << 1);
6025   2          }
6026   1        while (
6027   1      //#line 51
6028   1        51 == -1);
6029   1      
6030   1        len &= 0x7f;
6031   1        packet[0] = len;
6032   1      //#line 86
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 108 

6033   1        RfHardwareTxP__writeTxfifo(packet, len);
6034   1      
6035   1        return 0;
6036   1      }
6037          
6038          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
6039          #define RfMacBaseCsmaP__RfHardwareTx__txPrepare(arg_0x7e5a9c98,arg_0x7e5a9e20) RfHardwareTxP__RfHardwareTx
             -__txPrepare(arg_0x7e5a9c98, arg_0x7e5a9e20)
6040          //# 164 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
6041          static  /*inline*/   error_t RfMacBaseCsmaP__CoreSend__send(message_t *msg, uint8_t len)
6042          {
6043   1        unsigned char *__nesc_temp45;
6044   1        unsigned char *__nesc_temp44;
6045   1      
6046   1        /* atomic removed: atomic calls only */
6047   1      //#line 168
6048   1        {
6049   2          if (msg == (void *)0) 
6050   2            {
6051   3              {
6052   4                unsigned char __nesc_temp = 
6053   4      //#line 171
6054   4                FAIL;
6055   4      
6056   4      //#line 171
6057   4                return __nesc_temp;
6058   4              }
6059   3            }
6060   2          RfMacBaseCsmaP__m_msg = msg;
6061   2          RfMacBaseCsmaP__m_cancel = FALSE;
6062   2          RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
6063   2          RfMacBaseCsmaP__m_congestion_count = 0;
6064   2          RfMacBaseCsmaP__m_this_delay = 0;
6065   2      //#line 192
6066   2          (__nesc_temp44 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nesc_te
             -mp44, __nesc_ntoh_leuint8(__nesc_temp44) + 0));
6067   2          RfMacBaseCsmaP__RfHardwareTx__txPrepare((uint8_t *)msg->header, __nesc_ntoh_leuint8((unsigned char *)&
             -((rf_header_t *)msg->header)->length));
6068   2          (__nesc_temp45 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nesc_te
             -mp45, __nesc_ntoh_leuint8(__nesc_temp45) - 0));
6069   2      
6070   2          ;
6071   2      
6072   2          RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__initBackoffTimer());
6073   2        }
6074   1      
6075   1        return 0;
6076   1      }
6077          
6078          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
6079          #define RfMacBaseSendP__0__SubCoreSend__send(arg_0x7e627998,arg_0x7e627b20) RfMacBaseCsmaP__CoreSend__send
             -(arg_0x7e627998, arg_0x7e627b20)
6080          //# 15 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
6081          static  /*inline*/   bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void)
6082          {
6083   1        /* atomic removed: atomic calls only */
6084   1        {
6085   2          {
6086   3            unsigned char __nesc_temp = 
6087   3      //#line 19
6088   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size == 0;
6089   3      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 109 

6090   3      //#line 19
6091   3            return __nesc_temp;
6092   3          }
6093   2        }
6094   1      }
6095          
6096          //#line 39
6097          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__head(void)
6098          {
6099   1        /* atomic removed: atomic calls only */
6100   1        {
6101   2          {
6102   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
6103   3      //#line 43
6104   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[/*AMResourceCenterC.RfMacBaseSendC.Q
             -ueueExC*/QueueExC__0__head];
6105   3      
6106   3      //#line 43
6107   3            return __nesc_temp;
6108   3          }
6109   2        }
6110   1      }
6111          
6112          //#line 47
6113          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void)
6114          {
6115   1        /* atomic removed: atomic calls only */
6116   1        {
6117   2          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t t = /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__head();
6118   2      
6119   2      //#line 52
6120   2          if (!/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty()) 
6121   2            {
6122   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head++;
6123   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head %= 4;
6124   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size--;
6125   3            }
6126   2      
6127   2          {
6128   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
6129   3      //#line 59
6130   3            t;
6131   3      
6132   3      //#line 59
6133   3            return __nesc_temp;
6134   3          }
6135   2        }
6136   1      }
6137          
6138          //# 40 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
6139          #define RfMacBaseSendP__0__SendQueue__dequeue(void) QueueExC__0__QueueEx__dequeue()
6140          //#line 9
6141          #define RfMacBaseSendP__0__SendQueue__empty(void) QueueExC__0__QueueEx__empty()
6142          //# 23 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
6143          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__
             -runTask(void)
6144          {
6145   1        error_t result;
6146   1        message_t *msg;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 110 

6147   1        rf_header_t *header;
6148   1      
6149   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6150   2          {
6151   3            if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending) {
6152   4              {
6153   5      //#line 31
6154   5                __nesc_atomic_end(__nesc_atomic); 
6155   5      //#line 31
6156   5                return;
6157   5              }
6158   4              }
6159   3      //#line 33
6160   3            if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__empty()) 
6161   3              {
6162   4                {
6163   5      //#line 35
6164   5                  __nesc_atomic_end(__nesc_atomic); 
6165   5      //#line 35
6166   5                  return;
6167   5                }
6168   4              }
6169   3      
6170   3            msg = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__dequeue();
6171   3      
6172   3      
6173   3      
6174   3            if (msg == (void *)0) 
6175   3              {
6176   4      
6177   4                ;
6178   4      
6179   4      
6180   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
6181   4      
6182   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
6183   4                {
6184   5      //#line 52
6185   5                  __nesc_atomic_end(__nesc_atomic); 
6186   5      //#line 52
6187   5                  return;
6188   5                }
6189   4              }
6190   3            result = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__send(msg
             -, __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length));
6191   3            if (result == 0) 
6192   3              {
6193   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = TRUE;
6194   4              }
6195   3            else 
6196   3              {
6197   4      
6198   4      
6199   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(msg, FA
             -IL);
6200   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
6201   4      
6202   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
6203   4              }
6204   3          }
6205   2      //#line 69
6206   2          __nesc_atomic_end(__nesc_atomic); }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 111 

6207   1      }
6208          
6209          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
6210          #define TransformCounterC__1__CounterFrom__get(void) HplCC2530Timer1P__0__Counter__get()
6211          
6212          
6213          
6214          
6215          
6216          
6217          
6218          #define TransformCounterC__1__CounterFrom__isOverflowPending(void) HplCC2530Timer1P__0__Counter__isOverflo
             -wPending()
6219          //# 200 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6220          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(uint1
             -6_t t0, uint16_t dt)
6221          {
6222   1        uint16_t set;
6223   1      //#line 202
6224   1        uint16_t now;
6225   1      //#line 202
6226   1        uint16_t elapsed;
6227   1      
6228   1        /* atomic removed: atomic calls only */
6229   1      //#line 204
6230   1        {
6231   2          {
6232   3      //#line 205
6233   3            now = T1CNTL;
6234   3      //#line 205
6235   3            now += T1CNTH << 8;
6236   3          }
6237   2      //#line 205
6238   2          ;
6239   2      
6240   2          elapsed = now - t0;
6241   2      
6242   2          if (elapsed >= dt) 
6243   2            {
6244   3              set = now + 5;
6245   3            }
6246   2          else 
6247   2            {
6248   3              uint16_t remaining = dt - elapsed;
6249   3      
6250   3      //#line 216
6251   3              if (remaining <= 5) {
6252   4                  set = now + 5;
6253   4                }
6254   3              else 
6255   3                {
6256   4                  set = remaining + now;
6257   4                }
6258   3            }
6259   2      
6260   2          {
6261   3      //#line 225
6262   3            T1CCTL1 &= ~(1 << CC2530_T1CCTLx_MODE);
6263   3      //#line 225
6264   3            T1CC1L = (uint16_t )set & 0xFF;
6265   3      //#line 225
6266   3            T1CC1H = ((uint16_t )set >> 8) & 0xFF;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 112 

6267   3      //#line 225
6268   3            T1CCTL1 |= 1 << CC2530_T1CCTLx_MODE;
6269   3          }
6270   2      //#line 225
6271   2          ;
6272   2      
6273   2          T1CCTL1 |= 1 << CC2530_T1CCTLx_IM;
6274   2        }
6275   1      }
6276          
6277          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6278          #define TransformAlarmC__1__AlarmFrom__startAt(arg_0x7e920e78,arg_0x7e917030) HplCC2530Timer1P__0__Alarm1_
             -_startAt(arg_0x7e920e78, arg_0x7e917030)
6279          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6280          #define RfReliableMacRetrySendP__0__resendTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfReli
             -ableMacRetrySendP__0__resendTask)
6281          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
6282          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfR
             -eliableMacRetrySendP__0__SubAMSend__sendDone(message_t *msg, error_t error)
6283          {
6284   1        if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__m_sending) 
6285   1          {
6286   2            if (error == 0) 
6287   2              {
6288   3                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__signalDone(msg, error);
6289   3              }
6290   2            else 
6291   2              {
6292   3                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__resendTask__postTask();
6293   3              }
6294   2          }
6295   1      }
6296          
6297          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6298          #define RfReliableMacSendP__0__AMSend__sendDone(arg_0x7eb538e0,arg_0x7eb53a68) RfReliableMacRetrySendP__0_
             -_SubAMSend__sendDone(arg_0x7eb538e0, arg_0x7eb53a68)
6299          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6300          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliabl
             -eMacSendP*/RfReliableMacSendP__0__signalDoneTask__runTask(void)
6301          {
6302   1        message_t *msg;
6303   1        error_t result;
6304   1      
6305   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6306   2          {
6307   3            if (!/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__m_sending) 
6308   3              {
6309   4                {
6310   5      //#line 40
6311   5                  __nesc_atomic_end(__nesc_atomic); 
6312   5      //#line 40
6313   5                  return;
6314   5                }
6315   4              }
6316   3            msg = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__m_msg;
6317   3            result = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__m_result;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 113 

6318   3          }
6319   2      //#line 45
6320   2          __nesc_atomic_end(__nesc_atomic); }
6321   1      
6322   1        /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMac
             -SendP__0__AMSend__sendDone(msg, result);
6323   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6324   2      //#line 48
6325   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__m_sending = FALSE;
6326   2      //#line 48
6327   2          __nesc_atomic_end(__nesc_atomic); }
6328   1      }
6329          
6330          //# 45 "DigRFNodeP.nc"
6331          static  /*inline*/   void DigRFNodeP__AMSend__sendDone(message_t *msg, error_t success)
6332          {
6333   1        {
6334   2      //#line 47
6335   2          {
6336   3      //#line 47
6337   3            if (9 >= uart_debug_level) {
6338   4      //#line 47
6339   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6340   5      //#line 47
6341   5                  {
6342   6      //#line 47
6343   6                    sprintf(uart_debug_buf, "* Sent%s!\r\n", success == 0 ? "OK" : "FAIL");
6344   6                  }
6345   5      //#line 48
6346   5                  __nesc_atomic_end(__nesc_atomic); }
6347   4      //#line 47
6348   4                ATOS_DEBUG_UART_PRINT();
6349   4              }
6350   3          }
6351   2        }
6352   1      //#line 47
6353   1        ;
6354   1      }
6355          
6356          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6357          #define RfReliableMacRetrySendP__0__AMSend__sendDone(arg_0x7eb538e0,arg_0x7eb53a68) DigRFNodeP__AMSend__se
             -ndDone(arg_0x7eb538e0, arg_0x7eb53a68)
6358          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
6359          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfR
             -eliableMacRetrySendP__0__resendTask__runTask(void)
6360          {
6361   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6362   2          {
6363   3            if (!/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__m_sending) 
6364   3              {
6365   4                {
6366   5      //#line 54
6367   5                  __nesc_atomic_end(__nesc_atomic); 
6368   5      //#line 54
6369   5                  return;
6370   5                }
6371   4              }
6372   3            if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_retry_times++ < 20) 
6373   3              {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 114 

6374   4                if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__doSend(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__m_msg) != 0) 
6375   4                  {
6376   5                    ;
6377   5                    /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__resendTask__postTask();
6378   5                  }
6379   4              }
6380   3            else 
6381   3              {
6382   4      
6383   4                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__signalDone(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__m_msg, ERR_MAC_RETRY_MAX);
6384   4              }
6385   3          }
6386   2      //#line 70
6387   2          __nesc_atomic_end(__nesc_atomic); }
6388   1      }
6389          
6390          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6391          #define RfReliableMacSendP__0__TimeoutTimer__startOneShot(arg_0x7eb11498) VirtualizeTimerC__0__Timer__star
             -tOneShot(3U, arg_0x7eb11498)
6392          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
6393          #define RfReliableMacSendP__0__SubPacket__payloadLength(arg_0x7eb23a40) RfPacketP__Packet__payloadLength(a
             -rg_0x7eb23a40)
6394          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
6395          #define AMResourceP__0__AMResource__send(arg_0x7e647888,arg_0x7e647a38,arg_0x7e647bc0) AMResourceCenterP__
             -AMResource__send(AMResourceC__0__AM_RESOURCE_ID, arg_0x7e647888, arg_0x7e647a38, arg_0x7e647bc0)
6396          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
6397          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMReso
             -urceC.AMResourceP*/AMResourceP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
6398          {
6399   1        /* atomic removed: atomic calls only */
6400   1        {
6401   2          __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 0);
6402   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 123);
6403   2        }
6404   1      
6405   1        return /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/A
             -MResourceP__0__AMResource__send(addr, msg, len);
6406   1      }
6407          
6408          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6409          #define RfReliableMacSendP__0__SubAMSend__send(arg_0x7eb55590,arg_0x7eb55740,arg_0x7eb558c8) AMResourceP__
             -0__AMSend__send(arg_0x7eb55590, arg_0x7eb55740, arg_0x7eb558c8)
6410          //# 89 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6411          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReli
             -ableMacSendP*/RfReliableMacSendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
6412          {
6413   1        error_t result;
6414   1      
6415   1        /* atomic removed: atomic calls only */
6416   1        {
6417   2          rf_rmac_header_t *header = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRe
             -liableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(msg);
6418   2          rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
6419   2      
6420   2      
6421   2      
6422   2          if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 115 

             -bleMacSendP__0__m_sending) 
6423   2            {
6424   3              {
6425   4                unsigned char __nesc_temp = 
6426   4      //#line 102
6427   4                FAIL;
6428   4      
6429   4      //#line 102
6430   4                return __nesc_temp;
6431   4              }
6432   3            }
6433   2          header->ack_req = addr != 0xFFFF;
6434   2      
6435   2          __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
6436   2      
6437   2          result = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__SubAMSend__send(addr, msg, /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.R
             -fReliableMacSendP*/RfReliableMacSendP__0__SubPacket__payloadLength(msg));
6438   2      
6439   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__TimeoutTimer__startOneShot(10000);
6440   2      
6441   2          if (result == 0) 
6442   2            {
6443   3              /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__m_msg = msg;
6444   3              /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__m_sending = TRUE;
6445   3            }
6446   2      
6447   2          {
6448   3            unsigned char __nesc_temp = 
6449   3      //#line 119
6450   3            result;
6451   3      
6452   3      //#line 119
6453   3            return __nesc_temp;
6454   3          }
6455   2        }
6456   1      }
6457          
6458          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6459          #define RfReliableMacRetrySendP__0__SubAMSend__send(arg_0x7eb55590,arg_0x7eb55740,arg_0x7eb558c8) RfReliab
             -leMacSendP__0__AMSend__send(arg_0x7eb55590, arg_0x7eb55740, arg_0x7eb558c8)
6460          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
6461          #define RfReliableMacRetrySendP__0__AMPacket__destination(arg_0x7eb350a8) RfPacketP__AMPacket__destination
             -(arg_0x7eb350a8)
6462          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
6463          #define RfReliableMacRetrySendP__0__Packet__payloadLength(arg_0x7eb23a40) RfReliableMacPacketP__Packet__pa
             -yloadLength(arg_0x7eb23a40)
6464          //# 140 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6465          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*
             -HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/T
             -ransformAlarmC__0__to_size_type dt)
6466          {
6467   1        /* atomic removed: atomic calls only */
6468   1        {
6469   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 = t0;
6470   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = dt;
6471   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm();
6472   2        }
6473   1      }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 116 

6474          
6475          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6476          #define AlarmToTimerC__0__Alarm__startAt(arg_0x7e920e78,arg_0x7e917030) TransformAlarmC__0__Alarm__startAt
             -(arg_0x7e920e78, arg_0x7e917030)
6477          //# 47 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6478          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(uint32_t t0, uint32_t dt,
             - bool oneshot)
6479          {
6480   1        /* atomic removed: atomic calls only */
6481   1        {
6482   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt = dt;
6483   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot = oneshot;
6484   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(t0, dt);
6485   2        }
6486   1      }
6487          
6488          //#line 113
6489          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t
             - t0, uint32_t dt)
6490          {
6491   1        /* atomic removed: atomic calls only */
6492   1      //#line 115
6493   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(t0, dt, TRUE);
6494   1      }
6495          
6496          //# 118 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6497          #define VirtualizeTimerC__0__TimerFrom__startOneShotAt(arg_0x7eb05120,arg_0x7eb052b0) AlarmToTimerC__0__Ti
             -mer__startOneShotAt(arg_0x7eb05120, arg_0x7eb052b0)
6498          //# 78 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6499          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void)
6500          {
6501   1        /* atomic removed: atomic calls only */
6502   1      //#line 80
6503   1        T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
6504   1      }
6505          
6506          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6507          #define TransformAlarmC__0__AlarmFrom__stop(void) HplCC2530Timer1P__0__Alarm0__stop()
6508          //# 91 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6509          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void)
6510          {
6511   1        /* atomic removed: atomic calls only */
6512   1      //#line 93
6513   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop();
6514   1      }
6515          
6516          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6517          #define AlarmToTimerC__0__Alarm__stop(void) TransformAlarmC__0__Alarm__stop()
6518          //# 73 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6519          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void)
6520          {
6521   1        /* atomic removed: atomic calls only */
6522   1        {
6523   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop();
6524   2        }
6525   1      }
6526          
6527          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6528          #define VirtualizeTimerC__0__TimerFrom__stop(void) AlarmToTimerC__0__Timer__stop()
6529          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
6530          #define TransformAlarmC__0__Counter__get(void) TransformCounterC__0__Counter__get()
6531          //# 76 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 117 

6532          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void)
6533          {
6534   1        /* atomic removed: atomic calls only */
6535   1      //#line 78
6536   1        {
6537   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type __nesc_temp = 
6538   2      //#line 78
6539   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__get();
6540   2      
6541   2      //#line 78
6542   2          return __nesc_temp;
6543   2        }
6544   1      }
6545          
6546          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6547          #define AlarmToTimerC__0__Alarm__getNow(void) TransformAlarmC__0__Alarm__getNow()
6548          //# 118 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6549          static  /*inline*/   uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void)
6550          {
6551   1        /* atomic removed: atomic calls only */
6552   1      //#line 120
6553   1        {
6554   2          unsigned long __nesc_temp = 
6555   2      //#line 120
6556   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__getNow();
6557   2      
6558   2      //#line 120
6559   2          return __nesc_temp;
6560   2        }
6561   1      }
6562          
6563          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6564          #define VirtualizeTimerC__0__TimerFrom__getNow(void) AlarmToTimerC__0__Timer__getNow()
6565          //# 98 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6566          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask
             -(void)
6567          {
6568   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6569   2          {
6570   3      
6571   3      
6572   3      
6573   3      
6574   3            uint32_t now = /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow();
6575   3            int32_t min_remaining = (1UL << 31) - 1;
6576   3            bool min_remaining_isset = FALSE;
6577   3            uint8_t num;
6578   3      
6579   3            {
6580   4      //#line 111
6581   4              {
6582   5      //#line 111
6583   5                if (1 >= uart_debug_level) {
6584   6      //#line 111
6585   6                    {
6586   7      //#line 111
6587   7                      sprintf(uart_debug_buf, "updateFromTimer NUM_TIMERS=%d\n", (int )/*HilTimerMilliC.Virtuali
             -zeTimerC*/VirtualizeTimerC__0__NUM_TIMERS);
6588   7                    }
6589   6      //#line 111
6590   6                    ATOS_DEBUG_UART_PRINT();
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 118 

6591   6                  }
6592   5              }
6593   4            }
6594   3      //#line 111
6595   3            ;
6596   3      
6597   3            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop();
6598   3      
6599   3            for (num = 0; num < /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS; num++) 
6600   3              {
6601   4                /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtu
             -alizeTimerC*/VirtualizeTimerC__0__m_timers[num];
6602   4      
6603   4      
6604   4                if (timer->isrunning) 
6605   4                  {
6606   5                    uint32_t elapsed = now - timer->t0;
6607   5                    int32_t remaining = (timer->dt - elapsed) % (timer->dt + 1);
6608   5      
6609   5                    {
6610   6      //#line 125
6611   6                      {
6612   7      //#line 125
6613   7                        if (1 >= uart_debug_level) {
6614   8      //#line 125
6615   8                            {
6616   9      //#line 125
6617   9                              sprintf(uart_debug_buf, "elapsed = 0x%lx, remaining=0x%lx\n", elapsed, remaining);
6618   9                            }
6619   8      //#line 125
6620   8                            ATOS_DEBUG_UART_PRINT();
6621   8                          }
6622   7                      }
6623   6                    }
6624   5      //#line 125
6625   5                    ;
6626   5      
6627   5                    if (remaining < min_remaining) 
6628   5                      {
6629   6                        min_remaining = remaining;
6630   6                        min_remaining_isset = TRUE;
6631   6                      }
6632   5                  }
6633   4              }
6634   3      
6635   3            {
6636   4      //#line 135
6637   4              {
6638   5      //#line 135
6639   5                if (1 >= uart_debug_level) {
6640   6      //#line 135
6641   6                    {
6642   7      //#line 135
6643   7                      sprintf(uart_debug_buf, "updateFromTimer min_remaining_isset=%d, min_remaining=0x%x,\n", (
             -int )min_remaining_isset, (int )min_remaining);
6644   7                    }
6645   6      //#line 135
6646   6                    ATOS_DEBUG_UART_PRINT();
6647   6                  }
6648   5              }
6649   4            }
6650   3      //#line 135
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 119 

6651   3            ;
6652   3      
6653   3            if (min_remaining_isset) 
6654   3              {
6655   4                if (min_remaining <= 0) 
6656   4                  {
6657   5                    /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(now);
6658   5                  }
6659   4                else 
6660   4                  {
6661   5                    {
6662   6      //#line 145
6663   6                      {
6664   7      //#line 145
6665   7                        if (1 >= uart_debug_level) {
6666   8      //#line 145
6667   8                            {
6668   9      //#line 145
6669   9                              sprintf(uart_debug_buf, "VirtualizeTimerC call TimerFrom.startOneShotAt\n");
6670   9                            }
6671   8      //#line 145
6672   8                            ATOS_DEBUG_UART_PRINT();
6673   8                          }
6674   7                      }
6675   6                    }
6676   5      //#line 145
6677   5                    ;
6678   5                    /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt(now, min_r
             -emaining);
6679   5                  }
6680   4              }
6681   3          }
6682   2      //#line 149
6683   2          __nesc_atomic_end(__nesc_atomic); }
6684   1      }
6685          
6686          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6687          #define RealMainP__fakeTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RealMainP__fakeTask)
6688          //# 111 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
6689          static  /*inline*/   void RealMainP__FakeTimer__fired(void)
6690          {
6691   1      
6692   1        RealMainP__fakeTask__postTask();
6693   1      }
6694          
6695          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6696          #define SHTP__readDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(SHTP__readDoneTask)
6697          //# 249 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHTP.nc"
6698          static  /*inline*/   void SHTP__WaitTimer__fired(void)
6699          {
6700   1      
6701   1      
6702   1        if (SHTP__m_state == SHTP__SHT_STATE_TEMP || SHTP__m_state == SHTP__SHT_STATE_HUMI) 
6703   1          {
6704   2            P0_DIR &= ~(1 << 1);
6705   2            if (P0_1) {
6706   3      //#line 256
6707   3              SHTP__m_error += 1;
6708   3              }
6709   2      
6710   2            if (SHTP__m_error > 0) 
6711   2              {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 120 

6712   3                SHTP__readDoneTask__postTask();
6713   3                return;
6714   3              }
6715   2      
6716   2      
6717   2      
6718   2            *SHTP__p_value = SHTP__recvByte(1);
6719   2            *(SHTP__p_value + 1) = SHTP__recvByte(1);
6720   2            SHTP__m_checksum = SHTP__recvByte(0);
6721   2      
6722   2            if (SHTP__m_state < SHTP__SHT_STATE_HUMI) 
6723   2              {
6724   3      
6725   3                SHTP__m_state++;
6726   3                SHTP__cmdMeasure();
6727   3              }
6728   2            else 
6729   2              {
6730   3                SHTP__readDoneTask__postTask();
6731   3              }
6732   2          }
6733   1      }
6734          
6735          //# 71 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6736          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliabl
             -eMacSendP*/RfReliableMacSendP__0__AckTimer__fired(void)
6737          {
6738   1        if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending) 
6739   1          {
6740   2            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__signalDone(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__m_msg, ERR_MAC_NO_ACK);
6741   2          }
6742   1      }
6743          
6744          static  /*inline*/   void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliabl
             -eMacSendP*/RfReliableMacSendP__0__TimeoutTimer__fired(void)
6745          {
6746   1        if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending) 
6747   1          {
6748   2            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__signalDone(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__m_msg, ERR_MAC_NO_ACK);
6749   2          }
6750   1      }
6751          
6752          //#line 71
6753          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__AckTimer__fired(void)
6754          {
6755   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
6756   1          {
6757   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg, ERR_MAC_NO_ACK);
6758   2          }
6759   1      }
6760          
6761          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 121 

             -leMacSendP*/RfReliableMacSendP__1__TimeoutTimer__fired(void)
6762          {
6763   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
6764   1          {
6765   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg, ERR_MAC_NO_ACK);
6766   2          }
6767   1      }
6768          
6769          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
6770          #define AtosNetStdP__WatchDog__resetCpu(void) WatchDogP__WatchDog__resetCpu()
6771          //# 49 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
6772          static  /*inline*/   void AtosNetStdP__RebootTimer__fired(void)
6773          {
6774   1        AtosNetStdP__WatchDog__resetCpu();
6775   1      }
6776          
6777          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6778          #define DigRFNodeP__sensorDataTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(DigRFNodeP__sensor
             -DataTask)
6779          //# 106 "DigRFNodeP.nc"
6780          static  /*inline*/   void DigRFNodeP__Timer1__fired(void)
6781          {
6782   1        DigRFNodeP__sensorDataTask__postTask();
6783   1      }
6784          
6785          //# 232 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6786          static  /*inline*/    void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(u
             -int8_t num)
6787          //#line 232
6788          {
6789   1      }
6790          
6791          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6792           /*inline*/  static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(uint8_t arg
             -_0x7e769030){
6793   1      //#line 72
6794   1        switch (arg_0x7e769030) {
6795   2      //#line 72
6796   2          case 0U:
6797   2      //#line 72
6798   2            RealMainP__FakeTimer__fired();
6799   2      //#line 72
6800   2            break;
6801   2      //#line 72
6802   2          case 1U:
6803   2      //#line 72
6804   2            SHTP__WaitTimer__fired();
6805   2      //#line 72
6806   2            break;
6807   2      //#line 72
6808   2          case 2U:
6809   2      //#line 72
6810   2            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__AckTimer__fired();
6811   2      //#line 72
6812   2            break;
6813   2      //#line 72
6814   2          case 3U:
6815   2      //#line 72
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 122 

6816   2            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__TimeoutTimer__fired();
6817   2      //#line 72
6818   2            break;
6819   2      //#line 72
6820   2          case 4U:
6821   2      //#line 72
6822   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__AckTimer__fired();
6823   2      //#line 72
6824   2            break;
6825   2      //#line 72
6826   2          case 5U:
6827   2      //#line 72
6828   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__TimeoutTimer__fired();
6829   2      //#line 72
6830   2            break;
6831   2      //#line 72
6832   2          case 6U:
6833   2      //#line 72
6834   2            AtosNetStdP__RebootTimer__fired();
6835   2      //#line 72
6836   2            break;
6837   2      //#line 72
6838   2          case 7U:
6839   2      //#line 72
6840   2            DigRFNodeP__Timer1__fired();
6841   2      //#line 72
6842   2            break;
6843   2      //#line 72
6844   2          default:
6845   2      //#line 72
6846   2            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(arg_0x7e769030);
6847   2      //#line 72
6848   2            break;
6849   2      //#line 72
6850   2          }
6851   1      //#line 72
6852   1      }
6853          //#line 72
6854          //# 169 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHTP.nc"
6855          static  /*inline*/  void SHTP__reset(void)
6856          
6857          
6858          
6859          
6860          
6861          
6862          {
6863   1        uint8_t i;
6864   1      
6865   1        P0_DIR |= 1 << 1;
6866   1        P1_DIR |= 1 << 7;
6867   1      
6868   1      
6869   1      
6870   1        P0_1 = 1;
6871   1        P1_7 = 0;
6872   1      
6873   1        for (i = 0; i < 9; i++) 
6874   1          {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 123 

6875   2            P1_7 = 1;
6876   2            {
6877   3      //#line 190
6878   3              SHTP__tick = 1;
6879   3      //#line 190
6880   3              while (SHTP__tick--) ;
6881   3            }
6882   2      //#line 190
6883   2            ;
6884   2            P1_7 = 0;
6885   2            {
6886   3      //#line 192
6887   3              SHTP__tick = 1;
6888   3      //#line 192
6889   3              while (SHTP__tick--) ;
6890   3            }
6891   2      //#line 192
6892   2            ;
6893   2          }
6894   1      
6895   1        SHTP__start();
6896   1      }
6897          
6898          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6899          #define SHTP__WaitTimer__startOneShot(arg_0x7eb11498) VirtualizeTimerC__0__Timer__startOneShot(1U, arg_0x7
             -eb11498)
6900          //# 121 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6901          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(uint1
             -6_t t0, uint16_t dt)
6902          {
6903   1        uint16_t set;
6904   1      //#line 123
6905   1        uint16_t now;
6906   1      //#line 123
6907   1        uint16_t elapsed;
6908   1      
6909   1        /* atomic removed: atomic calls only */
6910   1        {
6911   2          {
6912   3      //#line 127
6913   3            now = T1CNTL;
6914   3      //#line 127
6915   3            now += T1CNTH << 8;
6916   3          }
6917   2      //#line 127
6918   2          ;
6919   2      
6920   2          elapsed = now - t0;
6921   2      
6922   2          if (elapsed >= dt) 
6923   2            {
6924   3              set = now + 5;
6925   3            }
6926   2          else 
6927   2            {
6928   3              uint16_t remaining = dt - elapsed;
6929   3      
6930   3      //#line 138
6931   3              if (remaining <= 5) 
6932   3                {
6933   4                  set = now + 5;
6934   4                }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 124 

6935   3              else 
6936   3                {
6937   4                  set = remaining + now;
6938   4                }
6939   3            }
6940   2      
6941   2          {
6942   3      //#line 148
6943   3            T1CCTL0 &= ~(1 << CC2530_T1CCTLx_MODE);
6944   3      //#line 148
6945   3            T1CC0L = (uint16_t )set & 0xFF;
6946   3      //#line 148
6947   3            T1CC0H = ((uint16_t )set >> 8) & 0xFF;
6948   3      //#line 148
6949   3            T1CCTL0 |= 1 << CC2530_T1CCTLx_MODE;
6950   3          }
6951   2      //#line 148
6952   2          ;
6953   2      
6954   2          T1CCTL0 |= 1 << CC2530_T1CCTLx_IM;
6955   2      
6956   2          {
6957   3      //#line 152
6958   3            {
6959   4      //#line 152
6960   4              if (1 >= uart_debug_level) {
6961   5      //#line 152
6962   5                  {
6963   6      //#line 152
6964   6                    sprintf(uart_debug_buf, "Alarm0.startAt T1CCTL0=0x%x\n", T1CCTL0);
6965   6                  }
6966   5      //#line 152
6967   5                  ATOS_DEBUG_UART_PRINT();
6968   5                }
6969   4            }
6970   3          }
6971   2      //#line 152
6972   2          ;
6973   2        }
6974   1      }
6975          
6976          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6977          #define TransformAlarmC__0__AlarmFrom__startAt(arg_0x7e920e78,arg_0x7e917030) HplCC2530Timer1P__0__Alarm0_
             -_startAt(arg_0x7e920e78, arg_0x7e917030)
6978          //# 152 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6979          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void)
6980          {
6981   1        /* atomic removed: atomic calls only */
6982   1        {
6983   2          {
6984   3      //#line 156
6985   3            {
6986   4      //#line 156
6987   4              if (1 >= uart_debug_level) {
6988   5      //#line 156
6989   5                  {
6990   6      //#line 156
6991   6                    sprintf(uart_debug_buf, "VirtualizeTimerC.TimerFrom.fired\n");
6992   6                  }
6993   5      //#line 156
6994   5                  ATOS_DEBUG_UART_PRINT();
6995   5                }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 125 

6996   4            }
6997   3          }
6998   2      //#line 156
6999   2          ;
7000   2          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(/*HilTimerMilliC.VirtualizeTimerC*/
             -VirtualizeTimerC__0__TimerFrom__getNow());
7001   2        }
7002   1      }
7003          
7004          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7005          #define AlarmToTimerC__0__Timer__fired(void) VirtualizeTimerC__0__TimerFrom__fired()
7006          //# 81 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
7007          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void)
7008          {
7009   1        /* atomic removed: atomic calls only */
7010   1      //#line 83
7011   1        {
7012   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type __nesc_temp = 
7013   2      //#line 83
7014   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 + /*HilTimerMilliC.AlarmMilli32C.Tr
             -ansform*/TransformAlarmC__0__m_dt;
7015   2      
7016   2      //#line 83
7017   2          return __nesc_temp;
7018   2        }
7019   1      }
7020          
7021          //# 105 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
7022          #define AlarmToTimerC__0__Alarm__getAlarm(void) TransformAlarmC__0__Alarm__getAlarm()
7023          //# 81 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
7024          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void)
7025          {
7026   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7027   2          {
7028   3            if (/*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot == FALSE) 
7029   3              {
7030   4                /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(/*HilTimerMilliC.AlarmToTimerC*/AlarmToT
             -imerC__0__Alarm__getAlarm(), /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt, FALSE);
7031   4              }
7032   3            /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired();
7033   3          }
7034   2      //#line 90
7035   2          __nesc_atomic_end(__nesc_atomic); }
7036   1      }
7037          
7038          //# 103 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
7039          static  /*inline*/   void RealMainP__fakeTask__runTask(void)
7040          {
7041   1      }
7042          
7043          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
7044          #define DigRFNodeP__sendMsgTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(DigRFNodeP__sendMsgTa
             -sk)
7045          //# 322 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHTP.nc"
7046          static  /*inline*/   void SHTP__SHT__calcRealValue(float *temperature, float *humidity, uint16_t raw_tempe
             -ratue, uint16_t raw_humidity)
7047          {
7048   1      
7049   1      
7050   1      
7051   1      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 126 

7052   1      
7053   1      
7054   1      
7055   1      
7056   1      
7057   1        float RH1;
7058   1      
7059   1      
7060   1        *temperature = -39.66 + +0.01 * raw_temperatue;
7061   1      
7062   1        RH1 = -2.8E-6 * raw_humidity * raw_humidity + 0.0405 * raw_humidity + -4.0;
7063   1        *humidity = (*temperature - 25) * (0.01 + 0.00008 * raw_humidity) + RH1;
7064   1      }
7065          
7066          //# 5 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHT.nc"
7067          #define DigRFNodeP__SHT__calcRealValue(arg_0x7eb65570,arg_0x7eb65718,arg_0x7eb658b0,arg_0x7eb65a48) SHTP__
             -SHT__calcRealValue(arg_0x7eb65570, arg_0x7eb65718, arg_0x7eb658b0, arg_0x7eb65a48)
7068          //# 64 "DigRFNodeP.nc"
7069          static  /*inline*/   void DigRFNodeP__SHT__readDone(error_t result, uint16_t temperature, uint16_t humidit
             -y)
7070          {
7071   1      
7072   1        float temp;
7073   1      //#line 67
7074   1        float hum;
7075   1      
7076   1        DigRFNodeP__SHT__calcRealValue(&temp, &hum, temperature, humidity);
7077   1      
7078   1      
7079   1        {
7080   2      //#line 72
7081   2          {
7082   3      //#line 72
7083   3            if (uart_debug_level >= uart_debug_level) {
7084   4      //#line 72
7085   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7086   5      //#line 72
7087   5                  {
7088   6      //#line 72
7089   6                    sprintf(uart_debug_buf, "temp: %f, hum: %f\r\n", temp, hum);
7090   6                  }
7091   5      //#line 73
7092   5                  __nesc_atomic_end(__nesc_atomic); }
7093   4      //#line 72
7094   4                ATOS_DEBUG_UART_PRINT();
7095   4              }
7096   3          }
7097   2        }
7098   1      //#line 72
7099   1        ;
7100   1      
7101   1        memcpy(DigRFNodeP__p_sensor_payload, &temp, 4);
7102   1        memcpy(DigRFNodeP__p_sensor_payload + 4, &hum, 4);
7103   1      
7104   1      
7105   1        if (result == 0) 
7106   1          {
7107   2            DigRFNodeP__sendMsgTask__postTask();
7108   2          }
7109   1        else 
7110   1          {
7111   2            DigRFNodeP__sensorDataTask__postTask();
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 127 

7112   2          }
7113   1      }
7114          
7115          //# 4 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHT.nc"
7116          #define SHTP__SHT__readDone(arg_0x7eb73d70,arg_0x7eb73f08,arg_0x7eb650b8) DigRFNodeP__SHT__readDone(arg_0x
             -7eb73d70, arg_0x7eb73f08, arg_0x7eb650b8)
7117          //# 284 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHTP.nc"
7118          static  /*inline*/   void SHTP__readDoneTask__runTask(void)
7119          {
7120   1        error_t result = SHTP__m_error > 0 ? FAIL : 0;
7121   1      
7122   1      
7123   1      
7124   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7125   2      //#line 290
7126   2          SHTP__m_state = SHTP__SHT_STATE_NONE;
7127   2      //#line 290
7128   2          __nesc_atomic_end(__nesc_atomic); }
7129   1      
7130   1        SHTP__SHT__readDone(result, SHTP__m_temperature, SHTP__m_humidity);
7131   1      }
7132          
7133          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
7134          #define RfReliableMacRetrySendP__0__Packet__setPayloadLength(arg_0x7eb210d0,arg_0x7eb21258) RfReliableMacP
             -acketP__Packet__setPayloadLength(arg_0x7eb210d0, arg_0x7eb21258)
7135          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
7136          #define RfReliableMacRetrySendP__0__AMPacket__setDestination(arg_0x7eb35c50,arg_0x7eb35de0) RfPacketP__AMP
             -acket__setDestination(arg_0x7eb35c50, arg_0x7eb35de0)
7137          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
7138          #define RfReliableMacRetrySendP__0__PacketEx__getPacketHeader(arg_0x7e6f7010) RfReliableMacPacketP__Packet
             -Ex__getPacketHeader(arg_0x7e6f7010)
7139          //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
7140          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
             -RfReliableMacRetrySendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
7141          {
7142   1        error_t result;
7143   1      
7144   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7145   2          {
7146   3            rf_rmac_header_t *header = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySen
             -dP*/RfReliableMacRetrySendP__0__PacketEx__getPacketHeader(msg);
7147   3            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
7148   3      
7149   3            if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_sending) 
7150   3              {
7151   4                {
7152   5                  unsigned char __nesc_temp = 
7153   5      //#line 85
7154   5                  FAIL;
7155   5      
7156   5                  {
7157   6      //#line 85
7158   6                    __nesc_atomic_end(__nesc_atomic); 
7159   6      //#line 85
7160   6                    return __nesc_temp;
7161   6                  }
7162   5                }
7163   4              }
7164   3            header->ack_req = addr != 0xFFFF;
7165   3      
7166   3            __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 128 

7167   3      
7168   3            header->dsn = rf_rmac_dsn;
7169   3      
7170   3            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__AMPacket__setDestination(msg, addr);
7171   3            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__Packet__setPayloadLength(msg, len);
7172   3      
7173   3      
7174   3            result = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__doSend(msg);
7175   3      
7176   3            if (result == 0) 
7177   3              {
7178   4                rf_rmac_dsn++;
7179   4                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_sending = TRUE;
7180   4                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_msg = msg;
7181   4                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_retry_times = 0;
7182   4              }
7183   3      
7184   3            {
7185   4              unsigned char __nesc_temp = 
7186   4      //#line 109
7187   4              result;
7188   4      
7189   4              {
7190   5      //#line 109
7191   5                __nesc_atomic_end(__nesc_atomic); 
7192   5      //#line 109
7193   5                return __nesc_temp;
7194   5              }
7195   4            }
7196   3          }
7197   2      //#line 112
7198   2          __nesc_atomic_end(__nesc_atomic); }
7199   1      }
7200          
7201          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
7202          #define DigRFNodeP__AMSend__send(arg_0x7eb55590,arg_0x7eb55740,arg_0x7eb558c8) RfReliableMacRetrySendP__0_
             -_AMSend__send(arg_0x7eb55590, arg_0x7eb55740, arg_0x7eb558c8)
7203          //# 36 "DigRFNodeP.nc"
7204          static  /*inline*/   void DigRFNodeP__sendMsgTask__runTask(void)
7205          {
7206   1      
7207   1        if (DigRFNodeP__AMSend__send(1, &DigRFNodeP__m_sensor_msg, 8) != 0) 
7208   1          {
7209   2            DigRFNodeP__sensorDataTask__postTask();
7210   2          }
7211   1      }
7212          
7213          //# 295 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHTP.nc"
7214          static  /*inline*/   error_t SHTP__SHT__read(void)
7215          {
7216   1      
7217   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7218   2          {
7219   3            if (SHTP__m_state != SHTP__SHT_STATE_NONE) 
7220   3              {
7221   4                if (SHTP__m_state >= SHTP__SHT_STATE_NONE && SHTP__m_state <= SHTP__SHT_STATE_HUMI) 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 129 

7222   4                  {
7223   5                    {
7224   6                      unsigned char __nesc_temp = 
7225   6      //#line 304
7226   6                      FAIL;
7227   6      
7228   6                      {
7229   7      //#line 304
7230   7                        __nesc_atomic_end(__nesc_atomic); 
7231   7      //#line 304
7232   7                        return __nesc_temp;
7233   7                      }
7234   6                    }
7235   5                  }
7236   4      //#line 307
7237   4                SHTP__m_state = SHTP__SHT_STATE_NONE;
7238   4              }
7239   3      
7240   3            SHTP__m_state = SHTP__SHT_STATE_TEMP;
7241   3          }
7242   2      //#line 311
7243   2          __nesc_atomic_end(__nesc_atomic); }
7244   1      
7245   1        SHTP__m_error = 0;
7246   1      
7247   1        SHTP__cmdMeasure();
7248   1      
7249   1        return 0;
7250   1      }
7251          
7252          //# 3 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHT.nc"
7253          #define DigRFNodeP__SHT__read(void) SHTP__SHT__read()
7254          //# 30 "DigRFNodeP.nc"
7255          static  /*inline*/   void DigRFNodeP__sensorDataTask__runTask(void)
7256          {
7257   1        DigRFNodeP__SHT__read();
7258   1      }
7259          
7260          //# 50 "/opt/tinyos-2.x/tos/types/TinyError.h"
7261          static  /*inline*/  error_t ecombine(error_t r1, error_t r2)
7262          
7263          
7264          
7265          
7266          {
7267   1        return r1 == r2 ? r1 : FAIL;
7268   1      }
7269          
7270          //# 192 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
7271          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(uint8_t num)
7272          {
7273   1        /* atomic removed: atomic calls only */
7274   1      //#line 194
7275   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__m_timers[num].isrunning = FALSE;
7276   1      }
7277          
7278          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7279          #define SHTP__WaitTimer__stop(void) VirtualizeTimerC__0__Timer__stop(1U)
7280          //# 49 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHTP.nc"
7281          static  /*inline*/   error_t SHTP__Init__init(void)
7282          {
7283   1        SHTP__WaitTimer__stop();
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 130 

7284   1        SHTP__m_state = SHTP__SHT_STATE_NONE;
7285   1        return 0;
7286   1      }
7287          
7288          //# 38 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
7289          static  /*inline*/   error_t HalFlashP__Init__init(void)
7290          {
7291   1        return 0;
7292   1      }
7293          
7294          //# 103 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
7295          static  /*inline*/   error_t RfConfigP__Init__init(void)
7296          {
7297   1        /* atomic removed: atomic calls only */
7298   1        {
7299   2          RfConfigP__m_channel = 11;
7300   2      
7301   2      
7302   2      
7303   2      
7304   2      
7305   2      
7306   2          if (RfConfigP__m_channel < 11 || RfConfigP__m_channel > 26) 
7307   2            {
7308   3              RfConfigP__m_channel = 11;
7309   3            }
7310   2      
7311   2          RfConfigP__m_tx_power = 0xF5;
7312   2          RfConfigP__m_hw_auto_ack = FALSE;
7313   2      
7314   2      
7315   2      
7316   2      
7317   2      
7318   2          RfConfigP__m_address_recognition = TRUE;
7319   2        }
7320   1      
7321   1      
7322   1        return 0;
7323   1      }
7324          
7325          //# 10 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
7326          static  /*inline*/   error_t CC2530RandomLfsrP__Init__init(void)
7327          //#line 10
7328          {
7329   1        /* atomic removed: atomic calls only */
7330   1      //#line 11
7331   1        {
7332   2          uint16_t rndSeed;
7333   2          uint8_t i;
7334   2      
7335   2      
7336   2          ADCCON1 = ((ADCCON1 & ~((1 << 3) | (1 << 2))) | (1 << 3)) | (1 << 2);
7337   2          (
7338   2      
7339   2      
7340   2      
7341   2      
7342   2          (uint8_t xdata *)0)[0x6189] = 0x40 | (2 << 2);
7343   2      
7344   2      
7345   2          RFST = 0xE3;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 131 

7346   2      
7347   2      
7348   2      
7349   2      
7350   2      
7351   2      
7352   2          while (!(((uint8_t xdata *)0)[0x6199] & 0x01)) ;
7353   2      
7354   2          rndSeed = 0;
7355   2          for (i = 0; i < 16; i++) 
7356   2            {
7357   3      
7358   3              rndSeed = (rndSeed << 1) | (((uint8_t xdata *)0)[0x61A7] & 0x01);
7359   3            }
7360   2      
7361   2      
7362   2      
7363   2      
7364   2      
7365   2      
7366   2          if (rndSeed == 0x0000 || rndSeed == 0x0380) 
7367   2            {
7368   3              rndSeed = 0xBABE;
7369   3            }
7370   2      
7371   2      
7372   2      
7373   2      
7374   2      
7375   2          RNDL = rndSeed & 0xFF;
7376   2          RNDL = rndSeed >> 8;
7377   2      
7378   2      
7379   2          RFST = 0xEF;
7380   2          (
7381   2      
7382   2          (uint8_t xdata *)0)[0x6189] = 0x40 | (0 << 2);
7383   2        }
7384   1      
7385   1        return 0;
7386   1      }
7387          
7388          //# 80 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
7389          static  /*inline*/   error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void)
7390          {
7391   1        /* atomic removed: atomic calls only */
7392   1        {
7393   2          memset(/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address, 0, sizeof /*DsnFilt
             -erCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address);
7394   2          memset(/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn, 0, sizeof /*DsnFilterCe
             -nterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn);
7395   2      
7396   2          {
7397   3            unsigned char __nesc_temp = 
7398   3      //#line 87
7399   3            0;
7400   3      
7401   3      //#line 87
7402   3            return __nesc_temp;
7403   3          }
7404   2        }
7405   1      }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 132 

7406          
7407          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
7408           /*inline*/  static  error_t RealMainP__SoftwareInit__init(void){
7409   1      //#line 51
7410   1        unsigned char result;
7411   1      //#line 51
7412   1      
7413   1      //#line 51
7414   1        result = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init();
7415   1      //#line 51
7416   1        result = ecombine(result, CC2530RandomLfsrP__Init__init());
7417   1      //#line 51
7418   1        result = ecombine(result, RfConfigP__Init__init());
7419   1      //#line 51
7420   1        result = ecombine(result, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init());
7421   1      //#line 51
7422   1        result = ecombine(result, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init());
7423   1      //#line 51
7424   1        result = ecombine(result, HalFlashP__Init__init());
7425   1      //#line 51
7426   1        result = ecombine(result, SHTP__Init__init());
7427   1      //#line 51
7428   1      
7429   1      //#line 51
7430   1        return result;
7431   1      //#line 51
7432   1      }
7433          //#line 51
7434          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
7435          #define DigRFNodeP__Packet__getPayload(arg_0x7eb21e20,arg_0x7eb20010) RfReliableMacPacketP__Packet__getPay
             -load(arg_0x7eb21e20, arg_0x7eb20010)
7436          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7437          #define DigRFNodeP__Timer1__startPeriodic(arg_0x7eb13e50) VirtualizeTimerC__0__Timer__startPeriodic(7U, ar
             -g_0x7eb13e50)
7438          //# 27 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
7439          static  /*inline*/   error_t RfHardwareTxP__StdControl__start(void)
7440          {
7441   1        /* atomic removed: atomic calls only */
7442   1        {
7443   2      
7444   2          do {
7445   3              (
7446   3      //#line 32
7447   3              (uint8_t xdata *)0)[0x61A4] &= ~(1 << 1);
7448   3            }
7449   2          while (
7450   2      //#line 32
7451   2          32 == -1);
7452   2          do {
7453   3      //#line 33
7454   3              S1CON = 0x00;
7455   3      //#line 33
7456   3              RFIRQF1 = ~(1 << 1);
7457   3            }
7458   2          while (
7459   2      //#line 33
7460   2          33 == -1);
7461   2        }
7462   1      
7463   1        return 0;
7464   1      }
7465          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 133 

7466          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
7467          #define RfHardwareP__TxControl__start(void) RfHardwareTxP__StdControl__start()
7468          //# 59 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
7469          static  /*inline*/    error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void)
7470          {
7471   1        /* atomic removed: atomic calls only */
7472   1      //#line 61
7473   1        {
7474   2          RFERRIF = 0;
7475   2          ((uint8_t xdata *)0)[0x61A5] = 1 << 2;
7476   2          RFERRIE = 1;
7477   2        }
7478   1        return 0;
7479   1      }
7480          
7481          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
7482          #define RfHardwareRxP__0__InterruptRFErr__enableRisingEdge(void) RfInterruptsP__InterruptRFErr__enableRisi
             -ngEdge()
7483          //# 36 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
7484          static  /*inline*/    error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void)
7485          {
7486   1        /* atomic removed: atomic calls only */
7487   1      //#line 38
7488   1        {
7489   2          do {
7490   3              (
7491   3      //#line 39
7492   3              (uint8_t xdata *)0)[0x61A3] |= 1 << 2;
7493   3            }
7494   2          while (
7495   2      //#line 39
7496   2          39 == -1);
7497   2        }
7498   1        return 0;
7499   1      }
7500          
7501          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
7502          #define RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge(void) RfInterruptsP__InterruptFIFOP__enableRisi
             -ngEdge()
7503          //# 33 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
7504          static  /*inline*/   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void)
7505          {
7506   1        {
7507   2      //#line 35
7508   2          /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHardwar
             -eRxP__0__rxbuf_tail = 0;
7509   2        }
7510   1      //#line 35
7511   1        ;
7512   1        {
7513   2      //#line 36
7514   2          do {
7515   3      //#line 36
7516   3              RFST = 0xED;
7517   3      //#line 36
7518   3              RFST = 0xED;
7519   3            }
7520   2          while (
7521   2      //#line 36
7522   2          36 == -1);
7523   2      //#line 36
7524   2          do {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 134 

7525   3      //#line 36
7526   3              S1CON = 0x00;
7527   3      //#line 36
7528   3              RFIRQF0 = ~(1 << 2);
7529   3            }
7530   2          while (
7531   2      //#line 36
7532   2          36 == -1);
7533   2        }
7534   1      //#line 36
7535   1        ;
7536   1      
7537   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge();
7538   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__enableRisingEdge();
7539   1      
7540   1        return 0;
7541   1      }
7542          
7543          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
7544          #define RfHardwareP__RxControl__start(void) RfHardwareRxP__0__StdControl__start()
7545          //# 57 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
7546          static  /*inline*/  void RfConfigP__writeTxPower(void)
7547          {
7548   1        /* atomic removed: atomic calls only */
7549   1        {
7550   2          do {
7551   3              (
7552   3      //#line 61
7553   3              (uint8_t xdata *)0)[0x6190] = RfConfigP__m_tx_power;
7554   3            }
7555   2          while (
7556   2      //#line 61
7557   2          61 == -1);
7558   2        }
7559   1      }
7560          
7561          //#line 52
7562          static  /*inline*/  void RfConfigP__writeFIFOPThrehold(void)
7563          {
7564   1        do {
7565   2            (
7566   2      //#line 54
7567   2            (uint8_t xdata *)0)[0x6194] = 128 - 1;
7568   2          }
7569   1        while (
7570   1      //#line 54
7571   1        54 == -1);
7572   1      }
7573          
7574          //#line 34
7575          static  /*inline*/  void RfConfigP__writeFilter(void)
7576          {
7577   1        /* atomic removed: atomic calls only */
7578   1        {
7579   2      
7580   2          if (RfConfigP__m_hw_auto_ack) {
7581   3            ((uint8_t xdata *)0)[0x6189] = 0x40 | (1 << 5);
7582   3            }
7583   2          else {
7584   3            (
7585   3      //#line 42
7586   3            (uint8_t xdata *)0)[0x6189] = 0x40;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 135 

7587   3            }
7588   2      
7589   2          if (RfConfigP__m_address_recognition) {
7590   3            do {
7591   4                (
7592   4      //#line 46
7593   4                (uint8_t xdata *)0)[0x6180] |= 1 << 0;
7594   4              }
7595   3            while (
7596   3      //#line 46
7597   3            46 == -1);
7598   3            }
7599   2          else {
7600   3      //#line 48
7601   3            do {
7602   4                (
7603   4      //#line 48
7604   4                (uint8_t xdata *)0)[0x6180] &= ~(1 << 0);
7605   4              }
7606   3            while (
7607   3      //#line 48
7608   3            48 == -1);
7609   3            }
7610   2        }
7611   1      }
7612          
7613          //#line 26
7614          static  /*inline*/  void RfConfigP__writeChannel(void)
7615          {
7616   1        /* atomic removed: atomic calls only */
7617   1        {
7618   2          do {
7619   3              (
7620   3      //#line 30
7621   3              (uint8_t xdata *)0)[0x618F] = 0x0B + 5 * (RfConfigP__m_channel - 11);
7622   3            }
7623   2          while (
7624   2      //#line 30
7625   2          30 == -1);
7626   2        }
7627   1      }
7628          
7629          //#line 65
7630          static  /*inline*/  void RfConfigP__RfConfigWrite(void)
7631          {
7632   1        /* atomic removed: atomic calls only */
7633   1        {
7634   2          RfConfigP__writeChannel();
7635   2          RfConfigP__writeFilter();
7636   2          RfConfigP__writeFIFOPThrehold();
7637   2          RfConfigP__writeTxPower();
7638   2        }
7639   1      }
7640          
7641          //#line 135
7642          static  /*inline*/   void RfConfigP__RfConfig__flush(void)
7643          {
7644   1        RfConfigP__RfConfigWrite();
7645   1      }
7646          
7647          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
7648          #define RfHardwareP__RfConfig__flush(void) RfConfigP__RfConfig__flush()
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 136 

7649          //# 85 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7650          static  /*inline*/   void RfPowerP__RfPower__rxOn(void)
7651          {
7652   1        /* atomic removed: atomic calls only */
7653   1      //#line 87
7654   1        do {
7655   2      //#line 87
7656   2            RFST = 0xED;
7657   2      //#line 87
7658   2            RFST = 0xED;
7659   2          }
7660   1        while (
7661   1      //#line 87
7662   1        87 == -1);
7663   1        /* atomic removed: atomic calls only */
7664   1        do {
7665   2      //#line 89
7666   2            RFST = 0xE3;
7667   2          }
7668   1        while (
7669   1      //#line 89
7670   1        89 == -1);
7671   1      }
7672          
7673          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7674          #define RfHardwareP__RfPower__rxOn(void) RfPowerP__RfPower__rxOn()
7675          //# 103 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7676          static  /*inline*/   void RfPowerP__RfPower__oscOn(void)
7677          {
7678   1      }
7679          
7680          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7681          #define RfHardwareP__RfPower__oscOn(void) RfPowerP__RfPower__oscOn()
7682          //# 16 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7683          static  /*inline*/   void RfPowerP__RfPower__radioOn(void)
7684          {
7685   1        (
7686   1      //#line 31
7687   1        (uint8_t xdata *)0)[0x6196] = 0xF8;
7688   1        (
7689   1      
7690   1      
7691   1      
7692   1      
7693   1      
7694   1      
7695   1      
7696   1      
7697   1      
7698   1        (uint8_t xdata *)0)[0x61AE] = 0x00;
7699   1        (
7700   1      
7701   1        (uint8_t xdata *)0)[0x61B2] = 0x15;
7702   1        (
7703   1      //#line 58
7704   1        (uint8_t xdata *)0)[0x61FA] = 0x09;
7705   1        (
7706   1      
7707   1        (uint8_t xdata *)0)[0x61E5] = 0xFF;
7708   1      
7709   1      
7710   1        IEN2 |= 1 << 0;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 137 

7711   1      
7712   1      
7713   1        RFERRIE = 1;
7714   1      
7715   1      
7716   1      
7717   1      
7718   1      
7719   1      
7720   1      
7721   1        do {
7722   2            (
7723   2      //#line 75
7724   2            (uint8_t xdata *)0)[0x6164] = 0;
7725   2            (
7726   2      //#line 75
7727   2            (uint8_t xdata *)0)[0x6165] = 0;
7728   2            (
7729   2      //#line 75
7730   2            (uint8_t xdata *)0)[0x6166] = 0;
7731   2          }
7732   1        while (
7733   1      //#line 75
7734   1        75 == -1);
7735   1        do {
7736   2            (
7737   2      //#line 76
7738   2            (uint8_t xdata *)0)[0x6167] = 0;
7739   2            (
7740   2      //#line 76
7741   2            (uint8_t xdata *)0)[0x6168] = 0;
7742   2            (
7743   2      //#line 76
7744   2            (uint8_t xdata *)0)[0x6169] = 0;
7745   2          }
7746   1        while (
7747   1      //#line 76
7748   1        76 == -1);
7749   1      }
7750          
7751          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7752          #define RfHardwareP__RfPower__radioOn(void) RfPowerP__RfPower__radioOn()
7753          //# 11 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7754          static  /*inline*/   void RfPowerP__RfPower__reset(void)
7755          {
7756   1      }
7757          
7758          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7759          #define RfHardwareP__RfPower__reset(void) RfPowerP__RfPower__reset()
7760          //# 19 "/opt/atos/tos/chips/rf2530/hardware/RfHardwareP.nc"
7761          static  /*inline*/   error_t RfHardwareP__AtosControl__start(void)
7762          {
7763   1      
7764   1        RfHardwareP__RfPower__reset();
7765   1        RfHardwareP__RfPower__radioOn();
7766   1        RfHardwareP__RfPower__oscOn();
7767   1        RfHardwareP__RfPower__rxOn();
7768   1      
7769   1      
7770   1        RfHardwareP__RfConfig__flush();
7771   1      
7772   1      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 138 

7773   1      
7774   1      
7775   1      
7776   1      
7777   1      
7778   1      
7779   1        RfHardwareP__RxControl__start();
7780   1        RfHardwareP__TxControl__start();
7781   1      
7782   1        return 0;
7783   1      }
7784          
7785          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7786          #define AtosMacP__HardwareAtosControl__start(void) RfHardwareP__AtosControl__start()
7787          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
7788          #define RfMacBaseCsmaP__FlashIEEE__GetIEEE(arg_0x7ea02f08) FlashIEEEP__FlashIEEE__GetIEEE(arg_0x7ea02f08)
7789          //# 159 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
7790          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void)
7791          {
7792   1        /* atomic removed: atomic calls only */
7793   1      //#line 161
7794   1        T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
7795   1      }
7796          
7797          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
7798          #define TransformAlarmC__1__AlarmFrom__stop(void) HplCC2530Timer1P__0__Alarm1__stop()
7799          //# 91 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
7800          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void)
7801          {
7802   1        /* atomic removed: atomic calls only */
7803   1      //#line 93
7804   1        /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__stop();
7805   1      }
7806          
7807          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
7808          #define RfMacBaseCsmaP__BackoffTimer__stop(void) TransformAlarmC__1__Alarm__stop()
7809          //# 226 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
7810          static  /*inline*/   error_t RfMacBaseCsmaP__AtosControl__start(void)
7811          {
7812   1        /* atomic removed: atomic calls only */
7813   1        {
7814   2          RfMacBaseCsmaP__BackoffTimer__stop();
7815   2          RfMacBaseCsmaP__m_cancel = FALSE;
7816   2          RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
7817   2          RfMacBaseCsmaP__m_congestion_count = 0;
7818   2      
7819   2          RfMacBaseCsmaP__m_started = TRUE;
7820   2      
7821   2          RfMacBaseCsmaP__m_congestion_delay = 0;
7822   2      
7823   2          RfMacBaseCsmaP__FlashIEEE__GetIEEE(RfMacBaseCsmaP__m_test_ieee);
7824   2      
7825   2          {
7826   3            unsigned char __nesc_temp = 
7827   3      //#line 241
7828   3            0;
7829   3      
7830   3      //#line 241
7831   3            return __nesc_temp;
7832   3          }
7833   2        }
7834   1      }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 139 

7835          
7836          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
7837          #define RfMacBaseSendP__0__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
7838          //# 96 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
7839          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t idx)
7840          {
7841   1        /* atomic removed: atomic calls only */
7842   1        {
7843   2          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t t = /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__element(idx);
7844   2          uint8_t end = (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail + 4 - 1) % 4;
7845   2          uint8_t next_idx;
7846   2      
7847   2          if (!/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty()) 
7848   2            {
7849   3              idx += /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head;
7850   3              idx %= 4;
7851   3      
7852   3              while (idx != end) 
7853   3                {
7854   4                  next_idx = (idx + 1) % 4;
7855   4                  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[idx] = /*AMResourceCenterC.RfM
             -acBaseSendC.QueueExC*/QueueExC__0__queue[next_idx];
7856   4                  idx = next_idx;
7857   4                }
7858   3      
7859   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail = end;
7860   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size--;
7861   3            }
7862   2      
7863   2          {
7864   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
7865   3      //#line 120
7866   3            t;
7867   3      
7868   3      //#line 120
7869   3            return __nesc_temp;
7870   3          }
7871   2        }
7872   1      }
7873          
7874          //#line 124
7875          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void)
7876          {
7877   1        /* atomic removed: atomic calls only */
7878   1        {
7879   2          while (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size() > 0) 
7880   2            {
7881   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(0);
7882   3            }
7883   2        }
7884   1      }
7885          
7886          //# 67 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
7887          #define RfMacBaseSendP__0__SendQueue__clear(void) QueueExC__0__QueueEx__clear()
7888          //# 186 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
7889          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosCon
             -trol__start(void)
7890          {
7891   1        /* atomic removed: atomic calls only */
7892   1        {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 140 

7893   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__clear();
7894   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
7895   2      
7896   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_started = TRUE;
7897   2      
7898   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn = /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__Random__rand16();
7899   2      
7900   2          {
7901   3            unsigned char __nesc_temp = 
7902   3      //#line 197
7903   3            0;
7904   3      
7905   3      //#line 197
7906   3            return __nesc_temp;
7907   3          }
7908   2        }
7909   1      }
7910          
7911          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7912          #define AMResourceCenterP__SubAtosControl__start(void) RfMacBaseSendP__0__AtosControl__start()
7913          //# 83 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
7914          static  /*inline*/   error_t AMResourceCenterP__AtosControl__start(void)
7915          {
7916   1        /* atomic removed: atomic calls only */
7917   1        {
7918   2          AMResourceCenterP__SubAtosControl__start();
7919   2      
7920   2          AMResourceCenterP__m_started = TRUE;
7921   2      
7922   2          {
7923   3            unsigned char __nesc_temp = 
7924   3      //#line 91
7925   3            0;
7926   3      
7927   3      //#line 91
7928   3            return __nesc_temp;
7929   3          }
7930   2        }
7931   1      }
7932          
7933          //# 75 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
7934          static  /*inline*/   error_t RfActiveMessageP__AtosControl__start(void)
7935          {
7936   1        /* atomic removed: atomic calls only */
7937   1        {
7938   2          RfActiveMessageP__m_started = TRUE;
7939   2      
7940   2          {
7941   3            unsigned char __nesc_temp = 
7942   3      //#line 81
7943   3            0;
7944   3      
7945   3      //#line 81
7946   3            return __nesc_temp;
7947   3          }
7948   2        }
7949   1      }
7950          
7951          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7952          #define RfReliableMacSendP__0__AckTimer__stop(void) VirtualizeTimerC__0__Timer__stop(2U)
7953          #define RfReliableMacSendP__0__TimeoutTimer__stop(void) VirtualizeTimerC__0__Timer__stop(3U)
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 141 

7954          //# 204 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
7955          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReli
             -ableMacSendP*/RfReliableMacSendP__0__AtosControl__start(void)
7956          {
7957   1        /* atomic removed: atomic calls only */
7958   1        {
7959   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__m_sending = FALSE;
7960   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__m_result = FAIL;
7961   2      
7962   2      
7963   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__TimeoutTimer__stop();
7964   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__AckTimer__stop();
7965   2      
7966   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__m_started = TRUE;
7967   2      
7968   2          {
7969   3            unsigned char __nesc_temp = 
7970   3      //#line 217
7971   3            0;
7972   3      
7973   3      //#line 217
7974   3            return __nesc_temp;
7975   3          }
7976   2        }
7977   1      }
7978          
7979          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7980          #define RfReliableMacRetrySendP__0__SubAtosControl__start(void) RfReliableMacSendP__0__AtosControl__start(
             -)
7981          //# 151 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
7982          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
             -RfReliableMacRetrySendP__0__AtosControl__start(void)
7983          {
7984   1        /* atomic removed: atomic calls only */
7985   1        {
7986   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -0__m_sending = FALSE;
7987   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -0__m_retry_times = 0;
7988   2      
7989   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -0__SubAtosControl__start();
7990   2      
7991   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -0__m_started = TRUE;
7992   2      
7993   2          {
7994   3            unsigned char __nesc_temp = 
7995   3      //#line 162
7996   3            0;
7997   3      
7998   3      //#line 162
7999   3            return __nesc_temp;
8000   3          }
8001   2        }
8002   1      }
8003          
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 142 

8004          //# 101 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
8005          static  /*inline*/   error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*
             -/RfReliableMacReceiveP__0__AtosControl__start(void)
8006          {
8007   1        /* atomic removed: atomic calls only */
8008   1        {
8009   2          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0
             -__m_started = TRUE;
8010   2      
8011   2          memset(&/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__m_ack_msg, 0, sizeof /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__0__m_ack_msg);
8012   2      
8013   2          {
8014   3            unsigned char __nesc_temp = 
8015   3      //#line 109
8016   3            0;
8017   3      
8018   3      //#line 109
8019   3            return __nesc_temp;
8020   3          }
8021   2        }
8022   1      }
8023          
8024          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
8025          #define RfReliableMacSendP__1__AckTimer__stop(void) VirtualizeTimerC__0__Timer__stop(4U)
8026          #define RfReliableMacSendP__1__TimeoutTimer__stop(void) VirtualizeTimerC__0__Timer__stop(5U)
8027          //# 204 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
8028          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AtosControl__start(void)
8029          {
8030   1        /* atomic removed: atomic calls only */
8031   1        {
8032   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_sending = FALSE;
8033   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_result = FAIL;
8034   2      
8035   2      
8036   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__TimeoutTimer__stop();
8037   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__AckTimer__stop();
8038   2      
8039   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_started = TRUE;
8040   2      
8041   2          {
8042   3            unsigned char __nesc_temp = 
8043   3      //#line 217
8044   3            0;
8045   3      
8046   3      //#line 217
8047   3            return __nesc_temp;
8048   3          }
8049   2        }
8050   1      }
8051          
8052          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
8053          #define RfReliableMacRetrySendP__1__SubAtosControl__start(void) RfReliableMacSendP__1__AtosControl__start(
             -)
8054          //# 151 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 143 

8055          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*
             -/RfReliableMacRetrySendP__1__AtosControl__start(void)
8056          {
8057   1        /* atomic removed: atomic calls only */
8058   1        {
8059   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_sending = FALSE;
8060   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_retry_times = 0;
8061   2      
8062   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__SubAtosControl__start();
8063   2      
8064   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_started = TRUE;
8065   2      
8066   2          {
8067   3            unsigned char __nesc_temp = 
8068   3      //#line 162
8069   3            0;
8070   3      
8071   3      //#line 162
8072   3            return __nesc_temp;
8073   3          }
8074   2        }
8075   1      }
8076          
8077          //# 101 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
8078          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
             -*/RfReliableMacReceiveP__1__AtosControl__start(void)
8079          {
8080   1        /* atomic removed: atomic calls only */
8081   1        {
8082   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__
             -1__m_started = TRUE;
8083   2      
8084   2          memset(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__1__m_ack_msg, 0, sizeof /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__m_ack_msg);
8085   2      
8086   2          {
8087   3            unsigned char __nesc_temp = 
8088   3      //#line 109
8089   3            0;
8090   3      
8091   3      //#line 109
8092   3            return __nesc_temp;
8093   3          }
8094   2        }
8095   1      }
8096          
8097          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
8098           /*inline*/  static  error_t AtosMacP__SubAtosControl__start(void){
8099   1      //#line 4
8100   1        unsigned char result;
8101   1      //#line 4
8102   1      
8103   1      //#line 4
8104   1        result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__AtosControl__start();
8105   1      //#line 4
8106   1        result = ecombine(result, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 144 

             -RfReliableMacRetrySendP__1__AtosControl__start());
8107   1      //#line 4
8108   1        result = ecombine(result, /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/
             -RfReliableMacReceiveP__0__AtosControl__start());
8109   1      //#line 4
8110   1        result = ecombine(result, /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/R
             -fReliableMacRetrySendP__0__AtosControl__start());
8111   1      //#line 4
8112   1        result = ecombine(result, RfActiveMessageP__AtosControl__start());
8113   1      //#line 4
8114   1        result = ecombine(result, AMResourceCenterP__AtosControl__start());
8115   1      //#line 4
8116   1        result = ecombine(result, RfMacBaseCsmaP__AtosControl__start());
8117   1      //#line 4
8118   1      
8119   1      //#line 4
8120   1        return result;
8121   1      //#line 4
8122   1      }
8123          //#line 4
8124          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
8125          #define AtosMacP__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
8126          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AtosMacP.nc"
8127          static  /*inline*/   error_t AtosMacP__AtosControl__start(void)
8128          {
8129   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8130   2          {
8131   3            rf_rmac_dsn = AtosMacP__Random__rand16();
8132   3      
8133   3            AtosMacP__SubAtosControl__start();
8134   3            AtosMacP__HardwareAtosControl__start();
8135   3      
8136   3            AtosMacP__m_started = TRUE;
8137   3      
8138   3            {
8139   4              unsigned char __nesc_temp = 
8140   4      //#line 28
8141   4              0;
8142   4      
8143   4              {
8144   5      //#line 28
8145   5                __nesc_atomic_end(__nesc_atomic); 
8146   5      //#line 28
8147   5                return __nesc_temp;
8148   5              }
8149   4            }
8150   3          }
8151   2      //#line 31
8152   2          __nesc_atomic_end(__nesc_atomic); }
8153   1      }
8154          
8155          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
8156          #define DigRFNodeP__AtosControl__start(void) AtosMacP__AtosControl__start()
8157          //# 52 "DigRFNodeP.nc"
8158          static  /*inline*/   void DigRFNodeP__Boot__booted(void)
8159          {
8160   1      
8161   1        {
8162   2      //#line 55
8163   2          {
8164   3      //#line 55
8165   3            if (9 >= uart_debug_level) {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 145 

8166   4      //#line 55
8167   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8168   5      //#line 55
8169   5                  {
8170   6      //#line 55
8171   6                    sprintf(uart_debug_buf, "===========boot============\n");
8172   6                  }
8173   5      //#line 56
8174   5                  __nesc_atomic_end(__nesc_atomic); }
8175   4      //#line 55
8176   4                ATOS_DEBUG_UART_PRINT();
8177   4              }
8178   3          }
8179   2        }
8180   1      //#line 55
8181   1        ;
8182   1        {
8183   2      //#line 56
8184   2          P1_2 = ~P1_2;
8185   2        }
8186   1      //#line 56
8187   1        ;
8188   1        DigRFNodeP__AtosControl__start();
8189   1      
8190   1        DigRFNodeP__Timer1__startPeriodic(2000);
8191   1        DigRFNodeP__p_sensor_payload = DigRFNodeP__Packet__getPayload(&DigRFNodeP__m_sensor_msg, (void *)0);
8192   1      }
8193          
8194          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
8195          #define RealMainP__Boot__booted(void) DigRFNodeP__Boot__booted()
8196          //# 81 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8197          static  /*inline*/    void McuSleepP__McuSleepControl__default__afterWakeup(void)
8198          {
8199   1      }
8200          
8201          //# 10 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
8202          #define McuSleepP__McuSleepControl__afterWakeup(void) McuSleepP__McuSleepControl__default__afterWakeup()
8203          //# 84 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8204          static  /*inline*/    error_t McuSleepP__ModuleReset__default__reset(uint8_t reset_level)
8205          {
8206   1      }
8207          
8208          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
8209          #define McuSleepP__ModuleReset__reset(arg_0x7ebe5310) McuSleepP__ModuleReset__default__reset(arg_0x7ebe531
             -0)
8210          //# 65 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
8211          static   /*inline*/   void __nesc_enable_interrupt(void)
8212          //#line 65
8213          {
8214   1      //#line 65
8215   1        EA = 1;
8216   1      }
8217          
8218          //# 78 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8219          static  /*inline*/    void McuSleepP__McuSleepControl__default__beforeSleep(void)
8220          {
8221   1      }
8222          
8223          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
8224          #define McuSleepP__McuSleepControl__beforeSleep(void) McuSleepP__McuSleepControl__default__beforeSleep()
8225          //# 36 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8226          static  /*inline*/    void McuSleepP__McuSleep__sleep(void)
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 146 

8227          {
8228   1      
8229   1      
8230   1        if (McuSleepP__m_need_sleep) 
8231   1          {
8232   2      
8233   2            {
8234   3      //#line 43
8235   3              {
8236   4      //#line 43
8237   4                if (uart_debug_level >= uart_debug_level) {
8238   5      //#line 43
8239   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8240   6      //#line 43
8241   6                      {
8242   7      //#line 43
8243   7                        sprintf(uart_debug_buf, "CPU SLEEP\n");
8244   7                      }
8245   6      //#line 44
8246   6                      __nesc_atomic_end(__nesc_atomic); }
8247   5      //#line 43
8248   5                    ATOS_DEBUG_UART_PRINT();
8249   5                  }
8250   4              }
8251   3            }
8252   2      //#line 43
8253   2            ;
8254   2      
8255   2            do {
8256   3      //#line 45
8257   3                SLEEPCMD = (SLEEPCMD & ~CC2530_SLEEP_MODE_MASK) | CC2530_SLEEP_POWERMODE_2;
8258   3              }
8259   2            while (
8260   2      //#line 45
8261   2            0);
8262   2      
8263   2            McuSleepP__McuSleepControl__beforeSleep();
8264   2      
8265   2            ;
8266   2            __nesc_enable_interrupt();
8267   2      
8268   2            {
8269   3      //#line 52
8270   3              P1_3 = 1;
8271   3            }
8272   2      //#line 52
8273   2            ;
8274   2      
8275   2            McuSleepP__m_need_sleep = FALSE;
8276   2            {
8277   3      //#line 55
8278   3              PCON = 0x01;
8279   3            }
8280   2      //#line 55
8281   2            ;
8282   2      
8283   2      
8284   2      
8285   2      
8286   2      
8287   2      
8288   2            {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 147 

8289   3      //#line 62
8290   3              {
8291   4      //#line 62
8292   4                if (uart_debug_level >= uart_debug_level) {
8293   5      //#line 62
8294   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8295   6      //#line 62
8296   6                      {
8297   7      //#line 62
8298   7                        sprintf(uart_debug_buf, "CPU WAKE UP\n");
8299   7                      }
8300   6      //#line 63
8301   6                      __nesc_atomic_end(__nesc_atomic); }
8302   5      //#line 62
8303   5                    ATOS_DEBUG_UART_PRINT();
8304   5                  }
8305   4              }
8306   3            }
8307   2      //#line 62
8308   2            ;
8309   2      
8310   2            {
8311   3      //#line 64
8312   3              P1_3 = 0;
8313   3            }
8314   2      //#line 64
8315   2            ;
8316   2      
8317   2            McuSleepP__ModuleReset__reset(0);
8318   2            ;
8319   2      
8320   2            McuSleepP__McuSleepControl__afterWakeup();
8321   2          }
8322   1        else 
8323   1          {
8324   2          }
8325   1      }
8326          
8327          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
8328          #define SchedulerBasicP__McuSleep__sleep(void) McuSleepP__McuSleep__sleep()
8329          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
8330          #define SchedulerBasicP__TopTaskMgr__hasTasks(void) TopTaskMgrP__TopTaskMgr__hasTasks()
8331          //# 47 "/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc"
8332          static  /*inline*/    void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow
             -(void)
8333          {
8334   1      }
8335          
8336          //# 170 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8337          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow
             -(void)
8338          {
8339   1      }
8340          
8341          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8342           /*inline*/  static   void /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow(void){
8343   1      //#line 71
8344   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow();
8345   1      //#line 71
8346   1        /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow();
8347   1      //#line 71
8348   1      }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 148 

8349          //#line 71
8350          //# 125 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
8351          static  /*inline*/    void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void)
8352          {
8353   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8354   2          {
8355   3            /*CounterMilli32C.Transform*/TransformCounterC__0__m_upper++;
8356   3      
8357   3            if ((/*CounterMilli32C.Transform*/TransformCounterC__0__m_upper & /*CounterMilli32C.Transform*/Trans
             -formCounterC__0__OVERFLOW_MASK) == 0) 
8358   3              {
8359   4                /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow();
8360   4              }
8361   3          }
8362   2      //#line 135
8363   2          __nesc_atomic_end(__nesc_atomic); }
8364   1      }
8365          
8366          //# 170 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8367          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow
             -(void)
8368          {
8369   1      }
8370          
8371          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8372          #define TransformCounterC__1__Counter__overflow(void) TransformAlarmC__1__Counter__overflow()
8373          //# 125 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
8374          static  /*inline*/    void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflo
             -w(void)
8375          {
8376   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8377   2          {
8378   3            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__m_upper++;
8379   3      
8380   3            if ((/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__m_upper & /*Counter32khz32C.Transfor
             -mCounterC*/TransformCounterC__1__OVERFLOW_MASK) == 0) 
8381   3              {
8382   4                /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__overflow();
8383   4              }
8384   3          }
8385   2      //#line 135
8386   2          __nesc_atomic_end(__nesc_atomic); }
8387   1      }
8388          
8389          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8390           /*inline*/  static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow(voi
             -d){
8391   1      //#line 71
8392   1        /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflow();
8393   1      //#line 71
8394   1        /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow();
8395   1      //#line 71
8396   1      }
8397          //#line 71
8398          //# 534 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
8399          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fir
             -ed(void)
8400          //#line 534
8401          {
8402   1      }
8403          
8404          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 149 

8405          #define HplCC2530Timer1P__0__Alarm2__fired(void) HplCC2530Timer1P__0__Alarm2__default__fired()
8406          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8407          #define RfMacBaseCsmaP__doGo__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseCsmaP__doGo)
8408          //# 83 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
8409          static  /*inline*/  uint32_t RfMacBaseCsmaP__congestionBackoffTimer(void)
8410          {
8411   1        RfMacBaseCsmaP__m_this_random = RfMacBaseCsmaP__Random__rand16() % RfMacBaseCsmaP__m_congestion_delay;
8412   1        if (RfMacBaseCsmaP__m_this_random == 0) {
8413   2      //#line 86
8414   2          RfMacBaseCsmaP__m_this_random = 1;
8415   2          }
8416   1      //#line 87
8417   1        RfMacBaseCsmaP__m_this_delay += RfMacBaseCsmaP__m_this_random;
8418   1        return (uint32_t )RfMacBaseCsmaP__m_this_random * RfMacBaseCsmaP__RF_BACKOFF_PERIOD;
8419   1      }
8420          
8421          static  /*inline*/  void RfMacBaseCsmaP__congestion(void)
8422          {
8423   1      
8424   1      
8425   1        if (RfMacBaseCsmaP__m_congestion_count++ < RfMacBaseCsmaP__RF_CONGESTION_MAX) 
8426   1          {
8427   2            RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__congestionBackoffTimer());
8428   2          }
8429   1        else 
8430   1          {
8431   2            RfMacBaseCsmaP__signalDone(ERR_MAC_CONGESTION_FAIL);
8432   2          }
8433   1      }
8434          
8435          //#line 135
8436          static  /*inline*/    void RfMacBaseCsmaP__BackoffTimer__fired(void)
8437          {
8438   1        if (!(((uint8_t xdata *)0)[0x6193] & (1 << 4))) 
8439   1          {
8440   2            RfMacBaseCsmaP__congestion();
8441   2            return;
8442   2          }
8443   1      
8444   1      
8445   1      
8446   1      
8447   1        if (RfMacBaseCsmaP__m_state == RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA) 
8448   1          {
8449   2            RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND;
8450   2      
8451   2      
8452   2            RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__RF_TIME_ACK_TURNAROUND);
8453   2          }
8454   1        else {
8455   2      //#line 153
8456   2          if (RfMacBaseCsmaP__m_state == RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND) 
8457   2            {
8458   3              RfMacBaseCsmaP__doGo__postTask();
8459   3            }
8460   2          else 
8461   2            {
8462   3            }
8463   2          }
8464   1      }
8465          
8466          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 150 

8467          #define TransformAlarmC__1__Alarm__fired(void) RfMacBaseCsmaP__BackoffTimer__fired()
8468          //# 155 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8469          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(
             -void)
8470          {
8471   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8472   2          {
8473   3            if (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt == 0) 
8474   3              {
8475   4                /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__fired();
8476   4              }
8477   3            else 
8478   3              {
8479   4                /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm();
8480   4              }
8481   3          }
8482   2      //#line 167
8483   2          __nesc_atomic_end(__nesc_atomic); }
8484   1      }
8485          
8486          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8487          #define HplCC2530Timer1P__0__Alarm1__fired(void) TransformAlarmC__1__AlarmFrom__fired()
8488          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8489          #define AlarmToTimerC__0__firedTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AlarmToTimerC__0_
             -_firedTask)
8490          //# 93 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
8491          static  /*inline*/    void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void)
8492          {
8493   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__postTask();
8494   1      }
8495          
8496          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8497          #define TransformAlarmC__0__Alarm__fired(void) AlarmToTimerC__0__Alarm__fired()
8498          //# 155 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8499          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(
             -void)
8500          {
8501   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8502   2          {
8503   3            if (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt == 0) 
8504   3              {
8505   4                /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired();
8506   4              }
8507   3            else 
8508   3              {
8509   4                /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm();
8510   4              }
8511   3          }
8512   2      //#line 167
8513   2          __nesc_atomic_end(__nesc_atomic); }
8514   1      }
8515          
8516          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8517          #define HplCC2530Timer1P__0__Alarm0__fired(void) TransformAlarmC__0__AlarmFrom__fired()
8518          //# 403 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
8519          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handle
             -r(void)
8520          {
8521   1        uint8_t flag;
8522   1      
8523   1        do {
8524   2      //#line 407
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 151 

8525   2            m_critical_state = EA;
8526   2      //#line 407
8527   2            EA = 0;
8528   2          }
8529   1        while (
8530   1      //#line 407
8531   1        407 == -1);
8532   1      
8533   1        {
8534   2          flag = /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag;
8535   2          /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag = 0x00;
8536   2        }
8537   1      
8538   1        do {
8539   2      //#line 414
8540   2            EA = m_critical_state;
8541   2          }
8542   1        while (
8543   1      //#line 414
8544   1        414 == -1);
8545   1      
8546   1      
8547   1        if (flag & (1 << 0)) 
8548   1          {
8549   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__fired();
8550   2          }
8551   1      
8552   1        if (flag & (1 << 1)) 
8553   1          {
8554   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__fired();
8555   2          }
8556   1      
8557   1        if (flag & (1 << 2)) 
8558   1          {
8559   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__fired();
8560   2          }
8561   1      
8562   1        if (flag & (1 << 3)) 
8563   1          {
8564   2          }
8565   1      
8566   1      
8567   1        if (flag & (1 << 4)) 
8568   1          {
8569   2          }
8570   1      
8571   1      
8572   1        if (flag & (1 << 5)) 
8573   1          {
8574   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow();
8575   2          }
8576   1      
8577   1      
8578   1        if (/*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag) 
8579   1          {
8580   2            {
8581   3      //#line 450
8582   3              { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8583   4      //#line 450
8584   4                {
8585   5      //#line 450
8586   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 152 

8587   5                }
8588   4      //#line 451
8589   4                __nesc_atomic_end(__nesc_atomic); }
8590   3            }
8591   2      //#line 450
8592   2            ;
8593   2          }
8594   1      }
8595          
8596          //# 257 "/usr/lib/ncc/nesc_nx.h"
8597          static   /*inline*/   int8_t __nesc_ntoh_int8(const void *source)
8598          //#line 257
8599          {
8600   1      //#line 257
8601   1        return __nesc_ntoh_uint8(source);
8602   1      }
8603          
8604          //# 67 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
8605          static  /*inline*/    message_t *RfActiveMessageP__Snoop__default__receive(uint8_t id, message_t *msg, voi
             -d *payload, uint8_t len)
8606          {
8607   1      }
8608          
8609          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
8610          #define RfActiveMessageP__Snoop__receive(arg_0x7e3c3bb0,arg_0x7eb45740,arg_0x7eb458e0,arg_0x7eb45a68) RfAc
             -tiveMessageP__Snoop__default__receive(arg_0x7e3c3bb0, arg_0x7eb45740, arg_0x7eb458e0, arg_0x7eb45a68)
8611          //# 54 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
8612          static  /*inline*/   am_addr_t RfPacketP__AMPacket__source(message_t *amsg)
8613          {
8614   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->src);
8615   1      }
8616          
8617          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8618          #define DigRFNodeP__AMPacket__source(arg_0x7eb35688) RfPacketP__AMPacket__source(arg_0x7eb35688)
8619          //# 90 "DigRFNodeP.nc"
8620          static  /*inline*/   message_t *DigRFNodeP__Receive__receive(message_t *msg, void *payload, uint8_t len)
8621          {
8622   1      
8623   1      
8624   1      
8625   1      
8626   1      
8627   1      
8628   1      
8629   1      
8630   1      
8631   1        DigRFNodeP__dest_address = DigRFNodeP__AMPacket__source(msg);
8632   1        DigRFNodeP__sensorDataTask__postTask();
8633   1      }
8634          
8635          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
8636          #define RfReliableMacReceiveP__0__Receive__receive(arg_0x7eb45740,arg_0x7eb458e0,arg_0x7eb45a68) DigRFNode
             -P__Receive__receive(arg_0x7eb45740, arg_0x7eb458e0, arg_0x7eb45a68)
8637          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8638          #define RfReliableMacReceiveP__0__AMPacket__source(arg_0x7eb35688) RfPacketP__AMPacket__source(arg_0x7eb35
             -688)
8639          //# 92 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
8640          static  /*inline*/   bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(uint
             -8_t field_id, uint16_t addr, uint8_t dsn)
8641          {
8642   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8643   2          {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 153 

8644   3            {
8645   4              unsigned char __nesc_temp = 
8646   4      //#line 96
8647   4              /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(addr, field_id, dsn);
8648   4      
8649   4              {
8650   5      //#line 96
8651   5                __nesc_atomic_end(__nesc_atomic); 
8652   5      //#line 96
8653   5                return __nesc_temp;
8654   5              }
8655   4            }
8656   3          }
8657   2      //#line 99
8658   2          __nesc_atomic_end(__nesc_atomic); }
8659   1      }
8660          
8661          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
8662          #define RfReliableMacReceiveP__0__DsnFilter__filter(arg_0x7e3f3b78,arg_0x7e3f3d00) DsnFilterCenterP__0__Ds
             -nFilter__filter(0U, arg_0x7e3f3b78, arg_0x7e3f3d00)
8663          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8664          #define RfReliableMacReceiveP__0__sendAckTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacReceiveP__0__sendAckTask)
8665          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8666          #define RfReliableMacReceiveP__0__AMPacket__setDestination(arg_0x7eb35c50,arg_0x7eb35de0) RfPacketP__AMPac
             -ket__setDestination(arg_0x7eb35c50, arg_0x7eb35de0)
8667          //# 86 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
8668          static  /*inline*/   am_group_t RfPacketP__AMPacket__group(message_t *amsg)
8669          {
8670   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->destpan);
8671   1      }
8672          
8673          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8674          #define RfReliableMacReceiveP__0__AMPacket__group(arg_0x7eb31590) RfPacketP__AMPacket__group(arg_0x7eb3159
             -0)
8675          
8676          
8677          
8678          
8679          
8680          
8681          
8682          
8683          
8684          
8685          #define RfReliableMacReceiveP__0__AMPacket__setGroup(arg_0x7eb31c20,arg_0x7eb31db0) RfPacketP__AMPacket__s
             -etGroup(arg_0x7eb31c20, arg_0x7eb31db0)
8686          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
8687          #define RfReliableMacReceiveP__0__RfReliableMacAck__fillAckMessage(arg_0x7e695b48,arg_0x7e695cd8,arg_0x7e6
             -95e88,arg_0x7e694068) RfReliableMacAckP__RfReliableMacAck__fillAckMessage(arg_0x7e695b48, arg_0x7e695cd8, arg_0x7e695e88
             -, arg_0x7e694068)
8688          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
8689          #define RfReliableMacReceiveP__0__SubPacket__getPayload(arg_0x7eb21e20,arg_0x7eb20010) RfPacketP__Packet__
             -getPayload(arg_0x7eb21e20, arg_0x7eb20010)
8690          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
8691          #define RfReliableMacReceiveP__0__PacketEx__getPacketHeader(arg_0x7e6f7010) RfReliableMacPacketP__PacketEx
             -__getPacketHeader(arg_0x7e6f7010)
8692          
8693          
8694          #define RfReliableMacReceiveP__0__PacketEx__isValidPacket(arg_0x7e6f74e8) RfReliableMacPacketP__PacketEx__
             -isValidPacket(arg_0x7e6f74e8)
8695          //# 57 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 154 

8696          static  /*inline*/   message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiv
             -eP*/RfReliableMacReceiveP__0__SubReceive__receive(message_t *msg, void *payload, uint8_t len)
8697          {
8698   1        if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_0__PacketEx__isValidPacket(msg)) 
8699   1          {
8700   2            rf_rmac_header_t *header = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRecei
             -veP*/RfReliableMacReceiveP__0__PacketEx__getPacketHeader(msg);
8701   2            rf_ack_t *ack_header = (rf_ack_t *)/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliable
             -MacReceiveP*/RfReliableMacReceiveP__0__SubPacket__getPayload(&/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfR
             -eliableMacReceiveP*/RfReliableMacReceiveP__0__m_ack_msg, (void *)0);
8702   2      
8703   2            payload = (uint8_t *)payload + sizeof(rf_rmac_header_t );
8704   2            len -= sizeof(rf_rmac_header_t );
8705   2      
8706   2      
8707   2      
8708   2      
8709   2      
8710   2            if (header->ack_req) 
8711   2              {
8712   3                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__RfReliableMacAck__fillAckMessage(msg, header->dsn, &/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfRel
             -iableMacReceiveP*/RfReliableMacReceiveP__0__m_ack_msg, ack_header);
8713   3      
8714   3                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__AMPacket__setGroup(&/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__0__m_ack_msg, /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiv
             -eP__0__AMPacket__group(msg));
8715   3      
8716   3                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__AMPacket__setDestination(&/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__0__m_ack_msg, /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__AMPacket__source(msg));
8717   3      
8718   3                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__sendAckTask__postTask();
8719   3              }
8720   2      
8721   2      
8722   2            if (!/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__0__DsnFilter__filter(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__AMPacket__source(msg), header->dsn)) 
8723   2              {
8724   3                return msg;
8725   3              }
8726   2      
8727   2            return /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__Receive__receive(msg, payload, len);
8728   2          }
8729   1      
8730   1      
8731   1        return msg;
8732   1      }
8733          
8734          //# 403 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8735          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *msg, anstd_trace_
             -t *trace_ack)
8736          {
8737   1      }
8738          
8739          //# 19 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 155 

8740          #define AtosNetStdP__AtosNetStd__receivedTraceAck(arg_0x7e3521f8,arg_0x7e3523b8) AtosNetStdP__AtosNetStd__
             -default__receivedTraceAck(arg_0x7e3521f8, arg_0x7e3523b8)
8741          //# 177 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8742          static  /*inline*/  void AtosNetStdP__receiveTraceAck(message_t *msg, anstd_trace_ack_t *trace_ack)
8743          {
8744   1        int index = AtosNetStdP__indexOfTraceItem(trace_ack, AtosNetStdP__AMPacket__address());
8745   1      
8746   1        if (trace_ack->total_count > 20) 
8747   1          {
8748   2            return;
8749   2          }
8750   1      
8751   1        if (index < 0) 
8752   1          {
8753   2            return;
8754   2          }
8755   1      
8756   1        if (index < trace_ack->total_count - 1) 
8757   1          {
8758   2            trace_ack->items[index + 1].backward_rssi = __nesc_ntoh_int8((unsigned char *)&((rf_meta_data_t *)ms
             -g->meta_data)->rssi);
8759   2          }
8760   1      
8761   1        AtosNetStdP__traceBackward(msg, trace_ack, index);
8762   1        AtosNetStdP__AtosNetStd__receivedTraceAck(msg, trace_ack);
8763   1      }
8764          
8765          //#line 399
8766          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *msg, anstd_trace_t *
             -trace)
8767          {
8768   1      }
8769          
8770          //# 18 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8771          #define AtosNetStdP__AtosNetStd__receivedTrace(arg_0x7e354b58,arg_0x7e354d08) AtosNetStdP__AtosNetStd__def
             -ault__receivedTrace(arg_0x7e354b58, arg_0x7e354d08)
8772          //# 134 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8773          static  /*inline*/  void AtosNetStdP__traceForward(message_t *msg, anstd_trace_t *trace, int index)
8774          {
8775   1        uint16_t node_id = 0xFFFF;
8776   1      
8777   1      //#line 137
8778   1        memcpy(&AtosNetStdP__m_send_msg, msg, sizeof AtosNetStdP__m_send_msg);
8779   1      
8780   1        if (index < trace->total_count - 1) 
8781   1          {
8782   2            node_id = trace->items[index + 1].node_id;
8783   2            AtosNetStdP__AMSend__send(node_id, &AtosNetStdP__m_send_msg, AtosNetStdP__Packet__payloadLength(&Ato
             -sNetStdP__m_send_msg));
8784   2          }
8785   1        else 
8786   1          {
8787   2            AtosNetStdP__traceEnd(msg, trace, index);
8788   2          }
8789   1      }
8790          
8791          
8792          static  /*inline*/  void AtosNetStdP__receiveTrace(message_t *msg, anstd_trace_t *trace)
8793          {
8794   1        int index = AtosNetStdP__indexOfTraceItem(trace, AtosNetStdP__AMPacket__address());
8795   1      
8796   1        if (trace->total_count > 20) 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 156 

8797   1          {
8798   2            return;
8799   2          }
8800   1      
8801   1        if (index < 0) 
8802   1          {
8803   2            return;
8804   2          }
8805   1      
8806   1        if (index > 0) 
8807   1          {
8808   2            trace->items[index - 1].forward_rssi = __nesc_ntoh_int8((unsigned char *)&((rf_meta_data_t *)msg->me
             -ta_data)->rssi);
8809   2          }
8810   1      
8811   1      
8812   1        trace->traced_count = index + 1;
8813   1      
8814   1        AtosNetStdP__traceForward(msg, trace, index);
8815   1        AtosNetStdP__AtosNetStd__receivedTrace(msg, trace);
8816   1      }
8817          
8818          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8819          #define AtosNetStdP__rebootTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__rebootTa
             -sk)
8820          //# 394 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8821          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *reboot)
8822          {
8823   1      }
8824          
8825          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8826          #define AtosNetStdP__AtosNetStd__receivedReboot(arg_0x7e3546a8) AtosNetStdP__AtosNetStd__default__received
             -Reboot(arg_0x7e3546a8)
8827          //# 94 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8828          static  /*inline*/  void AtosNetStdP__receiveReboot(message_t *msg, anstd_reboot_t *reboot)
8829          {
8830   1        AtosNetStdP__AtosNetStd__receivedReboot(reboot);
8831   1        AtosNetStdP__rebootTask__postTask();
8832   1      }
8833          
8834          //# 166 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
8835          static  /*inline*/   void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *ieee)
8836          {
8837   1        /* atomic removed: atomic calls only */
8838   1        {
8839   2          memcpy(FlashIEEEP__m_ieee, ieee, sizeof FlashIEEEP__m_ieee);
8840   2          FlashIEEEP__m_ieee_flash[0] = FlashIEEEP__m_ieee[7];
8841   2          FlashIEEEP__m_ieee_flash[1] = FlashIEEEP__m_ieee[6];
8842   2          FlashIEEEP__m_ieee_flash[2] = FlashIEEEP__m_ieee[5];
8843   2          FlashIEEEP__m_ieee_flash[3] = FlashIEEEP__m_ieee[4];
8844   2          FlashIEEEP__m_ieee_flash[4] = FlashIEEEP__m_ieee[3];
8845   2          FlashIEEEP__m_ieee_flash[5] = FlashIEEEP__m_ieee[2];
8846   2          FlashIEEEP__m_ieee_flash[6] = FlashIEEEP__m_ieee[1];
8847   2          FlashIEEEP__m_ieee_flash[7] = FlashIEEEP__m_ieee[0];
8848   2      
8849   2      
8850   2          FlashIEEEP__HalFlash__erase(0x3FFE8);
8851   2          FlashIEEEP__HalFlash__write(0x3FFE8, FlashIEEEP__m_ieee_flash, sizeof FlashIEEEP__m_ieee_flash);
8852   2      
8853   2      
8854   2      
8855   2      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 157 

8856   2          FlashIEEEP__readFromFlash();
8857   2          FlashIEEEP__FlashIEEE__WriteToRegister();
8858   2          FlashIEEEP__FlashIEEE__WriteToAM();
8859   2        }
8860   1      }
8861          
8862          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
8863          #define AtosNetStdP__FlashIEEE__WriteIEEE(arg_0x7ea013d8) FlashIEEEP__FlashIEEE__WriteIEEE(arg_0x7ea013d8)
8864          //# 390 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8865          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *setieee)
8866          {
8867   1      }
8868          
8869          //# 16 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8870          #define AtosNetStdP__AtosNetStd__receivedSetIEEE(arg_0x7e3541f8) AtosNetStdP__AtosNetStd__default__receive
             -dSetIEEE(arg_0x7e3541f8)
8871          //# 84 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8872          static  /*inline*/  void AtosNetStdP__receiveSetIEEE(message_t *msg, anstd_setieee_t *setieee)
8873          {
8874   1        AtosNetStdP__AtosNetStd__receivedSetIEEE(setieee);
8875   1      
8876   1      
8877   1        AtosNetStdP__FlashIEEE__WriteIEEE(setieee->ieee);
8878   1      
8879   1        AtosNetStdP__rebootTask__postTask();
8880   1      }
8881          
8882          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8883          #define AtosNetStdP__nodeStatusUpTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__no
             -deStatusUpTask)
8884          //# 386 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8885          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *discover
             -y)
8886          {
8887   1      }
8888          
8889          //# 15 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8890          #define AtosNetStdP__AtosNetStd__receivedDiscovery(arg_0x7e355d20) AtosNetStdP__AtosNetStd__default__recei
             -vedDiscovery(arg_0x7e355d20)
8891          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8892          #define AtosNetStdP__AMPacket__source(arg_0x7eb35688) RfPacketP__AMPacket__source(arg_0x7eb35688)
8893          //# 75 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8894          static  /*inline*/  void AtosNetStdP__receiveDiscovery(message_t *msg, anstd_discovery_t *discovery)
8895          {
8896   1        AtosNetStdP__m_ack_addr = AtosNetStdP__AMPacket__source(msg);
8897   1        AtosNetStdP__AtosNetStd__receivedDiscovery(discovery);
8898   1      
8899   1      
8900   1        AtosNetStdP__nodeStatusUpTask__postTask();
8901   1      }
8902          
8903          //#line 382
8904          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *msg, anstd_no
             -de_status_t *status)
8905          {
8906   1      }
8907          
8908          //# 14 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8909          #define AtosNetStdP__AtosNetStd__receivedNodeStatusUp(arg_0x7e355698,arg_0x7e355850) AtosNetStdP__AtosNetS
             -td__default__receivedNodeStatusUp(arg_0x7e355698, arg_0x7e355850)
8910          //# 69 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8911          static  /*inline*/  void AtosNetStdP__receiveNodeStatusUp(message_t *msg, anstd_node_status_t *status)
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 158 

8912          {
8913   1        AtosNetStdP__AtosNetStd__receivedNodeStatusUp(msg, status);
8914   1      }
8915          
8916          //#line 203
8917          static  /*inline*/   message_t *AtosNetStdP__Receive__receive(message_t *msg, void *payload, uint8_t len)
8918          {
8919   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8920   2          {
8921   3            anstd_header_t *anstd_header = (anstd_header_t *)payload;
8922   3      
8923   3            switch (anstd_header->_data_type) 
8924   3              {
8925   4                case ANSTD_DATA_TYPE_NODE_STATUS_UP: 
8926   4                  AtosNetStdP__receiveNodeStatusUp(msg, (anstd_node_status_t *)payload);
8927   4                break;
8928   4      
8929   4                case ANSTD_DATA_TYPE_DISCOVERY: 
8930   4                  AtosNetStdP__receiveDiscovery(msg, (anstd_discovery_t *)payload);
8931   4                break;
8932   4      
8933   4                case ANSTD_DATA_TYPE_SETIEEE: 
8934   4                  AtosNetStdP__receiveSetIEEE(msg, (anstd_setieee_t *)payload);
8935   4                break;
8936   4      
8937   4                case ANSTD_DATA_TYPE_REBOOT: 
8938   4                  AtosNetStdP__receiveReboot(msg, (anstd_reboot_t *)payload);
8939   4                break;
8940   4      
8941   4                case ANSTD_DATA_TYPE_TRACE: 
8942   4                  AtosNetStdP__receiveTrace(msg, (anstd_trace_t *)payload);
8943   4                break;
8944   4      
8945   4                case ANSTD_DATA_TYPE_TRACE_ACK: 
8946   4                  AtosNetStdP__receiveTraceAck(msg, (anstd_trace_ack_t *)payload);
8947   4                break;
8948   4              }
8949   3      
8950   3            {
8951   4              nx_struct message_t *__nesc_temp = 
8952   4      //#line 236
8953   4              msg;
8954   4      
8955   4              {
8956   5      //#line 236
8957   5                __nesc_atomic_end(__nesc_atomic); 
8958   5      //#line 236
8959   5                return __nesc_temp;
8960   5              }
8961   4            }
8962   3          }
8963   2      //#line 239
8964   2          __nesc_atomic_end(__nesc_atomic); }
8965   1      }
8966          
8967          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
8968          #define RfReliableMacReceiveP__1__Receive__receive(arg_0x7eb45740,arg_0x7eb458e0,arg_0x7eb45a68) AtosNetSt
             -dP__Receive__receive(arg_0x7eb45740, arg_0x7eb458e0, arg_0x7eb45a68)
8969          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8970          #define RfReliableMacReceiveP__1__AMPacket__source(arg_0x7eb35688) RfPacketP__AMPacket__source(arg_0x7eb35
             -688)
8971          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 159 

8972          #define RfReliableMacReceiveP__1__DsnFilter__filter(arg_0x7e3f3b78,arg_0x7e3f3d00) DsnFilterCenterP__0__Ds
             -nFilter__filter(0U, arg_0x7e3f3b78, arg_0x7e3f3d00)
8973          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8974          #define RfReliableMacReceiveP__1__sendAckTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacReceiveP__1__sendAckTask)
8975          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8976          #define RfReliableMacReceiveP__1__AMPacket__setDestination(arg_0x7eb35c50,arg_0x7eb35de0) RfPacketP__AMPac
             -ket__setDestination(arg_0x7eb35c50, arg_0x7eb35de0)
8977          //#line 166
8978          #define RfReliableMacReceiveP__1__AMPacket__group(arg_0x7eb31590) RfPacketP__AMPacket__group(arg_0x7eb3159
             -0)
8979          
8980          
8981          
8982          
8983          
8984          
8985          
8986          
8987          
8988          
8989          #define RfReliableMacReceiveP__1__AMPacket__setGroup(arg_0x7eb31c20,arg_0x7eb31db0) RfPacketP__AMPacket__s
             -etGroup(arg_0x7eb31c20, arg_0x7eb31db0)
8990          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
8991          #define RfReliableMacReceiveP__1__RfReliableMacAck__fillAckMessage(arg_0x7e695b48,arg_0x7e695cd8,arg_0x7e6
             -95e88,arg_0x7e694068) RfReliableMacAckP__RfReliableMacAck__fillAckMessage(arg_0x7e695b48, arg_0x7e695cd8, arg_0x7e695e88
             -, arg_0x7e694068)
8992          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
8993          #define RfReliableMacReceiveP__1__SubPacket__getPayload(arg_0x7eb21e20,arg_0x7eb20010) RfPacketP__Packet__
             -getPayload(arg_0x7eb21e20, arg_0x7eb20010)
8994          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
8995          #define RfReliableMacReceiveP__1__PacketEx__getPacketHeader(arg_0x7e6f7010) RfReliableMacPacketP__PacketEx
             -__getPacketHeader(arg_0x7e6f7010)
8996          
8997          
8998          #define RfReliableMacReceiveP__1__PacketEx__isValidPacket(arg_0x7e6f74e8) RfReliableMacPacketP__PacketEx__
             -isValidPacket(arg_0x7e6f74e8)
8999          //# 57 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
9000          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRecei
             -veP*/RfReliableMacReceiveP__1__SubReceive__receive(message_t *msg, void *payload, uint8_t len)
9001          {
9002   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__1__PacketEx__isValidPacket(msg)) 
9003   1          {
9004   2            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRece
             -iveP*/RfReliableMacReceiveP__1__PacketEx__getPacketHeader(msg);
9005   2            rf_ack_t *ack_header = (rf_ack_t *)/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliabl
             -eMacReceiveP*/RfReliableMacReceiveP__1__SubPacket__getPayload(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.R
             -fReliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack_msg, (void *)0);
9006   2      
9007   2            payload = (uint8_t *)payload + sizeof(rf_rmac_header_t );
9008   2            len -= sizeof(rf_rmac_header_t );
9009   2      
9010   2      
9011   2      
9012   2      
9013   2      
9014   2            if (header->ack_req) 
9015   2              {
9016   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__RfReliableMacAck__fillAckMessage(msg, header->dsn, &/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfR
             -eliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack_msg, ack_header);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 160 

9017   3      
9018   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__AMPacket__setGroup(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__1__m_ack_msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__AMPacket__group(msg));
9019   3      
9020   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__AMPacket__setDestination(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReli
             -ableMacReceiveP__1__m_ack_msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__1__AMPacket__source(msg));
9021   3      
9022   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__sendAckTask__postTask();
9023   3              }
9024   2      
9025   2      
9026   2            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__DsnFilter__filter(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__AMPacket__source(msg), header->dsn)) 
9027   2              {
9028   3                return msg;
9029   3              }
9030   2      
9031   2            return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__Receive__receive(msg, payload, len);
9032   2          }
9033   1      
9034   1      
9035   1        return msg;
9036   1      }
9037          
9038          //# 42 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
9039          static  /*inline*/    void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t 
             -*send_msg, message_t *ack_msg, rf_ack_t *ack)
9040          {
9041   1      }
9042          
9043          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
9044          #define RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(arg_0x7e414368,arg_0x7e414518,arg_0x7e
             -4146c8) RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(arg_0x7e414368, arg_0x7e414518, arg_0x7e414
             -6c8)
9045          //# 32 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
9046          static  /*inline*/   void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *send_msg, mess
             -age_t *ack_msg, rf_ack_t *ack)
9047          {
9048   1        RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(send_msg, ack_msg, ack);
9049   1      }
9050          
9051          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
9052          #define RfReliableMacSendP__1__RfReliableMacAck__receiveAckMessage(arg_0x7e694540,arg_0x7e6946f0,arg_0x7e6
             -948a0) RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(arg_0x7e694540, arg_0x7e6946f0, arg_0x7e6948a0)
9053          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9054          #define RfReliableMacSendP__1__AMPacket__source(arg_0x7eb35688) RfPacketP__AMPacket__source(arg_0x7eb35688
             -)
9055          //#line 67
9056          #define RfReliableMacSendP__1__AMPacket__destination(arg_0x7eb350a8) RfPacketP__AMPacket__destination(arg_
             -0x7eb350a8)
9057          //# 158 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
9058          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len)
9059          {
9060   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 161 

             -leMacSendP__1__m_sending) 
9061   1          {
9062   2            rf_meta_data_t *meta_data = (rf_meta_data_t *)/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.R
             -fReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg->meta_data;
9063   2            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.R
             -fReliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC
             -.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg);
9064   2      
9065   2            rf_ack_t *ack_header = (rf_ack_t *)payload;
9066   2      
9067   2      
9068   2      
9069   2      
9070   2      
9071   2      
9072   2            if (
9073   2      //#line 169
9074   2            header->ack_req
9075   2             && header->dsn == __nesc_ntoh_uint8((unsigned char *)&ack_header->dsn)
9076   2             && /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__AMPacket__source(ack_msg) == /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.
             -RfReliableMacSendP*/RfReliableMacSendP__1__AMPacket__destination(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.Rf
             -ReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg)
9077   2             && /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__AMPacket__destination(ack_msg) == /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacS
             -endC.RfReliableMacSendP*/RfReliableMacSendP__1__AMPacket__source(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.Rf
             -ReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg)) 
9078   2      
9079   2              {
9080   3                rf_meta_data_t *ack_meta_data = (rf_meta_data_t *)ack_msg->meta_data;
9081   3      
9082   3      
9083   3                __nesc_hton_int8((unsigned char *)&meta_data->rssi, __nesc_ntoh_int8((unsigned char *)&ack_meta_
             -data->rssi));
9084   3                __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_uint8((unsigned char *)&ack_meta
             -_data->lqi));
9085   3                __nesc_hton_int8((unsigned char *)&meta_data->crc, __nesc_ntoh_int8((unsigned char *)&ack_meta_d
             -ata->crc));
9086   3                __nesc_hton_int8((unsigned char *)&meta_data->ack, TRUE);
9087   3      
9088   3      
9089   3                memcpy((void *)& meta_data->ack_msg, (void *)ack_header, sizeof  meta_data->ack_msg);
9090   3      
9091   3      
9092   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__RfReliableMacAck__receiveAckMessage(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMa
             -cSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg, ack_msg, ack_header);
9093   3      
9094   3      
9095   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__m_msg, 0);
9096   3              }
9097   2          }
9098   1      
9099   1        return ack_msg;
9100   1      }
9101          
9102          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
9103          #define RfReliableMacSendP__0__RfReliableMacAck__receiveAckMessage(arg_0x7e694540,arg_0x7e6946f0,arg_0x7e6
             -948a0) RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(arg_0x7e694540, arg_0x7e6946f0, arg_0x7e6948a0)
9104          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 162 

9105          #define RfReliableMacSendP__0__AMPacket__source(arg_0x7eb35688) RfPacketP__AMPacket__source(arg_0x7eb35688
             -)
9106          //#line 67
9107          #define RfReliableMacSendP__0__AMPacket__destination(arg_0x7eb350a8) RfPacketP__AMPacket__destination(arg_
             -0x7eb350a8)
9108          //# 158 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
9109          static  /*inline*/   message_t */*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfR
             -eliableMacSendP*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len)
9110          {
9111   1        if (/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending) 
9112   1          {
9113   2            rf_meta_data_t *meta_data = (rf_meta_data_t *)/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.Rf
             -ReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg->meta_data;
9114   2            rf_rmac_header_t *header = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.R
             -fReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg);
9115   2      
9116   2            rf_ack_t *ack_header = (rf_ack_t *)payload;
9117   2      
9118   2      
9119   2      
9120   2      
9121   2      
9122   2      
9123   2            if (
9124   2      //#line 169
9125   2            header->ack_req
9126   2             && header->dsn == __nesc_ntoh_uint8((unsigned char *)&ack_header->dsn)
9127   2             && /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__AMPacket__source(ack_msg) == /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__0__AMPacket__destination(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfRel
             -iableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg)
9128   2             && /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__AMPacket__destination(ack_msg) == /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSen
             -dC.RfReliableMacSendP*/RfReliableMacSendP__0__AMPacket__source(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfRel
             -iableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg)) 
9129   2      
9130   2              {
9131   3                rf_meta_data_t *ack_meta_data = (rf_meta_data_t *)ack_msg->meta_data;
9132   3      
9133   3      
9134   3                __nesc_hton_int8((unsigned char *)&meta_data->rssi, __nesc_ntoh_int8((unsigned char *)&ack_meta_
             -data->rssi));
9135   3                __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_uint8((unsigned char *)&ack_meta
             -_data->lqi));
9136   3                __nesc_hton_int8((unsigned char *)&meta_data->crc, __nesc_ntoh_int8((unsigned char *)&ack_meta_d
             -ata->crc));
9137   3                __nesc_hton_int8((unsigned char *)&meta_data->ack, TRUE);
9138   3      
9139   3      
9140   3                memcpy((void *)& meta_data->ack_msg, (void *)ack_header, sizeof  meta_data->ack_msg);
9141   3      
9142   3      
9143   3                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__RfReliableMacAck__receiveAckMessage(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacS
             -endC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg, ack_msg, ack_header);
9144   3      
9145   3      
9146   3                /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__signalDone(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__m_msg, 0);
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 163 

9147   3              }
9148   2          }
9149   1      
9150   1        return ack_msg;
9151   1      }
9152          
9153          //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
9154          static  /*inline*/    message_t *RfActiveMessageP__Receive__default__receive(uint8_t id, message_t *msg, v
             -oid *payload, uint8_t len)
9155          {
9156   1      }
9157          
9158          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
9159           /*inline*/  static  message_t *RfActiveMessageP__Receive__receive(uint8_t arg_0x7e3c33f8, message_t *arg_
             -0x7eb45740, void *arg_0x7eb458e0, uint8_t arg_0x7eb45a68){
9160   1      //#line 67
9161   1        nx_struct message_t *result;
9162   1      //#line 67
9163   1      
9164   1      //#line 67
9165   1        switch (arg_0x7e3c33f8) {
9166   2      //#line 67
9167   2          case 123:
9168   2      //#line 67
9169   2            result = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__SubReceive__receive(arg_0x7eb45740, arg_0x7eb458e0, arg_0x7eb45a68);
9170   2      //#line 67
9171   2            break;
9172   2      //#line 67
9173   2          case 124:
9174   2      //#line 67
9175   2            result = /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__ReceiveAck__receive(arg_0x7eb45740, arg_0x7eb458e0, arg_0x7eb45a68);
9176   2      //#line 67
9177   2            break;
9178   2      //#line 67
9179   2          case 240U:
9180   2      //#line 67
9181   2            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__1__SubReceive__receive(arg_0x7eb45740, arg_0x7eb458e0, arg_0x7eb45a68);
9182   2      //#line 67
9183   2            break;
9184   2      //#line 67
9185   2          case 241:
9186   2      //#line 67
9187   2            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__ReceiveAck__receive(arg_0x7eb45740, arg_0x7eb458e0, arg_0x7eb45a68);
9188   2      //#line 67
9189   2            break;
9190   2      //#line 67
9191   2          default:
9192   2      //#line 67
9193   2            result = RfActiveMessageP__Receive__default__receive(arg_0x7e3c33f8, arg_0x7eb45740, arg_0x7eb458e0,
             - arg_0x7eb45a68);
9194   2      //#line 67
9195   2            break;
9196   2      //#line 67
9197   2          }
9198   1      //#line 67
9199   1      
9200   1      //#line 67
9201   1        return result;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 164 

9202   1      //#line 67
9203   1      }
9204          //#line 67
9205          //# 69 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9206          static  /*inline*/   bool RfPacketP__AMPacket__isForMe(message_t *amsg)
9207          {
9208   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest) == RfPacketP__AMPacke
             -t__address()
9209   1         || __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest) == 0xFFFF;
9210   1      }
9211          
9212          //# 125 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9213          #define RfActiveMessageP__AMPacket__isForMe(arg_0x7eb34f00) RfPacketP__AMPacket__isForMe(arg_0x7eb34f00)
9214          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
9215          #define RfActiveMessageP__Packet__getPayload(arg_0x7eb21e20,arg_0x7eb20010) RfPacketP__Packet__getPayload(
             -arg_0x7eb21e20, arg_0x7eb20010)
9216          //# 76 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9217          static  /*inline*/   am_id_t RfPacketP__AMPacket__type(message_t *amsg)
9218          {
9219   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)amsg->header)->type);
9220   1      }
9221          
9222          //# 136 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9223          #define RfActiveMessageP__AMPacket__type(arg_0x7eb32660) RfPacketP__AMPacket__type(arg_0x7eb32660)
9224          //# 150 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9225          static  /*inline*/   uint8_t RfPacketP__PacketEx__packetHeaderSize(void)
9226          {
9227   1        return sizeof(rf_header_t ) - 1 + sizeof(uint16_t );
9228   1      }
9229          
9230          
9231          
9232          
9233          
9234          
9235          static  /*inline*/   bool RfPacketP__PacketEx__isValidPacket(message_t *msg)
9236          {
9237   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length) >= RfPacketP__PacketE
             -x__packetHeaderSize();
9238   1      }
9239          
9240          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
9241          #define RfActiveMessageP__PacketEx__isValidPacket(arg_0x7e6f74e8) RfPacketP__PacketEx__isValidPacket(arg_0
             -x7e6f74e8)
9242          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
9243          static  /*inline*/   void RfActiveMessageP__CoreReceive__receive(message_t *msg)
9244          {
9245   1        if (RfActiveMessageP__PacketEx__isValidPacket(msg)) 
9246   1          {
9247   2            uint8_t type = RfActiveMessageP__AMPacket__type(msg);
9248   2            uint8_t len;
9249   2            void *payload = RfActiveMessageP__Packet__getPayload(msg, &len);
9250   2      
9251   2      //#line 27
9252   2            if (RfActiveMessageP__AMPacket__isForMe(msg)) 
9253   2              {
9254   3                RfActiveMessageP__Receive__receive(type, msg, payload, len);
9255   3              }
9256   2            else 
9257   2              {
9258   3                RfActiveMessageP__Snoop__receive(type, msg, payload, len);
9259   3              }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 165 

9260   2          }
9261   1      }
9262          
9263          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
9264          #define RfMacBaseReceiveP__CoreReceive__receive(arg_0x7e3be030) RfActiveMessageP__CoreReceive__receive(arg
             -_0x7e3be030)
9265          //# 12 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseReceiveP.nc"
9266          static  /*inline*/   void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *buf, uint8_t len)
9267          {
9268   1        unsigned char *__nesc_temp48;
9269   1      //#line 14
9270   1        message_t *msg = (message_t *)buf;
9271   1      
9272   1      
9273   1        uint8_t frame_type = (__nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)msg->header)->fcf) >> IEEE1
             -54_FCF_FRAME_TYPE) & 7;
9274   1      
9275   1        if (frame_type == IEEE154_TYPE_ACK) 
9276   1          {
9277   2          }
9278   1        else {
9279   2      //#line 22
9280   2          if (frame_type == IEEE154_TYPE_DATA) 
9281   2            {
9282   3      
9283   3      
9284   3              rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
9285   3      
9286   3      //#line 27
9287   3              __nesc_hton_int8((unsigned char *)&meta_data->crc, buf[len - 1] >> 7);
9288   3              __nesc_hton_int8((unsigned char *)&meta_data->rssi, buf[len - 2]);
9289   3              __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_int8((unsigned char *)&meta_data->
             -rssi) + 0x7F);
9290   3      
9291   3      
9292   3              (__nesc_temp48 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nes
             -c_temp48, __nesc_ntoh_leuint8(__nesc_temp48) - 0));
9293   3      //#line 50
9294   3              RfMacBaseReceiveP__CoreReceive__receive(msg);
9295   3            }
9296   2          }
9297   1      }
9298          
9299          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
9300          #define RfHardwareRxP__0__RfHardwareRx__rxPacket(arg_0x7e56b7e8,arg_0x7e56b970) RfMacBaseReceiveP__RfHardw
             -areRx__rxPacket(arg_0x7e56b7e8, arg_0x7e56b970)
9301          //# 78 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9302          static  /*inline*/  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket(void)
9303          {
9304   1        if (!/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(/*RfHardwareRxC.RfHardwareRxP*/RfHardwar
             -eRxP__0__m_frame_buf, 1)) {
9305   2      //#line 80
9306   2          return;
9307   2          }
9308   1      //#line 81
9309   1        if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] > 0x7f) 
9310   1          {
9311   2      
9312   2      
9313   2            {
9314   3      //#line 85
9315   3              do {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 166 

9316   4      //#line 85
9317   4                  RFST = 0xED;
9318   4      //#line 85
9319   4                  RFST = 0xED;
9320   4                }
9321   3              while (
9322   3      //#line 85
9323   3              85 == -1);
9324   3      //#line 85
9325   3              do {
9326   4      //#line 85
9327   4                  S1CON = 0x00;
9328   4      //#line 85
9329   4                  RFIRQF0 = ~(1 << 2);
9330   4                }
9331   3              while (
9332   3      //#line 85
9333   3              85 == -1);
9334   3            }
9335   2      //#line 85
9336   2            ;
9337   2            {
9338   3      //#line 86
9339   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHar
             -dwareRxP__0__rxbuf_tail = 0;
9340   3            }
9341   2      //#line 86
9342   2            ;
9343   2          }
9344   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] &= 0x7f;
9345   1      
9346   1      
9347   1        if (!/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(&/*RfHardwareRxC.RfHardwareRxP*/RfHardwa
             -reRxP__0__m_frame_buf[1], /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0])) {
9348   2      //#line 91
9349   2          return;
9350   2          }
9351   1      
9352   1        if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[/*RfHardwareRxC.RfHardwareRxP*/RfHardwa
             -reRxP__0__m_frame_buf[0]] & 0x80) 
9353   1          {
9354   2      //#line 131
9355   2            /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__RfHardwareRx__rxPacket(/*RfHardwareRxC.RfHardwareRx
             -P*/RfHardwareRxP__0__m_frame_buf, /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] + 1);
9356   2          }
9357   1        else 
9358   1          {
9359   2      
9360   2            {
9361   3      //#line 136
9362   3              do {
9363   4      //#line 136
9364   4                  RFST = 0xED;
9365   4      //#line 136
9366   4                  RFST = 0xED;
9367   4                }
9368   3              while (
9369   3      //#line 136
9370   3              136 == -1);
9371   3      //#line 136
9372   3              do {
9373   4      //#line 136
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 167 

9374   4                  S1CON = 0x00;
9375   4      //#line 136
9376   4                  RFIRQF0 = ~(1 << 2);
9377   4                }
9378   3              while (
9379   3      //#line 136
9380   3              136 == -1);
9381   3            }
9382   2      //#line 136
9383   2            ;
9384   2            {
9385   3      //#line 137
9386   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHar
             -dwareRxP__0__rxbuf_tail = 0;
9387   3            }
9388   2      //#line 137
9389   2            ;
9390   2          }
9391   1      }
9392          
9393          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void)
9394          {
9395   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket();
9396   1      
9397   1        if (!(/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head == /*RfHardwareRxC.RfHardwareRxP*/RfHa
             -rdwareRxP__0__rxbuf_tail)) 
9398   1          {
9399   2            {
9400   3      //#line 147
9401   3              { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9402   4      //#line 147
9403   4                {
9404   5      //#line 147
9405   5                  TopTaskMgrP__m_task_flag[1] = TRUE;
9406   5                }
9407   4      //#line 148
9408   4                __nesc_atomic_end(__nesc_atomic); }
9409   3            }
9410   2      //#line 147
9411   2            ;
9412   2          }
9413   1      }
9414          
9415          //# 57 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
9416          static  /*inline*/    void TopTaskMgrP__TopTaskHandler__default__handler(uint8_t n)
9417          {
9418   1      }
9419          
9420          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
9421           /*inline*/  static  void TopTaskMgrP__TopTaskHandler__handler(uint8_t arg_0x7ebb0aa8){
9422   1      //#line 4
9423   1        switch (arg_0x7ebb0aa8) {
9424   2      //#line 4
9425   2          case 0:
9426   2      //#line 4
9427   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handler();
9428   2      //#line 4
9429   2            break;
9430   2      //#line 4
9431   2          case 1:
9432   2      //#line 4
9433   2            /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler();
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 168 

9434   2      //#line 4
9435   2            break;
9436   2      //#line 4
9437   2          default:
9438   2      //#line 4
9439   2            TopTaskMgrP__TopTaskHandler__default__handler(arg_0x7ebb0aa8);
9440   2      //#line 4
9441   2            break;
9442   2      //#line 4
9443   2          }
9444   1      //#line 4
9445   1      }
9446          //#line 4
9447          //# 40 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
9448          static  /*inline*/   void TopTaskMgrP__TopTaskMgr__runTasks(void)
9449          {
9450   1        uint8_t i;
9451   1      
9452   1        for (i = 0; i < TopTaskMgrP__TOP_TASK_COUNT; ++i) 
9453   1          {
9454   2            if (TopTaskMgrP__m_task_flag[i] != FALSE) 
9455   2              {
9456   3                EA = 0;
9457   3                TopTaskMgrP__m_task_flag[i] = FALSE;
9458   3                EA = 1;
9459   3      
9460   3                TopTaskMgrP__TopTaskHandler__handler(i);
9461   3              }
9462   2          }
9463   1      }
9464          
9465          //# 5 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
9466          #define SchedulerBasicP__TopTaskMgr__runTasks(void) TopTaskMgrP__TopTaskMgr__runTasks()
9467          //# 181 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9468          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(
             -void)
9469          {
9470   1        if (((uint8_t xdata *)0)[0x619B] > 0x80) 
9471   1          {
9472   2            {
9473   3      //#line 185
9474   3              do {
9475   4      //#line 185
9476   4                  RFST = 0xED;
9477   4      //#line 185
9478   4                  RFST = 0xED;
9479   4                }
9480   3              while (
9481   3      //#line 185
9482   3              185 == -1);
9483   3      //#line 185
9484   3              do {
9485   4      //#line 185
9486   4                  S1CON = 0x00;
9487   4      //#line 185
9488   4                  RFIRQF0 = ~(1 << 2);
9489   4                }
9490   3              while (
9491   3      //#line 185
9492   3              185 == -1);
9493   3            }
9494   2      //#line 185
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 169 

9495   2            ;
9496   2          }
9497   1      }
9498          
9499          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
9500          #define SchedulerBasicP__AtosScheduler__periodScheduler(void) RfHardwareRxP__0__AtosScheduler__periodSched
             -uler()
9501          //# 71 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
9502          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void)
9503          {
9504   1      //#line 91
9505   1        if (SchedulerBasicP__m_head == SchedulerBasicP__m_tail) 
9506   1          {
9507   2            return SchedulerBasicP__NO_TASK;
9508   2          }
9509   1        else 
9510   1          {
9511   2            uint8_t id = SchedulerBasicP__m_next[SchedulerBasicP__m_head];
9512   2      
9513   2            SchedulerBasicP__m_next[SchedulerBasicP__m_head] = SchedulerBasicP__NO_TASK;
9514   2      
9515   2            SchedulerBasicP__m_head = (SchedulerBasicP__m_head + 1) % SchedulerBasicP__NUM_TASKS;
9516   2            return id % SchedulerBasicP__NUM_TASKS;
9517   2          }
9518   1      }
9519          
9520          //#line 215
9521          static  /*inline*/   void SchedulerBasicP__Scheduler__taskLoop(void)
9522          {
9523   1        for (; ; ) 
9524   1          {
9525   2            uint8_t nextTask;
9526   2      
9527   2            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9528   3              {
9529   4                nextTask = SchedulerBasicP__popTask();
9530   4              }
9531   3      //#line 224
9532   3              __nesc_atomic_end(__nesc_atomic); }
9533   2      
9534   2            current_task_id = nextTask;
9535   2      
9536   2      
9537   2            SchedulerBasicP__AtosScheduler__periodScheduler();
9538   2      
9539   2            while (SchedulerBasicP__TopTaskMgr__hasTasks()) 
9540   2              {
9541   3                SchedulerBasicP__TopTaskMgr__runTasks();
9542   3              }
9543   2      
9544   2            if (nextTask != SchedulerBasicP__NO_TASK) 
9545   2              {
9546   3                SchedulerBasicP__TaskBasic__runTask(nextTask);
9547   3              }
9548   2            else 
9549   2              {
9550   3                if (!SchedulerBasicP__TopTaskMgr__hasTasks()) 
9551   3                  {
9552   4                    SchedulerBasicP__McuSleep__sleep();
9553   4                  }
9554   3              }
9555   2          }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 170 

9556   1      }
9557          
9558          //# 61 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
9559          #define RealMainP__Scheduler__taskLoop(void) SchedulerBasicP__Scheduler__taskLoop()
9560          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
9561          #define RfReliableMacPacketP__SubPacketEx__isValidPacket(arg_0x7e6f74e8) RfPacketP__PacketEx__isValidPacke
             -t(arg_0x7e6f74e8)
9562          //# 46 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
9563          static  /*inline*/   uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void)
9564          {
9565   1        return sizeof(rf_rmac_header_t );
9566   1      }
9567          
9568          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
9569          static  /*inline*/  uint8_t RfReliableMacAckP__fillAckMessageDefault(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack)
9570          {
9571   1        memset(ack, 0, sizeof(rf_ack_t ));
9572   1      
9573   1      
9574   1        __nesc_hton_uint8((unsigned char *)&ack->dsn, receive_dsn);
9575   1      
9576   1        return sizeof(rf_ack_t );
9577   1      }
9578          
9579          //#line 37
9580          static  /*inline*/    uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t 
             -*receive_msg, uint8_t receive_dsn, message_t *ack_msg, rf_ack_t *ack)
9581          {
9582   1        return sizeof(rf_ack_t );
9583   1      }
9584          
9585          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
9586          #define RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(arg_0x7e415968,arg_0x7e415af8,arg_0x7e415
             -ca8,arg_0x7e415e58) RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(arg_0x7e415968, arg_0x7e415af8, ar
             -g_0x7e415ca8, arg_0x7e415e58)
9587          //# 14 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
9588          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(uint16_t 
             -addr)
9589          {
9590   1        /* atomic removed: atomic calls only */
9591   1        {
9592   2          uint8_t i;
9593   2      
9594   2      //#line 19
9595   2          for (i = 0; i < 100; ++i) 
9596   2            {
9597   3              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[i] == addr) 
9598   3                {
9599   4                  {
9600   5                    int __nesc_temp = 
9601   5      //#line 23
9602   5                    i;
9603   5      
9604   5      //#line 23
9605   5                    return __nesc_temp;
9606   5                  }
9607   4                }
9608   3            }
9609   2          {
9610   3            int __nesc_temp = 
9611   3      //#line 27
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 171 

9612   3            -1;
9613   3      
9614   3      //#line 27
9615   3            return __nesc_temp;
9616   3          }
9617   2        }
9618   1      }
9619          
9620          //#line 31
9621          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress(void)
9622          {
9623   1        /* atomic removed: atomic calls only */
9624   1        {
9625   2          uint8_t i;
9626   2      
9627   2      //#line 36
9628   2          for (i = 0; i < 100; ++i) 
9629   2            {
9630   3              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[i] == 0) 
9631   3                {
9632   4                  {
9633   5                    int __nesc_temp = 
9634   5      //#line 40
9635   5                    i;
9636   5      
9637   5      //#line 40
9638   5                    return __nesc_temp;
9639   5                  }
9640   4                }
9641   3            }
9642   2          i = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index;
9643   2          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index = (/*DsnFilterCenterC.DsnFilt
             -erCenterP*/DsnFilterCenterP__0__m_filter_index + 1) % 100;
9644   2      
9645   2          {
9646   3            int __nesc_temp = 
9647   3      //#line 47
9648   3            i;
9649   3      
9650   3      //#line 47
9651   3            return __nesc_temp;
9652   3          }
9653   2        }
9654   1      }
9655          
9656          //# 176 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9657          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void)
9658          {
9659   1        {
9660   2      //#line 178
9661   2          do {
9662   3      //#line 178
9663   3              RFST = 0xED;
9664   3      //#line 178
9665   3              RFST = 0xED;
9666   3            }
9667   2          while (
9668   2      //#line 178
9669   2          178 == -1);
9670   2      //#line 178
9671   2          do {
9672   3      //#line 178
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 172 

9673   3              S1CON = 0x00;
9674   3      //#line 178
9675   3              RFIRQF0 = ~(1 << 2);
9676   3            }
9677   2          while (
9678   2      //#line 178
9679   2          178 == -1);
9680   2        }
9681   1      //#line 178
9682   1        ;
9683   1      }
9684          
9685          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
9686          #define RfInterruptsP__InterruptRFErr__fired(void) RfHardwareRxP__0__InterruptRFErr__fired()
9687          //# 80 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
9688          static  /*inline*/   void RfInterruptsP__INT_RFERR__fired(void)
9689          {
9690   1      
9691   1      
9692   1        if ((RFERRF & (1 << 2)) & ((uint8_t xdata *)0)[0x61A5]) 
9693   1          {
9694   2            RFERRF &= ~(1 << 2);
9695   2            RfInterruptsP__InterruptRFErr__fired();
9696   2          }
9697   1      }
9698          
9699          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9700          #define PlatformInterruptC__INT_RFERR__fired(void) RfInterruptsP__INT_RFERR__fired()
9701          //# 153 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9702          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void)
9703          {
9704   1      
9705   1      
9706   1        while (((uint8_t xdata *)0)[0x619B] > 0) 
9707   1          {
9708   2            if (((uint8_t xdata *)0)[0x619B] > 0x80) 
9709   2              {
9710   3                {
9711   4      //#line 161
9712   4                  do {
9713   5      //#line 161
9714   5                      RFST = 0xED;
9715   5      //#line 161
9716   5                      RFST = 0xED;
9717   5                    }
9718   4                  while (
9719   4      //#line 161
9720   4                  161 == -1);
9721   4      //#line 161
9722   4                  do {
9723   5      //#line 161
9724   5                      S1CON = 0x00;
9725   5      //#line 161
9726   5                      RFIRQF0 = ~(1 << 2);
9727   5                    }
9728   4                  while (
9729   4      //#line 161
9730   4                  161 == -1);
9731   4                }
9732   3      //#line 161
9733   3                ;
9734   3              }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 173 

9735   2      
9736   2            if (((/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail + 1) & ((1 << 8) - 1)) == (/*RfHar
             -dwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head & ((1 << 8) - 1))) 
9737   2              {
9738   3              }
9739   2      
9740   2      
9741   2            {
9742   3      //#line 169
9743   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[/*RfHardwareRxC.RfHardwareRxP*/RfHard
             -wareRxP__0__rxbuf_tail & ((1 << 8) - 1)] = RFD;
9744   3      //#line 169
9745   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail = (/*RfHardwareRxC.RfHardwareRxP*/RfHa
             -rdwareRxP__0__rxbuf_tail + 1) & ((1 << 8) - 1);
9746   3            }
9747   2      //#line 169
9748   2            ;
9749   2          }
9750   1      
9751   1      
9752   1        {
9753   2      //#line 173
9754   2          TopTaskMgrP__m_task_flag[1] = TRUE;
9755   2        }
9756   1      //#line 173
9757   1        ;
9758   1      }
9759          
9760          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
9761          #define RfInterruptsP__InterruptFIFOP__fired(void) RfHardwareRxP__0__InterruptFIFOP__fired()
9762          //# 92 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
9763          static  /*inline*/   void RfInterruptsP__INT_RF__fired(void)
9764          {
9765   1      
9766   1      
9767   1        if ((RFIRQF1 & (1 << 3)) & ((uint8_t xdata *)0)[0x61A4]) 
9768   1          {
9769   2      
9770   2      
9771   2      
9772   2      
9773   2      
9774   2      
9775   2            RFIRQF1 = ~(1 << 3);
9776   2          }
9777   1        else {
9778   2          if ((RFIRQF1 & (1 << 4)) & ((uint8_t xdata *)0)[0x61A4]) 
9779   2            {
9780   3      
9781   3              RFIRQF1 = ~(1 << 4);
9782   3            }
9783   2          else {
9784   3            if ((RFIRQF1 & (1 << 0)) & ((uint8_t xdata *)0)[0x61A4]) 
9785   3              {
9786   4                (
9787   4                (uint8_t xdata *)0)[0x61A4] &= ~(1 << 0);
9788   4              }
9789   3            }
9790   2          }
9791   1      
9792   1      
9793   1      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 174 

9794   1        if ((RFIRQF0 & (1 << 2)) & ((uint8_t xdata *)0)[0x61A3]) 
9795   1          {
9796   2      
9797   2      
9798   2      
9799   2      
9800   2            RfInterruptsP__InterruptFIFOP__fired();
9801   2      
9802   2            RFIRQF0 = ~(1 << 2);
9803   2          }
9804   1      
9805   1      
9806   1      
9807   1        S1CON = 0x00;
9808   1      }
9809          
9810          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9811          #define PlatformInterruptC__INT_RF__fired(void) RfInterruptsP__INT_RF__fired()
9812          //# 536 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
9813          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__def
             -ault__captured(uint16_t time)
9814          //#line 536
9815          {
9816   1      }
9817          
9818          //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
9819          #define HplCC2530Timer1P__0__CaptureChannel2__captured(arg_0x7e8e7ba0) HplCC2530Timer1P__0__CaptureChannel
             -2__default__captured(arg_0x7e8e7ba0)
9820          //# 454 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
9821          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void)
9822          {
9823   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9824   2          {
9825   3            if (((uint8_t xdata *)0)[0x62A4] & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH4IF) 
9826   3              {
9827   4                T1STAT &= ~(1 << CC2530_T1STAT_CH4IF);
9828   4                T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
9829   4      
9830   4      
9831   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 4;
9832   4                {
9833   5      //#line 465
9834   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9835   5                }
9836   4      //#line 465
9837   4                ;
9838   4              }
9839   3      
9840   3            if (((uint8_t xdata *)0)[0x62A3] & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH3IF) 
9841   3              {
9842   4                T1STAT &= ~(1 << CC2530_T1STAT_CH3IF);
9843   4                T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
9844   4      
9845   4      
9846   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 3;
9847   4                {
9848   5      //#line 475
9849   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9850   5                }
9851   4      //#line 475
9852   4                ;
9853   4              }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 175 

9854   3      
9855   3            if (T1CCTL2 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH2IF) 
9856   3              {
9857   4                uint16_t value;
9858   4      
9859   4                T1STAT &= ~(1 << CC2530_T1STAT_CH2IF);
9860   4      
9861   4                if (!(T1CCTL2 & (1 << CC2530_T1CCTLx_CPSEL))) 
9862   4                  {
9863   5                    value = T1CC2L;
9864   5                    value += T1CC2H << 8;
9865   5      
9866   5                    /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__captured(value);
9867   5                  }
9868   4                else 
9869   4                  {
9870   5                    T1CCTL2 &= ~(1 << CC2530_T1CCTLx_IM);
9871   5      
9872   5      
9873   5                    /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 2;
9874   5                    {
9875   6      //#line 497
9876   6                      TopTaskMgrP__m_task_flag[0] = TRUE;
9877   6                    }
9878   5      //#line 497
9879   5                    ;
9880   5                  }
9881   4              }
9882   3      
9883   3            if (T1CCTL1 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH1IF) 
9884   3              {
9885   4                T1STAT &= ~(1 << CC2530_T1STAT_CH1IF);
9886   4                T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
9887   4      
9888   4      
9889   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 1;
9890   4                {
9891   5      //#line 508
9892   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9893   5                }
9894   4      //#line 508
9895   4                ;
9896   4              }
9897   3            if (T1CCTL0 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH0IF) 
9898   3              {
9899   4                T1STAT &= ~(1 << CC2530_T1STAT_CH0IF);
9900   4                T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
9901   4      
9902   4      
9903   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 0;
9904   4                {
9905   5      //#line 517
9906   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9907   5                }
9908   4      //#line 517
9909   4                ;
9910   4              }
9911   3      
9912   3            if (T1STAT & CC2530_T1_OVFIF) 
9913   3              {
9914   4                T1STAT &= ~(1 << CC2530_T1STAT_OVFIF);
9915   4      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 176 

9916   4      
9917   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 5;
9918   4                {
9919   5      //#line 526
9920   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9921   5                }
9922   4      //#line 526
9923   4                ;
9924   4              }
9925   3          }
9926   2      //#line 528
9927   2          __nesc_atomic_end(__nesc_atomic); }
9928   1      }
9929          
9930          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9931          #define PlatformInterruptC__INT_TIM1__fired(void) HplCC2530Timer1P__0__INT_TIM1__fired()
9932          //# 76 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9933          static  /*inline*/    void PlatformInterruptC__INT_UART0_RX__default__fired(void)
9934          {
9935   1        URX0IF = 0;
9936   1      }
9937          
9938          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9939          #define PlatformInterruptC__INT_UART0_RX__fired(void) PlatformInterruptC__INT_UART0_RX__default__fired()
9940          //# 88 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9941          static  /*inline*/    void PlatformInterruptC__INT_UART0_TX__default__fired(void)
9942          {
9943   1        UTX0IF = 0;
9944   1      }
9945          
9946          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9947          #define PlatformInterruptC__INT_UART0_TX__fired(void) PlatformInterruptC__INT_UART0_TX__default__fired()
9948          //# 101 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9949          static  /*inline*/    void PlatformInterruptC__INT_UART1_RX__default__fired(void)
9950          {
9951   1        URX1IF = 0;
9952   1      }
9953          
9954          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9955          #define PlatformInterruptC__INT_UART1_RX__fired(void) PlatformInterruptC__INT_UART1_RX__default__fired()
9956          //# 113 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9957          static  /*inline*/    void PlatformInterruptC__INT_UART1_TX__default__fired(void)
9958          {
9959   1        UTX1IF = 0;
9960   1      }
9961          
9962          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9963          #define PlatformInterruptC__INT_UART1_TX__fired(void) PlatformInterruptC__INT_UART1_TX__default__fired()
9964          //# 126 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9965          static  /*inline*/    void PlatformInterruptC__INT_ST__default__fired(void)
9966          {
9967   1        STIF = 0;
9968   1      }
9969          
9970          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9971          #define PlatformInterruptC__INT_ST__fired(void) PlatformInterruptC__INT_ST__default__fired()
9972          //# 146 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9973          static  /*inline*/    void PlatformInterruptC__INT_P0__default__fired(void)
9974          {
9975   1        P0IFG = 0x00;
9976   1        P0IF = 0;
9977   1      }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 177 

9978          
9979          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9980          #define PlatformInterruptC__INT_P0__fired(void) PlatformInterruptC__INT_P0__default__fired()
9981          //# 152 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9982          static  /*inline*/    void PlatformInterruptC__INT_P1__default__fired(void)
9983          {
9984   1        P1IFG = 0x00;
9985   1        P1IF = 0;
9986   1      }
9987          
9988          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9989          #define PlatformInterruptC__INT_P1__fired(void) PlatformInterruptC__INT_P1__default__fired()
9990          //# 64 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
9991          static   /*inline*/   void __nesc_disable_interrupt(void)
9992          //#line 64
9993          {
9994   1      //#line 64
9995   1        EA = 0;
9996   1      }
9997          
9998          //# 56 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
9999            int main(void)
10000  00      //#line 56
10001  00      {
10002  01      
10003  01      
10004  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10005  02          {
10006  03      
10007  03      
10008  03      
10009  03      
10010  03      
10011  03            {
10012  04            }
10013  03      //#line 66
10014  03            ;
10015  03      
10016  03            RealMainP__Scheduler__init();
10017  03      
10018  03      
10019  03      
10020  03      
10021  03      
10022  03            RealMainP__PlatformInit__init();
10023  03            while (RealMainP__Scheduler__runNextTask()) ;
10024  03      
10025  03      
10026  03      
10027  03      
10028  03      
10029  03            RealMainP__SoftwareInit__init();
10030  03            while (RealMainP__Scheduler__runNextTask()) ;
10031  03          }
10032  02      //#line 83
10033  02          __nesc_atomic_end(__nesc_atomic); }
10034  01      
10035  01      
10036  01        __nesc_enable_interrupt();
10037  01      
10038  01        RealMainP__Boot__booted();
10039  01      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 178 

10040  01      
10041  01        RealMainP__Scheduler__taskLoop();
10042  01      
10043  01      
10044  01      
10045  01      
10046  01        return -1;
10047  01      }
10048  00      
10049  00      //# 11 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
10050  00      static error_t PlatformP__clockSelect32k(uint8_t source)
10051  00      {
10052  01      
10053  01      
10054  01        if (!(CLKCONSTA & 0x40)) {
10055  02          return FAIL;
10056  02          }
10057  01        if (source == 0) {
10058  02            CLKCONCMD &= ~0x80;
10059  02          }
10060  01        else {
10061  02      //#line 21
10062  02          if (source == 1) {
10063  03              CLKCONCMD |= 0x80;
10064  03            }
10065  02          }
10066  01      //#line 24
10067  01        do {
10068  02      //#line 24
10069  02            uint8_t ____clkcon;
10070  02      //#line 24
10071  02            uint8_t ____clkconsta;
10072  02      
10073  02      //#line 24
10074  02            ____clkcon = CLKCONCMD;
10075  02      //#line 24
10076  02            do {
10077  03      //#line 24
10078  03                ____clkconsta = CLKCONSTA;
10079  03              }
10080  02            while (
10081  02      //#line 24
10082  02            ____clkconsta != ____clkcon);
10083  02          }
10084  01        while (
10085  01      //#line 24
10086  01        24 == -1);
10087  01      
10088  01        return 0;
10089  01      }
10090  00      
10091  00      static void PlatformP__clockSetMainSrc(uint8_t source)
10092  00      {
10093  01        register uint8_t osc32k_bm = CLKCONCMD & 0x80;
10094  01      
10095  01      
10096  01      
10097  01      
10098  01      
10099  01        SLEEPCMD &= ~0x04;
10100  01        while (!(SLEEPSTA & 0x20) || (SLEEPSTA & 0x04) != 0) ;
10101  01      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 179 

10102  01      
10103  01      
10104  01        if (source == 1) {
10105  02            CLKCONCMD = ((osc32k_bm | 0x40) | (0x01 << 3)) | 0x01;
10106  02          }
10107  01        else {
10108  02      //#line 45
10109  02          if (source == 0) {
10110  03              CLKCONCMD = osc32k_bm | (0x00 << 3);
10111  03            }
10112  02          }
10113  01      //#line 48
10114  01        do {
10115  02      //#line 48
10116  02            uint8_t ____clkcon;
10117  02      //#line 48
10118  02            uint8_t ____clkconsta;
10119  02      
10120  02      //#line 48
10121  02            ____clkcon = CLKCONCMD;
10122  02      //#line 48
10123  02            do {
10124  03      //#line 48
10125  03                ____clkconsta = CLKCONSTA;
10126  03              }
10127  02            while (
10128  02      //#line 48
10129  02            ____clkconsta != ____clkcon);
10130  02          }
10131  01        while (
10132  01      //#line 48
10133  01        48 == -1);
10134  01        SLEEPCMD |= 0x04;
10135  01      }
10136  00      
10137  00      //# 108 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
10138  00      static void FlashIEEEP__readFromFlash(void)
10139  00      {
10140  01        /* atomic removed: atomic calls only */
10141  01        {
10142  02          FlashIEEEP__HalFlash__read(FlashIEEEP__m_ieee_flash, 0x3FFE8, sizeof FlashIEEEP__m_ieee_flash);
10143  02      
10144  02      
10145  02          FlashIEEEP__ieeeProtect();
10146  02      
10147  02      
10148  02          FlashIEEEP__m_ieee[0] = FlashIEEEP__m_ieee_flash[7];
10149  02          FlashIEEEP__m_ieee[1] = FlashIEEEP__m_ieee_flash[6];
10150  02          FlashIEEEP__m_ieee[2] = FlashIEEEP__m_ieee_flash[5];
10151  02          FlashIEEEP__m_ieee[3] = FlashIEEEP__m_ieee_flash[4];
10152  02          FlashIEEEP__m_ieee[4] = FlashIEEEP__m_ieee_flash[3];
10153  02          FlashIEEEP__m_ieee[5] = FlashIEEEP__m_ieee_flash[2];
10154  02          FlashIEEEP__m_ieee[6] = FlashIEEEP__m_ieee_flash[1];
10155  02          FlashIEEEP__m_ieee[7] = FlashIEEEP__m_ieee_flash[0];
10156  02        }
10157  01      }
10158  00      
10159  00      //# 58 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
10160  00      static  error_t HalFlashP__HalFlash__erase(uint32_t address)
10161  00      {
10162  01        uint8_t page;
10163  01        uint16_t old;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 180 

10164  01        uint8_t old_ea;
10165  01      
10166  01        /* atomic removed: atomic calls only */
10167  01        {
10168  02          page = address >> 11;
10169  02      
10170  02      
10171  02      
10172  02          while (((uint8_t xdata *)0)[0x6270] & 0x80) ;
10173  02          ((uint8_t xdata *)0)[0x6272] = page << 1;
10174  02          ((uint8_t xdata *)0)[0x6270] |= 0x01;
10175  02          while (((uint8_t xdata *)0)[0x6270] & 0x80) ;
10176  02        }
10177  01      
10178  01        return 0;
10179  01      }
10180  00      
10181  00      //# 193 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
10182  00      static  void FlashIEEEP__FlashIEEE__WriteToRegister(void)
10183  00      {
10184  01        uint16_t addr;
10185  01      //#line 195
10186  01        uint16_t pan;
10187  01      
10188  01        (
10189  01        (uint8_t xdata *)0)[0x616A] = FlashIEEEP__m_ieee[0];
10190  01        ((uint8_t xdata *)0)[0x616B] = FlashIEEEP__m_ieee[1];
10191  01        ((uint8_t xdata *)0)[0x616C] = FlashIEEEP__m_ieee[2];
10192  01        ((uint8_t xdata *)0)[0x616D] = FlashIEEEP__m_ieee[3];
10193  01        ((uint8_t xdata *)0)[0x616E] = FlashIEEEP__m_ieee[4];
10194  01        ((uint8_t xdata *)0)[0x616F] = FlashIEEEP__m_ieee[5];
10195  01        ((uint8_t xdata *)0)[0x6170] = FlashIEEEP__m_ieee[6];
10196  01        ((uint8_t xdata *)0)[0x6171] = FlashIEEEP__m_ieee[7];
10197  01      
10198  01        pan = FlashIEEEP__FlashIEEE__GetPANID();
10199  01        addr = FlashIEEEP__FlashIEEE__GetShortAddress();
10200  01        (
10201  01        (uint8_t xdata *)0)[0x6172] = (uint16_t )pan & 0xFF;
10202  01        ((uint8_t xdata *)0)[0x6173] = ((uint16_t )pan >> 8) & 0xFF;
10203  01        (
10204  01        (uint8_t xdata *)0)[0x6174] = (uint16_t )addr & 0xFF;
10205  01        ((uint8_t xdata *)0)[0x6175] = ((uint16_t )addr >> 8) & 0xFF;
10206  01      }
10207  00      
10208  00      //#line 144
10209  00      static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void)
10210  00      {
10211  01        return (FlashIEEEP__m_ieee[4] << 8) | FlashIEEEP__m_ieee[5];
10212  01      }
10213  00      
10214  00      
10215  00      static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void)
10216  00      {
10217  01        return (FlashIEEEP__m_ieee[6] << 8) | FlashIEEEP__m_ieee[7];
10218  01      }
10219  00      
10220  00      //#line 217
10221  00      static  void FlashIEEEP__FlashIEEE__WriteToAM(void)
10222  00      {
10223  01        FlashIEEEP__ActiveMessageAddress__setAddress((uint8_t )(FlashIEEEP__FlashIEEE__GetPANID() & 0xFF), 
10224  01        FlashIEEEP__FlashIEEE__GetShortAddress());
10225  01      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 181 

10226  01        TOS_NODE_ID = FlashIEEEP__FlashIEEE__GetShortAddress();
10227  01      
10228  01        TOS_IEEE_SADDR = FlashIEEEP__FlashIEEE__GetShortAddress();
10229  01        TOS_IEEE_PANID = FlashIEEEP__FlashIEEE__GetPANID();
10230  01      }
10231  00      
10232  00      //# 198 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
10233  00      static  bool SchedulerBasicP__Scheduler__runNextTask(void)
10234  00      {
10235  01        uint8_t nextTask;
10236  01      
10237  01        /* atomic removed: atomic calls only */
10238  01      //#line 202
10239  01        {
10240  02          nextTask = SchedulerBasicP__popTask();
10241  02      
10242  02          if (nextTask == SchedulerBasicP__NO_TASK) 
10243  02            {
10244  03              {
10245  04                unsigned char __nesc_temp = 
10246  04      //#line 207
10247  04                FALSE;
10248  04      
10249  04      //#line 207
10250  04                return __nesc_temp;
10251  04              }
10252  03            }
10253  02        }
10254  01      //#line 210
10255  01        SchedulerBasicP__TaskBasic__runTask(nextTask);
10256  01        return TRUE;
10257  01      }
10258  00      
10259  00      //#line 269
10260  00      static   void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id)
10261  00      {
10262  01      }
10263  00      
10264  00      //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
10265  00      static  void SchedulerBasicP__TaskBasic__runTask(uint8_t arg_0x7ec64200){
10266  01      //#line 64
10267  01        switch (arg_0x7ec64200) {
10268  02      //#line 64
10269  02          case DigRFNodeP__sensorDataTask:
10270  02      //#line 64
10271  02            DigRFNodeP__sensorDataTask__runTask();
10272  02      //#line 64
10273  02            break;
10274  02      //#line 64
10275  02          case DigRFNodeP__sendMsgTask:
10276  02      //#line 64
10277  02            DigRFNodeP__sendMsgTask__runTask();
10278  02      //#line 64
10279  02            break;
10280  02      //#line 64
10281  02          case SHTP__readDoneTask:
10282  02      //#line 64
10283  02            SHTP__readDoneTask__runTask();
10284  02      //#line 64
10285  02            break;
10286  02      //#line 64
10287  02          case RealMainP__fakeTask:
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 182 

10288  02      //#line 64
10289  02            RealMainP__fakeTask__runTask();
10290  02      //#line 64
10291  02            break;
10292  02      //#line 64
10293  02          case /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask:
10294  02      //#line 64
10295  02            /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask();
10296  02      //#line 64
10297  02            break;
10298  02      //#line 64
10299  02          case /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer:
10300  02      //#line 64
10301  02            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask();
10302  02      //#line 64
10303  02            break;
10304  02      //#line 64
10305  02          case /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__resendTask:
10306  02      //#line 64
10307  02            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySend
             -P__0__resendTask__runTask();
10308  02      //#line 64
10309  02            break;
10310  02      //#line 64
10311  02          case /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__signalDoneTask:
10312  02      //#line 64
10313  02            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0__signalDoneTask__runTask();
10314  02      //#line 64
10315  02            break;
10316  02      //#line 64
10317  02          case /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext:
10318  02      //#line 64
10319  02            /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__runTask();
10320  02      //#line 64
10321  02            break;
10322  02      //#line 64
10323  02          case RfMacBaseCsmaP__signalDoneTask:
10324  02      //#line 64
10325  02            RfMacBaseCsmaP__signalDoneTask__runTask();
10326  02      //#line 64
10327  02            break;
10328  02      //#line 64
10329  02          case RfMacBaseCsmaP__doGo:
10330  02      //#line 64
10331  02            RfMacBaseCsmaP__doGo__runTask();
10332  02      //#line 64
10333  02            break;
10334  02      //#line 64
10335  02          case /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__sendAckTask:
10336  02      //#line 64
10337  02            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__0__sendAckTask__runTask();
10338  02      //#line 64
10339  02            break;
10340  02      //#line 64
10341  02          case AtosNetStdP__rebootTask:
10342  02      //#line 64
10343  02            AtosNetStdP__rebootTask__runTask();
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 183 

10344  02      //#line 64
10345  02            break;
10346  02      //#line 64
10347  02          case AtosNetStdP__nodeStatusUpTask:
10348  02      //#line 64
10349  02            AtosNetStdP__nodeStatusUpTask__runTask();
10350  02      //#line 64
10351  02            break;
10352  02      //#line 64
10353  02          case AtosNetStdP__sendDoneCheck:
10354  02      //#line 64
10355  02            AtosNetStdP__sendDoneCheck__runTask();
10356  02      //#line 64
10357  02            break;
10358  02      //#line 64
10359  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__resendTask:
10360  02      //#line 64
10361  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__resendTask__runTask();
10362  02      //#line 64
10363  02            break;
10364  02      //#line 64
10365  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__signalDoneTask:
10366  02      //#line 64
10367  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__signalDoneTask__runTask();
10368  02      //#line 64
10369  02            break;
10370  02      //#line 64
10371  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__sendAckTask:
10372  02      //#line 64
10373  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__1__sendAckTask__runTask();
10374  02      //#line 64
10375  02            break;
10376  02      //#line 64
10377  02          default:
10378  02      //#line 64
10379  02            SchedulerBasicP__TaskBasic__default__runTask(arg_0x7ec64200);
10380  02      //#line 64
10381  02            break;
10382  02      //#line 64
10383  02          }
10384  01      //#line 64
10385  01      }
10386  00      //#line 64
10387  00      //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
10388  00      static  error_t AMResourceCenterP__AMResource__send(uint8_t resource_id, am_addr_t addr, message_t *msg, 
             -uint8_t len)
10389  00      {
10390  01        unsigned char *__nesc_temp43;
10391  01        unsigned char *__nesc_temp42;
10392  01      
10393  01      //#line 19
10394  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10395  02          {
10396  03            rf_header_t *header = (rf_header_t *)msg->header;
10397  03            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
10398  03      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 184 

10399  03      
10400  03      
10401  03            AMResourceCenterP__Packet__setPayloadLength(msg, len);
10402  03      
10403  03      
10404  03            __nesc_hton_leuint16((unsigned char *)&header->fcf, 0);
10405  03            if (addr != 0xFFFF) 
10406  03              {
10407  04                (__nesc_temp42 = (unsigned char *)&header->fcf, __nesc_hton_leuint16(__nesc_temp42, __nesc_ntoh
             -_leuint16(__nesc_temp42) | (1 << IEEE154_FCF_ACK_REQ)));
10408  04              }
10409  03            (__nesc_temp43 = (unsigned char *)&header->fcf, __nesc_hton_leuint16(__nesc_temp43, __nesc_ntoh_leu
             -int16(__nesc_temp43) | ((((IEEE154_TYPE_DATA << IEEE154_FCF_FRAME_TYPE) | (
10410  03            1 << IEEE154_FCF_INTRAPAN)) | (
10411  03            IEEE154_ADDR_SHORT << IEEE154_FCF_DEST_ADDR_MODE)) | (
10412  03            IEEE154_ADDR_SHORT << IEEE154_FCF_SRC_ADDR_MODE))));
10413  03      
10414  03      
10415  03      
10416  03      
10417  03      
10418  03      
10419  03      
10420  03      
10421  03      
10422  03            AMResourceCenterP__AMPacket__setGroup(msg, AMResourceCenterP__AMPacket__localGroup());
10423  03      
10424  03      
10425  03      
10426  03            AMResourceCenterP__AMPacket__setDestination(msg, addr);
10427  03      
10428  03      
10429  03            AMResourceCenterP__AMPacket__setSource(msg, AMResourceCenterP__AMPacket__address());
10430  03      
10431  03      
10432  03            __nesc_hton_int8((unsigned char *)&meta_data->rssi, 0);
10433  03            __nesc_hton_uint8((unsigned char *)&meta_data->lqi, 0);
10434  03      
10435  03      
10436  03      
10437  03      
10438  03      
10439  03            {
10440  04              unsigned char __nesc_temp = 
10441  04      //#line 64
10442  04              AMResourceCenterP__CoreSend__send(msg, __nesc_ntoh_leuint8((unsigned char *)&header->length));
10443  04      
10444  04              {
10445  05      //#line 64
10446  05                __nesc_atomic_end(__nesc_atomic); 
10447  05      //#line 64
10448  05                return __nesc_temp;
10449  05              }
10450  04            }
10451  03          }
10452  02      //#line 67
10453  02          __nesc_atomic_end(__nesc_atomic); }
10454  01      }
10455  00      
10456  00      //# 8 "/opt/atos/tos/chips/cc2530/watchdog/WatchDogP.nc"
10457  00      static  void WatchDogP__WatchDog__resetCpu(void)
10458  00      {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 185 

10459  01        /* atomic removed: atomic calls only */
10460  01        {
10461  02          uint32_t i = 0;
10462  02      
10463  02          WDCTL = 0x00;
10464  02          WDCTL = 0x0B;
10465  02      
10466  02      
10467  02          while (i++ < 0xFFFFFF) ;
10468  02        }
10469  01      }
10470  00      
10471  00      //# 26 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
10472  00      static  am_addr_t RfPacketP__AMPacket__address(void)
10473  00      {
10474  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10475  02          {
10476  03            if (!RfPacketP__m_address_saved) 
10477  03              {
10478  04                RfPacketP__m_addr = RfPacketP__ActiveMessageAddress__amAddress();
10479  04                RfPacketP__m_address_saved = TRUE;
10480  04              }
10481  03      
10482  03      
10483  03            if (RfPacketP__m_addr != RfPacketP__ActiveMessageAddress__amAddress()) 
10484  03              {
10485  04      
10486  04      
10487  04                RfPacketP__WatchDog__resetCpu();
10488  04              }
10489  03          }
10490  02      //#line 43
10491  02          __nesc_atomic_end(__nesc_atomic); }
10492  01      
10493  01      
10494  01        return RfPacketP__ActiveMessageAddress__amAddress();
10495  01      }
10496  00      
10497  00      //# 95 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
10498  00      static   am_addr_t ActiveMessageAddressC__amAddress(void)
10499  00      //#line 95
10500  00      {
10501  01        am_addr_t myAddr;
10502  01      
10503  01      //#line 97
10504  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10505  02      //#line 97
10506  02          myAddr = ActiveMessageAddressC__addr;
10507  02      //#line 97
10508  02          __nesc_atomic_end(__nesc_atomic); }
10509  01        return myAddr;
10510  01      }
10511  00      
10512  00      //# 82 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
10513  00      static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSe
             -ndC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t idx)
10514  00      {
10515  01        /* atomic removed: atomic calls only */
10516  01        {
10517  02          idx += /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head;
10518  02          idx %= 4;
10519  02          {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 186 

10520  03            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
10521  03      //#line 88
10522  03            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[idx];
10523  03      
10524  03      //#line 88
10525  03            return __nesc_temp;
10526  03          }
10527  02        }
10528  01      }
10529  00      
10530  00      //# 264 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
10531  00      static   error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id)
10532  00      {
10533  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10534  02      //#line 266
10535  02          {
10536  03      //#line 266
10537  03            {
10538  04              unsigned char __nesc_temp = 
10539  04      //#line 266
10540  04              SchedulerBasicP__pushTask(id) ? 0 : EBUSY;
10541  04      
10542  04              {
10543  05      //#line 266
10544  05                __nesc_atomic_end(__nesc_atomic); 
10545  05      //#line 266
10546  05                return __nesc_temp;
10547  05              }
10548  04            }
10549  03          }
10550  02      //#line 269
10551  02          __nesc_atomic_end(__nesc_atomic); }
10552  01      }
10553  00      
10554  00      //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
10555  00      static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__signalDone(message_t *msg, error_t result)
10556  00      {
10557  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10558  02          {
10559  03            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1__m_sending) 
10560  03              {
10561  04                {
10562  05      //#line 30
10563  05                  __nesc_atomic_end(__nesc_atomic); 
10564  05      //#line 30
10565  05                  return;
10566  05                }
10567  04              }
10568  03          }
10569  02      //#line 33
10570  02          __nesc_atomic_end(__nesc_atomic); }
10571  01      
10572  01      
10573  01      
10574  01        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -1__AMSend__sendDone(msg, result);
10575  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10576  02      //#line 38
10577  02          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1__m_sending = FALSE;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 187 

10578  02      //#line 38
10579  02          __nesc_atomic_end(__nesc_atomic); }
10580  01      }
10581  00      
10582  00      
10583  00      
10584  00      static error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__doSend(message_t *msg)
10585  00      {
10586  01        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__SubAMSend__send(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1__AMPacket__destination(msg), msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySend
             -P*/RfReliableMacRetrySendP__1__Packet__payloadLength(msg));
10587  01      }
10588  00      
10589  00      //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
10590  00      static  void *RfPacketP__Packet__getPayload(message_t *msg, uint8_t *len)
10591  00      {
10592  01        if (len != (void *)0) 
10593  01          {
10594  02            *len = RfPacketP__Packet__payloadLength(msg);
10595  02          }
10596  01      
10597  01        return (uint8_t *)msg->_data;
10598  01      }
10599  00      
10600  00      //# 183 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
10601  00      static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(uint8_t num, uin
             -t32_t dt)
10602  00      {
10603  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10604  02          {
10605  03            {
10606  04      //#line 187
10607  04              {
10608  05      //#line 187
10609  05                if (1 >= uart_debug_level) {
10610  06      //#line 187
10611  06                    {
10612  07      //#line 187
10613  07                      sprintf(uart_debug_buf, "VirtualizeTimerC.Timer.startOneShot dt=%ld\n", dt);
10614  07                    }
10615  06      //#line 187
10616  06                    ATOS_DEBUG_UART_PRINT();
10617  06                  }
10618  05              }
10619  04            }
10620  03      //#line 187
10621  03            ;
10622  03            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(num, /*HilTimerMilliC.Virtualize
             -TimerC*/VirtualizeTimerC__0__TimerFrom__getNow(), dt, TRUE);
10623  03          }
10624  02      //#line 189
10625  02          __nesc_atomic_end(__nesc_atomic); }
10626  01      }
10627  00      
10628  00      //# 55 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
10629  00      static void ATOS_DEBUG_UART_PRINT(void)
10630  00      {
10631  01        int i = 0;
10632  01      
10633  01      //#line 58
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 188 

10634  01        while (i < 256 && uart_debug_buf[i] != '\0') 
10635  01          {
10636  02            ATOS_DEBUG_UART_PUTC(uart_debug_buf[i++]);
10637  02          }
10638  01      }
10639  00      
10640  00      //# 57 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
10641  00      static void uart0PutChar(char c)
10642  00      {
10643  01        uint16_t i;
10644  01      
10645  01        for (i = 0; i < 10000; i++) 
10646  01          {
10647  02            if (!(U0CSR & 0x01)) {
10648  03              break;
10649  03              }
10650  02          }
10651  01      //#line 66
10652  01        U0DBUF = c;
10653  01      
10654  01        for (i = 0; i < 10000; i++) 
10655  01          {
10656  02            if (!(U0CSR & 0x01)) {
10657  03              break;
10658  03              }
10659  02          }
10660  01      }
10661  00      
10662  00      //# 161 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
10663  00      static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(uint8_t num, uint32_t t0, 
             -uint32_t dt, bool isoneshot)
10664  00      {
10665  01        /* atomic removed: atomic calls only */
10666  01        {
10667  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtualize
             -TimerC*/VirtualizeTimerC__0__m_timers[num];
10668  02      
10669  02      //#line 166
10670  02          timer->t0 = t0;
10671  02          timer->dt = dt;
10672  02          timer->isoneshot = isoneshot;
10673  02          timer->isrunning = TRUE;
10674  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask();
10675  02        }
10676  01      }
10677  00      
10678  00      //# 69 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
10679  00      static   /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Tra
             -nsformCounterC__0__Counter__get(void)
10680  00      {
10681  01        /* atomic removed: atomic calls only */
10682  01        {
10683  02          /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type rv = 0;
10684  02          /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type high = /*CounterMilli32C.Transfor
             -m*/TransformCounterC__0__m_upper;
10685  02          /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type low = /*CounterMilli32C.Transform*/
             -TransformCounterC__0__CounterFrom__get();
10686  02      
10687  02          if (/*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending()) 
10688  02            {
10689  03      
10690  03      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 189 

10691  03      
10692  03      
10693  03      
10694  03      
10695  03              high++;
10696  03              low = /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__get();
10697  03            }
10698  02      
10699  02          {
10700  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type high_to = high;
10701  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type low_to = low >> /*CounterMilli32C.T
             -ransform*/TransformCounterC__0__LOW_SHIFT_RIGHT;
10702  03      
10703  03      //#line 92
10704  03            rv = (high_to << /*CounterMilli32C.Transform*/TransformCounterC__0__HIGH_SHIFT_LEFT) | low_to;
10705  03          }
10706  02      
10707  02          {
10708  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type __nesc_temp = 
10709  03      //#line 95
10710  03            rv;
10711  03      
10712  03      //#line 95
10713  03            return __nesc_temp;
10714  03          }
10715  02        }
10716  01      }
10717  00      
10718  00      //# 316 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
10719  00      static   uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void)
10720  00      {
10721  01        /* atomic removed: atomic calls only */
10722  01        {
10723  02          uint16_t r;
10724  02      
10725  02          {
10726  03      //#line 322
10727  03            r = T1CNTL;
10728  03      //#line 322
10729  03            r += T1CNTH << 8;
10730  03          }
10731  02      //#line 322
10732  02          ;
10733  02      
10734  02          {
10735  03            unsigned short __nesc_temp = 
10736  03      //#line 324
10737  03            r;
10738  03      
10739  03      //#line 324
10740  03            return __nesc_temp;
10741  03          }
10742  02        }
10743  01      }
10744  00      
10745  00      //# 35 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
10746  00      static  void *RfReliableMacPacketP__Packet__getPayload(message_t *msg, uint8_t *len)
10747  00      {
10748  01        if (len != (void *)0) 
10749  01          {
10750  02            *len = RfReliableMacPacketP__Packet__payloadLength(msg);
10751  02          }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 190 

10752  01      
10753  01        return RfReliableMacPacketP__SubPacket__getPayload(msg, (void *)0) + sizeof(rf_rmac_header_t );
10754  01      }
10755  00      
10756  00      //# 102 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
10757  00      static int AtosNetStdP__indexOfTraceItem(anstd_trace_t *trace, uint16_t node_id)
10758  00      {
10759  01        uint8_t i;
10760  01      
10761  01      //#line 105
10762  01        for (i = 0; i < trace->total_count; ++i) 
10763  01          {
10764  02            if (trace->items[i].node_id == node_id) 
10765  02              {
10766  03                return i;
10767  03              }
10768  02          }
10769  01      
10770  01        return -1;
10771  01      }
10772  00      
10773  00      static void AtosNetStdP__traceBackward(message_t *msg, anstd_trace_ack_t *trace_ack, int index)
10774  00      {
10775  01        uint16_t node_id = 0xFFFF;
10776  01      
10777  01      //#line 119
10778  01        memcpy(&AtosNetStdP__m_send_msg, msg, sizeof AtosNetStdP__m_send_msg);
10779  01      
10780  01        if (index > 0) 
10781  01          {
10782  02            node_id = trace_ack->items[index - 1].node_id;
10783  02            AtosNetStdP__AMSend__send(node_id, &AtosNetStdP__m_send_msg, AtosNetStdP__Packet__payloadLength(&At
             -osNetStdP__m_send_msg));
10784  02          }
10785  01      }
10786  00      
10787  00      //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
10788  00      static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
10789  00      {
10790  01        error_t result;
10791  01      
10792  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10793  02          {
10794  03            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetryS
             -endP*/RfReliableMacRetrySendP__1__PacketEx__getPacketHeader(msg);
10795  03            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
10796  03      
10797  03            if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending) 
10798  03              {
10799  04                {
10800  05                  unsigned char __nesc_temp = 
10801  05      //#line 85
10802  05                  FAIL;
10803  05      
10804  05                  {
10805  06      //#line 85
10806  06                    __nesc_atomic_end(__nesc_atomic); 
10807  06      //#line 85
10808  06                    return __nesc_temp;
10809  06                  }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 191 

10810  05                }
10811  04              }
10812  03            header->ack_req = addr != 0xFFFF;
10813  03      
10814  03            __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
10815  03      
10816  03            header->dsn = rf_rmac_dsn;
10817  03      
10818  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__AMPacket__setDestination(msg, addr);
10819  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__Packet__setPayloadLength(msg, len);
10820  03      
10821  03      
10822  03            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__doSend(msg);
10823  03      
10824  03            if (result == 0) 
10825  03              {
10826  04                rf_rmac_dsn++;
10827  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending = TRUE;
10828  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_msg = msg;
10829  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_retry_times = 0;
10830  04              }
10831  03      
10832  03            {
10833  04              unsigned char __nesc_temp = 
10834  04      //#line 109
10835  04              result;
10836  04      
10837  04              {
10838  05      //#line 109
10839  05                __nesc_atomic_end(__nesc_atomic); 
10840  05      //#line 109
10841  05                return __nesc_temp;
10842  05              }
10843  04            }
10844  03          }
10845  02      //#line 112
10846  02          __nesc_atomic_end(__nesc_atomic); }
10847  01      }
10848  00      
10849  00      //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
10850  00      static  uint8_t AtosNetStdP__Packet__payloadLength(message_t *arg_0x7eb23a40){
10851  01      //#line 67
10852  01        unsigned char result;
10853  01      //#line 67
10854  01      
10855  01      //#line 67
10856  01        result = RfReliableMacPacketP__Packet__payloadLength(arg_0x7eb23a40);
10857  01      //#line 67
10858  01      
10859  01      //#line 67
10860  01        return result;
10861  01      //#line 67
10862  01      }
10863  00      //#line 67
10864  00      //# 174 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
10865  00      static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(uint8_t num, ui
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 192 

             -nt32_t dt)
10866  00      {
10867  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10868  02          {
10869  03            {
10870  04      //#line 178
10871  04              {
10872  05      //#line 178
10873  05                if (1 >= uart_debug_level) {
10874  06      //#line 178
10875  06                    {
10876  07      //#line 178
10877  07                      sprintf(uart_debug_buf, "VirtualizeTimerC.Timer.startPeriodic dt=%ld\n", dt);
10878  07                    }
10879  06      //#line 178
10880  06                    ATOS_DEBUG_UART_PRINT();
10881  06                  }
10882  05              }
10883  04            }
10884  03      //#line 178
10885  03            ;
10886  03            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(num, /*HilTimerMilliC.Virtualize
             -TimerC*/VirtualizeTimerC__0__TimerFrom__getNow(), dt, FALSE);
10887  03          }
10888  02      //#line 180
10889  02          __nesc_atomic_end(__nesc_atomic); }
10890  01      }
10891  00      
10892  00      //# 64 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
10893  00      static void RfMacBaseCsmaP__signalDone(error_t result)
10894  00      {
10895  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10896  02          {
10897  03            RfMacBaseCsmaP__m_result = result;
10898  03          }
10899  02      //#line 69
10900  02          __nesc_atomic_end(__nesc_atomic); }
10901  01      
10902  01        RfMacBaseCsmaP__signalDoneTask__postTask();
10903  01      }
10904  00      
10905  00      //# 76 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
10906  00      static   void AMResourceCenterP__AMResource__default__sendDone(uint8_t resource_id, message_t *msg, error
             -_t error)
10907  00      {
10908  01      }
10909  00      
10910  00      //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
10911  00      static  void AMResourceCenterP__AMResource__sendDone(uint8_t arg_0x7e631dd8, message_t *arg_0x7e6460a8, e
             -rror_t arg_0x7e646230){
10912  01      //#line 7
10913  01        switch (arg_0x7e631dd8) {
10914  02      //#line 7
10915  02          case /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC_
             -_0__AM_RESOURCE_ID:
10916  02      //#line 7
10917  02            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMR
             -esourceP__0__AMResource__sendDone(arg_0x7e6460a8, arg_0x7e646230);
10918  02      //#line 7
10919  02            break;
10920  02      //#line 7
10921  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 193 

             -__2__AM_RESOURCE_ID:
10922  02      //#line 7
10923  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AM
             -ResourceP__1__AMResource__sendDone(arg_0x7e6460a8, arg_0x7e646230);
10924  02      //#line 7
10925  02            break;
10926  02      //#line 7
10927  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__3__AM_RESOURCE
             -_ID:
10928  02      //#line 7
10929  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__AM
             -Resource__sendDone(arg_0x7e6460a8, arg_0x7e646230);
10930  02      //#line 7
10931  02            break;
10932  02      //#line 7
10933  02          case /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__1__AM_RESOURCE_
             -ID:
10934  02      //#line 7
10935  02            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3__AMR
             -esource__sendDone(arg_0x7e6460a8, arg_0x7e646230);
10936  02      //#line 7
10937  02            break;
10938  02      //#line 7
10939  02          default:
10940  02      //#line 7
10941  02            AMResourceCenterP__AMResource__default__sendDone(arg_0x7e631dd8, arg_0x7e6460a8, arg_0x7e646230);
10942  02      //#line 7
10943  02            break;
10944  02      //#line 7
10945  02          }
10946  01      //#line 7
10947  01      }
10948  00      //#line 7
10949  00      //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
10950  00      static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__signalDone(message_t *msg, error_t result)
10951  00      {
10952  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10953  02          {
10954  03            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_sending) 
10955  03              {
10956  04                {
10957  05      //#line 57
10958  05                  __nesc_atomic_end(__nesc_atomic); 
10959  05      //#line 57
10960  05                  return;
10961  05                }
10962  04              }
10963  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__TimeoutTimer__stop();
10964  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__AckTimer__stop();
10965  03      
10966  03      
10967  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__m_msg = msg;
10968  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__m_result = result;
10969  03          }
10970  02      //#line 66
10971  02          __nesc_atomic_end(__nesc_atomic); }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 194 

10972  01      
10973  01        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__1__signalDoneTask__postTask();
10974  01      }
10975  00      
10976  00      //#line 51
10977  00      static void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__signalDone(message_t *msg, error_t result)
10978  00      {
10979  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10980  02          {
10981  03            if (!/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__m_sending) 
10982  03              {
10983  04                {
10984  05      //#line 57
10985  05                  __nesc_atomic_end(__nesc_atomic); 
10986  05      //#line 57
10987  05                  return;
10988  05                }
10989  04              }
10990  03            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0__TimeoutTimer__stop();
10991  03            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0__AckTimer__stop();
10992  03      
10993  03      
10994  03            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0__m_msg = msg;
10995  03            /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0__m_result = result;
10996  03          }
10997  02      //#line 66
10998  02          __nesc_atomic_end(__nesc_atomic); }
10999  01      
11000  01        /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMa
             -cSendP__0__signalDoneTask__postTask();
11001  01      }
11002  00      
11003  00      //# 96 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
11004  00      static void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm(void)
11005  00      {
11006  01        /* atomic removed: atomic calls only */
11007  01        {
11008  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type now = /*RfMacBaseCsmaC.Ala
             -rm32khz32C.Transform*/TransformAlarmC__1__Counter__get();
11009  02      //#line 100
11010  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type expires;
11011  02      //#line 100
11012  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type remaining;
11013  02      
11014  02      
11015  02      
11016  02          expires = /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 + /*RfMacBaseCsmaC.Alarm
             -32khz32C.Transform*/TransformAlarmC__1__m_dt;
11017  02      
11018  02      
11019  02          remaining = (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type )(expires - n
             -ow);
11020  02      
11021  02      
11022  02          if (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 <= now) 
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 195 

11023  02            {
11024  03              if (expires >= /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 && 
11025  03              expires <= now) {
11026  04                remaining = 0;
11027  04                }
11028  03            }
11029  02          else {
11030  03              if (expires >= /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 || 
11031  03              expires <= now) {
11032  04                remaining = 0;
11033  04                }
11034  03            }
11035  02          if (remaining > /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY) 
11036  02            {
11037  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 = now + /*RfMacBaseCsmaC.Alarm
             -32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
11038  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = remaining - /*RfMacBaseCsmaC
             -.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
11039  03              remaining = /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
11040  03            }
11041  02          else 
11042  02            {
11043  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 += /*RfMacBaseCsmaC.Alarm32khz
             -32C.Transform*/TransformAlarmC__1__m_dt;
11044  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = 0;
11045  03            }
11046  02      
11047  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__startAt((/*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__from_size_type )now << 0, 
11048  02          (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type )remaining << 0);
11049  02        }
11050  01      }
11051  00      
11052  00      //# 69 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
11053  00      static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transf
             -ormCounterC*/TransformCounterC__1__Counter__get(void)
11054  00      {
11055  01        /* atomic removed: atomic calls only */
11056  01        {
11057  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type rv = 0;
11058  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type high = /*Counter32khz32C.
             -TransformCounterC*/TransformCounterC__1__m_upper;
11059  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type low = /*Counter32khz32C.Tra
             -nsformCounterC*/TransformCounterC__1__CounterFrom__get();
11060  02      
11061  02          if (/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__isOverflowPending()) 
11062  02            {
11063  03      
11064  03      
11065  03      
11066  03      
11067  03      
11068  03      
11069  03              high++;
11070  03              low = /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__get();
11071  03            }
11072  02      
11073  02          {
11074  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type high_to = high;
11075  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type low_to = low >> /*Counter32
             -khz32C.TransformCounterC*/TransformCounterC__1__LOW_SHIFT_RIGHT;
11076  03      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 196 

11077  03      //#line 92
11078  03            rv = (high_to << /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__HIGH_SHIFT_LEFT) | low_
             -to;
11079  03          }
11080  02      
11081  02          {
11082  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type __nesc_temp = 
11083  03      //#line 95
11084  03            rv;
11085  03      
11086  03      //#line 95
11087  03            return __nesc_temp;
11088  03          }
11089  02        }
11090  01      }
11091  00      
11092  00      //# 69 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
11093  00      static   uint16_t CC2530RandomLfsrP__Random__rand16(void)
11094  00      //#line 69
11095  00      {
11096  01        uint16_t result;
11097  01      
11098  01        /* atomic removed: atomic calls only */
11099  01        ADCCON1 = (ADCCON1 & ~((1 << 3) | (1 << 2))) | (1 << 2);
11100  01      
11101  01        result = RNDH << 8;
11102  01        result += RNDL;
11103  01        return result;
11104  01      }
11105  00      
11106  00      //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
11107  00      static void /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__signalDone(message_t *msg, error_t result)
11108  00      {
11109  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11110  02          {
11111  03            if (!/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__m_sending) 
11112  03              {
11113  04                {
11114  05      //#line 30
11115  05                  __nesc_atomic_end(__nesc_atomic); 
11116  05      //#line 30
11117  05                  return;
11118  05                }
11119  04              }
11120  03          }
11121  02      //#line 33
11122  02          __nesc_atomic_end(__nesc_atomic); }
11123  01      
11124  01      
11125  01      
11126  01        /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0
             -__AMSend__sendDone(msg, result);
11127  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11128  02      //#line 38
11129  02          /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_0__m_sending = FALSE;
11130  02      //#line 38
11131  02          __nesc_atomic_end(__nesc_atomic); }
11132  01      }
11133  00      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 197 

11134  00      
11135  00      
11136  00      static error_t /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__doSend(message_t *msg)
11137  00      {
11138  01        return /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__SubAMSend__send(/*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__AMPacket__destination(msg), msg, /*DigRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
             -RfReliableMacRetrySendP__0__Packet__payloadLength(msg));
11139  01      }
11140  00      
11141  00      //# 61 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
11142  00      static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(uint32_t now)
11143  00      {
11144  01        /* atomic removed: atomic calls only */
11145  01        {
11146  02          uint8_t num;
11147  02      
11148  02          for (num = 0; num < /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS; num++) 
11149  02            {
11150  03              /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtua
             -lizeTimerC*/VirtualizeTimerC__0__m_timers[num];
11151  03      
11152  03              if (timer->isrunning) 
11153  03                {
11154  04                  uint32_t elapsed = now - timer->t0;
11155  04      
11156  04                  if (elapsed >= timer->dt) 
11157  04                    {
11158  05                      if (timer->isoneshot) 
11159  05                        {
11160  06                          timer->isrunning = FALSE;
11161  06                        }
11162  05                      else 
11163  05                        {
11164  06      
11165  06                          timer->t0 = now - elapsed % timer->dt;
11166  06                        }
11167  05      
11168  05                      {
11169  06      //#line 87
11170  06                        {
11171  07      //#line 87
11172  07                          if (1 >= uart_debug_level) {
11173  08      //#line 87
11174  08                              {
11175  09      //#line 87
11176  09                                sprintf(uart_debug_buf, "fireTimers %d, now=0x%lx,elapsed=0x%lx, dt=0x%lx,t0=0x
             -%lx\n", (int )num, elapsed, now, timer->dt, timer->t0);
11177  09                              }
11178  08      //#line 87
11179  08                              ATOS_DEBUG_UART_PRINT();
11180  08                            }
11181  07                        }
11182  06                      }
11183  05      //#line 87
11184  05                      ;
11185  05      
11186  05                      /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(num);
11187  05                    }
11188  04                }
11189  03            }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 198 

11190  02      
11191  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask();
11192  02        }
11193  01      }
11194  00      
11195  00      //# 96 "/opt/atos/tos/lib/atos/sensor/drv/SHTxx/SHTP.nc"
11196  00      static uint8_t SHTP__recvByte(uint8_t ack)
11197  00      {
11198  01        uint8_t i;
11199  01      //#line 98
11200  01        uint8_t val = 0;
11201  01      
11202  01        P1_DIR |= 1 << 7;
11203  01      
11204  01      
11205  01        P0_DIR |= 1 << 1;
11206  01        P0_1 = 1;
11207  01      
11208  01        P0_DIR &= ~(1 << 1);
11209  01      
11210  01        for (i = 0x80; i > 0; i /= 2) 
11211  01          {
11212  02      
11213  02            P1_7 = 1;
11214  02      
11215  02            {
11216  03      //#line 113
11217  03              SHTP__tick = 1;
11218  03      //#line 113
11219  03              while (SHTP__tick--) ;
11220  03            }
11221  02      //#line 113
11222  02            ;
11223  02      
11224  02            if (P0_1) 
11225  02              {
11226  03                val = val | i;
11227  03              }
11228  02      
11229  02      
11230  02            P1_7 = 0;
11231  02          }
11232  01      
11233  01      
11234  01        P0_DIR |= 1 << 1;
11235  01      
11236  01        P0_1 = !ack;
11237  01        P1_7 = 1;
11238  01      
11239  01        {
11240  02      //#line 130
11241  02          SHTP__tick = 10;
11242  02      //#line 130
11243  02          while (SHTP__tick--) ;
11244  02        }
11245  01      //#line 130
11246  01        ;
11247  01      
11248  01        P1_7 = 0;
11249  01        P0_1 = 1;
11250  01        return val;
11251  01      }
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 199 

11252  00      
11253  00      //#line 217
11254  00      static uint8_t SHTP__cmdMeasure(void)
11255  00      
11256  00      
11257  00      {
11258  01        SHTP__reset();
11259  01        SHTP__start();
11260  01      
11261  01        if (SHTP__m_state == SHTP__SHT_STATE_TEMP) 
11262  01          {
11263  02      
11264  02            SHTP__p_value = (uint8_t *)&SHTP__m_temperature;
11265  02            SHTP__m_error += SHTP__sendByte(0x03);
11266  02          }
11267  01        else 
11268  01          {
11269  02      
11270  02            SHTP__p_value = (uint8_t *)&SHTP__m_humidity;
11271  02            SHTP__m_error += SHTP__sendByte(0x05);
11272  02          }
11273  01      
11274  01      
11275  01        if (SHTP__m_error > 0) 
11276  01          {
11277  02            SHTP__readDoneTask__postTask();
11278  02            return SHTP__m_error;
11279  02          }
11280  01      
11281  01        SHTP__WaitTimer__startOneShot(300);
11282  01      
11283  01        return SHTP__m_error;
11284  01      }
11285  00      
11286  00      //#line 137
11287  00      static uint8_t SHTP__start(void)
11288  00      {
11289  01        P0_DIR |= 1 << 1;
11290  01        P1_DIR |= 1 << 7;
11291  01      
11292  01        P0_1 = 1;
11293  01        P1_7 = 0;
11294  01      
11295  01        {
11296  02      //#line 145
11297  02          SHTP__tick = 1;
11298  02      //#line 145
11299  02          while (SHTP__tick--) ;
11300  02        }
11301  01      //#line 145
11302  01        ;
11303  01      
11304  01        P1_7 = 1;
11305  01      
11306  01        {
11307  02      //#line 149
11308  02          SHTP__tick = 1;
11309  02      //#line 149
11310  02          while (SHTP__tick--) ;
11311  02        }
11312  01      //#line 149
11313  01        ;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 200 

11314  01      
11315  01        P0_1 = 0;
11316  01      
11317  01        {
11318  02      //#line 153
11319  02          SHTP__tick = 1;
11320  02      //#line 153
11321  02          while (SHTP__tick--) ;
11322  02        }
11323  01      //#line 153
11324  01        ;
11325  01        P1_7 = 0;
11326  01      
11327  01        {
11328  02      //#line 156
11329  02          SHTP__tick = 3;
11330  02      //#line 156
11331  02          while (SHTP__tick--) ;
11332  02        }
11333  01      //#line 156
11334  01        ;
11335  01      
11336  01        P1_7 = 1;
11337  01      
11338  01        {
11339  02      //#line 160
11340  02          SHTP__tick = 1;
11341  02      //#line 160
11342  02          while (SHTP__tick--) ;
11343  02        }
11344  01      //#line 160
11345  01        ;
11346  01      
11347  01        P0_1 = 1;
11348  01      
11349  01        {
11350  02      //#line 164
11351  02          SHTP__tick = 1;
11352  02      //#line 164
11353  02          while (SHTP__tick--) ;
11354  02        }
11355  01      //#line 164
11356  01        ;
11357  01      
11358  01        P1_7 = 0;
11359  01      }
11360  00      
11361  00      //#line 56
11362  00      static uint8_t SHTP__sendByte(uint8_t value)
11363  00      {
11364  01        uint8_t i;
11365  01      //#line 58
11366  01        uint8_t error;
11367  01      
11368  01      
11369  01        P0_DIR |= 1 << 1;
11370  01        P1_DIR |= 1 << 7;
11371  01      
11372  01        for (i = 0x80; i > 0; i /= 2) 
11373  01          {
11374  02            if (i & value) 
11375  02              {
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 201 

11376  03                P0_1 = 1;
11377  03              }
11378  02            else 
11379  02              {
11380  03                P0_1 = 0;
11381  03              }
11382  02      
11383  02            P1_7 = 1;
11384  02      
11385  02            {
11386  03      //#line 77
11387  03              SHTP__tick = 3;
11388  03      //#line 77
11389  03              while (SHTP__tick--) ;
11390  03            }
11391  02      //#line 77
11392  02            ;
11393  02      
11394  02            P1_7 = 0;
11395  02          }
11396  01      
11397  01      
11398  01      
11399  01        P0_1 = 1;
11400  01        P1_7 = 1;
11401  01      
11402  01        P0_DIR &= ~(1 << 1);
11403  01      
11404  01        error = P0_1;
11405  01      
11406  01        P1_7 = 0;
11407  01      
11408  01        return error;
11409  01      }
11410  00      
11411  00      //# 96 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
11412  00      static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm(void)
11413  00      {
11414  01        /* atomic removed: atomic calls only */
11415  01        {
11416  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type now = /*HilTimerMilliC.Ala
             -rmMilli32C.Transform*/TransformAlarmC__0__Counter__get();
11417  02      //#line 100
11418  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type expires;
11419  02      //#line 100
11420  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type remaining;
11421  02      
11422  02      
11423  02      
11424  02          expires = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 + /*HilTimerMilliC.Alarm
             -Milli32C.Transform*/TransformAlarmC__0__m_dt;
11425  02      
11426  02      
11427  02          remaining = (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type )(expires - n
             -ow);
11428  02      
11429  02      
11430  02          if (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 <= now) 
11431  02            {
11432  03              if (expires >= /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 && 
11433  03              expires <= now) {
11434  04                remaining = 0;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 202 

11435  04                }
11436  03            }
11437  02          else {
11438  03              if (expires >= /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 || 
11439  03              expires <= now) {
11440  04                remaining = 0;
11441  04                }
11442  03            }
11443  02          if (remaining > /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY) 
11444  02            {
11445  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 = now + /*HilTimerMilliC.Alarm
             -Milli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11446  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = remaining - /*HilTimerMilliC
             -.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11447  03              remaining = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11448  03            }
11449  02          else 
11450  02            {
11451  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 += /*HilTimerMilliC.AlarmMilli
             -32C.Transform*/TransformAlarmC__0__m_dt;
11452  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = 0;
11453  03            }
11454  02      
11455  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt((/*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__from_size_type )now << 5, 
11456  02          (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type )remaining << 5);
11457  02        }
11458  01      }
11459  00      
11460  00      //# 38 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
11461  00      static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void)
11462  00      {
11463  01        /* atomic removed: atomic calls only */
11464  01        {
11465  02          T1CCTL0 = 0;
11466  02          T1CCTL1 = 0;
11467  02          T1CCTL2 = 0;
11468  02          ((uint8_t xdata *)0)[0x62A3] = 0;
11469  02          ((uint8_t xdata *)0)[0x62A4] = 0;
11470  02      
11471  02          T1CNTL = 0;
11472  02      
11473  02      
11474  02          CLKCON = (CLKCON & ~CC2530_CLKCON_TICKSPD_MASK) | CC2530_TICKF_DIV_8;
11475  02      
11476  02      
11477  02      
11478  02          T1CTL = (T1CTL & ~CC2530_T1CTL_DIV_MASK) | CC2530_TIMER1_DIV_128;
11479  02      
11480  02      
11481  02      
11482  02          T1CTL = (T1CTL & ~CC2530_T1CTL_MODE_MASK) | CC2530_TIMER1_MODE_FREE;
11483  02      
11484  02      
11485  02          T1STAT = 0;
11486  02      
11487  02      
11488  02          TIMIF |= 1 << CC2530_TIMIF_OVFIM;
11489  02          T1IE = 1;
11490  02        }
11491  01      
11492  01        return 0;
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 203 

11493  01      }
11494  00      
11495  00      //# 22 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
11496  00      static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void)
11497  00      {
11498  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11499  02          {
11500  03            uint8_t i;
11501  03      
11502  03            for (i = 0; i < TopTaskMgrP__TOP_TASK_COUNT; ++i) 
11503  03              {
11504  04                if (TopTaskMgrP__m_task_flag[i]) 
11505  04                  {
11506  05                    {
11507  06                      unsigned char __nesc_temp = 
11508  06      //#line 32
11509  06                      TRUE;
11510  06      
11511  06                      {
11512  07      //#line 32
11513  07                        __nesc_atomic_end(__nesc_atomic); 
11514  07      //#line 32
11515  07                        return __nesc_temp;
11516  07                      }
11517  06                    }
11518  05                  }
11519  04              }
11520  03      //#line 36
11521  03            {
11522  04              unsigned char __nesc_temp = 
11523  04      //#line 36
11524  04              FALSE;
11525  04      
11526  04              {
11527  05      //#line 36
11528  05                __nesc_atomic_end(__nesc_atomic); 
11529  05      //#line 36
11530  05                return __nesc_temp;
11531  05              }
11532  04            }
11533  03          }
11534  02      //#line 39
11535  02          __nesc_atomic_end(__nesc_atomic); }
11536  01      }
11537  00      
11538  00      //# 61 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
11539  00      static bool /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(uint8_t *_data, uint8_t length)
11540  00      {
11541  01        while (length > 0) 
11542  01          {
11543  02            if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head == /*RfHardwareRxC.RfHardwareRxP*/R
             -fHardwareRxP__0__rxbuf_tail) 
11544  02              {
11545  03                return FALSE;
11546  03              }
11547  02      
11548  02            {
11549  03      //#line 70
11550  03              *_data = /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[/*RfHardwareRxC.RfHardwareR
             -xP*/RfHardwareRxP__0__rxbuf_head & ((1 << 8) - 1)];
11551  03      //#line 70
11552  03              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = (/*RfHardwareRxC.RfHardwareRxP*/RfH
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 204 

             -ardwareRxP__0__rxbuf_head + 1) & ((1 << 8) - 1);
11553  03            }
11554  02      //#line 70
11555  02            ;
11556  02            _data++;
11557  02            length--;
11558  02          }
11559  01      
11560  01        return TRUE;
11561  01      }
11562  00      
11563  00      //# 56 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
11564  00      static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *msg)
11565  00      {
11566  01        if (!RfReliableMacPacketP__SubPacketEx__isValidPacket(msg)) 
11567  01          {
11568  02            return FALSE;
11569  02          }
11570  01      
11571  01        return RfReliableMacPacketP__SubPacket__payloadLength(msg) >= RfReliableMacPacketP__PacketEx__packetHea
             -derSize();
11572  01      }
11573  00      
11574  00      //# 21 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
11575  00      static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack)
11576  00      {
11577  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11578  02          {
11579  03            RfReliableMacAckP__fillAckMessageDefault(receive_msg, receive_dsn, ack_msg, ack);
11580  03            RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(receive_msg, receive_dsn, ack_msg, ack);
11581  03      
11582  03            {
11583  04              unsigned char __nesc_temp = 
11584  04      //#line 28
11585  04              sizeof(rf_ack_t );
11586  04      
11587  04              {
11588  05      //#line 28
11589  05                __nesc_atomic_end(__nesc_atomic); 
11590  05      //#line 28
11591  05                return __nesc_temp;
11592  05              }
11593  04            }
11594  03          }
11595  02      //#line 31
11596  02          __nesc_atomic_end(__nesc_atomic); }
11597  01      }
11598  00      
11599  00      //# 51 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
11600  00      static bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(uint16_t addr, uint8_t fi
             -eld_id, uint8_t dsn)
11601  00      {
11602  01        /* atomic removed: atomic calls only */
11603  01        {
11604  02          int index = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(addr);
11605  02      
11606  02          field_id %= 1;
11607  02      
11608  02          if (index < 0) 
11609  02            {
11610  03              index = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress();
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 205 

11611  03            }
11612  02      
11613  02          if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[index] == addr) 
11614  02            {
11615  03              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[field_id][index] == ds
             -n) 
11616  03                {
11617  04                  {
11618  05                    unsigned char __nesc_temp = 
11619  05      //#line 68
11620  05                    FALSE;
11621  05      
11622  05      //#line 68
11623  05                    return __nesc_temp;
11624  05                  }
11625  04                }
11626  03            }
11627  02          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[index] = addr;
11628  02          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[field_id][index] = dsn;
11629  02      
11630  02          {
11631  03            unsigned char __nesc_temp = 
11632  03      //#line 75
11633  03            TRUE;
11634  03      
11635  03      //#line 75
11636  03            return __nesc_temp;
11637  03          }
11638  02        }
11639  01      }
11640  00      
11641  00      //# 22 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
11642  00      void __vector_0(void) interrupt 0
11643  00      {
11644  01        EA = 0;
11645  01        PlatformInterruptC__INT_RFERR__fired();
11646  01        EA = 1;
11647  01      }
11648  00      
11649  00      
11650  00      
11651  00      
11652  00      
11653  00      
11654  00      
11655  00      void __vector_16(void) interrupt 16
11656  00      {
11657  01        EA = 0;
11658  01        PlatformInterruptC__INT_RF__fired();
11659  01        EA = 1;
11660  01      }
11661  00      
11662  00      //#line 55
11663  00      void __vector_9(void) interrupt 9
11664  00      {
11665  01        EA = 0;
11666  01        PlatformInterruptC__INT_TIM1__fired();
11667  01        EA = 1;
11668  01      }
11669  00      
11670  00      
11671  00      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 206 

11672  00      
11673  00      
11674  00      
11675  00      
11676  00      
11677  00      void __vector_2(void) interrupt 2
11678  00      {
11679  01        EA = 0;
11680  01        PlatformInterruptC__INT_UART0_RX__fired();
11681  01        EA = 1;
11682  01      }
11683  00      
11684  00      
11685  00      
11686  00      
11687  00      
11688  00      
11689  00      void __vector_7(void) interrupt 7
11690  00      {
11691  01        EA = 0;
11692  01        PlatformInterruptC__INT_UART0_TX__fired();
11693  01        EA = 1;
11694  01      }
11695  00      
11696  00      
11697  00      
11698  00      
11699  00      
11700  00      
11701  00      
11702  00      void __vector_3(void) interrupt 3
11703  00      {
11704  01        EA = 0;
11705  01        PlatformInterruptC__INT_UART1_RX__fired();
11706  01        EA = 1;
11707  01      }
11708  00      
11709  00      
11710  00      
11711  00      
11712  00      
11713  00      
11714  00      void __vector_14(void) interrupt 14
11715  00      {
11716  01        EA = 0;
11717  01        PlatformInterruptC__INT_UART1_TX__fired();
11718  01        EA = 1;
11719  01      }
11720  00      
11721  00      
11722  00      
11723  00      
11724  00      
11725  00      
11726  00      
11727  00      void __vector_5(void) interrupt 5
11728  00      {
11729  01        EA = 0;
11730  01        PlatformInterruptC__INT_ST__fired();
11731  01        EA = 1;
11732  01      }
11733  00      
C51 COMPILER V9.01   APP                                                                   04/18/2018 10:18:19 PAGE 207 

11734  00      
11735  00      
11736  00      
11737  00      
11738  00      
11739  00      
11740  00      void __vector_13(void) interrupt 13
11741  00      {
11742  01        EA = 0;
11743  01        PlatformInterruptC__INT_P0__fired();
11744  01        EA = 1;
11745  01      }
11746  00      
11747  00      void __vector_15(void) interrupt 15
11748  00      {
11749  01        EA = 0;
11750  01        PlatformInterruptC__INT_P1__fired();
11751  01        EA = 1;
11752  01      }
11753  00      


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  20237    ----
   CONSTANT SIZE    =    524    ----
   XDATA SIZE       =   1784     901
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
