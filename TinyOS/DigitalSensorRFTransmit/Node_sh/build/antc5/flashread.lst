C51 COMPILER V9.01   FLASHREAD                                                             04/18/2018 10:18:20 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE FLASHREAD
OBJECT MODULE PLACED IN .\flashread.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe flashread.c LARGE OMF2 DEBUG BROWSE PRINT(.\flashread.lst) OBJECT(.\flashre
                    -ad.obj) WARNINGLEVEL(0)

line level    source

   1          /*
   2           * File: flashread.c
   3           * @autor: xlq, 2010-4
   4           * */
   5          /* CC2430 FLASH READ CODE SPACE in bank 0
   6          */
   7          
   8          /* use this to enable the LX51 user class */
   9          #pragma userclass (code = bank0)
  10          
  11          
  12          
  13          
  14          typedef signed char int8_t;
  15          typedef short int16_t;
  16          typedef long int32_t;
  17          typedef unsigned char uint8_t;
  18          typedef unsigned short uint16_t;
  19          typedef unsigned long uint32_t;
  20          
  21          
  22          #include "ioCC2530.h"
  23          
  24          #define FLASH_BASE                 0x8000
  25                  
  26          #define PAGE_SHIFT                11 // 2048
  27          #define PAGE_SIZE                 (1L << PAGE_SHIFT)
  28                  
  29          #define BANK_SHIFT                15 // 32K
  30          #define BANK_SIZE                 (1L << BANK_SHIFT)
  31          #define BANK_MAP_MASK     7  // F256: 7, F128: 3
  32                  
  33          #define FLASH_DMA_CH      0
  34          
  35          
  36          extern void *memcpy(void *s1, void *s2, int n);
  37          
  38          
  39          
  40          uint8_t xdata writeFunctionBuffer[] = 
  41                                                  { 0x7B ,0x01 ,0x10 ,0xAF ,0x02 ,0x7B ,0x00 ,0xC0 ,0x83 ,0xC0 ,0x82 ,0xC0 ,0x85 ,0xC0 ,0x84 ,0xC0
  42           ,0x92 ,0xEA ,0xF5 ,0x83 ,0xE9 ,0xF5 ,0x82 ,0x75 ,0x92 ,0x01 ,0x75 ,0x85 ,0x62 ,0x75 ,0x84 ,0x70
  43           ,0xE0 ,0x54 ,0x80 ,0x70 ,0xFB ,0x74 ,0x02 ,0xF0 ,0xEC ,0x60 ,0x27 ,0x7A ,0x40 ,0x79 ,0x04 ,0x75
  44           ,0x92 ,0x00 ,0xE0 ,0xA3 ,0x75 ,0x92 ,0x01 ,0x75 ,0x85 ,0x62 ,0x75 ,0x84 ,0x73 ,0xF0 ,0xD9 ,0xEF
  45           ,0x74 ,0x00 ,0xF0 ,0x75 ,0x85 ,0x62 ,0x75 ,0x84 ,0x70 ,0xE0 ,0x54 ,0x40 ,0x70 ,0xFB ,0xDA ,0xDD
  46           ,0xDC ,0xD9 ,0xED ,0x60 ,0x29 ,0xED ,0x54 ,0xFC ,0x03 ,0x03 ,0xFD ,0x79 ,0x04 ,0x75 ,0x92 ,0x00
  47           ,0xE0 ,0xA3 ,0x75 ,0x92 ,0x01 ,0x75 ,0x85 ,0x62 ,0x75 ,0x84 ,0x73 ,0xF0 ,0xD9 ,0xEF ,0x74 ,0x00
  48           ,0xF0 ,0x75 ,0x85 ,0x62 ,0x75 ,0x84 ,0x70 ,0xE0 ,0x54 ,0x40 ,0x70 ,0xFB ,0xDD ,0xDD ,0xD0 ,0x92
  49           ,0xD0 ,0x84 ,0xD0 ,0x85 ,0xD0 ,0x82 ,0xD0 ,0x83 ,0xEB ,0x60 ,0x02 ,0xD2 ,0xAF ,0x22 };
  50          
  51          void (*writeFunction)(uint8_t * buf, uint16_t length);
  52          
  53          
  54          void HalFlashP__HalCC2530FlashRead(uint8_t * destination, uint32_t source, uint16_t length)
C51 COMPILER V9.01   FLASHREAD                                                             04/18/2018 10:18:20 PAGE 2   

  55          {
  56   1              uint8_t  old_map;
  57   1              uint8_t  bank;
  58   1              uint16_t offset;
  59   1              uint8_t old_ea;
  60   1                      
  61   1              old_ea = EA;
  62   1              EA = 0;
  63   1              
  64   1              bank = (source >> BANK_SHIFT) & BANK_MAP_MASK;
  65   1              offset = (source & (BANK_SIZE - 1)) + FLASH_BASE;
  66   1              
  67   1              // save old xmap
  68   1              old_map = MEMCTR;
  69   1              
  70   1              // select new xmap
  71   1              MEMCTR = (old_map & ~0x7) | bank;
  72   1              
  73   1              memcpy((uint8_t xdata*)destination, (uint8_t xdata*)offset, length);
  74   1              
  75   1              // restore xmap
  76   1              MEMCTR = old_map;
  77   1              
  78   1              EA = old_ea;
  79   1      
  80   1      }
  81          
  82          void HalFlashP__HalCC2530FlashWrite(uint32_t destination, uint8_t * source, uint16_t length)
  83          {
  84   1              uint8_t page, row, location;
  85   1              uint16_t old_map;
  86   1              uint8_t old_ea;
  87   1              
  88   1              old_ea = EA;
  89   1              EA = 0;
  90   1      
  91   1              page = (uint32_t) destination / 0x0800;
  92   1              row = ((uint32_t) destination % 0x0800) >> 8;
  93   1              location = (((uint32_t) destination % 0x0800) & 0xFF) >> 2;
  94   1              
  95   1              FADDRH = (page << 1) | (row >> 2);
  96   1              FADDRL = (row << 6) | location;
  97   1              
  98   1              old_map = MEMCTR;
  99   1              MEMCTR |= 0x08;
 100   1              
 101   1              writeFunction = (void(*)(uint8_t *, uint16_t)) (writeFunctionBuffer + 0x8000);
 102   1              writeFunction(source, length);
 103   1              
 104   1              // restore xmap
 105   1              MEMCTR = old_map;
 106   1      
 107   1              EA = old_ea;
 108   1      
 109   1      }
 110          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    339    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    145      23
C51 COMPILER V9.01   FLASHREAD                                                             04/18/2018 10:18:20 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
