AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     1


MACRO ASSEMBLER AX51 V3.07
OBJECT MODULE PLACED IN c-asm.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe c-asm.src

LOC    OBJ             LINE     SOURCE

                          1     ; .\c-asm.SRC generated from: c-asm.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe c-asm.c LARGE OMF2 BROWSE DEBUG SRC(.\c-asm.SRC) PRINT(
                               .\c-asm.lst) OBJECT(.\c-asm.obj) WARNINGLEVEL(0)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    C_ASM
                          8     
 00C9                     9     WDCTL   DATA    0C9H
 00A8.7                  10     EA      BIT     0A8H.7
 0085                    11     DPH1    DATA    085H
 0080.0                  12     P0_0    BIT     080H.0
 0080.1                  13     P0_1    BIT     080H.1
 00A0.0                  14     P2_0    BIT     0A0H.0
 0084                    15     DPL1    DATA    084H
 00A0.1                  16     P2_1    BIT     0A0H.1
 00A0.2                  17     P2_2    BIT     0A0H.2
 0080.4                  18     P0_4    BIT     080H.4
 0080.5                  19     P0_5    BIT     080H.5
 0080.6                  20     P0_6    BIT     080H.6
 0090.6                  21     P1_6    BIT     090H.6
 0080.7                  22     P0_7    BIT     080H.7
 0090.7                  23     P1_7    BIT     090H.7
 00FE                    24     P1_DIR  DATA    0FEH
 0092                    25     DPS     DATA    092H
------                   26     ?PR?_OledP__write_buf?C_ASM              SEGMENT CODE 
------                   27     ?XD?_OledP__write_buf?C_ASM              SEGMENT XDATA OVERLAYABLE
------                   28     ?PR?_OledP__write_cmd?C_ASM              SEGMENT CODE 
------                   29     ?XD?_OledP__write_cmd?C_ASM              SEGMENT XDATA OVERLAYABLE
------                   30     ?PR?OledP__do_cls?C_ASM                  SEGMENT CODE 
------                   31     ?PR?_OledP__do_draw_char?C_ASM           SEGMENT CODE 
------                   32     ?XD?_OledP__do_draw_char?C_ASM           SEGMENT XDATA OVERLAYABLE
                         33             PUBLIC  ?_OledP__do_draw_char?BYTE
                         34             PUBLIC  _OledP__do_draw_char
                         35             PUBLIC  OledP__do_cls
                         36             PUBLIC  _OledP__write_cmd
                         37             PUBLIC  _OledP__write_buf
                         38     
------                   39             RSEG  ?XD?_OledP__write_cmd?C_ASM
000000                   40     ?_OledP__write_cmd?BYTE:
000000                   41             val?141:   DS   1
                         42     
------                   43             RSEG  ?XD?_OledP__write_buf?C_ASM
000000                   44     ?_OledP__write_buf?BYTE:
000000                   45             val?040:   DS   1
                         46     
------                   47             RSEG  ?XD?_OledP__do_draw_char?C_ASM
000000                   48     ?_OledP__do_draw_char?BYTE:
000000                   49               p?342:   DS   3
000003                   50             ORG  3
000003                   51              cc?343:   DS   3
000006                   52             ORG  6
000006                   53              cb?344:   DS   3
                         54     ; //#pragma userclass (code = code)
                         55     ; 
                         56     ; 
                         57     ; 
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     2

                         58     ; 
                         59     ; typedef signed char int8_t;
                         60     ; typedef short int16_t;
                         61     ; typedef long int32_t;
                         62     ; typedef unsigned char uint8_t;
                         63     ; typedef unsigned short uint16_t;
                         64     ; typedef unsigned long uint32_t;
                         65     ; 
                         66     ; sbit EA = 0xAF;
                         67     ; sfr WDCTL = 0xC9;
                         68     ; sfr P1_DIR = 0xFE;
                         69     ; sfr DPH1 = 0x85;
                         70     ; sfr DPL1 = 0x84;
                         71     ; sfr DPS = 0x92;
                         72     ; 
                         73     ; sbit P0_0 = 0x80;
                         74     ; sbit P0_1 = 0x81;
                         75     ; sbit P0_4 = 0x84;
                         76     ; sbit P0_5 = 0x85;
                         77     ; sbit P0_6 = 0x86;
                         78     ; sbit P0_7 = 0x87;
                         79     ; sbit P1_6 = 0x96;
                         80     ; sbit P1_7 = 0x97;
                         81     ; sbit P2_0 = 0xA0;
                         82     ; sbit P2_1 = 0xA1;
                         83     ; sbit P2_2 = 0xA2;
                         84     ; 
                         85     ; #pragma asm
                         86       
                         87       
                                  
                                  
                                  
                                  
                                  
                                  
                                  
                         95     
                         96     
                         97     
                         98     
                         99     
                        100     
                        101     
                        102     
0080.6                  103       OLED_CLK_PIN  EQU P0_6
0080.7                  104       OLED_DATA_PIN         EQU P0_7
0080.0                  105       OLED_RESET_PIN        EQU P0_0
0080.1                  106       OLED_DC_PIN   EQU P0_1
0080.5                  107       OLED_CS_PIN   EQU P0_5
                        108       
                        109             
                        110             
                        111             
                        112             
                        113             
                        114             
------                  115       CASM  SEGMENT CODE
------                  116                     RSEG    CASM    
                        117       
                        118             USING 0  
                        119       
000000                  120       _oled_write_cmd:      
000000 D285             121             SETB    OLED_CS_PIN
000002 C286             122             CLR             OLED_CLK_PIN
000004 C287             123             CLR             OLED_DATA_PIN
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     3

000006 C281             124             CLR             OLED_DC_PIN
                        125             
000008 C285             126             CLR             OLED_CS_PIN
                        127             
00000A EA               128             MOV             A,R2
00000B C003             129             PUSH    AR3
00000D 7B08             130             MOV             R3,#8
00000F                  131       _oled_write_cmd_loop:
00000F 33               132             RLC             A
000010 4004             133             JC              _oled_write_cmd_bit_high
                        134             
000012                  135       _oled_write_cmd_bit_low:
000012 C287             136             CLR             OLED_DATA_PIN
000014 0100       F     137             AJMP    _oled_write_cmd_bit_end
                        138             
000016                  139       _oled_write_cmd_bit_high:
000016 D287             140             SETB    OLED_DATA_PIN
                        141             
000018                  142       _oled_write_cmd_bit_end:
000018 C286             143             CLR             OLED_CLK_PIN    
00001A D286             144             SETB    OLED_CLK_PIN
                        145             
00001C DBF1             146             DJNZ    R3, _oled_write_cmd_loop
                        147             
00001E D003             148             POP             AR3
                        149             
000020 D285             150             SETB    OLED_CS_PIN
000022 C287             151             CLR             OLED_DATA_PIN
000024 C286             152             CLR             OLED_CLK_PIN
000026 C281             153             CLR             OLED_DC_PIN
                        154             
000028 22               155             RET
                        156       
                        157             
                        158             
                        159             
                        160             
000029                  161       _oled_write_data:
                        162             
000029 D285             163             SETB    OLED_CS_PIN
00002B C286             164             CLR             OLED_CLK_PIN
00002D C287             165             CLR             OLED_DATA_PIN
00002F D281             166             SETB    OLED_DC_PIN
000031 C285             167             CLR             OLED_CS_PIN
                        168             
000033 EA               169             MOV             A,R2
000034 C003             170             PUSH    AR3
000036 7B08             171             MOV             R3,#8
000038                  172       _oled_write_data_loop:
000038 33               173             RLC             A
000039 4004             174             JC              _oled_write_data_bit_high
                        175             
00003B                  176       _oled_write_data_bit_low:
00003B C287             177             CLR             OLED_DATA_PIN
00003D 0100       F     178             AJMP    _oled_write_data_bit_end
                        179             
00003F                  180       _oled_write_data_bit_high:
00003F D287             181             SETB    OLED_DATA_PIN
                        182             
000041                  183       _oled_write_data_bit_end:
000041 C286             184             CLR             OLED_CLK_PIN
000043 D286             185             SETB    OLED_CLK_PIN
                        186             
000045 DBF1             187             DJNZ    R3, _oled_write_data_loop
                        188             
000047 D003             189             POP             AR3
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     4

                        190             
000049 D285             191             SETB    OLED_CS_PIN
00004B C287             192             CLR             OLED_DATA_PIN
00004D C286             193             CLR             OLED_CLK_PIN
00004F C281             194             CLR             OLED_DC_PIN
                        195             
000051 22               196             RET
                        197       
                        198     ; #pragma endasm
                        199     ; 
                        200     ; void OledP__write_buf(uint8_t val)
                        201     
------                  202             RSEG  ?PR?_OledP__write_buf?C_ASM
000000                  203     _OledP__write_buf:
                        204             USING   0
                        205                             ; SOURCE LINE # 147
000000 900000     F     206             MOV     DPTR,#val?040
000003 EF               207             MOV     A,R7
000004 F0               208             MOVX    @DPTR,A
                        209     ; {
                        210                             ; SOURCE LINE # 148
                        211     ; 
                        212     ; #pragma asm
                        213     ;       PUSH    AR2      
000005 C002             214               PUSH  AR2      
                        215     ;       MOV             A,R7
000007 EF               216               MOV           A,R7
                        217     ;       MOV              R2,A   
000008 FA               218               MOV            R2,A   
                        219     ;       LCALL _oled_write_data
000009 120000     F     220               LCALL _oled_write_data
                        221     ;       POP     AR2
00000C D002             222               POP   AR2
                        223     ; #pragma endasm
                        224     ;       
                        225     ; }
                        226                             ; SOURCE LINE # 158
00000E 22               227             RET     
                        228     ; END OF _OledP__write_buf
                        229     
                        230     ; 
                        231     ; void OledP__write_cmd(uint8_t val)
                        232     
------                  233             RSEG  ?PR?_OledP__write_cmd?C_ASM
000000                  234     _OledP__write_cmd:
                        235             USING   0
                        236                             ; SOURCE LINE # 160
000000 900000     F     237             MOV     DPTR,#val?141
000003 EF               238             MOV     A,R7
000004 F0               239             MOVX    @DPTR,A
                        240     ; {
                        241                             ; SOURCE LINE # 161
                        242     ; 
                        243     ; #pragma asm
                        244     ;       PUSH    AR2      
000005 C002             245               PUSH  AR2      
                        246     ;       MOV             A,R7
000007 EF               247               MOV           A,R7
                        248     ;       MOV              R2,A   
000008 FA               249               MOV            R2,A   
                        250     ;       LCALL _oled_write_cmd
000009 120000     F     251               LCALL _oled_write_cmd
                        252     ;       POP     AR2
00000C D002             253               POP   AR2
                        254     ; #pragma endasm
                        255     ;       
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     5

                        256     ; }
                        257                             ; SOURCE LINE # 171
00000E 22               258             RET     
                        259     ; END OF _OledP__write_cmd
                        260     
                        261     ; 
                        262     ; void OledP__do_cls()
                        263     
------                  264             RSEG  ?PR?OledP__do_cls?C_ASM
000000                  265     OledP__do_cls:
                        266             USING   0
                        267                             ; SOURCE LINE # 173
                        268     ; {
                        269                             ; SOURCE LINE # 174
                        270     ;       
                        271     ; #pragma asm
                        272     ; 
                        273               
                        274     ;       SETB    OLED_CS_PIN
000000 D285             275               SETB  OLED_CS_PIN
                        276     ;       CLR             OLED_CLK_PIN
000002 C286             277               CLR           OLED_CLK_PIN
                        278     ;       CLR             OLED_DATA_PIN
000004 C287             279               CLR           OLED_DATA_PIN
                        280     ;       SETB    OLED_DC_PIN
000006 D281             281               SETB  OLED_DC_PIN
                        282     ;       CLR             OLED_CS_PIN
000008 C285             283               CLR           OLED_CS_PIN
                        284     ;       
                        285               
                        286     ; _oled_do_cls:
00000A                  287               _oled_do_cls:
                        288     ;       MOV     R5,#128
00000A 7D80             289               MOV   R5,#128
                        290     ; _oled_do_cls_loop_big:        
00000C                  291               _oled_do_cls_loop_big:        
                        292     ;       MOV     R4,#128 
00000C 7C80             293               MOV   R4,#128 
                        294     ; _oled_do_cls_loop_small:      
00000E                  295               _oled_do_cls_loop_small:      
                        296     ;       MOV             R3,#16
00000E 7B10             297               MOV           R3,#16
                        298     ; _oled_do_cls_loop_byte:
000010                  299               _oled_do_cls_loop_byte:
                        300     ;       
                        301               
                        302     ;       CLR             OLED_CLK_PIN
000010 C286             303               CLR           OLED_CLK_PIN
                        304     ;       SETB    OLED_CLK_PIN
000012 D286             305               SETB  OLED_CLK_PIN
                        306     ; 
                        307               
                        308     ;       NOP
000014 00               309               NOP
                        310     ;       NOP
000015 00               311               NOP
                        312     ;       NOP
000016 00               313               NOP
                        314     ;       NOP
000017 00               315               NOP
                        316     ;       NOP
000018 00               317               NOP
                        318     ;       NOP
000019 00               319               NOP
                        320     ;       NOP
00001A 00               321               NOP
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     6

                        322     ;       NOP
00001B 00               323               NOP
                        324     ;       
                        325               
                        326     ;       CLR             OLED_DATA_PIN
00001C C287             327               CLR           OLED_DATA_PIN
                        328     ;       
                        329               
                        330     ;       DJNZ    R3, _oled_do_cls_loop_byte
00001E DBF0             331               DJNZ  R3, _oled_do_cls_loop_byte
                        332     ;       DJNZ    R4, _oled_do_cls_loop_small
000020 DCEC             333               DJNZ  R4, _oled_do_cls_loop_small
                        334     ;       DJNZ    R5, _oled_do_cls_loop_big
000022 DDE8             335               DJNZ  R5, _oled_do_cls_loop_big
                        336     ;       
                        337               
                        338     ;       SETB    OLED_CS_PIN
000024 D285             339               SETB  OLED_CS_PIN
                        340     ;       CLR             OLED_DATA_PIN
000026 C287             341               CLR           OLED_DATA_PIN
                        342     ;       CLR             OLED_CLK_PIN
000028 C286             343               CLR           OLED_CLK_PIN
                        344     ;       CLR             OLED_DC_PIN     
00002A C281             345               CLR           OLED_DC_PIN     
                        346     ;       
                        347               
                        348     ; #pragma endasm
                        349     ; }
                        350                             ; SOURCE LINE # 216
00002C 22               351             RET     
                        352     ; END OF OledP__do_cls
                        353     
                        354     ; 
                        355     ; void OledP__do_draw_char(uint8_t *p, uint8_t *cc, uint8_t *cb)
                        356     
------                  357             RSEG  ?PR?_OledP__do_draw_char?C_ASM
000000                  358     _OledP__do_draw_char:
                        359             USING   0
                        360                             ; SOURCE LINE # 218
000000 900000     F     361             MOV     DPTR,#p?342
000003 EB               362             MOV     A,R3
000004 F0               363             MOVX    @DPTR,A
000005 A3               364             INC     DPTR
000006 EA               365             MOV     A,R2
000007 F0               366             MOVX    @DPTR,A
000008 A3               367             INC     DPTR
000009 E9               368             MOV     A,R1
00000A F0               369             MOVX    @DPTR,A
                        370     ; {
                        371                             ; SOURCE LINE # 219
                        372     ;       // p -> R3 ,  cc -> R2 , cb -> R1
                        373     ; 
                        374     ; #pragma asm
                        375     ;       
                        376               
                        377     ;       MOV     R5,#16
00000B 7D10             378               MOV   R5,#16
                        379     ; _do_draw_byte_loop:
00000D                  380               _do_draw_byte_loop:
                        381     ;       MOV             A,R3    
00000D EB               382               MOV           A,R3    
                        383     ;       MOV             R0,A
00000E F8               384               MOV           R0,A
                        385     ;       MOVX    A,@R0
00000F E2               386               MOVX  A,@R0
                        387     ;       INC             R3
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     7

000010 0B               388               INC           R3
                        389     ;       MOV             R4,#8
000011 7C08             390               MOV           R4,#8
                        391     ; _do_draw_bit_loop:
000013                  392               _do_draw_bit_loop:
                        393     ;       RLC             A
000013 33               394               RLC           A
                        395     ;       JC              _do_draw_bit_loop_high
000014 4006             396               JC            _do_draw_bit_loop_high
                        397     ; _do_draw_bit_loop_low:
000016                  398               _do_draw_bit_loop_low:
                        399     ;       PUSH    ACC
000016 C0E0             400               PUSH  ACC
                        401     ;       MOV             A,R2    
000018 EA               402               MOV           A,R2    
                        403     ;       MOV             R0,A    
000019 F8               404               MOV           R0,A    
                        405     ;       AJMP    _do_draw_bit_loop_end
00001A 0100       F     406               AJMP  _do_draw_bit_loop_end
                        407     ; _do_draw_bit_loop_high:
00001C                  408               _do_draw_bit_loop_high:
                        409     ;       PUSH    ACC
00001C C0E0             410               PUSH  ACC
                        411     ;       MOV             A,R1    
00001E E9               412               MOV           A,R1    
                        413     ;       MOV             R0,A    
00001F F8               414               MOV           R0,A    
                        415     ; _do_draw_bit_loop_end:
000020                  416               _do_draw_bit_loop_end:
                        417     ;       PUSH    AR2
000020 C002             418               PUSH  AR2
                        419     ;       MOVX    A,@R0
000022 E2               420               MOVX  A,@R0
                        421     ;       MOV             R2,A
000023 FA               422               MOV           R2,A
                        423     ;       LCALL   _oled_write_data
000024 120000     F     424               LCALL         _oled_write_data
                        425     ;       INC             R0
000027 08               426               INC           R0
                        427     ;       MOVX    A,@R0
000028 E2               428               MOVX  A,@R0
                        429     ;       MOV             R2,A
000029 FA               430               MOV           R2,A
                        431     ;       LCALL   _oled_write_data
00002A 120000     F     432               LCALL         _oled_write_data
                        433     ;       INC             R0
00002D 08               434               INC           R0
                        435     ;       MOVX    A,@R0   
00002E E2               436               MOVX  A,@R0   
                        437     ;       MOV             R2,A
00002F FA               438               MOV           R2,A
                        439     ;       LCALL   _oled_write_data
000030 120000     F     440               LCALL         _oled_write_data
                        441     ;       POP     AR2
000033 D002             442               POP   AR2
                        443     ;       POP     ACC
000035 D0E0             444               POP   ACC
                        445     ;       DJNZ    R4, _do_draw_bit_loop
000037 DCDA             446               DJNZ  R4, _do_draw_bit_loop
                        447     ;       DJNZ    R5, _do_draw_byte_loop
000039 DDD2             448               DJNZ  R5, _do_draw_byte_loop
                        449     ;       
                        450               
                        451     ; #pragma endasm        
                        452     ;       
                        453     ; }
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     8

                        454                             ; SOURCE LINE # 263
00003B 22               455             RET     
                        456     ; END OF _OledP__do_draw_char
                        457     
                        458             END
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE     9

SYMBOL TABLE LISTING
------ ----- -------


N A M E                         T Y P E  V A L U E     ATTRIBUTES

?_OLEDP__DO_DRAW_CHAR?BYTE . .  X  ADDR  0000H     R   SEG=?XD?_OLEDP__DO_DRAW_CHAR?C_ASM
?_OLEDP__WRITE_BUF?BYTE. . . .  X  ADDR  0000H     R   SEG=?XD?_OLEDP__WRITE_BUF?C_ASM
?_OLEDP__WRITE_CMD?BYTE. . . .  X  ADDR  0000H     R   SEG=?XD?_OLEDP__WRITE_CMD?C_ASM
?PR?_OLEDP__DO_DRAW_CHAR?C_ASM  C  SEG   00003CH       REL=UNIT, ALN=BYTE
?PR?_OLEDP__WRITE_BUF?C_ASM. .  C  SEG   00000FH       REL=UNIT, ALN=BYTE
?PR?_OLEDP__WRITE_CMD?C_ASM. .  C  SEG   00000FH       REL=UNIT, ALN=BYTE
?PR?OLEDP__DO_CLS?C_ASM. . . .  C  SEG   00002DH       REL=UNIT, ALN=BYTE
?XD?_OLEDP__DO_DRAW_CHAR?C_ASM  X  SEG   000009H       REL=UNIT, ALN=BYTE
?XD?_OLEDP__WRITE_BUF?C_ASM. .  X  SEG   000001H       REL=UNIT, ALN=BYTE
?XD?_OLEDP__WRITE_CMD?C_ASM. .  X  SEG   000001H       REL=UNIT, ALN=BYTE
_DO_DRAW_BIT_LOOP. . . . . . .  C  ADDR  0013H     R   SEG=?PR?_OLEDP__DO_DRAW_CHAR?C_ASM
_DO_DRAW_BIT_LOOP_END. . . . .  C  ADDR  0020H     R   SEG=?PR?_OLEDP__DO_DRAW_CHAR?C_ASM
_DO_DRAW_BIT_LOOP_HIGH . . . .  C  ADDR  001CH     R   SEG=?PR?_OLEDP__DO_DRAW_CHAR?C_ASM
_DO_DRAW_BIT_LOOP_LOW. . . . .  C  ADDR  0016H     R   SEG=?PR?_OLEDP__DO_DRAW_CHAR?C_ASM
_DO_DRAW_BYTE_LOOP . . . . . .  C  ADDR  000DH     R   SEG=?PR?_OLEDP__DO_DRAW_CHAR?C_ASM
_OLED_DO_CLS . . . . . . . . .  C  ADDR  000AH     R   SEG=?PR?OLEDP__DO_CLS?C_ASM
_OLED_DO_CLS_LOOP_BIG. . . . .  C  ADDR  000CH     R   SEG=?PR?OLEDP__DO_CLS?C_ASM
_OLED_DO_CLS_LOOP_BYTE . . . .  C  ADDR  0010H     R   SEG=?PR?OLEDP__DO_CLS?C_ASM
_OLED_DO_CLS_LOOP_SMALL. . . .  C  ADDR  000EH     R   SEG=?PR?OLEDP__DO_CLS?C_ASM
_OLED_WRITE_CMD. . . . . . . .  C  ADDR  0000H     R   SEG=CASM
_OLED_WRITE_CMD_BIT_END. . . .  C  ADDR  0018H     R   SEG=CASM
_OLED_WRITE_CMD_BIT_HIGH . . .  C  ADDR  0016H     R   SEG=CASM
_OLED_WRITE_CMD_BIT_LOW. . . .  C  ADDR  0012H     R   SEG=CASM
_OLED_WRITE_CMD_LOOP . . . . .  C  ADDR  000FH     R   SEG=CASM
_OLED_WRITE_DATA . . . . . . .  C  ADDR  0029H     R   SEG=CASM
_OLED_WRITE_DATA_BIT_END . . .  C  ADDR  0041H     R   SEG=CASM
_OLED_WRITE_DATA_BIT_HIGH. . .  C  ADDR  003FH     R   SEG=CASM
_OLED_WRITE_DATA_BIT_LOW . . .  C  ADDR  003BH     R   SEG=CASM
_OLED_WRITE_DATA_LOOP. . . . .  C  ADDR  0038H     R   SEG=CASM
_OLEDP__DO_DRAW_CHAR . . . . .  C  ADDR  0000H     R   SEG=?PR?_OLEDP__DO_DRAW_CHAR?C_ASM
_OLEDP__WRITE_BUF. . . . . . .  C  ADDR  0000H     R   SEG=?PR?_OLEDP__WRITE_BUF?C_ASM
_OLEDP__WRITE_CMD. . . . . . .  C  ADDR  0000H     R   SEG=?PR?_OLEDP__WRITE_CMD?C_ASM
ACC. . . . . . . . . . . . . .  D  ADDR  00E0H     A   
AR2. . . . . . . . . . . . . .  D  ADDR  0002H     A   
AR3. . . . . . . . . . . . . .  D  ADDR  0003H     A   
C_ASM. . . . . . . . . . . . .  -- ----  -------       
CASM . . . . . . . . . . . . .  C  SEG   000052H       REL=UNIT, ALN=BYTE
CB?344 . . . . . . . . . . . .  X  ADDR  0006H     R   SEG=?XD?_OLEDP__DO_DRAW_CHAR?C_ASM
CC?343 . . . . . . . . . . . .  X  ADDR  0003H     R   SEG=?XD?_OLEDP__DO_DRAW_CHAR?C_ASM
DPH1 . . . . . . . . . . . . .  D  ADDR  0085H     A   
DPL1 . . . . . . . . . . . . .  D  ADDR  0084H     A   
DPS. . . . . . . . . . . . . .  D  ADDR  0092H     A   
EA . . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
OLED_CLK_PIN . . . . . . . . .  B  ADDR  0080H.6   A   
OLED_CS_PIN. . . . . . . . . .  B  ADDR  0080H.5   A   
OLED_DATA_PIN. . . . . . . . .  B  ADDR  0080H.7   A   
OLED_DC_PIN. . . . . . . . . .  B  ADDR  0080H.1   A   
OLED_RESET_PIN . . . . . . . .  B  ADDR  0080H.0   A   
OLEDP__DO_CLS. . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?OLEDP__DO_CLS?C_ASM
P0_0 . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_1 . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_4 . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_5 . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_6 . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_7 . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
P1_6 . . . . . . . . . . . . .  B  ADDR  0090H.6   A   
P1_7 . . . . . . . . . . . . .  B  ADDR  0090H.7   A   
P1_DIR . . . . . . . . . . . .  D  ADDR  00FEH     A   
P2_0 . . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
P2_1 . . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
AX51 MACRO ASSEMBLER  C-ASM                                                                 05/23/18 09:30:35 PAGE    10

P2_2 . . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
P?342. . . . . . . . . . . . .  X  ADDR  0000H     R   SEG=?XD?_OLEDP__DO_DRAW_CHAR?C_ASM
VAL?040. . . . . . . . . . . .  X  ADDR  0000H     R   SEG=?XD?_OLEDP__WRITE_BUF?C_ASM
VAL?141. . . . . . . . . . . .  X  ADDR  0000H     R   SEG=?XD?_OLEDP__WRITE_CMD?C_ASM
WDCTL. . . . . . . . . . . . .  D  ADDR  00C9H     A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
