C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN .\app.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe app.c LARGE OMF2 DEBUG BROWSE PRINT(.\app.lst) OBJECT(.\app.obj) WARNINGLEV
                    -EL(0)

line level    source

   1          
   2          #define MANGLED_NESC_APP_C
   3          #define nx_struct struct
   4          #define nx_union union
   5          #define dbg(mode, format) ((void)0)
   6          #define dbg_clear(mode, format) ((void)0)
   7          #define dbg_active(mode) 0
   8          //# 8 "/opt/atos/tos/chips/cc2530/mcs51/keil_stdint.h"
   9          typedef signed char int8_t;
  10          typedef short int16_t;
  11          
  12          
  13          
  14          typedef long int32_t;
  15          
  16          
  17          /*typedef long long int int64_t;*/
  18          
  19          
  20          
  21          
  22          typedef unsigned char uint8_t;
  23          typedef unsigned short uint16_t;
  24          
  25          
  26          
  27          typedef unsigned long uint32_t;
  28          
  29          
  30          /*typedef unsigned long long int uint64_t;*/
  31          //# 19 "/opt/atos/tos/chips/cc2530/mcs51/stdint.h"
  32          typedef signed char int_least8_t;
  33          typedef short int int_least16_t;
  34          typedef long int_least32_t;
  35          
  36          
  37          
  38          /*__extension__*/ 
  39          typedef
  40                   float* int_least64_t;
  41                
  42          
  43          
  44          
  45          typedef unsigned char uint_least8_t;
  46          typedef unsigned short uint_least16_t;
  47          typedef unsigned long uint_least32_t;
  48          
  49          
  50          
  51          /*__extension__*/ 
  52          typedef 
  53                   float* uint_least64_t;
  54                
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 2   

  55          
  56          
  57          
  58          
  59          
  60          
  61          typedef signed char int_fast8_t;
  62          
  63          
  64          
  65          
  66          
  67          typedef int int_fast16_t;
  68          typedef int int_fast32_t;
  69          /*__extension__*/ 
  70          typedef
  71                   float* int_fast64_t;
  72                
  73          
  74          
  75          
  76          typedef unsigned char uint_fast8_t;
  77          
  78          
  79          
  80          
  81          
  82          typedef unsigned int uint_fast16_t;
  83          typedef unsigned int uint_fast32_t;
  84          /*__extension__*/ 
  85          typedef 
  86                   float* uint_fast64_t;
  87                
  88          //# 79 "/opt/atos/tos/chips/cc2530/mcs51/stdint.h" 3
  89          typedef int intptr_t;
  90          
  91          
  92          typedef unsigned int uintptr_t;
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          
 101          /*__extension__*/ 
 102          typedef
 103                   float* intmax_t;
 104                
 105          /*__extension__*/ 
 106          typedef 
 107                   float* uintmax_t;
 108                
 109          //# 231 "/usr/include/inttypes.h"
 110          //#line 228
 111          typedef struct __nesc_unnamed4242 {
 112            intmax_t quot;
 113            intmax_t rem;
 114          } imaxdiv_t;
 115          //# 235 "/usr/lib/ncc/nesc_nx.h"
 116          static   /*inline*/   uint8_t __nesc_ntoh_uint8(const void *source);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 3   

 117          
 118          
 119          
 120          
 121          static   /*inline*/   uint8_t __nesc_hton_uint8(void *target, uint8_t value);
 122          
 123          
 124          
 125          
 126          
 127          static   /*inline*/   uint8_t __nesc_ntoh_leuint8(const void *source);
 128          
 129          
 130          
 131          
 132          static   /*inline*/   uint8_t __nesc_hton_leuint8(void *target, uint8_t value);
 133          
 134          
 135          
 136          
 137          
 138          static   /*inline*/   int8_t __nesc_ntoh_int8(const void *source);
 139          //#line 257
 140          static   /*inline*/   int8_t __nesc_hton_int8(void *target, int8_t value);
 141          //#line 276
 142          static   /*inline*/   uint16_t __nesc_ntoh_leuint16(const void *source);
 143          
 144          
 145          
 146          
 147          static   /*inline*/   uint16_t __nesc_hton_leuint16(void *target, uint16_t value);
 148          //#line 385
 149          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nx_int8_t;typedef int8_t __nesc_nxbase_nx_in
             -t8_t  ;
 150          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nx_int16_t;typedef int16_t __nesc_nxbase_nx_
             -int16_t  ;
 151          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nx_int32_t;typedef int32_t __nesc_nxbase_nx_
             -int32_t  ;
 152          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nx_int64_t;/*typedef int64_t __nesc_nxbase_n
             -x_int64_t  ;*/
 153          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nx_uint8_t;typedef uint8_t __nesc_nxbase_nx_
             -uint8_t  ;
 154          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nx_uint16_t;typedef uint16_t __nesc_nxbase_n
             -x_uint16_t  ;
 155          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nx_uint32_t;typedef uint32_t __nesc_nxbase_n
             -x_uint32_t  ;
 156          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nx_uint64_t;/*typedef uint64_t __nesc_nxbase
             -_nx_uint64_t  ;*/
 157          
 158          
 159          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nxle_int8_t;typedef int8_t __nesc_nxbase_nxl
             -e_int8_t  ;
 160          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nxle_int16_t;typedef int16_t __nesc_nxbase_n
             -xle_int16_t  ;
 161          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nxle_int32_t;typedef int32_t __nesc_nxbase_n
             -xle_int32_t  ;
 162          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nxle_int64_t;/*typedef int64_t __nesc_nxbase
             -_nxle_int64_t  ;*/
 163          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nxle_uint8_t;typedef uint8_t __nesc_nxbase_n
             -xle_uint8_t  ;
 164          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nxle_uint16_t;typedef uint16_t __nesc_nxbase
             -_nxle_uint16_t  ;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 4   

 165          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nxle_uint32_t;typedef uint32_t __nesc_nxbase
             -_nxle_uint32_t  ;
 166          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nxle_uint64_t;/*typedef uint64_t __nesc_nxba
             -se_nxle_uint64_t  ;*/
 167          //# 26 "/usr/include/machine/_types.h"
 168          typedef signed char __int8_t;
 169          typedef unsigned char __uint8_t;
 170          
 171          
 172          
 173          
 174          
 175          
 176          
 177          
 178          typedef signed short __int16_t;
 179          typedef unsigned short __uint16_t;
 180          
 181          
 182          
 183          
 184          
 185          
 186          
 187          
 188          typedef __int16_t __int_least16_t;
 189          typedef __uint16_t __uint_least16_t;
 190          //# 58 "/usr/include/machine/_types.h" 3
 191          typedef signed int __int32_t;
 192          typedef unsigned int __uint32_t;
 193          //#line 76
 194          typedef __int32_t __int_least32_t;
 195          typedef __uint32_t __uint_least32_t;
 196          //#line 99
 197          /*typedef signed long long __int64_t;*/
 198          /*typedef unsigned long long __uint64_t;*/
 199          //# 14 "/usr/include/sys/lock.h"
 200          typedef void *_LOCK_T;
 201          //# 14 "/usr/include/sys/_types.h"
 202          typedef long _off_t;
 203          /*__extension__*/ 
 204          //#line 15
 205          typedef
 206                   float* _off64_t;
 207                
 208          
 209          
 210          typedef int _ssize_t;
 211          //# 354 "/usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h" 3
 212          typedef unsigned int wint_t;
 213          //# 35 "/usr/include/sys/_types.h"
 214          //#line 27
 215          typedef struct __nesc_unnamed4243 {
 216          
 217            int __count;
 218            union __nesc_unnamed4244 {
 219          
 220              wint_t __wch;
 221              unsigned char __wchb[4];
 222            } __value;
 223          } _mbstate_t;
 224          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 5   

 225          typedef _LOCK_T _flock_t;
 226          
 227          
 228          typedef void *_iconv_t;
 229          //# 151 "/usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h" 3
 230          typedef int ptrdiff_t;
 231          //#line 213
 232          typedef unsigned int size_t;
 233          //#line 325
 234          typedef short unsigned int wchar_t;
 235          //# 19 "/usr/include/machine/types.h"
 236          typedef long int __off_t;
 237          typedef int __pid_t;
 238          
 239          /*__extension__*/ 
 240          //#line 22
 241          typedef
 242                   float* __loff_t;
 243                
 244          //# 92 "/usr/include/sys/types.h"
 245          typedef unsigned char u_char;
 246          typedef unsigned short u_short;
 247          typedef unsigned int u_int;
 248          typedef unsigned long u_long;
 249          
 250          
 251          
 252          typedef unsigned short ushort;
 253          typedef unsigned int uint;
 254          
 255          
 256          
 257          typedef unsigned long clock_t;
 258          
 259          
 260          
 261          
 262          typedef long time_t;
 263          
 264          
 265          
 266          
 267          struct timespec {
 268            time_t tv_sec;
 269            long tv_nsec;
 270          };
 271          
 272          struct itimerspec {
 273            struct timespec it_interval;
 274            struct timespec it_value;
 275          };
 276          
 277          
 278          typedef long daddr_t;
 279          typedef char *caddr_t;
 280          //# 180 "/usr/include/sys/types.h" 3
 281          typedef int pid_t;
 282          
 283          
 284          
 285          typedef _ssize_t ssize_t;
 286          //#line 203
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 6   

 287          typedef unsigned short nlink_t;
 288          //#line 225
 289          typedef long fd_mask;
 290          
 291          
 292          
 293          
 294          
 295          
 296          
 297          
 298          
 299          //#line 233
 300          typedef struct _types_fd_set {
 301            fd_mask fds_bits[(64 + (sizeof(fd_mask ) * 8 - 1)) / (sizeof(fd_mask ) * 8)];
 302          } _types_fd_set;
 303          //#line 256
 304          typedef unsigned long clockid_t;
 305          
 306          
 307          
 308          
 309          typedef unsigned long timer_t;
 310          
 311          
 312          
 313          typedef unsigned long useconds_t;
 314          typedef long suseconds_t;
 315          //# 26 "/usr/include/cygwin/types.h"
 316          typedef struct timespec timespec_t;
 317          
 318          
 319          
 320          
 321          typedef struct timespec timestruc_t;
 322          
 323          
 324          
 325          
 326          
 327          typedef _off64_t off_t;
 328          
 329          
 330          
 331          
 332          
 333          typedef __loff_t loff_t;
 334          
 335          
 336          
 337          typedef short __dev16_t;
 338          typedef unsigned long __dev32_t;
 339          
 340          typedef __dev32_t dev_t;
 341          
 342          
 343          
 344          
 345          
 346          
 347          
 348          typedef long blksize_t;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 7   

 349          
 350          
 351          
 352          
 353          typedef long __blkcnt32_t;
 354          typedef
 355                   float* __blkcnt64_t;
 356                
 357          
 358          typedef __blkcnt64_t blkcnt_t;
 359          
 360          
 361          
 362          
 363          
 364          
 365          
 366          typedef unsigned long fsblkcnt_t;
 367          
 368          
 369          
 370          
 371          typedef unsigned long fsfilcnt_t;
 372          
 373          
 374          
 375          
 376          typedef unsigned short __uid16_t;
 377          typedef unsigned long __uid32_t;
 378          
 379          typedef __uid32_t uid_t;
 380          
 381          
 382          
 383          
 384          
 385          
 386          
 387          typedef unsigned short __gid16_t;
 388          typedef unsigned long __gid32_t;
 389          
 390          typedef __gid32_t gid_t;
 391          
 392          
 393          
 394          
 395          
 396          
 397          
 398          typedef unsigned long __ino32_t;
 399          typedef 
 400                   float* __ino64_t;
 401                
 402          
 403          typedef __ino64_t ino_t;
 404          
 405          
 406          
 407          
 408          
 409          
 410          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 8   

 411          
 412          typedef unsigned long id_t;
 413          //# 140 "/usr/include/cygwin/types.h" 3
 414          struct flock {
 415            short l_type;
 416            short l_whence;
 417            off_t l_start;
 418            off_t l_len;
 419          
 420            pid_t l_pid;
 421          };
 422          
 423          
 424          
 425          
 426          
 427          
 428          
 429          typedef
 430                   float* key_t;
 431                
 432          
 433          
 434          
 435          
 436          
 437          
 438          
 439          typedef unsigned long vm_offset_t;
 440          
 441          
 442          
 443          
 444          typedef unsigned long vm_size_t;
 445          
 446          
 447          
 448          
 449          typedef void *vm_object_t;
 450          
 451          
 452          
 453          
 454          typedef unsigned char u_int8_t;
 455          
 456          
 457          
 458          typedef __uint16_t u_int16_t;
 459          
 460          
 461          
 462          typedef __uint32_t u_int32_t;
 463          
 464          
 465          
 466          /*typedef __uint64_t u_int64_t;*/
 467          
 468          
 469          
 470          
 471          typedef __int32_t register_t;
 472          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 9   

 473          
 474          
 475          
 476          typedef char *addr_t;
 477          
 478          
 479          
 480          
 481          typedef unsigned mode_t;
 482          
 483          
 484          
 485          
 486          
 487          typedef struct __pthread_t {
 488          //#line 211
 489            char __dummy;
 490          } *
 491          //#line 211
 492          pthread_t;
 493          typedef struct __pthread_mutex_t {
 494          //#line 212
 495            char __dummy;
 496          } *
 497          //#line 212
 498          pthread_mutex_t;
 499          
 500          typedef struct __pthread_key_t {
 501          //#line 214
 502            char __dummy;
 503          } *
 504          //#line 214
 505          pthread_key_t;
 506          typedef struct __pthread_attr_t {
 507          //#line 215
 508            char __dummy;
 509          } *
 510          //#line 215
 511          pthread_attr_t;
 512          typedef struct __pthread_mutexattr_t {
 513          //#line 216
 514            char __dummy;
 515          } *
 516          //#line 216
 517          pthread_mutexattr_t;
 518          typedef struct __pthread_condattr_t {
 519          //#line 217
 520            char __dummy;
 521          } *
 522          //#line 217
 523          pthread_condattr_t;
 524          typedef struct __pthread_cond_t {
 525          //#line 218
 526            char __dummy;
 527          } *
 528          //#line 218
 529          pthread_cond_t;
 530          
 531          
 532          
 533          
 534          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 10  

 535          
 536          
 537          //#line 221
 538          typedef struct __nesc_unnamed4245 {
 539          
 540            pthread_mutex_t mutex;
 541            int state;
 542          } 
 543          pthread_once_t;
 544          typedef struct __pthread_rwlock_t {
 545          //#line 227
 546            char __dummy;
 547          } *
 548          //#line 227
 549          pthread_rwlock_t;
 550          typedef struct __pthread_rwlockattr_t {
 551          //#line 228
 552            char __dummy;
 553          } *
 554          //#line 228
 555          pthread_rwlockattr_t;
 556          //# 30 "/opt/atos/tos/chips/cc2530/mcs51/stdio.h"
 557          extern int sprintf(char *, const char *, ...);
 558          //# 7 "/opt/atos/tos/chips/cc2530/mcs51/string.h"
 559          extern void *memcpy(void *s1, void *s2, int n);
 560          
 561          extern void *memset(void *s, char val, int n);
 562          //# 19 "/usr/include/sys/reent.h"
 563          typedef unsigned long __ULong;
 564          //# 40 "/usr/include/sys/reent.h" 3
 565          struct _Bigint {
 566          
 567            struct _Bigint *_next;
 568            int _k, _maxwds, _sign, _wds;
 569            __ULong _x[1];
 570          };
 571          
 572          
 573          struct __tm {
 574          
 575            int __tm_sec;
 576            int __tm_min;
 577            int __tm_hour;
 578            int __tm_mday;
 579            int __tm_mon;
 580            int __tm_year;
 581            int __tm_wday;
 582            int __tm_yday;
 583            int __tm_isdst;
 584          };
 585          
 586          
 587          
 588          
 589          
 590          
 591          
 592          struct _on_exit_args {
 593            void *_fnargs[32];
 594            void *_dso_handle[32];
 595          
 596            __ULong _fntypes;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 11  

 597          
 598          
 599            __ULong _is_cxa;
 600          };
 601          
 602          
 603          
 604          
 605          
 606          
 607          
 608          
 609          
 610          struct _atexit {
 611            struct _atexit *_next;
 612            int _ind;
 613          
 614            void (*_fns[32])(void );
 615            struct _on_exit_args _on_exit_args;
 616          };
 617          
 618          
 619          
 620          
 621          
 622          
 623          
 624          
 625          
 626          struct __sbuf {
 627            unsigned char *_base;
 628            int _size;
 629          };
 630          
 631          
 632          
 633          
 634          
 635          
 636          typedef long _fpos_t;
 637          
 638          
 639          
 640          typedef _off64_t _fpos64_t;
 641          //#line 166
 642          struct __sFILE {
 643            unsigned char *_p;
 644            int _r;
 645            int _w;
 646            short _flags;
 647            short _file;
 648            struct __sbuf _bf;
 649            int _lbfsize;
 650          
 651          
 652          
 653          
 654          
 655          
 656            void *_cookie;
 657          
 658            _ssize_t /*__attribute((__cdecl__))*/ (*_read)(void *_cookie, char *_buf, int _n);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 12  

 659            _ssize_t /*__attribute((__cdecl__))*/ (*_write)(void *_cookie, const char *_buf, int _n);
 660          
 661            _fpos_t /*__attribute((__cdecl__))*/ (*_seek)(void *_cookie, _fpos_t _offset, int _whence);
 662            int /*__attribute((__cdecl__))*/ (*_close)(void *_cookie);
 663          
 664          
 665            struct __sbuf _ub;
 666            unsigned char *_up;
 667            int _ur;
 668          
 669          
 670            unsigned char _ubuf[3];
 671            unsigned char _nbuf[1];
 672          
 673          
 674            struct __sbuf _lb;
 675          
 676          
 677            int _blksize;
 678            int _offset;
 679          
 680          
 681            struct _reent *__data;
 682          
 683          
 684          
 685            _flock_t _lock;
 686          };
 687          
 688          
 689          
 690          struct __sFILE64 {
 691            unsigned char *_p;
 692            int _r;
 693            int _w;
 694            short _flags;
 695            short _file;
 696            struct __sbuf _bf;
 697            int _lbfsize;
 698          
 699            struct _reent *__data;
 700          
 701          
 702            void *_cookie;
 703          
 704            _ssize_t /*__attribute((__cdecl__))*/ (*_read)(void *_cookie, char *_buf, int _n);
 705            _ssize_t /*__attribute((__cdecl__))*/ (*_write)(void *_cookie, const char *_buf, int _n);
 706          
 707            _fpos_t /*__attribute((__cdecl__))*/ (*_seek)(void *_cookie, _fpos_t _offset, int _whence);
 708            int /*__attribute((__cdecl__))*/ (*_close)(void *_cookie);
 709          
 710          
 711            struct __sbuf _ub;
 712            unsigned char *_up;
 713            int _ur;
 714          
 715          
 716            unsigned char _ubuf[3];
 717            unsigned char _nbuf[1];
 718          
 719          
 720            struct __sbuf _lb;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 13  

 721          
 722          
 723            int _blksize;
 724            int _flags2;
 725          
 726            _off64_t _offset;
 727            _fpos64_t /*__attribute((__cdecl__))*/ (*_seek64)(void *_cookie, _fpos64_t _offset, int _whence);
 728          
 729          
 730            _flock_t _lock;
 731          };
 732          
 733          typedef struct __sFILE64 __FILE;
 734          
 735          
 736          
 737          
 738          struct _glue {
 739          
 740            struct _glue *_next;
 741            int _niobs;
 742            __FILE *_iobs;
 743          };
 744          //#line 290
 745          struct _rand48 {
 746            unsigned short _seed[3];
 747            unsigned short _mult[3];
 748            unsigned short _add;
 749          };
 750          //#line 565
 751          struct _reent {
 752          
 753            int _errno;
 754          
 755          
 756          
 757          
 758            __FILE *_stdin, *_stdout, *_stderr;
 759          
 760            int _inc;
 761            char _emergency[25];
 762          
 763            int _current_category;
 764            const char *_current_locale;
 765          
 766            int __sdidinit;
 767          
 768            void /*__attribute((__cdecl__))*/ (*__cleanup)(struct _reent *);
 769          
 770          
 771            struct _Bigint *_result;
 772            int _result_k;
 773            struct _Bigint *_p5s;
 774            struct _Bigint **_freelist;
 775          
 776          
 777            int _cvtlen;
 778            char *_cvtbuf;
 779          
 780            union __nesc_unnamed4246 {
 781          
 782              struct __nesc_unnamed4247 {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 14  

 783          
 784                unsigned int _unused_rand;
 785                char *_strtok_last;
 786                char _asctime_buf[26];
 787                struct __tm _localtime_buf;
 788                int _gamma_signgam;
 789                /*__extension__*/ 
 790                   float* _rand_next;
 791                
 792                struct _rand48 _r48;
 793                _mbstate_t _mblen_state;
 794                _mbstate_t _mbtowc_state;
 795                _mbstate_t _wctomb_state;
 796                char _l64a_buf[8];
 797                char _signal_buf[24];
 798                int _getdate_err;
 799                _mbstate_t _mbrlen_state;
 800                _mbstate_t _mbrtowc_state;
 801                _mbstate_t _mbsrtowcs_state;
 802                _mbstate_t _wcrtomb_state;
 803                _mbstate_t _wcsrtombs_state;
 804              } _reent;
 805          
 806          
 807          
 808              struct __nesc_unnamed4248 {
 809          
 810          
 811                unsigned char *_nextf[30];
 812                unsigned int _nmalloc[30];
 813              } _unused;
 814            } _new;
 815          
 816          
 817            struct _atexit *_atexit;
 818            struct _atexit _atexit0;
 819          
 820          
 821            void (**_sig_func)(int );
 822          
 823          
 824          
 825          
 826            struct _glue __sglue;
 827            __FILE __sf[3];
 828          };
 829          //#line 799
 830          struct _reent;
 831          struct _reent;
 832          
 833          
 834          
 835          
 836          
 837          
 838          
 839          
 840          
 841          struct _reent;
 842          //# 32 "/usr/include/stdlib.h"
 843          //#line 28
 844          typedef struct __nesc_unnamed4249 {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 15  

 845          
 846            int quot;
 847            int rem;
 848          } div_t;
 849          
 850          
 851          
 852          
 853          
 854          //#line 34
 855          typedef struct __nesc_unnamed4250 {
 856          
 857            long quot;
 858            long rem;
 859          } ldiv_t;
 860          
 861          
 862          
 863          
 864          
 865          
 866          //#line 41
 867          typedef struct __nesc_unnamed4251 {
 868          
 869          
 870                   float* quot;
 871                
 872          
 873                   float* rem;
 874                
 875          } lldiv_t;
 876          //# 11 "/usr/include/math.h"
 877          union __dmath {
 878          
 879            __ULong i[2];
 880            double d;
 881          };
 882          
 883          union __fmath {
 884          
 885            __ULong i[1];
 886            float f;
 887          };
 888          
 889          union __ldmath {
 890          
 891            __ULong i[4];
 892            long double ld;
 893          };
 894          //# 111 "/usr/include/math.h" 3
 895          typedef float float_t;
 896          typedef double double_t;
 897          //#line 344
 898          struct exception {
 899          
 900          
 901            int type;
 902            char *name;
 903            double arg1;
 904            double arg2;
 905            double retval;
 906            int err;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 16  

 907          };
 908          //#line 399
 909          enum __fdlibm_version {
 910          
 911            __fdlibm_ieee = -1, 
 912            __fdlibm_svid, 
 913            __fdlibm_xopen, 
 914            __fdlibm_posix
 915          };
 916          
 917          
 918          
 919          
 920          enum __fdlibm_version;
 921          //# 20 "/opt/tinyos-2.x/tos/system/tos.h"
 922          typedef uint8_t bool;
 923          enum __nesc_unnamed4252 {
 924          //#line 21
 925            FALSE = 0, TRUE = 1
 926          };
 927          typedef nx_int8_t nx_bool;
 928          uint16_t TOS_NODE_ID = 1;
 929          
 930          
 931          
 932          
 933          
 934          /*struct __nesc_attr_atmostonce {
 935          };*/
 936          //#line 31
 937          /*struct __nesc_attr_atleastonce {
 938          };*/
 939          //#line 32
 940          /*struct __nesc_attr_exactlyonce {
 941          };*/
 942          //# 6 "/opt/tinyos-2.x/tos/types/AM.h"
 943          typedef nx_uint8_t nx_am_id_t;
 944          typedef nx_uint8_t nx_am_group_t;
 945          typedef nx_uint16_t nx_am_addr_t;
 946          
 947          typedef uint8_t am_id_t;
 948          typedef uint8_t am_group_t;
 949          typedef uint16_t am_addr_t;
 950          
 951          enum __nesc_unnamed4253 {
 952            AM_BROADCAST_ADDR = 0xffff
 953          };
 954          
 955          
 956          
 957          
 958          
 959          
 960          
 961          
 962          
 963          enum __nesc_unnamed4254 {
 964            TOS_AM_GROUP = 0x22, 
 965            TOS_AM_ADDRESS = 1
 966          };
 967          
 968          // TinyOS's ioCC2530.h is replaced by IAR/KEIL's 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 17  

 969          #include "ioCC2530.h"
 970          
 971          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/RfConstant.h"
 972          enum rf_fcs_enums {
 973            RF_FCS_CRC_OK_MASK = 0x80, 
 974            RF_FCS_CORRELATION_MASK = 0x7F
 975          };
 976          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/RfAck.h"
 977          //#line 10
 978          typedef nx_struct _rf_ack_t {
 979          
 980          
 981            nx_uint8_t dsn;
 982          
 983          
 984          
 985          
 986            nx_uint16_t parent;
 987            nx_uint16_t parent_cost;
 988            nx_uint8_t hopcount;
 989            nx_uint8_t buffer_pressure;
 990          
 991            nx_bool forward_full;
 992            nx_bool receive_this_msg;
 993          } /*__attribute__((packed))*/ 
 994          //#line 39
 995          rf_ack_t;
 996          //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/RfMessage.h"
 997          //#line 13
 998          typedef nx_struct _rf_header_t {
 999          
1000            nxle_uint8_t length;
1001            nxle_uint16_t fcf;
1002            nxle_uint8_t dsn;
1003            nxle_uint16_t destpan;
1004            nxle_uint16_t dest;
1005            nxle_uint16_t src;
1006            nxle_uint8_t type;
1007          
1008            nxle_uint8_t security;
1009          } /*__attribute__((packed))*/ rf_header_t;
1010          
1011          
1012          
1013          
1014          
1015          
1016          
1017          //#line 29
1018          typedef nx_struct _rf_footer_t {
1019          
1020            nx_uint8_t i;
1021          } /*__attribute__((packed))*/ rf_footer_t;
1022          //#line 51
1023          //#line 39
1024          typedef nx_struct _rf_meta_data_t {
1025          
1026            nx_int8_t rssi;
1027            nx_uint8_t lqi;
1028            nx_bool crc;
1029            nx_bool ack;
1030          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 18  

1031            nx_uint8_t resource_id;
1032            nx_uint8_t route_resource_id;
1033          
1034          
1035            rf_ack_t ack_msg;
1036          } /*__attribute__((packed))*/ rf_meta_data_t;
1037          //# 38 "/opt/atos/tos/lib/atos/net/AtosMac/IEEE802154.h"
1038          enum ieee154_fcf_enums {
1039            IEEE154_FCF_FRAME_TYPE = 0, 
1040            IEEE154_FCF_SECURITY_ENABLED = 3, 
1041            IEEE154_FCF_FRAME_PENDING = 4, 
1042            IEEE154_FCF_ACK_REQ = 5, 
1043            IEEE154_FCF_INTRAPAN = 6, 
1044            IEEE154_FCF_DEST_ADDR_MODE = 10, 
1045            IEEE154_FCF_SRC_ADDR_MODE = 14
1046          };
1047          
1048          enum ieee154_fcf_type_enums {
1049            IEEE154_TYPE_BEACON = 0, 
1050            IEEE154_TYPE_DATA = 1, 
1051            IEEE154_TYPE_ACK = 2, 
1052            IEEE154_TYPE_MAC_CMD = 3
1053          };
1054          
1055          enum iee154_fcf_addr_mode_enums {
1056            IEEE154_ADDR_NONE = 0, 
1057            IEEE154_ADDR_SHORT = 2, 
1058            IEEE154_ADDR_EXT = 3
1059          };
1060          //# 16 "/opt/atos/tos/platforms/antc5/platform_message.h"
1061          //#line 13
1062          typedef union message_header {
1063            rf_header_t header;
1064          } 
1065          message_header_t;
1066          
1067          
1068          
1069          //#line 18
1070          typedef union TOSRadioFooter {
1071            rf_footer_t footer;
1072          } message_footer_t;
1073          
1074          
1075          
1076          //#line 22
1077          typedef union TOSRadioMeta_data {
1078            rf_meta_data_t meta;
1079          } message_meta_data_t;
1080          //# 19 "/opt/tinyos-2.x/tos/types/message.h"
1081          //#line 14
1082          typedef nx_struct message_t {
1083            nx_uint8_t header[sizeof(message_header_t )];
1084            nx_uint8_t _data[127 - (sizeof(rf_header_t ) - 1 + sizeof(uint16_t )) - 0 + sizeof(uint16_t )];
1085            nx_uint8_t footer[sizeof(message_footer_t )];
1086            nx_uint8_t meta_data[sizeof(message_meta_data_t )];
1087          } /*__attribute__((packed))*/ message_t;
1088          //# 13 "/opt/atos/tos/platforms/antc5/platform.h"
1089          uint16_t TOS_IEEE_SADDR = TOS_AM_ADDRESS;
1090          uint16_t TOS_IEEE_PANID = TOS_AM_GROUP;
1091          //# 5 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTask.h"
1092          extern uint8_t TopTaskMgrP__m_task_flag[];
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 19  

1093          //# 36 "/opt/tinyos-2.x/tos/types/TinyError.h"
1094          enum __nesc_unnamed4261 {
1095            FAIL = 1, 
1096            ESIZE = 2, 
1097            ECANCEL = 3, 
1098            EOFF = 4, 
1099            EBUSY = 5, 
1100            EINVAL = 6, 
1101            ERETRY = 7, 
1102            ERESERVE = 8, 
1103            EALREADY = 9
1104          };
1105          
1106          typedef uint8_t error_t  ;
1107          
1108          static  /*inline*/  error_t ecombine(error_t r1, error_t r2);
1109          //# 62 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
1110          typedef uint8_t __nesc_atomic_t;
1111          
1112          static   /*inline*/   void __nesc_disable_interrupt(void);
1113          static   /*inline*/   void __nesc_enable_interrupt(void);
1114          
1115          
1116          
1117          
1118          
1119            /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )  ;
1120          
1121          
1122          
1123          
1124          
1125            /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)  ;
1126          //#line 98
1127          __nesc_atomic_t m_critical_state;
1128          //# 39 "/opt/atos/tos/chips/cc2530/timer/hardware/CC2530Timer.h"
1129          enum __nesc_unnamed4262 {
1130            CC2530_SLEEP_OSC32K_CALDIS = 7, 
1131            CC2530_SLEEP_XOSC_STB = 6, 
1132            CC2530_SLEEP_HFRC_STB = 5, 
1133            CC2530_SLEEP_DIV = 3, 
1134            CC2530_SLEEP_OSC_PD = 2, 
1135            CC2530_SLEEP_MODE = 0, 
1136            CC2530_SLEEP_MODE_MASK = 3
1137          };
1138          
1139          enum __nesc_unnamed4263 {
1140            CC2530_SLEEP_POWERMODE_0 = 0, 
1141            CC2530_SLEEP_POWERMODE_1 = 1, 
1142            CC2530_SLEEP_POWERMODE_2 = 2, 
1143            CC2530_SLEEP_POWERMODE_3 = 3
1144          };
1145          
1146          enum __nesc_unnamed4264 {
1147            CC2530_CLKCON_OSC32K = 7, 
1148            CC2530_CLKCON_OSC = 6, 
1149            CC2530_CLKCON_TICKSPD = 3, 
1150            CC2530_CLKCON_CLKSPD = 0, 
1151            CC2530_CLKCON_TICKSPD_MASK = 0x38
1152          };
1153          
1154          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 20  

1155          
1156          
1157          enum cc2530_tick_spd_t {
1158            CC2530_TICKF_DIV_1 = 0x0 << CC2530_CLKCON_TICKSPD, 
1159            CC2530_TICKF_DIV_2 = 0x1 << CC2530_CLKCON_TICKSPD, 
1160            CC2530_TICKF_DIV_4 = 0x2 << CC2530_CLKCON_TICKSPD, 
1161            CC2530_TICKF_DIV_8 = 0x3 << CC2530_CLKCON_TICKSPD, 
1162            CC2530_TICKF_DIV_16 = 0x4 << CC2530_CLKCON_TICKSPD, 
1163            CC2530_TICKF_DIV_32 = 0x5 << CC2530_CLKCON_TICKSPD, 
1164            CC2530_TICKF_DIV_64 = 0x6 << CC2530_CLKCON_TICKSPD, 
1165            CC2530_TICKF_DIV_128 = 0x7 << CC2530_CLKCON_TICKSPD
1166          };
1167          
1168          
1169          
1170          
1171          
1172          
1173          
1174          
1175          
1176          
1177          enum __nesc_unnamed4265 {
1178            CC2530_T1CTL_DIV = 0x2, 
1179            CC2530_T1CTL_MODE = 0x0, 
1180            CC2530_T1CTL_MODE_MASK = 0x3, 
1181            CC2530_T1CTL_DIV_MASK = 0xc
1182          };
1183          
1184          
1185          
1186          
1187          enum __nesc_unnamed4266 {
1188            CC2530_T1STAT_OVFIF = 0x5, 
1189            CC2530_T1STAT_CH4IF = 0x4, 
1190            CC2530_T1STAT_CH3IF = 0x3, 
1191            CC2530_T1STAT_CH2IF = 0x2, 
1192            CC2530_T1STAT_CH1IF = 0x1, 
1193            CC2530_T1STAT_CH0IF = 0x0, 
1194            CC2530_T1STAT_IF_MASK = 0x1f
1195          };
1196          
1197          
1198          
1199          
1200          
1201          enum cc2530_timer1_mode_t {
1202            CC2530_TIMER1_MODE_OFF = 0x0 << CC2530_T1CTL_MODE, 
1203            CC2530_TIMER1_MODE_FREE = 0x1 << CC2530_T1CTL_MODE, 
1204            CC2530_TIMER1_MODE_MODULO = 0x2 << CC2530_T1CTL_MODE, 
1205            CC2530_TIMER1_MODE_UPDOWN = 0x3 << CC2530_T1CTL_MODE
1206          };
1207          
1208          
1209          
1210          
1211          
1212          
1213          enum cc2530_timer1_if_t {
1214            CC2530_T1_OVFIF = 1 << CC2530_T1STAT_OVFIF, 
1215            CC2530_T1_CH4IF = 1 << CC2530_T1STAT_CH2IF, 
1216            CC2530_T1_CH3IF = 1 << CC2530_T1STAT_CH1IF, 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 21  

1217            CC2530_T1_CH2IF = 1 << CC2530_T1STAT_CH2IF, 
1218            CC2530_T1_CH1IF = 1 << CC2530_T1STAT_CH1IF, 
1219            CC2530_T1_CH0IF = 1 << CC2530_T1STAT_CH0IF
1220          };
1221          
1222          
1223          
1224          
1225          
1226          enum cc2530_timer1_prescaler_t {
1227            CC2530_TIMER1_DIV_1 = 0x0 << CC2530_T1CTL_DIV, 
1228            CC2530_TIMER1_DIV_8 = 0x1 << CC2530_T1CTL_DIV, 
1229            CC2530_TIMER1_DIV_32 = 0x2 << CC2530_T1CTL_DIV, 
1230            CC2530_TIMER1_DIV_128 = 0x3 << CC2530_T1CTL_DIV
1231          };
1232          
1233          
1234          
1235          
1236          
1237          enum __nesc_unnamed4267 {
1238            CC2530_T1CCTLx_CPSEL = 0x7, 
1239            CC2530_T1CCTLx_IM = 0x6, 
1240            CC2530_T1CCTLx_CMP = 0x3, 
1241            CC2530_T1CCTLx_MODE = 0x2, 
1242            CC2530_T1CCTLx_CAP = 0x0
1243          };
1244          
1245          
1246          
1247          
1248          
1249          
1250          
1251          
1252          
1253          
1254          enum cc2530_timerMAC_mode_t {
1255            CC2530_TIMERMAC_MODE_IDLE = 0x0, 
1256            CC2530_TIMERMAC_MODE_RUN = 0x1
1257          };
1258          
1259          
1260          
1261          
1262          
1263          enum cc2530_timerMAC_T2CNF_t {
1264            CC2530_T2CNF_CMPIF = 0x7, 
1265            CC2530_T2CNF_PERIF = 0x6, 
1266            CC2530_T2CNF_OFCMPIF = 0x5, 
1267            CC2530_T2CNF_CMSEL = 0x3, 
1268            CC2530_T2CNF_SYNC = 0x1, 
1269            CC2530_T2CNF_RUN = 0x0
1270          };
1271          
1272          
1273          
1274          
1275          
1276          
1277          enum cc2530_timerMAC_T2PEROF2_t {
1278            CC2530_T2PEROF2_CMPIM = 0x7, 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 22  

1279            CC2530_T2PEROF2_PERIM = 0x6, 
1280            CC2530_T2PEROF2_OFCMPIM = 0x5
1281          };
1282          
1283          enum cc2530_timerMAC_if_t {
1284            CC2530_TMAC_CMPIF = 1 << CC2530_T2CNF_CMPIF, 
1285            CC2530_TMAC_PERIF = 1 << CC2530_T2CNF_PERIF, 
1286            CC2530_TMAC_OFCMPIF = 1 << CC2530_T2CNF_OFCMPIF
1287          };
1288          
1289          enum cc2530_timerMAC_interval_t {
1290            CC2530_TIMERWDT_32768 = 0, 
1291            CC2530_TIMERWDT_8192 = 1, 
1292            CC2530_TIMERWDT_512 = 2, 
1293            CC2530_TIMERWDT_64 = 3
1294          };
1295          //#line 217
1296          enum __nesc_unnamed4268 {
1297            CC2530_TIMIF_OVFIM = 0x6
1298          };
1299          
1300          enum cc2530_timer34_if_t {
1301            CC2530_TIMIF_T4CH1IF = 0x5, 
1302            CC2530_TIMIF_T4CH0IF = 0x4, 
1303            CC2530_TIMIF_T4OVFIF = 0x3, 
1304            CC2530_TIMIF_T3CH1IF = 0x2, 
1305            CC2530_TIMIF_T3CH0IF = 0x1, 
1306            CC2530_TIMIF_T3OVFIF = 0x0
1307          };
1308          
1309          
1310          
1311          
1312          
1313          
1314          enum cc2530_timer3_4_mode_t {
1315            CC2530_TIMER3_4_MODE_FREE = 0x0, 
1316            CC2530_TIMER3_4_MODE_DOWN = 0x1, 
1317            CC2530_TIMER3_4_MODE_MODULO = 0x2, 
1318            CC2530_TIMER3_4_MODE_UPDOWN = 0x3
1319          };
1320          
1321          
1322          
1323          
1324          
1325          enum __nesc_unnamed4269 {
1326            CC2530_T34CTL_DIV = 0x5, 
1327            CC2530_T34CTL_START = 0x4, 
1328            CC2530_T34CTL_OVFIM = 0x3, 
1329            CC2530_T34CTL_WDTIF = 0x3, 
1330            CC2530_T34CTL_CLR = 0x2, 
1331            CC2530_T34CTL_MODE = 0x0, 
1332            CC2530_T34CTL_MODE_MASK = 0x3, 
1333            CC2530_T34CTL_DIV_MASK = 0xe0
1334          };
1335          
1336          
1337          
1338          
1339          
1340          enum cc2530_timer3_4_prescaler_t {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 23  

1341            CC2530_TIMER3_4_DIV_1 = 0x0 << CC2530_T34CTL_DIV, 
1342            CC2530_TIMER3_4_DIV_2 = 0x1 << CC2530_T34CTL_DIV, 
1343            CC2530_TIMER3_4_DIV_4 = 0x2 << CC2530_T34CTL_DIV, 
1344            CC2530_TIMER3_4_DIV_8 = 0x3 << CC2530_T34CTL_DIV, 
1345            CC2530_TIMER3_4_DIV_16 = 0x4 << CC2530_T34CTL_DIV, 
1346            CC2530_TIMER3_4_DIV_32 = 0x5 << CC2530_T34CTL_DIV, 
1347            CC2530_TIMER3_4_DIV_64 = 0x6 << CC2530_T34CTL_DIV, 
1348            CC2530_TIMER3_4_DIV_128 = 0x7 << CC2530_T34CTL_DIV
1349          };
1350          
1351          
1352          
1353          
1354          
1355          
1356          
1357          
1358          
1359          
1360          enum __nesc_unnamed4270 {
1361            CC2530_WDCTL_CLR = 0x4, 
1362            CC2530_WDCTL_EN = 0x3, 
1363            CC2530_WDCTL_MODE = 0x2, 
1364            CC2530_WDCTL_INT = 0x0, 
1365            CC2530_WDCTL_INT_MASK = 0x3
1366          };
1367          
1368          enum cc2530_timerWDT_mode_t {
1369            CC2530_TIMERWDT_MODE_WDT = 0x0 << CC2530_WDCTL_MODE, 
1370            CC2530_TIMERWDT_MODE_TIMER = 0x1 << CC2530_WDCTL_MODE
1371          };
1372          //# 6 "/opt/atos/tos/lib/atos/common/AtosError.h"
1373          enum __nesc_unnamed4271 {
1374          
1375          
1376            ERR_RF_TX_GO_FAIL = 50, 
1377          
1378          
1379            ERR_MAC_CONGESTION_FAIL = 51, 
1380            ERR_MAC_SEND_RESOURCE_EXISTS = 52, 
1381            ERR_MAC_SEND_RESOURCE_FULL = 53, 
1382          
1383            ERR_MAC_NO_ACK = 54, 
1384            ERR_MAC_RETRY_MAX = 55, 
1385          
1386          
1387            ERR_ROUTE_SELECT_ROUTE_FAIL = 56, 
1388            ERR_ROUTE_SEND_P2P_FAIL = 57, 
1389          
1390            ERR_ROUTE_SEND_QUEUE_EXISTS = 58, 
1391            ERR_ROUTE_SEND_QUEUE_FULL = 59, 
1392            ERR_ROUTE_SEND_QUEUE_FAIL = 60, 
1393          
1394            ERR_ROUTE_FUNSION_ERROR = 61, 
1395            ERR_ROUTE_FUNSION_NO_ENOUGH = 62, 
1396          
1397            ERR_ROUTE_DISABLED = 63, 
1398            ERR_ROUTE_FORWARD_INVALID = 64
1399          };
1400          //# 9 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
1401          int uart_debug_level = 9;
1402          //# 11 "/opt/atos/tos/chips/cc2530/mcs51/stdarg.h"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 24  

1403          typedef char *va_list;
1404          //# 8 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
1405          static  /*inline*/  void uart0SetBaud(uint32_t baud);
1406          //#line 34
1407          static  /*inline*/  void uart0PinMap(bool map);
1408          
1409          
1410          
1411          
1412          
1413          
1414          
1415          
1416          
1417          static  /*inline*/  void uart0SetMode(void);
1418          
1419          
1420          
1421          
1422          
1423          static  /*inline*/  void uart0Init(uint32_t baud);
1424          
1425          
1426          
1427          
1428          
1429          
1430          static void uart0PutChar(char c);
1431          //# 28 "/opt/atos/tos/lib/atos/power/McuSleep.h"
1432          typedef message_t message_t_xdata_pm0;
1433          //# 34 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
1434          uint8_t uart_debug_buf[256];
1435          uint8_t current_task_id = 255;
1436          
1437          
1438          
1439          
1440          static  /*inline*/  void ATOS_DEBUG_UART_INIT(void);
1441          
1442          
1443          
1444          
1445          
1446          static  /*inline*/  void ATOS_DEBUG_UART_PUTC(char c);
1447          
1448          
1449          
1450          
1451          
1452          
1453          
1454          
1455          static void ATOS_DEBUG_UART_PRINT(void);
1456          //# 7 "/opt/atos/tos/lib/atos/kernel/AtosTask/AtosTask.h"
1457          enum atostask_run_flag_t {
1458          
1459            ATOSTASK_RUN_FLAG_ALL = 1 << 0, 
1460            ATOSTASK_RUN_FLAG_SYNC = 1 << 1, 
1461            ATOSTASK_RUN_FLAG_UNSYNC = 1 << 2, 
1462          
1463            ATOSTASK_RUN_FLAG_STOPPED = 1 << 3
1464          };
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 25  

1465          
1466          enum atostask_mgr_ctrl_t {
1467          
1468            ATOSTASK_CTRL_IS_ENABLED, 
1469            ATOSTASK_CTRL_ENABLE, 
1470            ATOSTASK_CTRL_DISABLE, 
1471          
1472            ATOSTASK_CTRL_IS_STARTED, 
1473            ATOSTASK_CTRL_START, 
1474            ATOSTASK_CTRL_STOP, 
1475          
1476            ATOSTASK_CTRL_IS_RUNNING
1477          };
1478          //# 10 "/opt/atos/tos/lib/atos/sensor/drv/DS18B20/DS18B20.h"
1479          //#line 6
1480          typedef struct __nesc_unnamed4272 {
1481          
1482            bool minus;
1483            uint16_t value;
1484          } ds18b20_temperature_t;
1485          //#line 24
1486          enum __nesc_unnamed4273 {
1487          
1488          
1489            DS18B20_SEARCH_ROM = 0xF0, 
1490            DS18B20_READ_ROM = 0x33, 
1491            DS18B20_MATCH_ROM = 0x55, 
1492            DS18B20_SKIP_ROM = 0xCC, 
1493            DS18B20_ALARM_SEARCH = 0xEC, 
1494          
1495          
1496            DS18B20_CONVERT_T = 0x44, 
1497            DS18B20_WRITE_SCRATCHPAD = 0x4E, 
1498            DS18B20_READ_SCRATCHPAD = 0xBE, 
1499            DS18B20_COPY_SCRATCHPAD = 0x48, 
1500            DS18B20_RECALL_E2 = 0xB8, 
1501            DS18B20_READ_POWER_SUPPLY = 0xB4
1502          };
1503          //# 39 "/opt/atos/tos/lib/atos/devices/gps/common/GpsData.h"
1504          //#line 17
1505          typedef struct _gps__data_t {
1506          
1507            bool available;
1508          
1509          
1510            uint8_t hour;
1511            uint8_t minute;
1512            uint8_t second;
1513            uint16_t ms;
1514          
1515          
1516            bool location_ok;
1517          
1518          
1519            double longitude;
1520            char longitude_flag;
1521          
1522            double latitude;
1523            char latitude_flag;
1524          } 
1525          
1526          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 26  

1527          gps__data_t;
1528          //# 245 "/opt/atos/tos/lib/atos/sensor/SensorCollection.h"
1529          //#line 241
1530          typedef struct _sensor_id_t {
1531          
1532            uint8_t id;
1533            uint8_t len;
1534          } sensor_id_t;
1535          //# 29 "/opt/tinyos-2.x/tos/lib/timer/Timer.h"
1536          typedef struct __nesc_unnamed4274 {
1537          //#line 29
1538            int notUsed;
1539          } 
1540          //#line 29
1541          TMilli;
1542          typedef struct __nesc_unnamed4275 {
1543          //#line 30
1544            int notUsed;
1545          } 
1546          //#line 30
1547          T32khz;
1548          typedef struct __nesc_unnamed4276 {
1549          //#line 31
1550            int notUsed;
1551          } 
1552          //#line 31
1553          TMicro;
1554          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMac.h"
1555          //#line 9
1556          typedef struct _rf_rmac_header_t {
1557          
1558            uint8_t dsn;
1559            uint8_t ack_req;
1560          } rf_rmac_header_t;
1561          
1562          
1563          uint8_t rf_rmac_dsn = 1;
1564          //# 11 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.h"
1565          enum __nesc_unnamed4277 {
1566          
1567            ANSTD_DATA_TYPE_NODE_STATUS_UP = 0x21, 
1568            ANSTD_DATA_TYPE_DISCOVERY = 0x22, 
1569            ANSTD_DATA_TYPE_SETIEEE = 0x23, 
1570            ANSTD_DATA_TYPE_REBOOT = 0x24, 
1571            ANSTD_DATA_TYPE_TRACE = 0x25, 
1572            ANSTD_DATA_TYPE_TRACE_ACK = 0x26
1573          };
1574          
1575          
1576          
1577          
1578          //#line 21
1579          typedef struct _anstd_header_t {
1580          
1581            uint8_t _data_type;
1582          } anstd_header_t;
1583          //#line 40
1584          //#line 26
1585          typedef struct _anstd_node_status_t {
1586          
1587            uint8_t _data_type;
1588            uint8_t device_type;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 27  

1589            uint8_t industry_code;
1590            uint8_t application_code;
1591            uint16_t program_id;
1592            uint16_t program_version;
1593            uint8_t ieee[8];
1594            uint8_t node_type;
1595            uint8_t node_status;
1596            uint8_t rf_channel;
1597            uint8_t battery;
1598            uint8_t signal_strength;
1599          } anstd_node_status_t;
1600          
1601          
1602          
1603          
1604          
1605          
1606          
1607          
1608          
1609          //#line 43
1610          typedef struct _anstd_discovery_t {
1611          
1612            uint8_t _data_type;
1613            uint8_t device_type;
1614            uint8_t rf_channel;
1615            uint16_t node_group;
1616            uint16_t node_id;
1617          } anstd_discovery_t;
1618          
1619          
1620          
1621          
1622          
1623          
1624          
1625          
1626          //#line 53
1627          typedef struct _anstd_setieee_t {
1628          
1629            uint8_t _data_type;
1630            uint16_t node_group;
1631            uint16_t node_id;
1632            uint8_t ieee[8];
1633          } anstd_setieee_t;
1634          
1635          
1636          
1637          
1638          
1639          
1640          
1641          
1642          //#line 62
1643          typedef struct _anstd_reboot_t {
1644          
1645            uint8_t _data_type;
1646            uint16_t node_group;
1647            uint16_t node_id;
1648            uint8_t delay_time;
1649          } anstd_reboot_t;
1650          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 28  

1651          
1652          
1653          
1654          
1655          
1656          
1657          //#line 71
1658          typedef struct _anstd_trace_item_t {
1659          
1660            uint16_t node_id;
1661            int8_t forward_rssi;
1662            int8_t backward_rssi;
1663          } anstd_trace_item_t;
1664          
1665          
1666          
1667          
1668          
1669          
1670          
1671          
1672          //#line 77
1673          typedef struct _anstd_trace_t {
1674          
1675            uint8_t _data_type;
1676            uint8_t trace_dsn;
1677            uint16_t node_group;
1678            uint8_t total_count;
1679            uint8_t traced_count;
1680            anstd_trace_item_t items[1];
1681          } anstd_trace_t;
1682          
1683          
1684          
1685          typedef anstd_trace_t anstd_trace_ack_t;
1686          //# 7 "/opt/atos/tos/lib/atos/atp/atpcmd/app/AtpCmdPacketCommon.h"
1687          enum __nesc_unnamed4278 {
1688          
1689            ATP_CMD_MAX_RECEIVE_PACKET = 128
1690          };
1691          
1692          enum __nesc_unnamed4279 {
1693          
1694            ATP_CMD_SOF_ID_1 = 0x37, 
1695            ATP_CMD_SOF_ID_2 = 0xA9, 
1696          
1697            ATP_CMD_STATE_SOF_1 = 0, 
1698            ATP_CMD_STATE_SOF_2 = 1, 
1699            ATP_CMD_STATE_HEADER = 2, 
1700            ATP_CMD_STATE_HCS = 3, 
1701            ATP_CMD_STATE_DATA = 4, 
1702            ATP_CMD_STATE_PCS = 5
1703          };
1704          //#line 42
1705          //#line 35
1706          typedef struct _atp_cmd_packet {
1707          
1708            uint8_t cmd;
1709            uint16_t len;
1710            uint8_t hcs;
1711            uint8_t _data[ATP_CMD_MAX_RECEIVE_PACKET];
1712            uint8_t pcs;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 29  

1713          } atp_cmd_packet_t;
1714          
1715          
1716          
1717          
1718          
1719          
1720          enum __nesc_unnamed4280 {
1721          
1722            ATP_CMD_HEADER_SIZE_ALL = sizeof(uint8_t ) + sizeof(uint16_t ) + sizeof(uint8_t ), 
1723            ATP_CMD_HEADER_SIZE = sizeof(uint8_t ) + sizeof(uint16_t ), 
1724            ATP_CMD_HEADER_CMD_SIZE = sizeof(uint8_t ), 
1725            ATP_CMD_HEADER_LEN_SIZE = sizeof(uint16_t ), 
1726            ATP_CMD_HEADER_HCS_SIZE = sizeof(uint8_t )
1727          };
1728          //# 15 "/opt/atos/tos/lib/atos/atp/atpapp/AtpAppPacket.h"
1729          //#line 10
1730          typedef struct _atp_app_packet_header_t {
1731          
1732            uint8_t industry_code;
1733            uint8_t application_code;
1734            uint8_t _data_type;
1735          } atp_app_packet_header_t;
1736          //# 8 "/opt/atos/tos/lib/atos/atp/atpcmd/AtpCmdStd.h"
1737          enum __nesc_unnamed4281 {
1738          
1739            ATP_STD_CMD = 0xf0, 
1740            ATP_STD_INDUSTRY_CODE = 0xff, 
1741            ATP_STD_APPLICATION_CODE = 0x01
1742          };
1743          
1744          enum __nesc_unnamed4282 {
1745          
1746            ATP_STD_DATA_TYPE_PING = 0x01, 
1747            ATP_STD_DATA_TYPE_PING_ACK = 0x81, 
1748            ATP_STD_DATA_TYPE_DISCOVERY = 0x02, 
1749            ATP_STD_DATA_TYPE_DISCOVERY_ACK = 0x82, 
1750            ATP_STD_DATA_TYPE_SET_IEEE_ADDR = 0x03, 
1751            ATP_STD_DATA_TYPE_REBOOT = 0x04
1752          };
1753          
1754          enum __nesc_unnamed4283 {
1755          
1756            ATP_STD_EQUIPMENT_TYPE_PC = 0x01, 
1757            ATP_STD_EQUIPMENT_TYPE_GATEWAY = 0x02, 
1758            ATP_STD_EQUIPMENT_TYPE_NODE = 0x03
1759          };
1760          
1761          
1762          
1763          
1764          //#line 32
1765          typedef struct _atp_std_general_info_t_ {
1766          
1767            uint8_t equipment_type;
1768          } as_general_info_t;
1769          
1770          
1771          
1772          
1773          
1774          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 30  

1775          
1776          //#line 37
1777          typedef struct _atp_std_gateway_info_t_ {
1778          
1779            uint8_t industry_code;
1780            uint8_t application_code;
1781            uint8_t ieee_addr[8];
1782            uint8_t radio_channel;
1783          } as_gateway_info_t;
1784          
1785          
1786          
1787          
1788          
1789          
1790          
1791          
1792          
1793          
1794          //#line 45
1795          typedef struct _atp_std_node_info_t_ {
1796          
1797            uint8_t industry_code;
1798            uint8_t application_code;
1799            uint8_t ieee_addr[8];
1800            uint8_t node_type;
1801            uint8_t radio_channel;
1802            uint8_t battery_capacity;
1803            uint8_t radio_quality;
1804          } as_node_info_t;
1805          
1806          
1807          
1808          
1809          //#line 56
1810          typedef struct _atp_std_ping_extra_t_ {
1811          
1812            uint8_t config;
1813          } as_ping_extra_t;
1814          
1815          
1816          
1817          
1818          
1819          //#line 61
1820          typedef struct _atp_std_discovery_extra_t_ {
1821          
1822            uint8_t radio_channel;
1823            uint16_t addr_area;
1824          } as_discovery_extra_t;
1825          
1826          
1827          
1828          
1829          //#line 67
1830          typedef struct _atp_std_ieee_addr_extra_t_ {
1831          
1832            uint8_t ieee_addr[8];
1833          } as_ieee_addr_extra_t;
1834          typedef TMilli ADSenRFNodeP__Timer1__precision_tag;
1835          typedef int16_t ADSenRFNodeP__ADSensorRead__val_t;
1836          typedef TMilli RealMainP__FakeTimer__precision_tag;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 31  

1837          enum HplCC2530Timer1C____nesc_unnamed4284 {
1838            HplCC2530Timer1C__TOP_TASK_ID = 0U
1839          };
1840          typedef T32khz /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency;
1841          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm2__precision_tag;
1842          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__size_type;
1843          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm0__precision_tag;
1844          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__size_type;
1845          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Counter__precision_tag;
1846          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__size_type;
1847          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm1__precision_tag;
1848          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__size_type;
1849          enum /*HilTimerMilliC.AlarmMilli32C.AlarmFrom*/Alarm32khz16C__0____nesc_unnamed4285 {
1850            Alarm32khz16C__0__ALARM_ID = 0U
1851          };
1852          typedef TMilli /*CounterMilli32C.Transform*/TransformCounterC__0__to_precision_tag;
1853          typedef uint32_t /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type;
1854          typedef T32khz /*CounterMilli32C.Transform*/TransformCounterC__0__from_precision_tag;
1855          typedef uint16_t /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type;
1856          typedef uint32_t /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type;
1857          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__from_precision_tag /*CounterMilli32C.Transform*
             -/TransformCounterC__0__CounterFrom__precision_tag;
1858          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type /*CounterMilli32C.Transform*/Tra
             -nsformCounterC__0__CounterFrom__size_type;
1859          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__to_precision_tag /*CounterMilli32C.Transform*/T
             -ransformCounterC__0__Counter__precision_tag;
1860          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Trans
             -formCounterC__0__Counter__size_type;
1861          typedef TMilli /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag;
1862          typedef uint32_t /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type;
1863          typedef T32khz /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_precision_tag;
1864          typedef uint16_t /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type;
1865          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__Alarm__precision_tag;
1866          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Alarm__size_type;
1867          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_precision_tag /*HilTimerMilliC.
             -AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__precision_tag;
1868          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type /*HilTimerMilliC.Alar
             -mMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type;
1869          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__Counter__precision_tag;
1870          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Counter__size_type;
1871          typedef TMilli /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag;
1872          typedef /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag /*HilTimerMilliC.AlarmToTimerC*/Al
             -armToTimerC__0__Alarm__precision_tag;
1873          typedef uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type;
1874          typedef /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag /*HilTimerMilliC.AlarmToTimerC*/Al
             -armToTimerC__0__Timer__precision_tag;
1875          typedef TMilli /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag;
1876          typedef /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__TimerFrom__precision_tag;
1877          typedef /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__Timer__precision_tag;
1878          typedef TMilli /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag;
1879          typedef /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag /*HilTimerMilliC.Count
             -erToLocalTimeC*/CounterToLocalTimeC__0__LocalTime__precision_tag;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 32  

1880          typedef /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag /*HilTimerMilliC.Count
             -erToLocalTimeC*/CounterToLocalTimeC__0__Counter__precision_tag;
1881          typedef uint32_t /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__size_type;
1882          typedef int16_t AdcP__Read__val_t;
1883          enum /*ADSenRFNodeC.ADSensor*/AdcC__0____nesc_unnamed4286 {
1884            AdcC__0__ID = 0U
1885          };
1886          typedef TMilli /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__0__TimeoutTimer__precision_tag;
1887          typedef TMilli /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__0__AckTimer__precision_tag;
1888          enum /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC__0_
             -___nesc_unnamed4287 {
1889            AMResourceC__0__AM_RESOURCE_ID = 0U
1890          };
1891          enum AMResourceCenterC____nesc_unnamed4288 {
1892            AMResourceCenterC__AM_RESOURCE_COUNT = 4U
1893          };
1894          typedef message_t */*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t;
1895          typedef message_t */*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t;
1896          typedef /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__t;
1897          typedef T32khz RfMacBaseCsmaP__BackoffTimer__precision_tag;
1898          typedef uint32_t RfMacBaseCsmaP__BackoffTimer__size_type;
1899          enum RfHardwareRxC____nesc_unnamed4289 {
1900            RfHardwareRxC__TOP_TASK_ID = 1U
1901          };
1902          enum /*RfMacBaseCsmaC.Alarm32khz32C.Alarm32khz16C*/Alarm32khz16C__1____nesc_unnamed4290 {
1903            Alarm32khz16C__1__ALARM_ID = 1U
1904          };
1905          typedef T32khz /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag;
1906          typedef uint32_t /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type;
1907          typedef T32khz /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_precision_tag;
1908          typedef uint16_t /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type;
1909          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag /*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__Alarm__precision_tag;
1910          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm3
             -2khz32C.Transform*/TransformAlarmC__1__Alarm__size_type;
1911          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_precision_tag /*RfMacBaseCsmaC.
             -Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__precision_tag;
1912          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type /*RfMacBaseCsmaC.Alar
             -m32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__size_type;
1913          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag /*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__Counter__precision_tag;
1914          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm3
             -2khz32C.Transform*/TransformAlarmC__1__Counter__size_type;
1915          typedef T32khz /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_precision_tag;
1916          typedef uint32_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type;
1917          typedef T32khz /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_precision_tag;
1918          typedef uint16_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type;
1919          typedef uint16_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type;
1920          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_precision_tag /*Counter32khz32C.Tr
             -ansformCounterC*/TransformCounterC__1__CounterFrom__precision_tag;
1921          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type /*Counter32khz32C.Transf
             -ormCounterC*/TransformCounterC__1__CounterFrom__size_type;
1922          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_precision_tag /*Counter32khz32C.Tran
             -sformCounterC*/TransformCounterC__1__Counter__precision_tag;
1923          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transfor
             -mCounterC*/TransformCounterC__1__Counter__size_type;
1924          typedef TMilli AtosNetStdP__RebootTimer__precision_tag;
1925          typedef TMilli /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__TimeoutTimer__precision_tag;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 33  

1926          typedef TMilli /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__AckTimer__precision_tag;
1927          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC__2__
             -__nesc_unnamed4291 {
1928            AMResourceC__2__AM_RESOURCE_ID = 1U
1929          };
1930          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__3____nesc_unnamed42
             -92 {
1931            AMResourceC__3__AM_RESOURCE_ID = 2U
1932          };
1933          enum DsnFilterCenterC____nesc_unnamed4293 {
1934            DsnFilterCenterC__DSN_FILTER_COUNT = 1U
1935          };
1936          enum /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__1____nesc_unnamed4
             -294 {
1937            AMResourceC__1__AM_RESOURCE_ID = 3U
1938          };
1939          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
1940          static  void ADSenRFNodeP__Boot__booted(void);
1941          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
1942          static  void ADSenRFNodeP__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
1943          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
1944          static  void ADSenRFNodeP__Timer1__fired(void);
1945          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
1946          static  message_t *ADSenRFNodeP__Receive__receive(message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t
             - arg_0x7eb43338);
1947          //# 63 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
1948          static  void ADSenRFNodeP__ADSensorRead__readDone(error_t arg_0x7eb65a88, ADSenRFNodeP__ADSensorRead__val_
             -t arg_0x7eb65c10);
1949          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1950          static  void ADSenRFNodeP__sensorDataTask__runTask(void);
1951          //#line 64
1952          static  void ADSenRFNodeP__sendMsgTask__runTask(void);
1953          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1954          static  error_t PlatformP__Init__init(void);
1955          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
1956          static  void WatchDogP__WatchDog__resetCpu(void);
1957          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
1958          static   void FlashIEEEP__ActiveMessageAddress__changed(void);
1959          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1960          static  error_t FlashIEEEP__Init__init(void);
1961          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
1962          static  void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *arg_0x7ea553d8);
1963          //#line 5
1964          static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void);
1965          
1966          static  void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea60f08);
1967          
1968          
1969          
1970          static  void FlashIEEEP__FlashIEEE__WriteToAM(void);
1971          //#line 4
1972          static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void);
1973          
1974          
1975          
1976          
1977          
1978          static  void FlashIEEEP__FlashIEEE__WriteToRegister(void);
1979          //# 44 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
1980          static   am_addr_t ActiveMessageAddressC__amAddress(void);
1981          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 34  

1982          static   am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void);
1983          
1984          
1985          
1986          
1987          static   am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void);
1988          //#line 43
1989          static   void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t arg_0x7ea51e58, am_addr_t
             - arg_0x7ea44010);
1990          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
1991          static  error_t HalFlashP__HalFlash__read(uint8_t *arg_0x7ea41190, uint32_t arg_0x7ea41320, uint16_t arg_0
             -x7ea414b0);
1992          
1993          
1994          
1995          static  error_t HalFlashP__HalFlash__erase(uint32_t arg_0x7ea36170);
1996          //#line 5
1997          static  error_t HalFlashP__HalFlash__write(uint32_t arg_0x7ea41958, uint8_t *arg_0x7ea41b00, uint16_t arg_
             -0x7ea41c90);
1998          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1999          static  error_t HalFlashP__Init__init(void);
2000          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2001          static  void RealMainP__FakeTimer__fired(void);
2002          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2003          static  void RealMainP__fakeTask__runTask(void);
2004          //#line 56
2005          static   error_t SchedulerBasicP__TaskBasic__postTask(
2006          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2007          uint8_t arg_0x7ec64200);
2008          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2009          static  void SchedulerBasicP__TaskBasic__default__runTask(
2010          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2011          uint8_t arg_0x7ec64200);
2012          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
2013          static  void SchedulerBasicP__Scheduler__init(void);
2014          //#line 61
2015          static  void SchedulerBasicP__Scheduler__taskLoop(void);
2016          //#line 54
2017          static  bool SchedulerBasicP__Scheduler__runNextTask(void);
2018          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
2019          static  error_t McuSleepP__ModuleReset__default__reset(uint8_t arg_0x7ebe5310);
2020          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
2021          static   void McuSleepP__McuSleep__sleep(void);
2022          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
2023          static  void McuSleepP__McuSleepControl__default__beforeSleep(void);
2024          
2025          static  void McuSleepP__McuSleepControl__default__afterWakeup(void);
2026          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
2027          static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void);
2028          static  void TopTaskMgrP__TopTaskMgr__runTasks(void);
2029          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2030          static  void TopTaskMgrP__TopTaskHandler__default__handler(
2031          //# 6 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
2032          uint8_t arg_0x7ebb1360);
2033          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2034          static  void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void);
2035          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2036          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fired(void);
2037          //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
2038          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__default__captured
             -(uint16_t arg_0x7e937ba0);
2039          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 35  

2040          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(/*HplCC2530Timer1C
             -.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__size_type arg_0x7e970e78, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530
             -Timer1P__0__Alarm0__size_type arg_0x7e966030);
2041          //#line 62
2042          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void);
2043          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2044          static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void);
2045          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2046          static   /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__size_type /*HplCC2530Timer1C.H
             -plCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void);
2047          
2048          
2049          
2050          
2051          
2052          
2053          static   bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPending(void);
2054          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2055          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(/*HplCC2530Timer1C
             -.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__size_type arg_0x7e970e78, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530
             -Timer1P__0__Alarm1__size_type arg_0x7e966030);
2056          //#line 62
2057          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void);
2058          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2059          static  void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handler(void);
2060          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2061          static  void PlatformInterruptC__INT_UART1_TX__default__fired(void);
2062          //#line 4
2063          static  void PlatformInterruptC__INT_UART1_RX__default__fired(void);
2064          //#line 4
2065          static  void PlatformInterruptC__INT_UART0_TX__default__fired(void);
2066          //#line 4
2067          static  void PlatformInterruptC__INT_ST__default__fired(void);
2068          //#line 4
2069          static  void PlatformInterruptC__INT_P0__default__fired(void);
2070          //#line 4
2071          static  void PlatformInterruptC__INT_P1__default__fired(void);
2072          //#line 4
2073          static  void PlatformInterruptC__INT_UART0_RX__default__fired(void);
2074          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2075          static   void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void);
2076          //#line 53
2077          static   /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__size_type /*CounterMilli32C.Transform
             -*/TransformCounterC__0__Counter__get(void);
2078          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2079          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type /*HilTimerMilliC.A
             -larmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void);
2080          //#line 92
2081          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*HilTimerMilli
             -C.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type arg_0x7e970e78, /*HilTimerMilliC.AlarmMilli32C.Transform
             -*/TransformAlarmC__0__Alarm__size_type arg_0x7e966030);
2082          //#line 105
2083          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type /*HilTimerMilliC.A
             -larmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void);
2084          //#line 62
2085          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void);
2086          
2087          
2088          
2089          
2090          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(void);
2091          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 36  

2092          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow(void);
2093          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2094          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void);
2095          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2096          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void);
2097          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2098          static  uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void);
2099          //#line 118
2100          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t arg_0x7eb049
             -b8, uint32_t arg_0x7eb04b48);
2101          //#line 67
2102          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void);
2103          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2104          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask(void);
2105          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2106          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void);
2107          //#line 72
2108          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(
2109          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2110          uint8_t arg_0x7e7a9030);
2111          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2112          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(
2113          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2114          uint8_t arg_0x7e7a9030, 
2115          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2116          uint32_t arg_0x7eb11788);
2117          
2118          
2119          
2120          
2121          
2122          
2123          
2124          
2125          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(
2126          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2127          uint8_t arg_0x7e7a9030, 
2128          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2129          uint32_t arg_0x7eb11d58);
2130          
2131          
2132          
2133          
2134          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(
2135          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2136          uint8_t arg_0x7e7a9030);
2137          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2138          static   void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow(void);
2139          //# 28 "/opt/atos/tos/chips/cc2530/adc/AdcControl.nc"
2140          static  void AdcP__AdcControl__enable(
2141          //# 6 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
2142          uint8_t arg_0x7e744248, 
2143          //# 28 "/opt/atos/tos/chips/cc2530/adc/AdcControl.nc"
2144          uint8_t arg_0x7eb72370, uint8_t arg_0x7eb72500, uint8_t arg_0x7eb72688);
2145          //# 55 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
2146          static  error_t AdcP__Read__read(
2147          //# 7 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
2148          uint8_t arg_0x7e744990);
2149          //# 63 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
2150          static  void AdcP__Read__default__readDone(
2151          //# 7 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
2152          uint8_t arg_0x7e744990, 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 37  

2153          //# 63 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
2154          error_t arg_0x7eb65a88, AdcP__Read__val_t arg_0x7eb65c10);
2155          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2156          static  error_t AdcP__Init__init(void);
2157          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2158          static  void AdcP__signalReadDone__runTask(void);
2159          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2160          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__SubAMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
2161          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2162          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__resendTask__runTask(void);
2163          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2164          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__0__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
2165          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2166          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__0__AtosControl__start(void);
2167          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2168          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__SubAMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
2169          //#line 69
2170          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__0__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
2171          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2172          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__TimeoutTimer__fired(void);
2173          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2174          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__signalDoneTask__runTask(void);
2175          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2176          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__AckTimer__fired(void);
2177          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2178          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__0__AtosControl__start(void);
2179          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2180          static  message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacS
             -endP*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338
             -);
2181          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2182          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResour
             -ceP*/AMResourceP__0__AMResource__sendDone(message_t *arg_0x7e662a60, error_t arg_0x7e662be8);
2183          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2184          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMRes
             -ourceP*/AMResourceP__0__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
2185          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2186          static  error_t AMResourceCenterP__AMResource__send(
2187          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
2188          uint8_t arg_0x7e6476f0, 
2189          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2190          am_addr_t arg_0x7e662268, message_t *arg_0x7e662418, uint8_t arg_0x7e6625a0);
2191          static  void AMResourceCenterP__AMResource__default__sendDone(
2192          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
2193          uint8_t arg_0x7e6476f0, 
2194          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2195          message_t *arg_0x7e662a60, error_t arg_0x7e662be8);
2196          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
2197          static  void AMResourceCenterP__CoreSend__sendDone(message_t *arg_0x7e641dd8, error_t arg_0x7e640010);
2198          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2199          static  error_t AMResourceCenterP__AtosControl__start(void);
2200          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 38  

2201          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__sendDone(m
             -essage_t *arg_0x7e641dd8, error_t arg_0x7e640010);
2202          //#line 7
2203          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__send(messa
             -ge_t *arg_0x7e6412e8, uint8_t arg_0x7e641470);
2204          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2205          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__runTask(void)
             -;
2206          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2207          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosControl__start(v
             -oid);
2208          //# 32 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
2209          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__head(void);
2210          //#line 49
2211          static  error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*AMResourceCen
             -terC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t arg_0x7e61b3e8);
2212          
2213          
2214          
2215          
2216          
2217          
2218          
2219          
2220          
2221          
2222          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t arg_0x7e61b960);
2223          
2224          
2225          
2226          
2227          
2228          
2229          static  void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void);
2230          //#line 24
2231          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(void);
2232          //#line 65
2233          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t arg_0x7e61a498);
2234          //#line 40
2235          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void);
2236          //#line 9
2237          static  bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void);
2238          
2239          
2240          
2241          
2242          
2243          
2244          
2245          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void);
2246          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2247          static   void RfMacBaseCsmaP__BackoffTimer__fired(void);
2248          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
2249          static  error_t RfMacBaseCsmaP__CoreSend__send(message_t *arg_0x7e6412e8, uint8_t arg_0x7e641470);
2250          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2251          static  void RfMacBaseCsmaP__signalDoneTask__runTask(void);
2252          //#line 64
2253          static  void RfMacBaseCsmaP__doGo__runTask(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 39  

2254          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2255          static  error_t RfMacBaseCsmaP__AtosControl__start(void);
2256          //#line 4
2257          static  error_t RfHardwareP__AtosControl__start(void);
2258          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
2259          static  void RfPowerP__RfPower__oscOn(void);
2260          //#line 6
2261          static  void RfPowerP__RfPower__radioOn(void);
2262          //#line 4
2263          static  void RfPowerP__RfPower__reset(void);
2264          
2265          
2266          
2267          
2268          static  void RfPowerP__RfPower__rxOn(void);
2269          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
2270          static  void RfConfigP__RfConfig__flush(void);
2271          
2272          
2273          
2274          
2275          static  uint8_t RfConfigP__RfConfig__getChannel(void);
2276          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2277          static  error_t RfConfigP__Init__init(void);
2278          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2279          static   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void);
2280          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
2281          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(void);
2282          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2283          static   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void);
2284          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2285          static  error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void);
2286          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2287          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void);
2288          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2289          static  void RfInterruptsP__INT_RFERR__fired(void);
2290          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2291          static   error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void);
2292          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2293          static  void RfInterruptsP__INT_RF__fired(void);
2294          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2295          static   error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void);
2296          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
2297          static  error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *arg_0x7e5bb6d8, uint8_t arg_0x7e5bb860);
2298          static  error_t RfHardwareTxP__RfHardwareTx__txGo(void);
2299          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2300          static  error_t RfHardwareTxP__StdControl__start(void);
2301          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2302          static   /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type /*RfMacBaseCsmaC.A
             -larm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void);
2303          //#line 92
2304          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*RfMacBaseCsma
             -C.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type arg_0x7e970e78, /*RfMacBaseCsmaC.Alarm32khz32C.Transform
             -*/TransformAlarmC__1__Alarm__size_type arg_0x7e966030);
2305          //#line 55
2306          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*RfMacBaseCsmaC.
             -Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type arg_0x7e971d18);
2307          
2308          
2309          
2310          
2311          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 40  

2312          
2313          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void);
2314          
2315          
2316          
2317          
2318          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(void);
2319          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2320          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow(void);
2321          //#line 71
2322          static   void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflow(void);
2323          //#line 53
2324          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__size_type /*Counter32khz32C.T
             -ransformCounterC*/TransformCounterC__1__Counter__get(void);
2325          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
2326          static   uint16_t CC2530RandomLfsrP__Random__rand16(void);
2327          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2328          static  error_t CC2530RandomLfsrP__Init__init(void);
2329          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2330          static  uint8_t RfPacketP__Packet__payloadLength(message_t *arg_0x7eb21468);
2331          //#line 108
2332          static  void *RfPacketP__Packet__getPayload(message_t *arg_0x7eb20840, uint8_t *arg_0x7eb209e8);
2333          //#line 83
2334          static  void RfPacketP__Packet__setPayloadLength(message_t *arg_0x7eb21ad8, uint8_t arg_0x7eb21c60);
2335          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2336          static   void RfPacketP__ActiveMessageAddress__changed(void);
2337          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
2338          static  am_group_t RfPacketP__AMPacket__group(message_t *arg_0x7eb31d08);
2339          //#line 77
2340          static  am_addr_t RfPacketP__AMPacket__source(message_t *arg_0x7eb33030);
2341          //#line 57
2342          static  am_addr_t RfPacketP__AMPacket__address(void);
2343          
2344          
2345          
2346          
2347          
2348          
2349          
2350          
2351          
2352          static  am_addr_t RfPacketP__AMPacket__destination(message_t *arg_0x7eb35a28);
2353          //#line 110
2354          static  void RfPacketP__AMPacket__setSource(message_t *arg_0x7eb33e88, am_addr_t arg_0x7eb32030);
2355          //#line 92
2356          static  void RfPacketP__AMPacket__setDestination(message_t *arg_0x7eb335f8, am_addr_t arg_0x7eb33788);
2357          //#line 136
2358          static  am_id_t RfPacketP__AMPacket__type(message_t *arg_0x7eb32f08);
2359          //#line 125
2360          static  bool RfPacketP__AMPacket__isForMe(message_t *arg_0x7eb327d8);
2361          //#line 176
2362          static  void RfPacketP__AMPacket__setGroup(message_t *arg_0x7eb25558, am_group_t arg_0x7eb256e8);
2363          
2364          
2365          
2366          
2367          
2368          
2369          
2370          static  am_group_t RfPacketP__AMPacket__localGroup(void);
2371          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
2372          static  uint8_t RfPacketP__PacketEx__packetHeaderSize(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 41  

2373          
2374          
2375          static  bool RfPacketP__PacketEx__isValidPacket(message_t *arg_0x7e713190);
2376          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2377          static  uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *arg_0x7eb21468);
2378          //#line 108
2379          static  void *RfReliableMacPacketP__Packet__getPayload(message_t *arg_0x7eb20840, uint8_t *arg_0x7eb209e8)
             -;
2380          //#line 83
2381          static  void RfReliableMacPacketP__Packet__setPayloadLength(message_t *arg_0x7eb21ad8, uint8_t arg_0x7eb21
             -c60);
2382          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
2383          static  uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void);
2384          static  void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *arg_0x7e714ca0);
2385          
2386          static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *arg_0x7e713190);
2387          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
2388          static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e6b1850, uint8_t arg
             -_0x7e6b19e0, message_t *arg_0x7e6b1b90, rf_ack_t *arg_0x7e6b1d40);
2389          static  void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e6b0238, message_t *
             -arg_0x7e6b03e8, rf_ack_t *arg_0x7e6b0598);
2390          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
2391          static  uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t *arg_0x7e42bb1
             -0, uint8_t arg_0x7e42bca0, message_t *arg_0x7e42be50, rf_ack_t *arg_0x7e428030);
2392          static  void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t *arg_0x7e42850
             -8, message_t *arg_0x7e4286b8, rf_ack_t *arg_0x7e428868);
2393          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2394          static  message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRelia
             -bleMacReceiveP__0__SubReceive__receive(message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338);
2395          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2396          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__sendAckTask__runTask(void);
2397          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2398          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__AMSendAck__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
2399          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2400          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__0__AtosControl__start(void);
2401          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
2402          static  void RfActiveMessageP__CoreReceive__receive(message_t *arg_0x7e3d1030);
2403          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2404          static  message_t *RfActiveMessageP__Snoop__default__receive(
2405          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
2406          uint8_t arg_0x7e3d6bb0, 
2407          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2408          message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338);
2409          //#line 67
2410          static  message_t *RfActiveMessageP__Receive__default__receive(
2411          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
2412          uint8_t arg_0x7e3d63f8, 
2413          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2414          message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338);
2415          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2416          static  error_t RfActiveMessageP__AtosControl__start(void);
2417          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
2418          static  void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *arg_0x7e582570, uint8_t arg_0x7e5826f8);
2419          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2420          static  error_t AtosMacP__AtosControl__start(void);
2421          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2422          static  void AtosNetStdP__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
2423          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2424          static  message_t *AtosNetStdP__Receive__receive(message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 42  

             -arg_0x7eb43338);
2425          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
2426          static  void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *arg_0x7e3766a8);
2427          
2428          static  void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *arg_0x7e3741f8, anstd_trace_ack
             -_t *arg_0x7e3743b8);
2429          //#line 15
2430          static  void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *arg_0x7e377d20);
2431          
2432          
2433          static  void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *arg_0x7e376b58, anstd_trace_t *arg
             -_0x7e376d08);
2434          //#line 6
2435          static  error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t arg_0x7e37bd68);
2436          
2437          
2438          
2439          
2440          
2441          static  void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *arg_0x7e3771e0);
2442          
2443          static  void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *arg_0x7e377698, anstd_node_
             -status_t *arg_0x7e377850);
2444          
2445          static  void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *arg_0x7e3761f8);
2446          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2447          static  void AtosNetStdP__nodeStatusUpTask__runTask(void);
2448          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2449          static  void AtosNetStdP__RebootTimer__fired(void);
2450          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2451          static  void AtosNetStdP__rebootTask__runTask(void);
2452          //#line 64
2453          static  void AtosNetStdP__sendDoneCheck__runTask(void);
2454          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2455          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__SubAMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
2456          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2457          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__resendTask__runTask(void);
2458          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2459          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
2460          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2461          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AtosControl__start(void);
2462          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2463          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__SubAMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
2464          //#line 69
2465          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
2466          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2467          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__fired(void);
2468          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2469          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__signalDoneTask__runTask(void);
2470          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2471          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__fired(void);
2472          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2473          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 43  

             -*/RfReliableMacSendP__1__AtosControl__start(void);
2474          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2475          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSe
             -ndP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338)
             -;
2476          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2477          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourc
             -eP*/AMResourceP__1__AMResource__sendDone(message_t *arg_0x7e662a60, error_t arg_0x7e662be8);
2478          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2479          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMReso
             -urceP*/AMResourceP__1__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
2480          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2481          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__SubReceive__receive(message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338);
2482          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2483          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__sendAckTask__runTask(void);
2484          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2485          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMSendAck__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
2486          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2487          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__AtosControl__start(void);
2488          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2489          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP_
             -_2__AMResource__sendDone(message_t *arg_0x7e662a60, error_t arg_0x7e662be8);
2490          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2491          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourc
             -eP__2__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
2492          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
2493          static  bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(
2494          //# 5 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
2495          uint8_t arg_0x7e291dc0, 
2496          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
2497          uint16_t arg_0x7e408ba8, uint8_t arg_0x7e408d30);
2498          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2499          static  error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void);
2500          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2501          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP
             -__3__AMResource__sendDone(message_t *arg_0x7e662a60, error_t arg_0x7e662be8);
2502          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2503          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResour
             -ceP__3__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
2504          //#line 69
2505          static  error_t ADSenRFNodeP__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t ar
             -g_0x7eb53230);
2506          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2507          static  void *ADSenRFNodeP__Packet__getPayload(message_t *arg_0x7eb20840, uint8_t *arg_0x7eb209e8);
2508          //# 28 "/opt/atos/tos/chips/cc2530/adc/AdcControl.nc"
2509          static  void ADSenRFNodeP__ADSensorControl__enable(uint8_t arg_0x7eb72370, uint8_t arg_0x7eb72500, uint8_t
             - arg_0x7eb72688);
2510          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2511          static  void ADSenRFNodeP__Timer1__startPeriodic(uint32_t arg_0x7eb11788);
2512          //# 55 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
2513          static  error_t ADSenRFNodeP__ADSensorRead__read(void);
2514          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2515          static   error_t ADSenRFNodeP__sensorDataTask__postTask(void);
2516          //#line 56
2517          static   error_t ADSenRFNodeP__sendMsgTask__postTask(void);
2518          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2519          static  error_t ADSenRFNodeP__AtosControl__start(void);
2520          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 44  

2521          static  am_addr_t ADSenRFNodeP__AMPacket__source(message_t *arg_0x7eb33030);
2522          //# 30 "ADSenRFNodeP.nc"
2523          enum ADSenRFNodeP____nesc_unnamed4295 {
2524          //#line 30
2525            ADSenRFNodeP__sensorDataTask = 0U
2526          };
2527          //#line 30
2528          typedef int ADSenRFNodeP____nesc_sillytask_sensorDataTask[];
2529          
2530          
2531          
2532          
2533          
2534          
2535          enum ADSenRFNodeP____nesc_unnamed4296 {
2536          //#line 37
2537            ADSenRFNodeP__sendMsgTask = 1U
2538          };
2539          //#line 37
2540          typedef int ADSenRFNodeP____nesc_sillytask_sendMsgTask[ADSenRFNodeP__sendMsgTask];
2541          //#line 23
2542          message_t ADSenRFNodeP__m_sensor_msg;
2543          
2544          
2545          
2546          uint8_t *ADSenRFNodeP__p_sensor_payload;
2547          uint16_t ADSenRFNodeP__dest_address;
2548          
2549          static  /*inline*/   void ADSenRFNodeP__sensorDataTask__runTask(void);
2550          
2551          
2552          
2553          
2554          
2555          
2556          static  /*inline*/   void ADSenRFNodeP__sendMsgTask__runTask(void);
2557          
2558          
2559          
2560          
2561          
2562          
2563          
2564          
2565          static  /*inline*/   void ADSenRFNodeP__AMSend__sendDone(message_t *msg, error_t success);
2566          
2567          
2568          
2569          
2570          
2571          
2572          static  /*inline*/   void ADSenRFNodeP__Boot__booted(void);
2573          //#line 65
2574          static  void ADSenRFNodeP__ADSensorRead__readDone(error_t result, int16_t val);
2575          //#line 88
2576          static  /*inline*/   message_t *ADSenRFNodeP__Receive__receive(message_t *msg, void *payload, uint8_t len)
             -;
2577          //#line 104
2578          static  /*inline*/   void ADSenRFNodeP__Timer1__fired(void);
2579          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2580          static  error_t PlatformP__PlatformInit__init(void);
2581          //# 11 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 45  

2582          static error_t PlatformP__clockSelect32k(uint8_t source);
2583          //#line 29
2584          static void PlatformP__clockSetMainSrc(uint8_t source);
2585          //#line 52
2586          static  /*inline*/   error_t PlatformP__Init__init(void);
2587          //# 8 "/opt/atos/tos/chips/cc2530/watchdog/WatchDogP.nc"
2588          static  void WatchDogP__WatchDog__resetCpu(void);
2589          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
2590          static  error_t FlashIEEEP__HalFlash__read(uint8_t *arg_0x7ea41190, uint32_t arg_0x7ea41320, uint16_t arg_
             -0x7ea414b0);
2591          
2592          
2593          
2594          static  error_t FlashIEEEP__HalFlash__erase(uint32_t arg_0x7ea36170);
2595          //#line 5
2596          static  error_t FlashIEEEP__HalFlash__write(uint32_t arg_0x7ea41958, uint8_t *arg_0x7ea41b00, uint16_t arg
             -_0x7ea41c90);
2597          //# 43 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2598          static   void FlashIEEEP__ActiveMessageAddress__setAddress(am_group_t arg_0x7ea51e58, am_addr_t arg_0x7ea4
             -4010);
2599          //# 47 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
2600          uint8_t FlashIEEEP__m_ieee[8];
2601          uint8_t FlashIEEEP__m_ieee_flash[8];
2602          
2603          
2604          
2605          static  /*inline*/  void FlashIEEEP__ieeeProtect(void);
2606          //#line 108
2607          static void FlashIEEEP__readFromFlash(void);
2608          //#line 129
2609          static  /*inline*/   error_t FlashIEEEP__Init__init(void);
2610          //#line 144
2611          static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void);
2612          
2613          
2614          
2615          
2616          
2617          static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void);
2618          
2619          
2620          
2621          
2622          
2623          
2624          
2625          
2626          
2627          
2628          static  /*inline*/   void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *ieee);
2629          
2630          
2631          
2632          
2633          static  /*inline*/   void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *ieee);
2634          //#line 193
2635          static  void FlashIEEEP__FlashIEEE__WriteToRegister(void);
2636          //#line 217
2637          static  void FlashIEEEP__FlashIEEE__WriteToAM(void);
2638          
2639          
2640          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 46  

2641          
2642          
2643          
2644          
2645          
2646          
2647          
2648          static  /*inline*/    void FlashIEEEP__ActiveMessageAddress__changed(void);
2649          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2650          static   void ActiveMessageAddressC__ActiveMessageAddress__changed(void);
2651          //# 51 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
2652          am_addr_t ActiveMessageAddressC__addr = TOS_AM_ADDRESS;
2653          
2654          
2655          am_group_t ActiveMessageAddressC__group = TOS_AM_GROUP;
2656          
2657          
2658          
2659          
2660          
2661          
2662          static  /*inline*/    am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void);
2663          
2664          
2665          
2666          
2667          
2668          
2669          
2670          
2671          static  /*inline*/    void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t myGroup, am_
             -addr_t myAddr);
2672          //#line 82
2673          static  /*inline*/    am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void);
2674          //#line 95
2675          static   am_addr_t ActiveMessageAddressC__amAddress(void);
2676          //# 35 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
2677          void HalFlashP__HalCC2530FlashRead(uint8_t *destination, uint32_t source, uint16_t length);
2678          void HalFlashP__HalCC2530FlashWrite(uint32_t destination, uint8_t *source, uint16_t length);
2679          
2680          static  /*inline*/   error_t HalFlashP__Init__init(void);
2681          
2682          
2683          
2684          
2685          
2686          static  /*inline*/   error_t HalFlashP__HalFlash__read(uint8_t *destination, uint32_t source, uint16_t len
             -gth);
2687          
2688          
2689          
2690          
2691          
2692          
2693          static  /*inline*/   error_t HalFlashP__HalFlash__write(uint32_t destination, uint8_t *source, uint16_t le
             -ngth);
2694          
2695          
2696          
2697          
2698          
2699          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 47  

2700          static  error_t HalFlashP__HalFlash__erase(uint32_t address);
2701          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2702          static  error_t RealMainP__SoftwareInit__init(void);
2703          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
2704          static  void RealMainP__Boot__booted(void);
2705          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2706          static  error_t RealMainP__PlatformInit__init(void);
2707          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2708          static   error_t RealMainP__fakeTask__postTask(void);
2709          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
2710          static  void RealMainP__Scheduler__init(void);
2711          //#line 61
2712          static  void RealMainP__Scheduler__taskLoop(void);
2713          //#line 54
2714          static  bool RealMainP__Scheduler__runNextTask(void);
2715          //# 103 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
2716          enum RealMainP____nesc_unnamed4297 {
2717          //#line 103
2718            RealMainP__fakeTask = 2U
2719          };
2720          //#line 103
2721          typedef int RealMainP____nesc_sillytask_fakeTask[RealMainP__fakeTask];
2722          //#line 56
2723          int main(void)   ;
2724          //#line 103
2725          static  /*inline*/   void RealMainP__fakeTask__runTask(void);
2726          
2727          
2728          
2729          
2730          
2731          
2732          
2733          static  /*inline*/   void RealMainP__FakeTimer__fired(void);
2734          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2735          static  void SchedulerBasicP__TaskBasic__runTask(
2736          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2737          uint8_t arg_0x7ec64200);
2738          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
2739          static  bool SchedulerBasicP__TopTaskMgr__hasTasks(void);
2740          static  void SchedulerBasicP__TopTaskMgr__runTasks(void);
2741          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
2742          static  void SchedulerBasicP__AtosScheduler__periodScheduler(void);
2743          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
2744          static   void SchedulerBasicP__McuSleep__sleep(void);
2745          //# 54 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2746          enum SchedulerBasicP____nesc_unnamed4298 {
2747          
2748            SchedulerBasicP__NUM_TASKS = 18U + 1, 
2749            SchedulerBasicP__NO_TASK = 255
2750          };
2751          
2752          uint8_t SchedulerBasicP__m_head = 0;
2753          uint8_t SchedulerBasicP__m_tail = 0;
2754          uint8_t SchedulerBasicP__m_next[SchedulerBasicP__NUM_TASKS];
2755          
2756          
2757          
2758          
2759          
2760          
2761          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 48  

2762          
2763          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void);
2764          //#line 108
2765          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id);
2766          //#line 132
2767          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id);
2768          //#line 181
2769          static  /*inline*/   void SchedulerBasicP__Scheduler__init(void);
2770          //#line 198
2771          static  bool SchedulerBasicP__Scheduler__runNextTask(void);
2772          //#line 215
2773          static  /*inline*/   void SchedulerBasicP__Scheduler__taskLoop(void);
2774          //#line 264
2775          static   error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id);
2776          
2777          
2778          
2779          
2780          static   void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id);
2781          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
2782          static  error_t McuSleepP__ModuleReset__reset(uint8_t arg_0x7ebe5310);
2783          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
2784          static  void McuSleepP__McuSleepControl__beforeSleep(void);
2785          
2786          static  void McuSleepP__McuSleepControl__afterWakeup(void);
2787          //# 12 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
2788          bool McuSleepP__m_need_sleep = FALSE;
2789          //#line 36
2790          static  /*inline*/    void McuSleepP__McuSleep__sleep(void);
2791          //#line 78
2792          static  /*inline*/    void McuSleepP__McuSleepControl__default__beforeSleep(void);
2793          
2794          
2795          static  /*inline*/    void McuSleepP__McuSleepControl__default__afterWakeup(void);
2796          
2797          
2798          static  /*inline*/    error_t McuSleepP__ModuleReset__default__reset(uint8_t reset_level);
2799          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2800          static  void TopTaskMgrP__TopTaskHandler__handler(
2801          //# 6 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
2802          uint8_t arg_0x7ebb1360);
2803          
2804          
2805          
2806          enum TopTaskMgrP____nesc_unnamed4299 {
2807          
2808            TopTaskMgrP__TOP_TASK_COUNT = 2U
2809          };
2810          
2811           uint8_t TopTaskMgrP__m_task_flag[TopTaskMgrP__TOP_TASK_COUNT];
2812          
2813          
2814          
2815          
2816          
2817          
2818          static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void);
2819          //#line 40
2820          static  /*inline*/   void TopTaskMgrP__TopTaskMgr__runTasks(void);
2821          //#line 57
2822          static  /*inline*/    void TopTaskMgrP__TopTaskHandler__default__handler(uint8_t n);
2823          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 49  

2824          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__fired(void);
2825          //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
2826          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__captured(uint16_t
             - arg_0x7e937ba0);
2827          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2828          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__fired(void);
2829          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2830          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow(void);
2831          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2832          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__fired(void);
2833          //# 38 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
2834          static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void);
2835          //#line 78
2836          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void);
2837          //#line 121
2838          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(uint1
             -6_t t0, uint16_t dt);
2839          //#line 159
2840          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void);
2841          //#line 200
2842          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(uint1
             -6_t t0, uint16_t dt);
2843          //#line 316
2844          static   uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void);
2845          
2846          
2847          
2848          
2849          
2850          
2851          
2852          
2853          
2854          
2855          static  /*inline*/    bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPe
             -nding(void);
2856          //#line 402
2857          uint8_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag = 0x00;
2858          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handle
             -r(void);
2859          //#line 454
2860          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void);
2861          //#line 534
2862          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fir
             -ed(void);
2863          
2864          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__def
             -ault__captured(uint16_t time);
2865          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2866          static  void PlatformInterruptC__INT_RFERR__fired(void);
2867          //#line 4
2868          static  void PlatformInterruptC__INT_TIM1__fired(void);
2869          //#line 4
2870          static  void PlatformInterruptC__INT_UART1_TX__fired(void);
2871          //#line 4
2872          static  void PlatformInterruptC__INT_RF__fired(void);
2873          //#line 4
2874          static  void PlatformInterruptC__INT_UART1_RX__fired(void);
2875          //#line 4
2876          static  void PlatformInterruptC__INT_UART0_TX__fired(void);
2877          //#line 4
2878          static  void PlatformInterruptC__INT_ST__fired(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 50  

2879          //#line 4
2880          static  void PlatformInterruptC__INT_P0__fired(void);
2881          //#line 4
2882          static  void PlatformInterruptC__INT_P1__fired(void);
2883          //#line 4
2884          static  void PlatformInterruptC__INT_UART0_RX__fired(void);
2885          //# 22 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
2886          void __vector_0(void);
2887          //#line 35
2888          void __vector_16(void);
2889          //#line 55
2890          void __vector_9(void);
2891          //#line 69
2892          void __vector_2(void);
2893          
2894          
2895          
2896          
2897          
2898          
2899          static  /*inline*/    void PlatformInterruptC__INT_UART0_RX__default__fired(void);
2900          
2901          
2902          
2903          
2904          void __vector_7(void);
2905          
2906          
2907          
2908          
2909          
2910          
2911          static  /*inline*/    void PlatformInterruptC__INT_UART0_TX__default__fired(void);
2912          
2913          
2914          
2915          
2916          
2917          void __vector_3(void);
2918          
2919          
2920          
2921          
2922          
2923          
2924          static  /*inline*/    void PlatformInterruptC__INT_UART1_RX__default__fired(void);
2925          
2926          
2927          
2928          
2929          void __vector_14(void);
2930          
2931          
2932          
2933          
2934          
2935          
2936          static  /*inline*/    void PlatformInterruptC__INT_UART1_TX__default__fired(void);
2937          
2938          
2939          
2940          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 51  

2941          
2942          void __vector_5(void);
2943          
2944          
2945          
2946          
2947          
2948          
2949          static  /*inline*/    void PlatformInterruptC__INT_ST__default__fired(void);
2950          
2951          
2952          
2953          
2954          
2955          void __vector_13(void);
2956          
2957          
2958          
2959          
2960          
2961          
2962          void __vector_15(void);
2963          
2964          
2965          
2966          
2967          
2968          
2969          static  /*inline*/    void PlatformInterruptC__INT_P0__default__fired(void);
2970          
2971          
2972          
2973          
2974          
2975          static  /*inline*/    void PlatformInterruptC__INT_P1__default__fired(void);
2976          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2977          static   /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__size_type /*CounterMilli32C.Trans
             -form*/TransformCounterC__0__CounterFrom__get(void);
2978          
2979          
2980          
2981          
2982          
2983          
2984          static   bool /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending(void);
2985          
2986          
2987          
2988          
2989          
2990          
2991          
2992          
2993          
2994          
2995          static   void /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow(void);
2996          //# 56 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
2997          /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type /*CounterMilli32C.Transform*/Transform
             -CounterC__0__m_upper = 0;
2998          
2999          enum /*CounterMilli32C.Transform*/TransformCounterC__0____nesc_unnamed4300 {
3000          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 52  

3001            TransformCounterC__0__LOW_SHIFT_RIGHT = 5, 
3002            TransformCounterC__0__HIGH_SHIFT_LEFT = 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__fr
             -om_size_type ) - /*CounterMilli32C.Transform*/TransformCounterC__0__LOW_SHIFT_RIGHT, 
3003            TransformCounterC__0__NUM_UPPER_BITS = 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__to_
             -size_type ) - 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type ) + 5, 
3004          
3005          
3006          
3007            TransformCounterC__0__OVERFLOW_MASK = /*CounterMilli32C.Transform*/TransformCounterC__0__NUM_UPPER_BITS 
             -? ((/*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type )2 << (/*CounterMilli32C.Transform*/TransformCou
             -nterC__0__NUM_UPPER_BITS - 1)) - 1 : 0
3008          };
3009          
3010          static   /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Tran
             -sformCounterC__0__Counter__get(void);
3011          //#line 125
3012          static  /*inline*/    void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void);
3013          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3014          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired(void);
3015          //#line 92
3016          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt(/*HilTimerM
             -illiC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type arg_0x7e970e78, /*HilTimerMilliC.AlarmMilli32C.T
             -ransform*/TransformAlarmC__0__AlarmFrom__size_type arg_0x7e966030);
3017          //#line 62
3018          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop(void);
3019          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3020          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__size_type /*HilTimerMilliC
             -.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__get(void);
3021          //# 67 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
3022          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_t0;
3023          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_dt;
3024          
3025          enum /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0____nesc_unnamed4301 {
3026          
3027            TransformAlarmC__0__MAX_DELAY_LOG2 = 8 * sizeof(/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarm
             -C__0__from_size_type ) - 1 - 5, 
3028            TransformAlarmC__0__MAX_DELAY = (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_t
             -ype )1 << /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY_LOG2
3029          };
3030          
3031          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void);
3032          
3033          
3034          
3035          
3036          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void);
3037          
3038          
3039          
3040          
3041          
3042          
3043          
3044          
3045          
3046          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void)
             -;
3047          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 53  

3048          
3049          
3050          
3051          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm(void);
3052          //#line 140
3053          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*
             -HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/T
             -ransformAlarmC__0__to_size_type dt);
3054          //#line 155
3055          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(
             -void);
3056          //#line 170
3057          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow
             -(void);
3058          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3059          static   /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.AlarmToTimerC
             -*/AlarmToTimerC__0__Alarm__getNow(void);
3060          //#line 92
3061          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(/*HilTimerMilliC.AlarmToTim
             -erC*/AlarmToTimerC__0__Alarm__size_type arg_0x7e970e78, /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_ty
             -pe arg_0x7e966030);
3062          //#line 105
3063          static   /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.AlarmToTimerC
             -*/AlarmToTimerC__0__Alarm__getAlarm(void);
3064          //#line 62
3065          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop(void);
3066          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3067          static   error_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__postTask(void);
3068          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3069          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired(void);
3070          //# 81 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
3071          enum /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0____nesc_unnamed4302 {
3072          //#line 81
3073            AlarmToTimerC__0__firedTask = 3U
3074          };
3075          //#line 81
3076          typedef int /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0____nesc_sillytask_firedTask[/*HilTimerMilliC.
             -AlarmToTimerC*/AlarmToTimerC__0__firedTask];
3077          //#line 44
3078          uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt = 0;
3079          bool /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot = FALSE;
3080          
3081          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(uint32_t t0, uint32_t dt,
             - bool oneshot);
3082          //#line 73
3083          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void);
3084          
3085          
3086          
3087          
3088          
3089          
3090          
3091          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void);
3092          //#line 93
3093          static  /*inline*/    void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void);
3094          //#line 113
3095          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t
             - t0, uint32_t dt);
3096          
3097          
3098          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 54  

3099          
3100          static  /*inline*/   uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void);
3101          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3102          static   error_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask(void);
3103          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3104          static  uint32_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow(void);
3105          //#line 118
3106          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt(uint32_t ar
             -g_0x7eb049b8, uint32_t arg_0x7eb04b48);
3107          //#line 67
3108          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop(void);
3109          
3110          
3111          
3112          
3113          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(
3114          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
3115          uint8_t arg_0x7e7a9030);
3116          //#line 59
3117          enum /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4303 {
3118          //#line 59
3119            VirtualizeTimerC__0__updateFromTimer = 4U
3120          };
3121          //#line 59
3122          typedef int /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_sillytask_updateFromTimer[/*Hil
             -TimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer];
3123          //#line 42
3124          enum /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4304 {
3125          
3126            VirtualizeTimerC__0__NUM_TIMERS = 7U, 
3127            VirtualizeTimerC__0__END_OF_LIST = 255
3128          };
3129          
3130          
3131          
3132          
3133          
3134          
3135          
3136          
3137          //#line 48
3138          typedef struct /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4305 {
3139          
3140            uint32_t t0;
3141            uint32_t dt;
3142            bool isoneshot : 1;
3143            bool isrunning : 1;
3144            bool _reserved : 6;
3145          } /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t;
3146          
3147          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t /*HilTimerMilliC.VirtualizeTimerC*/Virtual
             -izeTimerC__0__m_timers[/*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS];
3148          
3149          
3150          
3151          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(uint32_t now);
3152          //#line 98
3153          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask
             -(void);
3154          //#line 152
3155          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void);
3156          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 55  

3157          
3158          
3159          
3160          
3161          
3162          
3163          
3164          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(uint8_t num, uint32_t t0, u
             -int32_t dt, bool isoneshot);
3165          //#line 174
3166          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(uint8_t num, uin
             -t32_t dt);
3167          
3168          
3169          
3170          
3171          
3172          
3173          
3174          
3175          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(uint8_t num, uint
             -32_t dt);
3176          
3177          
3178          
3179          
3180          
3181          
3182          
3183          
3184          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(uint8_t num)
             -;
3185          //#line 232
3186          static  /*inline*/    void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(u
             -int8_t num);
3187          //# 47 "/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc"
3188          static  /*inline*/    void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow
             -(void);
3189          //# 63 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
3190          static  void AdcP__Read__readDone(
3191          //# 7 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
3192          uint8_t arg_0x7e744990, 
3193          //# 63 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
3194          error_t arg_0x7eb65a88, AdcP__Read__val_t arg_0x7eb65c10);
3195          //# 129 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
3196          enum AdcP____nesc_unnamed4306 {
3197          //#line 129
3198            AdcP__signalReadDone = 5U
3199          };
3200          //#line 129
3201          typedef int AdcP____nesc_sillytask_signalReadDone[AdcP__signalReadDone];
3202          //#line 18
3203          uint8_t AdcP__references[1U];
3204          uint8_t AdcP__resolutions[1U];
3205          uint8_t AdcP__inputs[1U];
3206          
3207          
3208          uint8_t AdcP__counter;
3209          
3210          
3211          static  /*inline*/   error_t AdcP__Init__init(void);
3212          //#line 43
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 56  

3213          static  /*inline*/   void AdcP__AdcControl__enable(uint8_t id, uint8_t reference, uint8_t resolution, uint
             -8_t input);
3214          //#line 74
3215          static  /*inline*/   error_t AdcP__Read__read(uint8_t id);
3216          //#line 132
3217          static  /*inline*/   void AdcP__signalReadDone__runTask(void);
3218          
3219          
3220          
3221          
3222          
3223          
3224          static  /*inline*/    void AdcP__Read__default__readDone(uint8_t id, error_t result, int16_t val);
3225          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3226          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__0__SubAMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
3227          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3228          static  void */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__PacketEx__getPacketHeader(message_t *arg_0x7e714ca0);
3229          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3230          static   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliable
             -MacRetrySendP__0__resendTask__postTask(void);
3231          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3232          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
3233          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3234          static  uint8_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__0__Packet__payloadLength(message_t *arg_0x7eb21468);
3235          //#line 83
3236          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__Packet__setPayloadLength(message_t *arg_0x7eb21ad8, uint8_t arg_0x7eb21c60);
3237          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
3238          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__0__SubAtosControl__start(void);
3239          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3240          static  am_addr_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliabl
             -eMacRetrySendP__0__AMPacket__destination(message_t *arg_0x7eb35a28);
3241          //#line 92
3242          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__AMPacket__setDestination(message_t *arg_0x7eb335f8, am_addr_t arg_0x7eb33788);
3243          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
3244          enum /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySend
             -P__0____nesc_unnamed4307 {
3245          //#line 48
3246            RfReliableMacRetrySendP__0__resendTask = 6U
3247          };
3248          //#line 48
3249          typedef int /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0____nesc_sillytask_resendTask[/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
             -RfReliableMacRetrySendP__0__resendTask];
3250          //#line 19
3251          uint8_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_sending = FALSE;
3252          message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__m_msg;
3253          uint8_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_retry_times = 0;
3254          
3255          
3256          static void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__signalDone(message_t *msg, error_t result);
3257          //#line 43
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 57  

3258          static error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__0__doSend(message_t *msg);
3259          
3260          
3261          
3262          
3263          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/R
             -fReliableMacRetrySendP__0__resendTask__runTask(void);
3264          //#line 74
3265          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP
             -*/RfReliableMacRetrySendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3266          //#line 129
3267          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/R
             -fReliableMacRetrySendP__0__SubAMSend__sendDone(message_t *msg, error_t error);
3268          //#line 150
3269          bool /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySend
             -P__0__m_started = FALSE;
3270          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP
             -*/RfReliableMacRetrySendP__0__AtosControl__start(void);
3271          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3272          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__0__SubAMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
3273          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3274          static  am_addr_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSe
             -ndP*/RfReliableMacSendP__0__AMPacket__source(message_t *arg_0x7eb33030);
3275          //#line 67
3276          static  am_addr_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSe
             -ndP*/RfReliableMacSendP__0__AMPacket__destination(message_t *arg_0x7eb35a28);
3277          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3278          static  void */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__0__PacketEx__getPacketHeader(message_t *arg_0x7e714ca0);
3279          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3280          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
3281          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3282          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__TimeoutTimer__startOneShot(uint32_t arg_0x7eb11d58);
3283          
3284          
3285          
3286          
3287          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__TimeoutTimer__stop(void);
3288          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3289          static  uint8_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__0__SubPacket__payloadLength(message_t *arg_0x7eb21468);
3290          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
3291          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e6b0238, message_t *arg_0x7e6b03e8, rf_ack_
             -t *arg_0x7e6b0598);
3292          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3293          static   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
             -dP*/RfReliableMacSendP__0__signalDoneTask__postTask(void);
3294          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3295          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__AckTimer__startOneShot(uint32_t arg_0x7eb11d58);
3296          
3297          
3298          
3299          
3300          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__AckTimer__stop(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 58  

3301          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
3302          enum /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0____nesc_unnamed4308 {
3303          //#line 31
3304            RfReliableMacSendP__0__signalDoneTask = 7U
3305          };
3306          //#line 31
3307          typedef int /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0____nesc_sillytask_signalDoneTask[/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMa
             -cSendC.RfReliableMacSendP*/RfReliableMacSendP__0__signalDoneTask];
3308          //#line 26
3309          uint8_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__m_sending = FALSE;
3310          message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__m_msg;
3311          error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__m_result;
3312          
3313          
3314          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRelia
             -bleMacSendP*/RfReliableMacSendP__0__signalDoneTask__runTask(void);
3315          //#line 51
3316          static void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__signalDone(message_t *msg, error_t result);
3317          //#line 71
3318          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRelia
             -bleMacSendP*/RfReliableMacSendP__0__AckTimer__fired(void);
3319          
3320          
3321          
3322          
3323          
3324          
3325          
3326          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRelia
             -bleMacSendP*/RfReliableMacSendP__0__TimeoutTimer__fired(void);
3327          
3328          
3329          
3330          
3331          
3332          
3333          
3334          
3335          
3336          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRe
             -liableMacSendP*/RfReliableMacSendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3337          //#line 139
3338          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRelia
             -bleMacSendP*/RfReliableMacSendP__0__SubAMSend__sendDone(message_t *msg, error_t error);
3339          //#line 158
3340          static  /*inline*/   message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.R
             -fReliableMacSendP*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len);
3341          //#line 203
3342          bool /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0__m_started = FALSE;
3343          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRe
             -liableMacSendP*/RfReliableMacSendP__0__AtosControl__start(void);
3344          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3345          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMRes
             -ourceP*/AMResourceP__0__AMResource__send(am_addr_t arg_0x7e662268, message_t *arg_0x7e662418, uint8_t arg_0x7e6625a0);
3346          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 59  

3347          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResour
             -ceP*/AMResourceP__0__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
3348          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
3349          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMRe
             -sourceC.AMResourceP*/AMResourceP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3350          //#line 39
3351          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResou
             -rceC.AMResourceP*/AMResourceP__0__AMResource__sendDone(message_t *msg, error_t error);
3352          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3353          static  void AMResourceCenterP__AMResource__sendDone(
3354          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
3355          uint8_t arg_0x7e6476f0, 
3356          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3357          message_t *arg_0x7e662a60, error_t arg_0x7e662be8);
3358          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3359          static  void AMResourceCenterP__Packet__setPayloadLength(message_t *arg_0x7eb21ad8, uint8_t arg_0x7eb21c60
             -);
3360          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
3361          static  error_t AMResourceCenterP__SubAtosControl__start(void);
3362          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3363          static  error_t AMResourceCenterP__CoreSend__send(message_t *arg_0x7e6412e8, uint8_t arg_0x7e641470);
3364          //# 57 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3365          static  am_addr_t AMResourceCenterP__AMPacket__address(void);
3366          //#line 110
3367          static  void AMResourceCenterP__AMPacket__setSource(message_t *arg_0x7eb33e88, am_addr_t arg_0x7eb32030);
3368          //#line 92
3369          static  void AMResourceCenterP__AMPacket__setDestination(message_t *arg_0x7eb335f8, am_addr_t arg_0x7eb337
             -88);
3370          //#line 176
3371          static  void AMResourceCenterP__AMPacket__setGroup(message_t *arg_0x7eb25558, am_group_t arg_0x7eb256e8);
3372          
3373          
3374          
3375          
3376          
3377          
3378          
3379          static  am_group_t AMResourceCenterP__AMPacket__localGroup(void);
3380          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
3381          static  error_t AMResourceCenterP__AMResource__send(uint8_t resource_id, am_addr_t addr, message_t *msg, u
             -int8_t len);
3382          //#line 70
3383          static  /*inline*/   void AMResourceCenterP__CoreSend__sendDone(message_t *msg, error_t result);
3384          
3385          
3386          
3387          
3388          
3389          static   void AMResourceCenterP__AMResource__default__sendDone(uint8_t resource_id, message_t *msg, error_
             -t error);
3390          
3391          
3392          
3393          
3394          
3395          bool AMResourceCenterP__m_started = FALSE;
3396          static  /*inline*/   error_t AMResourceCenterP__AtosControl__start(void);
3397          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3398          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__send(me
             -ssage_t *arg_0x7e6412e8, uint8_t arg_0x7e641470);
3399          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
3400          static   uint16_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__Random__rand16(voi
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 60  

             -d);
3401          //# 49 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
3402          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__enqueue(/
             -*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t arg_0x7e61b3e8);
3403          
3404          
3405          
3406          
3407          
3408          
3409          
3410          
3411          
3412          
3413          static  /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__element(uint8_t arg_0x7e61b960);
3414          
3415          
3416          
3417          
3418          
3419          
3420          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__clear(void);
3421          //#line 40
3422          static  /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__dequeue(void);
3423          //#line 9
3424          static  bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__empty(void);
3425          
3426          
3427          
3428          
3429          
3430          
3431          
3432          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__size(void
             -);
3433          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3434          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(mess
             -age_t *arg_0x7e641dd8, error_t arg_0x7e640010);
3435          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3436          static   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask(
             -void);
3437          //# 23 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
3438          enum /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0____nesc_unnamed4309 {
3439          //#line 23
3440            RfMacBaseSendP__0__sendNext = 8U
3441          };
3442          //#line 23
3443          typedef int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0____nesc_sillytask_sendNex
             -t[/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext];
3444          //#line 18
3445          bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
3446          
3447          uint8_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn = 0;
3448          
3449          
3450          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__
             -runTask(void);
3451          //#line 74
3452          static  /*inline*/  int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessa
             -ge(uint8_t resource_id);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 61  

3453          //#line 93
3454          static  /*inline*/  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueM
             -essage(message_t *msg);
3455          //#line 117
3456          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSen
             -d__sendDone(message_t *msg, error_t result);
3457          //#line 139
3458          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSen
             -d__send(message_t *msg, uint8_t len);
3459          //#line 185
3460          bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_started = FALSE;
3461          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosCon
             -trol__start(void);
3462          //# 10 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
3463          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSendC.Queue
             -ExC*/QueueExC__0__queue[4];
3464          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head = 0;
3465          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail = 0;
3466          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size = 0;
3467          
3468          static  /*inline*/   bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void);
3469          
3470          
3471          
3472          
3473          
3474          
3475          
3476          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void)
             -;
3477          
3478          
3479          
3480          
3481          
3482          
3483          
3484          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(vo
             -id);
3485          
3486          
3487          
3488          
3489          
3490          
3491          
3492          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__head(void);
3493          
3494          
3495          
3496          
3497          
3498          
3499          
3500          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void);
3501          //#line 63
3502          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*
             -AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t newVal);
3503          //#line 82
3504          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSen
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 62  

             -dC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t idx);
3505          //#line 96
3506          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t idx);
3507          //#line 124
3508          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void);
3509          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
3510          static  error_t RfMacBaseCsmaP__RfHardwareTx__txPrepare(uint8_t *arg_0x7e5bb6d8, uint8_t arg_0x7e5bb860);
3511          static  error_t RfMacBaseCsmaP__RfHardwareTx__txGo(void);
3512          //# 55 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3513          static   void RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__BackoffTimer__size_type arg_0x7e971d18);
3514          
3515          
3516          
3517          
3518          
3519          
3520          static   void RfMacBaseCsmaP__BackoffTimer__stop(void);
3521          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
3522          static   uint16_t RfMacBaseCsmaP__Random__rand16(void);
3523          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3524          static  void RfMacBaseCsmaP__CoreSend__sendDone(message_t *arg_0x7e641dd8, error_t arg_0x7e640010);
3525          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3526          static   error_t RfMacBaseCsmaP__signalDoneTask__postTask(void);
3527          //#line 56
3528          static   error_t RfMacBaseCsmaP__doGo__postTask(void);
3529          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
3530          static  void RfMacBaseCsmaP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea60f08);
3531          //# 53 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
3532          enum RfMacBaseCsmaP____nesc_unnamed4310 {
3533          //#line 53
3534            RfMacBaseCsmaP__signalDoneTask = 9U
3535          };
3536          //#line 53
3537          typedef int RfMacBaseCsmaP____nesc_sillytask_signalDoneTask[RfMacBaseCsmaP__signalDoneTask];
3538          //#line 105
3539          enum RfMacBaseCsmaP____nesc_unnamed4311 {
3540          //#line 105
3541            RfMacBaseCsmaP__doGo = 10U
3542          };
3543          //#line 105
3544          typedef int RfMacBaseCsmaP____nesc_sillytask_doGo[RfMacBaseCsmaP__doGo];
3545          //#line 20
3546          enum RfMacBaseCsmaP____nesc_unnamed4312 {
3547          
3548            RfMacBaseCsmaP__RF_TIME_ACK_TURNAROUND = 7, 
3549            RfMacBaseCsmaP__RF_TIME_SYMBOL = 2, 
3550            RfMacBaseCsmaP__RF_BACKOFF_PERIOD = 20 / RfMacBaseCsmaP__RF_TIME_SYMBOL, 
3551            RfMacBaseCsmaP__RF_MIN_BACKOFF = 20 / RfMacBaseCsmaP__RF_TIME_SYMBOL, 
3552            RfMacBaseCsmaP__RF_CONGESTION_MAX = 100
3553          };
3554          
3555          
3556          enum RfMacBaseCsmaP____nesc_unnamed4313 {
3557          
3558            RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA, 
3559            RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND
3560          };
3561          
3562          
3563          uint8_t RfMacBaseCsmaP__m_test_ieee[8];
3564          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 63  

3565          
3566          uint8_t RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
3567          uint8_t RfMacBaseCsmaP__m_congestion_count = 0;
3568          error_t RfMacBaseCsmaP__m_result;
3569          message_t *RfMacBaseCsmaP__m_msg = (void *)0;
3570          bool RfMacBaseCsmaP__m_cancel = FALSE;
3571          
3572          
3573          uint8_t RfMacBaseCsmaP__m_congestion_delay = 0;
3574          uint16_t RfMacBaseCsmaP__m_this_delay = 0;
3575          uint8_t RfMacBaseCsmaP__m_this_random = 0;
3576          
3577          
3578          
3579          static  /*inline*/   void RfMacBaseCsmaP__signalDoneTask__runTask(void);
3580          
3581          
3582          
3583          
3584          
3585          
3586          
3587          
3588          
3589          
3590          static void RfMacBaseCsmaP__signalDone(error_t result);
3591          
3592          
3593          
3594          
3595          
3596          
3597          
3598          
3599          
3600          
3601          static  /*inline*/  uint32_t RfMacBaseCsmaP__initBackoffTimer(void);
3602          
3603          
3604          
3605          
3606          
3607          
3608          
3609          static  /*inline*/  uint32_t RfMacBaseCsmaP__congestionBackoffTimer(void);
3610          
3611          
3612          
3613          
3614          
3615          
3616          
3617          static  /*inline*/  void RfMacBaseCsmaP__congestion(void);
3618          //#line 105
3619          static  /*inline*/   void RfMacBaseCsmaP__doGo__runTask(void);
3620          //#line 135
3621          static  /*inline*/    void RfMacBaseCsmaP__BackoffTimer__fired(void);
3622          //#line 164
3623          static  /*inline*/   error_t RfMacBaseCsmaP__CoreSend__send(message_t *msg, uint8_t len);
3624          //#line 225
3625          bool RfMacBaseCsmaP__m_started = FALSE;
3626          static  /*inline*/   error_t RfMacBaseCsmaP__AtosControl__start(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 64  

3627          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
3628          static  void RfHardwareP__RfConfig__flush(void);
3629          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
3630          static  error_t RfHardwareP__RxControl__start(void);
3631          //#line 74
3632          static  error_t RfHardwareP__TxControl__start(void);
3633          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
3634          static  void RfHardwareP__RfPower__oscOn(void);
3635          //#line 6
3636          static  void RfHardwareP__RfPower__radioOn(void);
3637          //#line 4
3638          static  void RfHardwareP__RfPower__reset(void);
3639          
3640          
3641          
3642          
3643          static  void RfHardwareP__RfPower__rxOn(void);
3644          //# 19 "/opt/atos/tos/chips/rf2530/hardware/RfHardwareP.nc"
3645          static  /*inline*/   error_t RfHardwareP__AtosControl__start(void);
3646          //# 11 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
3647          static  /*inline*/   void RfPowerP__RfPower__reset(void);
3648          
3649          
3650          
3651          
3652          static  /*inline*/   void RfPowerP__RfPower__radioOn(void);
3653          //#line 85
3654          static  /*inline*/   void RfPowerP__RfPower__rxOn(void);
3655          //#line 103
3656          static  /*inline*/   void RfPowerP__RfPower__oscOn(void);
3657          //# 17 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
3658          uint8_t RfConfigP__m_channel;
3659          
3660          uint8_t RfConfigP__m_tx_power;
3661          
3662          bool RfConfigP__m_hw_auto_ack;
3663          
3664          bool RfConfigP__m_address_recognition;
3665          
3666          
3667          static  /*inline*/  void RfConfigP__writeChannel(void);
3668          
3669          
3670          
3671          
3672          
3673          
3674          
3675          static  /*inline*/  void RfConfigP__writeFilter(void);
3676          //#line 52
3677          static  /*inline*/  void RfConfigP__writeFIFOPThrehold(void);
3678          
3679          
3680          
3681          
3682          static  /*inline*/  void RfConfigP__writeTxPower(void);
3683          
3684          
3685          
3686          
3687          
3688          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 65  

3689          
3690          static  /*inline*/  void RfConfigP__RfConfigWrite(void);
3691          //#line 103
3692          static  /*inline*/   error_t RfConfigP__Init__init(void);
3693          //#line 135
3694          static  /*inline*/   void RfConfigP__RfConfig__flush(void);
3695          
3696          
3697          
3698          
3699          
3700          
3701          
3702          static  /*inline*/   uint8_t RfConfigP__RfConfig__getChannel(void);
3703          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3704          static   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__enableRisingEdge(void);
3705          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
3706          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__RfHardwareRx__rxPacket(uint8_t *arg_0x7e5825
             -70, uint8_t arg_0x7e5826f8);
3707          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3708          static   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge(void);
3709          //# 23 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
3710          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[1 << 8] = { 0 };
3711          //#line 23
3712          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = 0;
3713          //#line 23
3714          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail = 0;
3715          
3716          
3717          
3718          
3719          
3720          
3721          
3722          
3723          
3724          static  /*inline*/   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void);
3725          //#line 58
3726          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[sizeof(message_t )];
3727          
3728          
3729          static bool /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(uint8_t *_data, uint8_t length);
3730          //#line 78
3731          static  /*inline*/  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket(void);
3732          //#line 141
3733          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void);
3734          //#line 153
3735          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void);
3736          //#line 176
3737          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void);
3738          
3739          
3740          
3741          
3742          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(
             -void);
3743          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3744          static   void RfInterruptsP__InterruptRFErr__fired(void);
3745          //#line 57
3746          static   void RfInterruptsP__InterruptFIFOP__fired(void);
3747          //# 36 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
3748          static  /*inline*/    error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 66  

3749          //#line 59
3750          static  /*inline*/    error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void);
3751          //#line 80
3752          static  /*inline*/   void RfInterruptsP__INT_RFERR__fired(void);
3753          //#line 92
3754          static  /*inline*/   void RfInterruptsP__INT_RF__fired(void);
3755          //# 14 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
3756          static  /*inline*/  void RfHardwareTxP__writeTxfifo(uint8_t *buf, uint8_t len);
3757          //#line 27
3758          static  /*inline*/   error_t RfHardwareTxP__StdControl__start(void);
3759          //#line 45
3760          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *packet, uint8_t len);
3761          //#line 91
3762          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txGo(void);
3763          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3764          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__fired(void);
3765          //#line 92
3766          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__startAt(/*RfMacBase
             -CsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__size_type arg_0x7e970e78, /*RfMacBaseCsmaC.Alarm32khz32C.T
             -ransform*/TransformAlarmC__1__AlarmFrom__size_type arg_0x7e966030);
3767          //#line 62
3768          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__stop(void);
3769          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3770          static   /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__size_type /*RfMacBaseCsmaC
             -.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__get(void);
3771          //# 67 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
3772          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm32khz32C.
             -Transform*/TransformAlarmC__1__m_t0;
3773          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm32khz32C.
             -Transform*/TransformAlarmC__1__m_dt;
3774          
3775          enum /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1____nesc_unnamed4314 {
3776          
3777            TransformAlarmC__1__MAX_DELAY_LOG2 = 8 * sizeof(/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarm
             -C__1__from_size_type ) - 1 - 0, 
3778            TransformAlarmC__1__MAX_DELAY = (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_t
             -ype )1 << /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY_LOG2
3779          };
3780          
3781          static  /*inline*/    /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBa
             -seCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void);
3782          //#line 91
3783          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void)
             -;
3784          
3785          
3786          
3787          
3788          static void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm(void);
3789          //#line 140
3790          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*
             -RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type t0, /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/T
             -ransformAlarmC__1__to_size_type dt);
3791          
3792          
3793          
3794          
3795          
3796          
3797          
3798          
3799          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 67  

3800          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*Rf
             -MacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type dt);
3801          
3802          
3803          
3804          
3805          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(
             -void);
3806          //#line 170
3807          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow
             -(void);
3808          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3809          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__size_type /*Counter32khz3
             -2C.TransformCounterC*/TransformCounterC__1__CounterFrom__get(void);
3810          
3811          
3812          
3813          
3814          
3815          
3816          static   bool /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__isOverflowPending(vo
             -id);
3817          
3818          
3819          
3820          
3821          
3822          
3823          
3824          
3825          
3826          
3827          static   void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__overflow(void);
3828          //# 56 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
3829          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type /*Counter32khz32C.TransformCou
             -nterC*/TransformCounterC__1__m_upper = 0;
3830          
3831          enum /*Counter32khz32C.TransformCounterC*/TransformCounterC__1____nesc_unnamed4315 {
3832          
3833            TransformCounterC__1__LOW_SHIFT_RIGHT = 0, 
3834            TransformCounterC__1__HIGH_SHIFT_LEFT = 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounter
             -C__1__from_size_type ) - /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__LOW_SHIFT_RIGHT, 
3835            TransformCounterC__1__NUM_UPPER_BITS = 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounterC
             -__1__to_size_type ) - 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type ) + 0, 
3836          
3837          
3838          
3839            TransformCounterC__1__OVERFLOW_MASK = /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__NUM_UPP
             -ER_BITS ? ((/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type )2 << (/*Counter32khz32C.Transfo
             -rmCounterC*/TransformCounterC__1__NUM_UPPER_BITS - 1)) - 1 : 0
3840          };
3841          
3842          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transfo
             -rmCounterC*/TransformCounterC__1__Counter__get(void);
3843          //#line 125
3844          static  /*inline*/    void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflo
             -w(void);
3845          //# 10 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
3846          static  /*inline*/   error_t CC2530RandomLfsrP__Init__init(void);
3847          //#line 69
3848          static   uint16_t CC2530RandomLfsrP__Random__rand16(void);
3849          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 68  

3850          static  void RfPacketP__WatchDog__resetCpu(void);
3851          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
3852          static   am_addr_t RfPacketP__ActiveMessageAddress__amAddress(void);
3853          
3854          
3855          
3856          
3857          static   am_group_t RfPacketP__ActiveMessageAddress__amGroup(void);
3858          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
3859          bool RfPacketP__m_address_saved = FALSE;
3860          
3861          am_addr_t RfPacketP__m_addr = TOS_AM_ADDRESS;
3862          
3863          
3864          bool RfPacketP__m_group_saved = FALSE;
3865          am_group_t RfPacketP__m_group = TOS_AM_GROUP;
3866          
3867          
3868          static  am_addr_t RfPacketP__AMPacket__address(void);
3869          //#line 49
3870          static  /*inline*/   am_addr_t RfPacketP__AMPacket__destination(message_t *amsg);
3871          
3872          
3873          
3874          
3875          static  /*inline*/   am_addr_t RfPacketP__AMPacket__source(message_t *amsg);
3876          
3877          
3878          
3879          
3880          static  /*inline*/   void RfPacketP__AMPacket__setDestination(message_t *amsg, am_addr_t addr);
3881          
3882          
3883          
3884          
3885          static  /*inline*/   void RfPacketP__AMPacket__setSource(message_t *amsg, am_addr_t addr);
3886          
3887          
3888          
3889          
3890          static  /*inline*/   bool RfPacketP__AMPacket__isForMe(message_t *amsg);
3891          
3892          
3893          
3894          
3895          
3896          
3897          static  /*inline*/   am_id_t RfPacketP__AMPacket__type(message_t *amsg);
3898          
3899          
3900          
3901          
3902          
3903          
3904          
3905          
3906          
3907          static  /*inline*/   am_group_t RfPacketP__AMPacket__group(message_t *amsg);
3908          
3909          
3910          
3911          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 69  

3912          static  /*inline*/   void RfPacketP__AMPacket__setGroup(message_t *amsg, am_group_t grp);
3913          
3914          
3915          
3916          
3917          static  /*inline*/   am_group_t RfPacketP__AMPacket__localGroup(void);
3918          //#line 124
3919          static  /*inline*/   uint8_t RfPacketP__Packet__payloadLength(message_t *msg);
3920          
3921          
3922          
3923          
3924          static  /*inline*/   void RfPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len);
3925          
3926          
3927          
3928          
3929          
3930          
3931          
3932          
3933          
3934          static  void *RfPacketP__Packet__getPayload(message_t *msg, uint8_t *len);
3935          
3936          
3937          
3938          
3939          
3940          
3941          
3942          
3943          
3944          
3945          static  /*inline*/   uint8_t RfPacketP__PacketEx__packetHeaderSize(void);
3946          
3947          
3948          
3949          
3950          
3951          
3952          
3953          
3954          
3955          static  /*inline*/   bool RfPacketP__PacketEx__isValidPacket(message_t *msg);
3956          //#line 182
3957          static  /*inline*/    void RfPacketP__ActiveMessageAddress__changed(void);
3958          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3959          static  uint8_t RfReliableMacPacketP__SubPacket__payloadLength(message_t *arg_0x7eb21468);
3960          //#line 108
3961          static  void *RfReliableMacPacketP__SubPacket__getPayload(message_t *arg_0x7eb20840, uint8_t *arg_0x7eb209
             -e8);
3962          //#line 83
3963          static  void RfReliableMacPacketP__SubPacket__setPayloadLength(message_t *arg_0x7eb21ad8, uint8_t arg_0x7e
             -b21c60);
3964          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3965          static  bool RfReliableMacPacketP__SubPacketEx__isValidPacket(message_t *arg_0x7e713190);
3966          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
3967          static  /*inline*/   uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *msg);
3968          
3969          
3970          
3971          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 70  

3972          static  /*inline*/   void RfReliableMacPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len);
3973          
3974          
3975          
3976          
3977          
3978          
3979          
3980          
3981          
3982          static  void *RfReliableMacPacketP__Packet__getPayload(message_t *msg, uint8_t *len);
3983          
3984          
3985          
3986          
3987          
3988          
3989          
3990          
3991          
3992          
3993          static  /*inline*/   uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void);
3994          
3995          
3996          
3997          
3998          static  /*inline*/   void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *msg);
3999          
4000          
4001          
4002          
4003          static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *msg);
4004          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
4005          static  uint8_t RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(message_t *arg_0x7e42bb10, uint8_
             -t arg_0x7e42bca0, message_t *arg_0x7e42be50, rf_ack_t *arg_0x7e428030);
4006          static  void RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(message_t *arg_0x7e428508, messag
             -e_t *arg_0x7e4286b8, rf_ack_t *arg_0x7e428868);
4007          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
4008          static  /*inline*/  uint8_t RfReliableMacAckP__fillAckMessageDefault(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack);
4009          
4010          
4011          
4012          
4013          
4014          
4015          
4016          
4017          
4018          static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *receive_msg, uint8_t receiv
             -e_dsn, message_t *ack_msg, rf_ack_t *ack);
4019          
4020          
4021          
4022          
4023          
4024          
4025          
4026          
4027          
4028          
4029          static  /*inline*/   void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *send_msg, mess
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 71  

             -age_t *ack_msg, rf_ack_t *ack);
4030          
4031          
4032          
4033          
4034          static  /*inline*/    uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t 
             -*receive_msg, uint8_t receive_dsn, message_t *ack_msg, rf_ack_t *ack);
4035          
4036          
4037          
4038          
4039          static  /*inline*/    void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t 
             -*send_msg, message_t *ack_msg, rf_ack_t *ack);
4040          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4041          static  void */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__0__PacketEx__getPacketHeader(message_t *arg_0x7e714ca0);
4042          
4043          static  bool /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__PacketEx__isValidPacket(message_t *arg_0x7e713190);
4044          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4045          static  uint8_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__0__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e6b1850, uint8_t arg_0x7e6b19e0, message_t *arg_0x7e6
             -b1b90, rf_ack_t *arg_0x7e6b1d40);
4046          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
4047          static  bool /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__DsnFilter__filter(uint16_t arg_0x7e408ba8, uint8_t arg_0x7e408d30);
4048          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4049          static  void */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__0__SubPacket__getPayload(message_t *arg_0x7eb20840, uint8_t *arg_0x7eb209e8);
4050          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4051          static   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__0__sendAckTask__postTask(void);
4052          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4053          static  message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRelia
             -bleMacReceiveP__0__Receive__receive(message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338);
4054          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4055          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__0__AMSendAck__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
4056          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4057          static  am_group_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRelia
             -bleMacReceiveP__0__AMPacket__group(message_t *arg_0x7eb31d08);
4058          //#line 77
4059          static  am_addr_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__0__AMPacket__source(message_t *arg_0x7eb33030);
4060          //#line 67
4061          static  am_addr_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__0__AMPacket__destination(message_t *arg_0x7eb35a28);
4062          //#line 92
4063          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__AMPacket__setDestination(message_t *arg_0x7eb335f8, am_addr_t arg_0x7eb33788);
4064          //#line 176
4065          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__AMPacket__setGroup(message_t *arg_0x7eb25558, am_group_t arg_0x7eb256e8);
4066          //# 47 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4067          enum /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__0____nesc_unnamed4316 {
4068          //#line 47
4069            RfReliableMacReceiveP__0__sendAckTask = 11U
4070          };
4071          //#line 47
4072          typedef int /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__0____nesc_sillytask_sendAckTask[/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 72  

             -/RfReliableMacReceiveP__0__sendAckTask];
4073          //#line 37
4074          message_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__m_ack_msg;
4075          
4076          static  /*inline*/  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__0__sendAck(message_t *msg);
4077          
4078          
4079          
4080          
4081          
4082          
4083          
4084          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/
             -RfReliableMacReceiveP__0__sendAckTask__runTask(void);
4085          
4086          
4087          
4088          
4089          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/
             -RfReliableMacReceiveP__0__AMSendAck__sendDone(message_t *msg, error_t result);
4090          
4091          
4092          
4093          
4094          static  /*inline*/   message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRece
             -iveP*/RfReliableMacReceiveP__0__SubReceive__receive(message_t *msg, void *payload, uint8_t len);
4095          //#line 100
4096          bool /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__0__m_started = FALSE;
4097          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceive
             -P*/RfReliableMacReceiveP__0__AtosControl__start(void);
4098          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4099          static  bool RfActiveMessageP__PacketEx__isValidPacket(message_t *arg_0x7e713190);
4100          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4101          static  void *RfActiveMessageP__Packet__getPayload(message_t *arg_0x7eb20840, uint8_t *arg_0x7eb209e8);
4102          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4103          static  message_t *RfActiveMessageP__Snoop__receive(
4104          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4105          uint8_t arg_0x7e3d6bb0, 
4106          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4107          message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338);
4108          //#line 67
4109          static  message_t *RfActiveMessageP__Receive__receive(
4110          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4111          uint8_t arg_0x7e3d63f8, 
4112          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4113          message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338);
4114          //# 136 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4115          static  am_id_t RfActiveMessageP__AMPacket__type(message_t *arg_0x7eb32f08);
4116          //#line 125
4117          static  bool RfActiveMessageP__AMPacket__isForMe(message_t *arg_0x7eb327d8);
4118          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4119          static  /*inline*/   void RfActiveMessageP__CoreReceive__receive(message_t *msg);
4120          //#line 51
4121          static  /*inline*/    message_t *RfActiveMessageP__Receive__default__receive(uint8_t id, message_t *msg, v
             -oid *payload, uint8_t len);
4122          //#line 67
4123          static  /*inline*/    message_t *RfActiveMessageP__Snoop__default__receive(uint8_t id, message_t *msg, voi
             -d *payload, uint8_t len);
4124          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 73  

4125          
4126          
4127          
4128          
4129          
4130          bool RfActiveMessageP__m_started = FALSE;
4131          static  /*inline*/   error_t RfActiveMessageP__AtosControl__start(void);
4132          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
4133          static  void RfMacBaseReceiveP__CoreReceive__receive(message_t *arg_0x7e3d1030);
4134          //# 12 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseReceiveP.nc"
4135          static  /*inline*/   void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *buf, uint8_t len);
4136          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
4137          static   uint16_t AtosMacP__Random__rand16(void);
4138          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
4139          static  error_t AtosMacP__SubAtosControl__start(void);
4140          //#line 4
4141          static  error_t AtosMacP__HardwareAtosControl__start(void);
4142          //# 15 "/opt/atos/tos/lib/atos/net/AtosMac/AtosMacP.nc"
4143          bool AtosMacP__m_started = FALSE;
4144          
4145          static  /*inline*/   error_t AtosMacP__AtosControl__start(void);
4146          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
4147          static  uint8_t AtosNetStdP__RfConfig__getChannel(void);
4148          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4149          static  uint8_t AtosNetStdP__Packet__payloadLength(message_t *arg_0x7eb21468);
4150          //#line 108
4151          static  void *AtosNetStdP__Packet__getPayload(message_t *arg_0x7eb20840, uint8_t *arg_0x7eb209e8);
4152          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4153          static  error_t AtosNetStdP__AMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg
             -_0x7eb53230);
4154          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
4155          static  void AtosNetStdP__WatchDog__resetCpu(void);
4156          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
4157          static  void AtosNetStdP__AtosNetStd__receivedReboot(anstd_reboot_t *arg_0x7e3766a8);
4158          
4159          static  void AtosNetStdP__AtosNetStd__receivedTraceAck(message_t *arg_0x7e3741f8, anstd_trace_ack_t *arg_0
             -x7e3743b8);
4160          //#line 15
4161          static  void AtosNetStdP__AtosNetStd__receivedDiscovery(anstd_discovery_t *arg_0x7e377d20);
4162          
4163          
4164          static  void AtosNetStdP__AtosNetStd__receivedTrace(message_t *arg_0x7e376b58, anstd_trace_t *arg_0x7e376d
             -08);
4165          //#line 12
4166          static  void AtosNetStdP__AtosNetStd__beforeNodeStatusUp(anstd_node_status_t *arg_0x7e3771e0);
4167          
4168          static  void AtosNetStdP__AtosNetStd__receivedNodeStatusUp(message_t *arg_0x7e377698, anstd_node_status_t 
             -*arg_0x7e377850);
4169          
4170          static  void AtosNetStdP__AtosNetStd__receivedSetIEEE(anstd_setieee_t *arg_0x7e3761f8);
4171          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4172          static   error_t AtosNetStdP__nodeStatusUpTask__postTask(void);
4173          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4174          static  void AtosNetStdP__RebootTimer__startPeriodic(uint32_t arg_0x7eb11788);
4175          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4176          static   error_t AtosNetStdP__rebootTask__postTask(void);
4177          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
4178          static  void AtosNetStdP__FlashIEEE__WriteIEEE(uint8_t *arg_0x7ea553d8);
4179          //#line 7
4180          static  void AtosNetStdP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea60f08);
4181          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4182          static  am_addr_t AtosNetStdP__AMPacket__source(message_t *arg_0x7eb33030);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 74  

4183          //#line 57
4184          static  am_addr_t AtosNetStdP__AMPacket__address(void);
4185          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4186          static   error_t AtosNetStdP__sendDoneCheck__postTask(void);
4187          //# 54 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
4188          enum AtosNetStdP____nesc_unnamed4317 {
4189          //#line 54
4190            AtosNetStdP__rebootTask = 12U
4191          };
4192          //#line 54
4193          typedef int AtosNetStdP____nesc_sillytask_rebootTask[AtosNetStdP__rebootTask];
4194          
4195          
4196          
4197          
4198          enum AtosNetStdP____nesc_unnamed4318 {
4199          //#line 59
4200            AtosNetStdP__nodeStatusUpTask = 13U
4201          };
4202          //#line 59
4203          typedef int AtosNetStdP____nesc_sillytask_nodeStatusUpTask[AtosNetStdP__nodeStatusUpTask];
4204          //#line 350
4205          enum AtosNetStdP____nesc_unnamed4319 {
4206          //#line 350
4207            AtosNetStdP__sendDoneCheck = 14U
4208          };
4209          //#line 350
4210          typedef int AtosNetStdP____nesc_sillytask_sendDoneCheck[AtosNetStdP__sendDoneCheck];
4211          //#line 43
4212          message_t AtosNetStdP__m_send_msg;
4213          uint16_t AtosNetStdP__m_ack_addr = 0xFFFF;
4214          uint8_t AtosNetStdP__m_node_status = 0;
4215          
4216          
4217          
4218          static  /*inline*/   void AtosNetStdP__RebootTimer__fired(void);
4219          
4220          
4221          
4222          
4223          static  /*inline*/   void AtosNetStdP__rebootTask__runTask(void);
4224          
4225          
4226          
4227          
4228          static  /*inline*/   void AtosNetStdP__nodeStatusUpTask__runTask(void);
4229          
4230          
4231          
4232          
4233          
4234          
4235          
4236          
4237          
4238          static  /*inline*/  void AtosNetStdP__receiveNodeStatusUp(message_t *msg, anstd_node_status_t *status);
4239          
4240          
4241          
4242          
4243          
4244          static  /*inline*/  void AtosNetStdP__receiveDiscovery(message_t *msg, anstd_discovery_t *discovery);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 75  

4245          
4246          
4247          
4248          
4249          
4250          
4251          
4252          
4253          static  /*inline*/  void AtosNetStdP__receiveSetIEEE(message_t *msg, anstd_setieee_t *setieee);
4254          
4255          
4256          
4257          
4258          
4259          
4260          
4261          
4262          
4263          static  /*inline*/  void AtosNetStdP__receiveReboot(message_t *msg, anstd_reboot_t *reboot);
4264          
4265          
4266          
4267          
4268          
4269          
4270          
4271          static int AtosNetStdP__indexOfTraceItem(anstd_trace_t *trace, uint16_t node_id);
4272          //#line 116
4273          static void AtosNetStdP__traceBackward(message_t *msg, anstd_trace_ack_t *trace_ack, int index);
4274          //#line 128
4275          static  /*inline*/  void AtosNetStdP__traceEnd(message_t *msg, anstd_trace_t *trace, int index);
4276          
4277          
4278          
4279          
4280          
4281          static  /*inline*/  void AtosNetStdP__traceForward(message_t *msg, anstd_trace_t *trace, int index);
4282          //#line 151
4283          static  /*inline*/  void AtosNetStdP__receiveTrace(message_t *msg, anstd_trace_t *trace);
4284          //#line 177
4285          static  /*inline*/  void AtosNetStdP__receiveTraceAck(message_t *msg, anstd_trace_ack_t *trace_ack);
4286          //#line 203
4287          static  /*inline*/   message_t *AtosNetStdP__Receive__receive(message_t *msg, void *payload, uint8_t len);
4288          //#line 241
4289          static  /*inline*/   error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t address);
4290          //#line 350
4291          static  /*inline*/   void AtosNetStdP__sendDoneCheck__runTask(void);
4292          //#line 368
4293          static  /*inline*/   void AtosNetStdP__AMSend__sendDone(message_t *msg, error_t error);
4294          
4295          
4296          
4297          
4298          
4299          
4300          
4301          
4302          
4303          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *statu
             -s);
4304          
4305          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 76  

4306          
4307          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *msg, anstd_no
             -de_status_t *status);
4308          
4309          
4310          
4311          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *discover
             -y);
4312          
4313          
4314          
4315          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *setieee);
4316          
4317          
4318          
4319          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *reboot);
4320          
4321          
4322          
4323          
4324          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *msg, anstd_trace_t *
             -trace);
4325          
4326          
4327          
4328          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *msg, anstd_trace_
             -t *trace_ack);
4329          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4330          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__SubAMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
4331          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4332          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__PacketEx__getPacketHeader(message_t *arg_0x7e714ca0);
4333          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4334          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__1__resendTask__postTask(void);
4335          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4336          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
4337          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4338          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__Packet__payloadLength(message_t *arg_0x7eb21468);
4339          //#line 83
4340          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__Packet__setPayloadLength(message_t *arg_0x7eb21ad8, uint8_t arg_0x7eb21c60);
4341          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
4342          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__SubAtosControl__start(void);
4343          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4344          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliable
             -MacRetrySendP__1__AMPacket__destination(message_t *arg_0x7eb35a28);
4345          //#line 92
4346          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__AMPacket__setDestination(message_t *arg_0x7eb335f8, am_addr_t arg_0x7eb33788);
4347          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
4348          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1____nesc_unnamed4320 {
4349          //#line 48
4350            RfReliableMacRetrySendP__1__resendTask = 15U
4351          };
4352          //#line 48
4353          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 77  

             -rySendP__1____nesc_sillytask_resendTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask];
4354          //#line 19
4355          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
             -ndP__1__m_sending = FALSE;
4356          message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_msg;
4357          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
             -ndP__1__m_retry_times = 0;
4358          
4359          
4360          static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1__signalDone(message_t *msg, error_t result);
4361          //#line 43
4362          static error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__1__doSend(message_t *msg);
4363          
4364          
4365          
4366          
4367          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask__runTask(void);
4368          //#line 74
4369          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4370          //#line 129
4371          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__SubAMSend__sendDone(message_t *msg, error_t error);
4372          //#line 150
4373          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1__m_started = FALSE;
4374          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*
             -/RfReliableMacRetrySendP__1__AtosControl__start(void);
4375          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4376          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__SubAMSend__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
4377          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4378          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
             -dP*/RfReliableMacSendP__1__AMPacket__source(message_t *arg_0x7eb33030);
4379          //#line 67
4380          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
             -dP*/RfReliableMacSendP__1__AMPacket__destination(message_t *arg_0x7eb35a28);
4381          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4382          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__1__PacketEx__getPacketHeader(message_t *arg_0x7e714ca0);
4383          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4384          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
4385          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4386          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__startOneShot(uint32_t arg_0x7eb11d58);
4387          
4388          
4389          
4390          
4391          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__stop(void);
4392          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4393          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__SubPacket__payloadLength(message_t *arg_0x7eb21468);
4394          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4395          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 78  

             -fReliableMacSendP__1__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e6b0238, message_t *arg_0x7e6b03e8, rf_ack_t
             - *arg_0x7e6b0598);
4396          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4397          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__1__signalDoneTask__postTask(void);
4398          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4399          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__startOneShot(uint32_t arg_0x7eb11d58);
4400          
4401          
4402          
4403          
4404          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__stop(void);
4405          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
4406          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__1____nesc_unnamed4321 {
4407          //#line 31
4408            RfReliableMacSendP__1__signalDoneTask = 16U
4409          };
4410          //#line 31
4411          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1____nesc_sillytask_signalDoneTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacS
             -endC.RfReliableMacSendP*/RfReliableMacSendP__1__signalDoneTask];
4412          //#line 26
4413          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending = FALSE;
4414          message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__1__m_msg;
4415          error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_result;
4416          
4417          
4418          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__signalDoneTask__runTask(void);
4419          //#line 51
4420          static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__signalDone(message_t *msg, error_t result);
4421          //#line 71
4422          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__AckTimer__fired(void);
4423          
4424          
4425          
4426          
4427          
4428          
4429          
4430          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__TimeoutTimer__fired(void);
4431          
4432          
4433          
4434          
4435          
4436          
4437          
4438          
4439          
4440          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4441          //#line 139
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 79  

4442          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__SubAMSend__sendDone(message_t *msg, error_t error);
4443          //#line 158
4444          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len);
4445          //#line 203
4446          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__1__m_started = FALSE;
4447          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AtosControl__start(void);
4448          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4449          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMReso
             -urceP*/AMResourceP__1__AMResource__send(am_addr_t arg_0x7e662268, message_t *arg_0x7e662418, uint8_t arg_0x7e6625a0);
4450          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4451          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourc
             -eP*/AMResourceP__1__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
4452          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4453          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMRes
             -ourceC.AMResourceP*/AMResourceP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4454          //#line 39
4455          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResour
             -ceC.AMResourceP*/AMResourceP__1__AMResource__sendDone(message_t *msg, error_t error);
4456          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4457          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__PacketEx__getPacketHeader(message_t *arg_0x7e714ca0);
4458          
4459          static  bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__PacketEx__isValidPacket(message_t *arg_0x7e713190);
4460          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4461          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e6b1850, uint8_t arg_0x7e6b19e0, message_t *arg_0x7e6b
             -1b90, rf_ack_t *arg_0x7e6b1d40);
4462          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
4463          static  bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__DsnFilter__filter(uint16_t arg_0x7e408ba8, uint8_t arg_0x7e408d30);
4464          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4465          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__SubPacket__getPayload(message_t *arg_0x7eb20840, uint8_t *arg_0x7eb209e8);
4466          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4467          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__1__sendAckTask__postTask(void);
4468          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4469          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__Receive__receive(message_t *arg_0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338);
4470          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4471          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__AMSendAck__send(am_addr_t arg_0x7eb54ee8, message_t *arg_0x7eb530a8, uint8_t arg_0x7eb53230);
4472          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4473          static  am_group_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__AMPacket__group(message_t *arg_0x7eb31d08);
4474          //#line 77
4475          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__AMPacket__source(message_t *arg_0x7eb33030);
4476          //#line 67
4477          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__AMPacket__destination(message_t *arg_0x7eb35a28);
4478          //#line 92
4479          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMPacket__setDestination(message_t *arg_0x7eb335f8, am_addr_t arg_0x7eb33788);
4480          //#line 176
4481          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMPacket__setGroup(message_t *arg_0x7eb25558, am_group_t arg_0x7eb256e8);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 80  

4482          //# 47 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4483          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_1____nesc_unnamed4322 {
4484          //#line 47
4485            RfReliableMacReceiveP__1__sendAckTask = 17U
4486          };
4487          //#line 47
4488          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__1____nesc_sillytask_sendAckTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask];
4489          //#line 37
4490          message_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__m_ack_msg;
4491          
4492          static  /*inline*/  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__1__sendAck(message_t *msg);
4493          
4494          
4495          
4496          
4497          
4498          
4499          
4500          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask__runTask(void);
4501          
4502          
4503          
4504          
4505          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__AMSendAck__sendDone(message_t *msg, error_t result);
4506          
4507          
4508          
4509          
4510          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRecei
             -veP*/RfReliableMacReceiveP__1__SubReceive__receive(message_t *msg, void *payload, uint8_t len);
4511          //#line 100
4512          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_1__m_started = FALSE;
4513          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
             -*/RfReliableMacReceiveP__1__AtosControl__start(void);
4514          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4515          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourc
             -eP__2__AMResource__send(am_addr_t arg_0x7e662268, message_t *arg_0x7e662418, uint8_t arg_0x7e6625a0);
4516          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4517          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP_
             -_2__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
4518          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4519          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourc
             -eP*/AMResourceP__2__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4520          //#line 39
4521          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*
             -/AMResourceP__2__AMResource__sendDone(message_t *msg, error_t error);
4522          //# 9 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
4523          uint8_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index = 0;
4524          uint16_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[100];
4525          uint8_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[1][100];
4526          
4527          
4528          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(uint16_t 
             -addr);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 81  

4529          //#line 31
4530          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress(void);
4531          //#line 51
4532          static bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(uint16_t addr, uint8_t fie
             -ld_id, uint8_t dsn);
4533          //#line 80
4534          static  /*inline*/   error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void);
4535          //#line 92
4536          static  /*inline*/   bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(uint
             -8_t field_id, uint16_t addr, uint8_t dsn);
4537          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4538          static  error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResour
             -ceP__3__AMResource__send(am_addr_t arg_0x7e662268, message_t *arg_0x7e662418, uint8_t arg_0x7e6625a0);
4539          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4540          static  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP
             -__3__AMSend__sendDone(message_t *arg_0x7eb52248, error_t arg_0x7eb523d0);
4541          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4542          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResour
             -ceP*/AMResourceP__3__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4543          //#line 39
4544          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP
             -*/AMResourceP__3__AMResource__sendDone(message_t *msg, error_t error);
4545          //# 71 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
4546             /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )
4547          //#line 71
4548          {
4549   1        __nesc_atomic_t tmp = EA;
4550   1      
4551   1      //#line 73
4552   1        EA = 0;
4553   1        return tmp;
4554   1      }
4555          
4556             /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)
4557          //#line 77
4558          {
4559   1        EA = oldSreg;
4560   1      }
4561          
4562          //# 181 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
4563          static  /*inline*/   void SchedulerBasicP__Scheduler__init(void)
4564          {
4565   1        /* atomic removed: atomic calls only */
4566   1        {
4567   2      
4568   2      
4569   2      
4570   2      
4571   2      
4572   2      
4573   2          memset((void *)SchedulerBasicP__m_next, SchedulerBasicP__NO_TASK, sizeof SchedulerBasicP__m_next);
4574   2          SchedulerBasicP__m_head = 0;
4575   2          SchedulerBasicP__m_tail = 0;
4576   2        }
4577   1      }
4578          
4579          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
4580          #define RealMainP__Scheduler__init(void) SchedulerBasicP__Scheduler__init()
4581          //# 129 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
4582          static  /*inline*/   error_t FlashIEEEP__Init__init(void)
4583          {
4584   1        /* atomic removed: atomic calls only */
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 82  

4585   1        {
4586   2      
4587   2      
4588   2          FlashIEEEP__readFromFlash();
4589   2      
4590   2          FlashIEEEP__FlashIEEE__WriteToRegister();
4591   2          FlashIEEEP__FlashIEEE__WriteToAM();
4592   2      
4593   2          {
4594   3            unsigned char __nesc_temp = 
4595   3      //#line 140
4596   3            0;
4597   3      
4598   3      //#line 140
4599   3            return __nesc_temp;
4600   3          }
4601   2        }
4602   1      }
4603          
4604          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
4605          #define PlatformP__PlatformInit__init(void) FlashIEEEP__Init__init()
4606          //# 44 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
4607          static  /*inline*/  void uart0SetMode(void)
4608          {
4609   1        U0CSR |= 0x80u | 0x40u;
4610   1        U0UCR |= 0x2u | 0x80u;
4611   1      }
4612          
4613          //#line 8
4614          static  /*inline*/  void uart0SetBaud(uint32_t baud)
4615          {
4616   1        U0GCR = baud == 1200 ? 5 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 2400 ? 6
             - + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 4800 ? 7 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) 
             ->> CC2530_CLKCON_OSC) : baud == 9600 ? 8 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 14400 ? 
             -8 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 19200 ? 9 + ((CLKCON & (1 << CC2530_CLKCON_OSC)
             -) >> CC2530_CLKCON_OSC) : baud == 28800 ? 9 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 38400
             - ? 10 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 57600 ? 10 + ((CLKCON & (1 << CC2530_CLKCON
             -_OSC)) >> CC2530_CLKCON_OSC) : baud == 76800 ? 11 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud ==
             - 115200 ? 11 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 153600 ? 12 + ((CLKCON & (1 << CC253
             -0_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 230400 ? 12 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) 
             -: baud == 307200 ? 13 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : 0;
4617   1        U0BAUD = baud == 1200 ? 59 : baud == 2400 ? 59 : baud == 4800 ? 59 : baud == 9600 ? 59 : baud == 14400 ?
             - 216 : baud == 19200 ? 59 : baud == 28800 ? 216 : baud == 38400 ? 59 : baud == 57600 ? 216 : baud == 76800 ? 59 : baud =
             -= 115200 ? 216 : baud == 153600 ? 59 : baud == 230400 ? 216 : baud == 307200 ? 59 : 0;
4618   1      }
4619          
4620          //#line 34
4621          static  /*inline*/  void uart0PinMap(bool map)
4622          {
4623   1      
4624   1      
4625   1      
4626   1        PERCFG &= ~0x1u;
4627   1      
4628   1        P0_ALT |= 0x0Cu;
4629   1      }
4630          
4631          
4632          
4633          
4634          
4635          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 83  

4636          
4637          static  /*inline*/  void uart0Init(uint32_t baud)
4638          {
4639   1        uart0PinMap(TRUE);
4640   1        uart0SetBaud(baud);
4641   1        uart0SetMode();
4642   1      }
4643          
4644          //# 40 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
4645          static  /*inline*/  void ATOS_DEBUG_UART_INIT(void)
4646          {
4647   1        {
4648   2      //#line 42
4649   2          uart0Init(9600);
4650   2        }
4651   1      //#line 42
4652   1        ;
4653   1      }
4654          
4655          //# 52 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
4656          static  /*inline*/   error_t PlatformP__Init__init(void)
4657          //#line 52
4658          {
4659   1      
4660   1      
4661   1        if (PlatformP__clockSelect32k(0) != 0) {
4662   2            PlatformP__clockSetMainSrc(1);
4663   2            if (PlatformP__clockSelect32k(0) != 0) {
4664   3              }
4665   2          }
4666   1      
4667   1        PlatformP__clockSetMainSrc(0);
4668   1      
4669   1      
4670   1        ATOS_DEBUG_UART_INIT();
4671   1      
4672   1      
4673   1      
4674   1        {
4675   2      //#line 68
4676   2          {
4677   3      //#line 68
4678   3            P1_DIR |= 1 << 2;
4679   3      //#line 68
4680   3            P1_ALT &= ~(1 << 2);
4681   3          }
4682   2      //#line 68
4683   2          ;
4684   2      //#line 68
4685   2          {
4686   3      //#line 68
4687   3            P1_DIR |= 1 << 3;
4688   3      //#line 68
4689   3            P1_ALT &= ~(1 << 3);
4690   3          }
4691   2      //#line 68
4692   2          ;
4693   2        }
4694   1      //#line 68
4695   1        ;
4696   1      
4697   1        PlatformP__PlatformInit__init();
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 84  

4698   1      
4699   1        return 0;
4700   1      }
4701          
4702          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
4703          #define RealMainP__PlatformInit__init(void) PlatformP__Init__init()
4704          //# 51 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
4705          static  /*inline*/   error_t HalFlashP__HalFlash__write(uint32_t destination, uint8_t *source, uint16_t le
             -ngth)
4706          {
4707   1        HalFlashP__HalCC2530FlashWrite(destination, source, length);
4708   1      
4709   1        return 0;
4710   1      }
4711          
4712          //# 5 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
4713          #define FlashIEEEP__HalFlash__write(arg_0x7ea41958,arg_0x7ea41b00,arg_0x7ea41c90) HalFlashP__HalFlash__wri
             -te(arg_0x7ea41958, arg_0x7ea41b00, arg_0x7ea41c90)
4714          
4715          
4716          #define FlashIEEEP__HalFlash__erase(arg_0x7ea36170) HalFlashP__HalFlash__erase(arg_0x7ea36170)
4717          //# 44 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
4718          static  /*inline*/   error_t HalFlashP__HalFlash__read(uint8_t *destination, uint32_t source, uint16_t len
             -gth)
4719          {
4720   1        HalFlashP__HalCC2530FlashRead(destination, source, length);
4721   1      
4722   1        return 0;
4723   1      }
4724          
4725          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
4726          #define FlashIEEEP__HalFlash__read(arg_0x7ea41190,arg_0x7ea41320,arg_0x7ea414b0) HalFlashP__HalFlash__read
             -(arg_0x7ea41190, arg_0x7ea41320, arg_0x7ea414b0)
4727          //# 52 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
4728          static  /*inline*/  void FlashIEEEP__ieeeProtect(void)
4729          {
4730   1        /* atomic removed: atomic calls only */
4731   1        {
4732   2          uint8_t i;
4733   2          uint8_t tmp[0x4];
4734   2          uint8_t tmp_ieee[sizeof FlashIEEEP__m_ieee_flash];
4735   2      
4736   2      
4737   2      
4738   2      
4739   2          for (i = 0; i < sizeof FlashIEEEP__m_ieee_flash; ++i) 
4740   2            {
4741   3      
4742   3              if (FlashIEEEP__m_ieee_flash[i] != 0xFF) 
4743   3                {
4744   4                  break;
4745   4                }
4746   3            }
4747   2      
4748   2          if (i >= sizeof FlashIEEEP__m_ieee_flash) 
4749   2            {
4750   3      
4751   3              FlashIEEEP__HalFlash__read(FlashIEEEP__m_ieee_flash, 0xF800 + 0x4, sizeof FlashIEEEP__m_ieee_flash
             -);
4752   3            }
4753   2          else 
4754   2            {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 85  

4755   3      
4756   3              FlashIEEEP__HalFlash__read(tmp_ieee, 0xF800 + 0x4, sizeof tmp_ieee);
4757   3      
4758   3              for (i = 0; i < sizeof tmp_ieee; ++i) 
4759   3                {
4760   4      
4761   4      
4762   4                  if (tmp_ieee[i] != FlashIEEEP__m_ieee_flash[i]) 
4763   4                    {
4764   5                      break;
4765   5                    }
4766   4                }
4767   3      
4768   3              if (i < sizeof tmp_ieee) 
4769   3                {
4770   4      
4771   4                  FlashIEEEP__HalFlash__read(tmp, 0xF800, 0x4);
4772   4                  FlashIEEEP__HalFlash__erase(0xF800);
4773   4      
4774   4                  FlashIEEEP__HalFlash__write(0xF800, tmp, 0x4);
4775   4                  FlashIEEEP__HalFlash__write(0xF800 + 0x4, FlashIEEEP__m_ieee_flash, sizeof FlashIEEEP__m_ieee_
             -flash);
4776   4                }
4777   3            }
4778   2        }
4779   1      }
4780          
4781          //#line 228
4782          static  /*inline*/    void FlashIEEEP__ActiveMessageAddress__changed(void)
4783          {
4784   1      }
4785          
4786          //# 182 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4787          static  /*inline*/    void RfPacketP__ActiveMessageAddress__changed(void)
4788          {
4789   1        /* atomic removed: atomic calls only */
4790   1        {
4791   2          RfPacketP__m_address_saved = FALSE;
4792   2          RfPacketP__m_group_saved = FALSE;
4793   2        }
4794   1      }
4795          
4796          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4797           /*inline*/  static   void ActiveMessageAddressC__ActiveMessageAddress__changed(void){
4798   1      //#line 58
4799   1        RfPacketP__ActiveMessageAddress__changed();
4800   1      //#line 58
4801   1        FlashIEEEP__ActiveMessageAddress__changed();
4802   1      //#line 58
4803   1      }
4804          //#line 58
4805          //# 70 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
4806          static  /*inline*/    void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t myGroup, am_
             -addr_t myAddr)
4807          //#line 70
4808          {
4809   1        /* atomic removed: atomic calls only */
4810   1      //#line 71
4811   1        {
4812   2          ActiveMessageAddressC__addr = myAddr;
4813   2          ActiveMessageAddressC__group = myGroup;
4814   2        }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 86  

4815   1        ActiveMessageAddressC__ActiveMessageAddress__changed();
4816   1      }
4817          
4818          //# 43 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4819          #define FlashIEEEP__ActiveMessageAddress__setAddress(arg_0x7ea51e58,arg_0x7ea44010) ActiveMessageAddressC_
             -_ActiveMessageAddress__setAddress(arg_0x7ea51e58, arg_0x7ea44010)
4820          //# 54 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
4821          #define RealMainP__Scheduler__runNextTask(void) SchedulerBasicP__Scheduler__runNextTask()
4822          //# 276 "/usr/lib/ncc/nesc_nx.h"
4823          static   /*inline*/   uint16_t __nesc_ntoh_leuint16(const void *source)
4824          //#line 276
4825          {
4826   1        const uint8_t *base = source;
4827   1      
4828   1      //#line 278
4829   1        return ((uint16_t )base[1] << 8) | base[0];
4830   1      }
4831          
4832          //# 49 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4833          static  /*inline*/   am_addr_t RfPacketP__AMPacket__destination(message_t *amsg)
4834          {
4835   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest);
4836   1      }
4837          
4838          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4839          #define RfReliableMacReceiveP__1__AMPacket__destination(arg_0x7eb35a28) RfPacketP__AMPacket__destination(a
             -rg_0x7eb35a28)
4840          //# 251 "/usr/lib/ncc/nesc_nx.h"
4841          static   /*inline*/   uint8_t __nesc_hton_leuint8(void *target, uint8_t value)
4842          //#line 251
4843          {
4844   1        uint8_t *base = target;
4845   1      
4846   1      //#line 253
4847   1        base[0] = value;
4848   1        return value;
4849   1      }
4850          
4851          //#line 240
4852          static   /*inline*/   uint8_t __nesc_hton_uint8(void *target, uint8_t value)
4853          //#line 240
4854          {
4855   1        uint8_t *base = target;
4856   1      
4857   1      //#line 242
4858   1        base[0] = value;
4859   1        return value;
4860   1      }
4861          
4862          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4863          #define AMResourceP__2__AMResource__send(arg_0x7e662268,arg_0x7e662418,arg_0x7e6625a0) AMResourceCenterP__
             -AMResource__send(AMResourceC__3__AM_RESOURCE_ID, arg_0x7e662268, arg_0x7e662418, arg_0x7e6625a0)
4864          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4865          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourc
             -eP*/AMResourceP__2__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
4866          {
4867   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
4868   2          {
4869   3            __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 2);
4870   3            __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 241);
4871   3          }
4872   2      //#line 17
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 87  

4873   2          __nesc_atomic_end(__nesc_atomic); }
4874   1      
4875   1        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__
             -AMResource__send(addr, msg, len);
4876   1      }
4877          
4878          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4879          #define RfReliableMacReceiveP__1__AMSendAck__send(arg_0x7eb54ee8,arg_0x7eb530a8,arg_0x7eb53230) AMResource
             -P__2__AMSend__send(arg_0x7eb54ee8, arg_0x7eb530a8, arg_0x7eb53230)
4880          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4881          static  /*inline*/  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__1__sendAck(message_t *msg)
4882          {
4883   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__1__AMSendAck__send(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__1__AMPacket__destination(msg), msg, sizeof(rf_ack_t )) != 0) 
4884   1          {
4885   2          }
4886   1      }
4887          
4888          
4889          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask__runTask(void)
4890          {
4891   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__1_
             -_sendAck(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack
             -_msg);
4892   1      }
4893          
4894          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4895          static  /*inline*/   void RfPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len)
4896          {
4897   1        __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length, len + (sizeof(rf_header_t ) 
             -- 1 + sizeof(uint16_t )));
4898   1      }
4899          
4900          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4901          #define AMResourceCenterP__Packet__setPayloadLength(arg_0x7eb21ad8,arg_0x7eb21c60) RfPacketP__Packet__setP
             -ayloadLength(arg_0x7eb21ad8, arg_0x7eb21c60)
4902          //# 281 "/usr/lib/ncc/nesc_nx.h"
4903          static   /*inline*/   uint16_t __nesc_hton_leuint16(void *target, uint16_t value)
4904          //#line 281
4905          {
4906   1        uint8_t *base = target;
4907   1      
4908   1      //#line 283
4909   1        base[0] = value;
4910   1        base[1] = value >> 8;
4911   1        return value;
4912   1      }
4913          
4914          //# 91 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4915          static  /*inline*/   void RfPacketP__AMPacket__setGroup(message_t *amsg, am_group_t grp)
4916          {
4917   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->destpan, grp);
4918   1      }
4919          
4920          //# 176 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4921          #define AMResourceCenterP__AMPacket__setGroup(arg_0x7eb25558,arg_0x7eb256e8) RfPacketP__AMPacket__setGroup
             -(arg_0x7eb25558, arg_0x7eb256e8)
4922          //# 82 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
4923          static  /*inline*/    am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 88  

4924          //#line 82
4925          {
4926   1        am_group_t myGroup;
4927   1      
4928   1        /* atomic removed: atomic calls only */
4929   1      //#line 84
4930   1        myGroup = ActiveMessageAddressC__group;
4931   1        return myGroup;
4932   1      }
4933          
4934          //# 53 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4935          #define RfPacketP__ActiveMessageAddress__amGroup(void) ActiveMessageAddressC__ActiveMessageAddress__amGrou
             -p()
4936          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
4937          #define RfPacketP__WatchDog__resetCpu(void) WatchDogP__WatchDog__resetCpu()
4938          //# 96 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4939          static  /*inline*/   am_group_t RfPacketP__AMPacket__localGroup(void)
4940          {
4941   1        /* atomic removed: atomic calls only */
4942   1        {
4943   2          if (!RfPacketP__m_group_saved) 
4944   2            {
4945   3              RfPacketP__m_group = RfPacketP__ActiveMessageAddress__amGroup();
4946   3              RfPacketP__m_group_saved = TRUE;
4947   3            }
4948   2      
4949   2      
4950   2          if (RfPacketP__m_group != RfPacketP__ActiveMessageAddress__amGroup()) 
4951   2            {
4952   3      
4953   3      
4954   3              RfPacketP__WatchDog__resetCpu();
4955   3            }
4956   2        }
4957   1      
4958   1      
4959   1        return RfPacketP__ActiveMessageAddress__amGroup();
4960   1      }
4961          
4962          //# 184 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4963          #define AMResourceCenterP__AMPacket__localGroup(void) RfPacketP__AMPacket__localGroup()
4964          //# 59 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4965          static  /*inline*/   void RfPacketP__AMPacket__setDestination(message_t *amsg, am_addr_t addr)
4966          {
4967   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest, addr);
4968   1      }
4969          
4970          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4971          #define AMResourceCenterP__AMPacket__setDestination(arg_0x7eb335f8,arg_0x7eb33788) RfPacketP__AMPacket__se
             -tDestination(arg_0x7eb335f8, arg_0x7eb33788)
4972          //# 64 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4973          static  /*inline*/   void RfPacketP__AMPacket__setSource(message_t *amsg, am_addr_t addr)
4974          {
4975   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->src, addr);
4976   1      }
4977          
4978          //# 110 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4979          #define AMResourceCenterP__AMPacket__setSource(arg_0x7eb33e88,arg_0x7eb32030) RfPacketP__AMPacket__setSour
             -ce(arg_0x7eb33e88, arg_0x7eb32030)
4980          //#line 57
4981          #define AMResourceCenterP__AMPacket__address(void) RfPacketP__AMPacket__address()
4982          //# 61 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 89  

4983          static  /*inline*/    am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void)
4984          //#line 61
4985          {
4986   1        return ActiveMessageAddressC__amAddress();
4987   1      }
4988          
4989          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4990          #define RfPacketP__ActiveMessageAddress__amAddress(void) ActiveMessageAddressC__ActiveMessageAddress__amAd
             -dress()
4991          //# 235 "/usr/lib/ncc/nesc_nx.h"
4992          static   /*inline*/   uint8_t __nesc_ntoh_uint8(const void *source)
4993          //#line 235
4994          {
4995   1        const uint8_t *base = source;
4996   1      
4997   1      //#line 237
4998   1        return base[0];
4999   1      }
5000          
5001          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5002          #define RfMacBaseSendP__0__sendNext__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseSendP__0
             -__sendNext)
5003          //# 31 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
5004          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(vo
             -id)
5005          {
5006   1        /* atomic removed: atomic calls only */
5007   1        {
5008   2          {
5009   3            unsigned char __nesc_temp = 
5010   3      //#line 35
5011   3            4;
5012   3      
5013   3      //#line 35
5014   3            return __nesc_temp;
5015   3          }
5016   2        }
5017   1      }
5018          
5019          //#line 23
5020          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void)
5021          {
5022   1        /* atomic removed: atomic calls only */
5023   1        {
5024   2          {
5025   3            unsigned char __nesc_temp = 
5026   3      //#line 27
5027   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size;
5028   3      
5029   3      //#line 27
5030   3            return __nesc_temp;
5031   3          }
5032   2        }
5033   1      }
5034          
5035          //#line 63
5036          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*
             -AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t newVal)
5037          {
5038   1        /* atomic removed: atomic calls only */
5039   1        {
5040   2          if (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size() < /*AMResourceCenterC.Rf
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 90  

             -MacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize()) 
5041   2            {
5042   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[/*AMResourceCenterC.RfMacBaseSendC
             -.QueueExC*/QueueExC__0__tail] = newVal;
5043   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail++;
5044   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail %= 4;
5045   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size++;
5046   3              {
5047   4                unsigned char __nesc_temp = 
5048   4      //#line 73
5049   4                0;
5050   4      
5051   4      //#line 73
5052   4                return __nesc_temp;
5053   4              }
5054   3            }
5055   2          else {
5056   3              {
5057   4                unsigned char __nesc_temp = 
5058   4      //#line 77
5059   4                FAIL;
5060   4      
5061   4      //#line 77
5062   4                return __nesc_temp;
5063   4              }
5064   3            }
5065   2        }
5066   1      }
5067          
5068          //# 49 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
5069          #define RfMacBaseSendP__0__SendQueue__enqueue(arg_0x7e61b3e8) QueueExC__0__QueueEx__enqueue(arg_0x7e61b3e8
             -)
5070          //#line 60
5071          #define RfMacBaseSendP__0__SendQueue__element(arg_0x7e61b960) QueueExC__0__QueueEx__element(arg_0x7e61b960
             -)
5072          //#line 17
5073          #define RfMacBaseSendP__0__SendQueue__size(void) QueueExC__0__QueueEx__size()
5074          //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
5075          static  /*inline*/  int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessa
             -ge(uint8_t resource_id)
5076          {
5077   1        /* atomic removed: atomic calls only */
5078   1        {
5079   2          uint8_t i;
5080   2          uint8_t size = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__size()
             -;
5081   2      
5082   2      //#line 80
5083   2          for (i = 0; i < size; ++i) 
5084   2            {
5085   3              message_t *msg = (message_t *)/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0
             -__SendQueue__element(i);
5086   3      
5087   3      //#line 83
5088   3              if (msg != (void *)0 && __nesc_ntoh_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->re
             -source_id) == resource_id) 
5089   3                {
5090   4                  {
5091   5                    int __nesc_temp = 
5092   5      //#line 85
5093   5                    i;
5094   5      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 91  

5095   5      //#line 85
5096   5                    return __nesc_temp;
5097   5                  }
5098   4                }
5099   3            }
5100   2          {
5101   3            int __nesc_temp = 
5102   3      //#line 89
5103   3            -1;
5104   3      
5105   3      //#line 89
5106   3            return __nesc_temp;
5107   3          }
5108   2        }
5109   1      }
5110          
5111          //#line 93
5112          static  /*inline*/  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueM
             -essage(message_t *msg)
5113          {
5114   1        /* atomic removed: atomic calls only */
5115   1        {
5116   2          if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessage(__nesc_ntoh_u
             -int8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id)) >= 0) 
5117   2            {
5118   3              {
5119   4                unsigned char __nesc_temp = 
5120   4      //#line 99
5121   4                ERR_MAC_SEND_RESOURCE_EXISTS;
5122   4      
5123   4      //#line 99
5124   4                return __nesc_temp;
5125   4              }
5126   3            }
5127   2      
5128   2      
5129   2          if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__enqueue(msg) != 0
             -) 
5130   2            {
5131   3              {
5132   4                unsigned char __nesc_temp = 
5133   4      //#line 106
5134   4                ERR_MAC_SEND_RESOURCE_FULL;
5135   4      
5136   4      //#line 106
5137   4                return __nesc_temp;
5138   4              }
5139   3            }
5140   2      
5141   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
5142   2      
5143   2          {
5144   3            unsigned char __nesc_temp = 
5145   3      //#line 112
5146   3            0;
5147   3      
5148   3      //#line 112
5149   3            return __nesc_temp;
5150   3          }
5151   2        }
5152   1      }
5153          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 92  

5154          //#line 139
5155          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSen
             -d__send(message_t *msg, uint8_t len)
5156          {
5157   1        /* atomic removed: atomic calls only */
5158   1      
5159   1        {
5160   2      
5161   2      
5162   2      
5163   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->dsn, ++/*AMResourceCenterC.RfMacBa
             -seSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn);
5164   2      
5165   2      
5166   2      
5167   2      
5168   2      
5169   2          {
5170   3            unsigned char __nesc_temp = 
5171   3      //#line 153
5172   3            /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueMessage(msg);
5173   3      
5174   3      //#line 153
5175   3            return __nesc_temp;
5176   3          }
5177   2        }
5178   1      }
5179          
5180          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5181          #define AMResourceCenterP__CoreSend__send(arg_0x7e6412e8,arg_0x7e641470) RfMacBaseSendP__0__CoreSend__send
             -(arg_0x7e6412e8, arg_0x7e641470)
5182          //# 108 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
5183          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id)
5184          {
5185   1      
5186   1      
5187   1      
5188   1      
5189   1        uint8_t i = SchedulerBasicP__m_head % SchedulerBasicP__NUM_TASKS;
5190   1      
5191   1        while (i != SchedulerBasicP__m_tail) 
5192   1          {
5193   2            if (SchedulerBasicP__m_next[i] == id) 
5194   2              {
5195   3                return TRUE;
5196   3              }
5197   2      
5198   2            i = (i + 1) % SchedulerBasicP__NUM_TASKS;
5199   2            SchedulerBasicP__m_tail = SchedulerBasicP__m_tail % SchedulerBasicP__NUM_TASKS;
5200   2          }
5201   1      
5202   1        return FALSE;
5203   1      }
5204          
5205          
5206          
5207          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id)
5208          {
5209   1        /* atomic removed: atomic calls only */
5210   1      //#line 156
5211   1        {
5212   2          id = id % SchedulerBasicP__NUM_TASKS;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 93  

5213   2      
5214   2          if (!SchedulerBasicP__isWaiting(id)) 
5215   2            {
5216   3              if ((SchedulerBasicP__m_tail + 1) % SchedulerBasicP__NUM_TASKS == SchedulerBasicP__m_head) 
5217   3                {
5218   4      
5219   4                  {
5220   5                    unsigned char __nesc_temp = 
5221   5      //#line 164
5222   5                    FALSE;
5223   5      
5224   5      //#line 164
5225   5                    return __nesc_temp;
5226   5                  }
5227   4                }
5228   3              SchedulerBasicP__m_tail = SchedulerBasicP__m_tail % SchedulerBasicP__NUM_TASKS;
5229   3              SchedulerBasicP__m_next[SchedulerBasicP__m_tail] = id;
5230   3              SchedulerBasicP__m_tail = (SchedulerBasicP__m_tail + 1) % SchedulerBasicP__NUM_TASKS;
5231   3              {
5232   4                unsigned char __nesc_temp = 
5233   4      //#line 170
5234   4                TRUE;
5235   4      
5236   4      //#line 170
5237   4                return __nesc_temp;
5238   4              }
5239   3            }
5240   2          else {
5241   3              {
5242   4                unsigned char __nesc_temp = 
5243   4      //#line 174
5244   4                FALSE;
5245   4      
5246   4      //#line 174
5247   4                return __nesc_temp;
5248   4              }
5249   3            }
5250   2        }
5251   1      }
5252          
5253          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5254          #define RfReliableMacRetrySendP__1__resendTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfReli
             -ableMacRetrySendP__1__resendTask)
5255          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
5256          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__SubAMSend__sendDone(message_t *msg, error_t error)
5257          {
5258   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySend
             -P__1__m_sending) 
5259   1          {
5260   2            if (error == 0) 
5261   2              {
5262   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__signalDone(msg, error);
5263   3              }
5264   2            else 
5265   2              {
5266   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__resendTask__postTask();
5267   3              }
5268   2          }
5269   1      }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 94  

5270          
5271          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5272          #define RfReliableMacSendP__1__AMSend__sendDone(arg_0x7eb52248,arg_0x7eb523d0) RfReliableMacRetrySendP__1_
             -_SubAMSend__sendDone(arg_0x7eb52248, arg_0x7eb523d0)
5273          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5274          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__signalDoneTask__runTask(void)
5275          {
5276   1        message_t *msg;
5277   1        error_t result;
5278   1      
5279   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5280   2          {
5281   3            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__1__m_sending) 
5282   3              {
5283   4                {
5284   5      //#line 40
5285   5                  __nesc_atomic_end(__nesc_atomic); 
5286   5      //#line 40
5287   5                  return;
5288   5                }
5289   4              }
5290   3            msg = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg;
5291   3            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__m_result;
5292   3          }
5293   2      //#line 45
5294   2          __nesc_atomic_end(__nesc_atomic); }
5295   1      
5296   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMa
             -cSendP__1__AMSend__sendDone(msg, result);
5297   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5298   2      //#line 48
5299   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_sending = FALSE;
5300   2      //#line 48
5301   2          __nesc_atomic_end(__nesc_atomic); }
5302   1      }
5303          
5304          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5305          #define AtosNetStdP__sendDoneCheck__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__sendD
             -oneCheck)
5306          //# 368 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5307          static  /*inline*/   void AtosNetStdP__AMSend__sendDone(message_t *msg, error_t error)
5308          {
5309   1        if (error != 0) 
5310   1          {
5311   2            AtosNetStdP__sendDoneCheck__postTask();
5312   2          }
5313   1      }
5314          
5315          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5316          #define RfReliableMacRetrySendP__1__AMSend__sendDone(arg_0x7eb52248,arg_0x7eb523d0) AtosNetStdP__AMSend__s
             -endDone(arg_0x7eb52248, arg_0x7eb523d0)
5317          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
5318          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask__runTask(void)
5319          {
5320   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5321   2          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 95  

5322   3            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending) 
5323   3              {
5324   4                {
5325   5      //#line 54
5326   5                  __nesc_atomic_end(__nesc_atomic); 
5327   5      //#line 54
5328   5                  return;
5329   5                }
5330   4              }
5331   3            if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__m_retry_times++ < 20) 
5332   3              {
5333   4                if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__doSend(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__m_msg) != 0) 
5334   4                  {
5335   5                    ;
5336   5                    /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__resendTask__postTask();
5337   5                  }
5338   4              }
5339   3            else 
5340   3              {
5341   4      
5342   4                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__m_msg, ERR_MAC_RETRY_MAX);
5343   4              }
5344   3          }
5345   2      //#line 70
5346   2          __nesc_atomic_end(__nesc_atomic); }
5347   1      }
5348          
5349          //# 257 "/usr/lib/ncc/nesc_nx.h"
5350          static   /*inline*/   int8_t __nesc_hton_int8(void *target, int8_t value)
5351          //#line 257
5352          {
5353   1      //#line 257
5354   1        __nesc_hton_uint8(target, value);
5355   1      //#line 257
5356   1        return value;
5357   1      }
5358          
5359          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5360          #define RfReliableMacSendP__1__TimeoutTimer__startOneShot(arg_0x7eb11d58) VirtualizeTimerC__0__Timer__star
             -tOneShot(4U, arg_0x7eb11d58)
5361          //# 246 "/usr/lib/ncc/nesc_nx.h"
5362          static   /*inline*/   uint8_t __nesc_ntoh_leuint8(const void *source)
5363          //#line 246
5364          {
5365   1        const uint8_t *base = source;
5366   1      
5367   1      //#line 248
5368   1        return base[0];
5369   1      }
5370          
5371          //# 124 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
5372          static  /*inline*/   uint8_t RfPacketP__Packet__payloadLength(message_t *msg)
5373          {
5374   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length) - (sizeof(rf_header_t
             - ) - 1 + sizeof(uint16_t ));
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 96  

5375   1      }
5376          
5377          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5378          #define RfReliableMacSendP__1__SubPacket__payloadLength(arg_0x7eb21468) RfPacketP__Packet__payloadLength(a
             -rg_0x7eb21468)
5379          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
5380          #define AMResourceP__1__AMResource__send(arg_0x7e662268,arg_0x7e662418,arg_0x7e6625a0) AMResourceCenterP__
             -AMResource__send(AMResourceC__2__AM_RESOURCE_ID, arg_0x7e662268, arg_0x7e662418, arg_0x7e6625a0)
5381          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5382          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMRes
             -ourceC.AMResourceP*/AMResourceP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5383          {
5384   1        /* atomic removed: atomic calls only */
5385   1        {
5386   2          __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 1);
5387   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 240U);
5388   2        }
5389   1      
5390   1        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/
             -AMResourceP__1__AMResource__send(addr, msg, len);
5391   1      }
5392          
5393          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5394          #define RfReliableMacSendP__1__SubAMSend__send(arg_0x7eb54ee8,arg_0x7eb530a8,arg_0x7eb53230) AMResourceP__
             -1__AMSend__send(arg_0x7eb54ee8, arg_0x7eb530a8, arg_0x7eb53230)
5395          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5396          #define RfReliableMacPacketP__SubPacket__getPayload(arg_0x7eb20840,arg_0x7eb209e8) RfPacketP__Packet__getP
             -ayload(arg_0x7eb20840, arg_0x7eb209e8)
5397          //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5398          static  /*inline*/   void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *msg)
5399          {
5400   1        return RfReliableMacPacketP__SubPacket__getPayload(msg, (void *)0);
5401   1      }
5402          
5403          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5404          #define RfReliableMacSendP__1__PacketEx__getPacketHeader(arg_0x7e714ca0) RfReliableMacPacketP__PacketEx__g
             -etPacketHeader(arg_0x7e714ca0)
5405          //# 89 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5406          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5407          {
5408   1        error_t result;
5409   1      
5410   1        /* atomic removed: atomic calls only */
5411   1        {
5412   2          rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfR
             -eliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(msg);
5413   2          rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
5414   2      
5415   2      
5416   2      
5417   2          if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending) 
5418   2            {
5419   3              {
5420   4                unsigned char __nesc_temp = 
5421   4      //#line 102
5422   4                FAIL;
5423   4      
5424   4      //#line 102
5425   4                return __nesc_temp;
5426   4              }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 97  

5427   3            }
5428   2          header->ack_req = addr != 0xFFFF;
5429   2      
5430   2          __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
5431   2      
5432   2          result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__SubAMSend__send(addr, msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC
             -.RfReliableMacSendP*/RfReliableMacSendP__1__SubPacket__payloadLength(msg));
5433   2      
5434   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__TimeoutTimer__startOneShot(10000);
5435   2      
5436   2          if (result == 0) 
5437   2            {
5438   3              /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_msg = msg;
5439   3              /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending = TRUE;
5440   3            }
5441   2      
5442   2          {
5443   3            unsigned char __nesc_temp = 
5444   3      //#line 119
5445   3            result;
5446   3      
5447   3      //#line 119
5448   3            return __nesc_temp;
5449   3          }
5450   2        }
5451   1      }
5452          
5453          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5454          #define RfReliableMacRetrySendP__1__SubAMSend__send(arg_0x7eb54ee8,arg_0x7eb530a8,arg_0x7eb53230) RfReliab
             -leMacSendP__1__AMSend__send(arg_0x7eb54ee8, arg_0x7eb530a8, arg_0x7eb53230)
5455          //# 46 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
5456          static  /*inline*/  void ATOS_DEBUG_UART_PUTC(char c)
5457          {
5458   1        if (c == '\n') 
5459   1          {
5460   2            {
5461   3      //#line 50
5462   3              uart0PutChar('\r');
5463   3            }
5464   2      //#line 50
5465   2            ;
5466   2          }
5467   1        {
5468   2      //#line 52
5469   2          uart0PutChar(c);
5470   2        }
5471   1      //#line 52
5472   1        ;
5473   1      }
5474          
5475          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5476          #define VirtualizeTimerC__0__updateFromTimer__postTask(void) SchedulerBasicP__TaskBasic__postTask(Virtuali
             -zeTimerC__0__updateFromTimer)
5477          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5478          #define TransformCounterC__0__CounterFrom__get(void) HplCC2530Timer1P__0__Counter__get()
5479          //# 327 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
5480          static  /*inline*/    bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPe
             -nding(void)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 98  

5481          {
5482   1        /* atomic removed: atomic calls only */
5483   1      //#line 329
5484   1        {
5485   2          unsigned char __nesc_temp = 
5486   2      //#line 329
5487   2          T1STAT & CC2530_T1_OVFIF;
5488   2      
5489   2      //#line 329
5490   2          return __nesc_temp;
5491   2        }
5492   1      }
5493          
5494          //# 60 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5495          #define TransformCounterC__0__CounterFrom__isOverflowPending(void) HplCC2530Timer1P__0__Counter__isOverflo
             -wPending()
5496          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5497          #define RfReliableMacRetrySendP__1__AMPacket__destination(arg_0x7eb35a28) RfPacketP__AMPacket__destination
             -(arg_0x7eb35a28)
5498          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5499          #define RfReliableMacPacketP__SubPacket__payloadLength(arg_0x7eb21468) RfPacketP__Packet__payloadLength(ar
             -g_0x7eb21468)
5500          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5501          static  /*inline*/   uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *msg)
5502          {
5503   1        return RfReliableMacPacketP__SubPacket__payloadLength(msg) - sizeof(rf_rmac_header_t );
5504   1      }
5505          
5506          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5507          #define RfReliableMacRetrySendP__1__Packet__payloadLength(arg_0x7eb21468) RfReliableMacPacketP__Packet__pa
             -yloadLength(arg_0x7eb21468)
5508          //# 57 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5509          #define AtosNetStdP__AMPacket__address(void) RfPacketP__AMPacket__address()
5510          //# 128 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5511          static  /*inline*/  void AtosNetStdP__traceEnd(message_t *msg, anstd_trace_t *trace, int index)
5512          {
5513   1        trace->_data_type = ANSTD_DATA_TYPE_TRACE_ACK;
5514   1        AtosNetStdP__traceBackward(msg, (anstd_trace_ack_t *)trace, index);
5515   1      }
5516          
5517          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5518          #define AtosNetStdP__Packet__getPayload(arg_0x7eb20840,arg_0x7eb209e8) RfReliableMacPacketP__Packet__getPa
             -yload(arg_0x7eb20840, arg_0x7eb209e8)
5519          //# 350 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5520          static  /*inline*/   void AtosNetStdP__sendDoneCheck__runTask(void)
5521          {
5522   1        anstd_header_t *header = (anstd_header_t *)AtosNetStdP__Packet__getPayload(&AtosNetStdP__m_send_msg, (vo
             -id *)0);
5523   1      
5524   1        if (header->_data_type == ANSTD_DATA_TYPE_TRACE) 
5525   1          {
5526   2            anstd_trace_t *trace = (anstd_trace_t *)header;
5527   2            int index = AtosNetStdP__indexOfTraceItem(trace, AtosNetStdP__AMPacket__address());
5528   2      
5529   2      //#line 358
5530   2            AtosNetStdP__traceEnd(&AtosNetStdP__m_send_msg, trace, index);
5531   2          }
5532   1        else {
5533   2      //#line 360
5534   2          if (header->_data_type == ANSTD_DATA_TYPE_TRACE_ACK) 
5535   2            {
5536   3              anstd_trace_ack_t *trace_ack = (anstd_trace_ack_t *)header;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 99  

5537   3              int index = AtosNetStdP__indexOfTraceItem(trace_ack, AtosNetStdP__AMPacket__address());
5538   3      
5539   3      //#line 364
5540   3              AtosNetStdP__traceBackward(&AtosNetStdP__m_send_msg, trace_ack, index);
5541   3            }
5542   2          }
5543   1      }
5544          
5545          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5546          #define RfReliableMacRetrySendP__1__PacketEx__getPacketHeader(arg_0x7e714ca0) RfReliableMacPacketP__Packet
             -Ex__getPacketHeader(arg_0x7e714ca0)
5547          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5548          #define RfReliableMacRetrySendP__1__AMPacket__setDestination(arg_0x7eb335f8,arg_0x7eb33788) RfPacketP__AMP
             -acket__setDestination(arg_0x7eb335f8, arg_0x7eb33788)
5549          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5550          #define RfReliableMacPacketP__SubPacket__setPayloadLength(arg_0x7eb21ad8,arg_0x7eb21c60) RfPacketP__Packet
             -__setPayloadLength(arg_0x7eb21ad8, arg_0x7eb21c60)
5551          //# 25 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5552          static  /*inline*/   void RfReliableMacPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len)
5553          {
5554   1        RfReliableMacPacketP__SubPacket__setPayloadLength(msg, len + sizeof(rf_rmac_header_t ));
5555   1      }
5556          
5557          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5558          #define RfReliableMacRetrySendP__1__Packet__setPayloadLength(arg_0x7eb21ad8,arg_0x7eb21c60) RfReliableMacP
             -acketP__Packet__setPayloadLength(arg_0x7eb21ad8, arg_0x7eb21c60)
5559          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5560          #define AtosNetStdP__AMSend__send(arg_0x7eb54ee8,arg_0x7eb530a8,arg_0x7eb53230) RfReliableMacRetrySendP__1
             -__AMSend__send(arg_0x7eb54ee8, arg_0x7eb530a8, arg_0x7eb53230)
5561          //# 378 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5562          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *statu
             -s)
5563          {
5564   1      }
5565          
5566          //# 12 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
5567          #define AtosNetStdP__AtosNetStd__beforeNodeStatusUp(arg_0x7e3771e0) AtosNetStdP__AtosNetStd__default__befo
             -reNodeStatusUp(arg_0x7e3771e0)
5568          //# 161 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
5569          static  /*inline*/   void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *ieee)
5570          {
5571   1        memcpy(ieee, FlashIEEEP__m_ieee, sizeof FlashIEEEP__m_ieee);
5572   1      }
5573          
5574          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
5575          #define AtosNetStdP__FlashIEEE__GetIEEE(arg_0x7ea60f08) FlashIEEEP__FlashIEEE__GetIEEE(arg_0x7ea60f08)
5576          //# 143 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
5577          static  /*inline*/   uint8_t RfConfigP__RfConfig__getChannel(void)
5578          {
5579   1        return RfConfigP__m_channel;
5580   1      }
5581          
5582          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
5583          #define AtosNetStdP__RfConfig__getChannel(void) RfConfigP__RfConfig__getChannel()
5584          //# 241 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5585          static  /*inline*/   error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t address)
5586          {
5587   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5588   2          {
5589   3            anstd_node_status_t *status = (anstd_node_status_t *)AtosNetStdP__Packet__getPayload(&AtosNetStdP__m
             -_send_msg, (void *)0);
5590   3      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 100 

5591   3      //#line 246
5592   3            status->_data_type = ANSTD_DATA_TYPE_NODE_STATUS_UP;
5593   3            status->device_type = ATP_STD_EQUIPMENT_TYPE_NODE;
5594   3            status->industry_code = 0x00;
5595   3            status->application_code = 0x00;
5596   3      
5597   3            status->rf_channel = AtosNetStdP__RfConfig__getChannel();
5598   3      
5599   3            AtosNetStdP__FlashIEEE__GetIEEE(status->ieee);
5600   3      
5601   3            status->node_status = AtosNetStdP__m_node_status++;
5602   3      
5603   3            AtosNetStdP__AtosNetStd__beforeNodeStatusUp(status);
5604   3      
5605   3            if (AtosNetStdP__m_node_status == 0) 
5606   3              {
5607   4                AtosNetStdP__m_node_status = 1;
5608   4              }
5609   3      
5610   3            {
5611   4              unsigned char __nesc_temp = 
5612   4      //#line 264
5613   4              AtosNetStdP__AMSend__send(address, &AtosNetStdP__m_send_msg, sizeof(anstd_node_status_t ));
5614   4      
5615   4              {
5616   5      //#line 264
5617   5                __nesc_atomic_end(__nesc_atomic); 
5618   5      //#line 264
5619   5                return __nesc_temp;
5620   5              }
5621   4            }
5622   3          }
5623   2      //#line 267
5624   2          __nesc_atomic_end(__nesc_atomic); }
5625   1      }
5626          
5627          //#line 59
5628          static  /*inline*/   void AtosNetStdP__nodeStatusUpTask__runTask(void)
5629          {
5630   1        AtosNetStdP__AtosNetStd__sendNodeStatusUp(AtosNetStdP__m_ack_addr);
5631   1      }
5632          
5633          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5634          #define AtosNetStdP__RebootTimer__startPeriodic(arg_0x7eb11788) VirtualizeTimerC__0__Timer__startPeriodic(
             -5U, arg_0x7eb11788)
5635          //# 54 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5636          static  /*inline*/   void AtosNetStdP__rebootTask__runTask(void)
5637          {
5638   1        AtosNetStdP__RebootTimer__startPeriodic(500);
5639   1      }
5640          
5641          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5642          #define RfReliableMacReceiveP__0__AMPacket__destination(arg_0x7eb35a28) RfPacketP__AMPacket__destination(a
             -rg_0x7eb35a28)
5643          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
5644          #define AMResourceP__3__AMResource__send(arg_0x7e662268,arg_0x7e662418,arg_0x7e6625a0) AMResourceCenterP__
             -AMResource__send(AMResourceC__1__AM_RESOURCE_ID, arg_0x7e662268, arg_0x7e662418, arg_0x7e6625a0)
5645          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5646          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResour
             -ceP*/AMResourceP__3__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5647          {
5648   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 101 

5649   2          {
5650   3            __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 3);
5651   3            __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 124);
5652   3          }
5653   2      //#line 17
5654   2          __nesc_atomic_end(__nesc_atomic); }
5655   1      
5656   1        return /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3_
             -_AMResource__send(addr, msg, len);
5657   1      }
5658          
5659          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5660          #define RfReliableMacReceiveP__0__AMSendAck__send(arg_0x7eb54ee8,arg_0x7eb530a8,arg_0x7eb53230) AMResource
             -P__3__AMSend__send(arg_0x7eb54ee8, arg_0x7eb530a8, arg_0x7eb53230)
5661          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5662          static  /*inline*/  void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__0__sendAck(message_t *msg)
5663          {
5664   1        if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__0__AMSendAck__send(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__AMPacket__destination(msg), msg, sizeof(rf_ack_t )) != 0) 
5665   1          {
5666   2          }
5667   1      }
5668          
5669          
5670          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/
             -RfReliableMacReceiveP__0__sendAckTask__runTask(void)
5671          {
5672   1        /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0
             -__sendAck(&/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0__m_a
             -ck_msg);
5673   1      }
5674          
5675          //# 91 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
5676          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txGo(void)
5677          {
5678   1        uint32_t i = 0;
5679   1        error_t result = FAIL;
5680   1      
5681   1      
5682   1        RFST = 0xE9;
5683   1      
5684   1      
5685   1        while (i++ < 15000) 
5686   1          {
5687   2            if (RFIRQF1 & (1 << 1)) 
5688   2              {
5689   3                result = 0;
5690   3                break;
5691   3              }
5692   2          }
5693   1      
5694   1      
5695   1        do {
5696   2      //#line 110
5697   2            S1CON = 0x00;
5698   2      //#line 110
5699   2            RFIRQF1 = ~(1 << 1);
5700   2          }
5701   1        while (
5702   1      //#line 110
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 102 

5703   1        110 == -1);
5704   1      
5705   1        return result;
5706   1      }
5707          
5708          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
5709          #define RfMacBaseCsmaP__RfHardwareTx__txGo(void) RfHardwareTxP__RfHardwareTx__txGo()
5710          //# 105 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5711          static  /*inline*/   void RfMacBaseCsmaP__doGo__runTask(void)
5712          {
5713   1        error_t result = RfMacBaseCsmaP__RfHardwareTx__txGo();
5714   1      
5715   1        if (RfMacBaseCsmaP__m_this_delay > 90) 
5716   1          {
5717   2            RfMacBaseCsmaP__m_congestion_delay = 90;
5718   2          }
5719   1        else 
5720   1          {
5721   2            if (RfMacBaseCsmaP__m_this_delay > RfMacBaseCsmaP__m_congestion_delay) 
5722   2              {
5723   3                RfMacBaseCsmaP__m_congestion_delay = (RfMacBaseCsmaP__m_this_delay + RfMacBaseCsmaP__m_congestio
             -n_delay) / 2;
5724   3              }
5725   2            else 
5726   2              {
5727   3                RfMacBaseCsmaP__m_congestion_delay = RfMacBaseCsmaP__m_this_delay;
5728   3              }
5729   2          }
5730   1      
5731   1        if (result != 0) 
5732   1          {
5733   2            RfMacBaseCsmaP__signalDone(result);
5734   2          }
5735   1        else 
5736   1          {
5737   2            RfMacBaseCsmaP__signalDone(0);
5738   2          }
5739   1      }
5740          
5741          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5742          #define RfMacBaseCsmaP__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseCsmaP
             -__signalDoneTask)
5743          //# 70 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
5744          static  /*inline*/   void AMResourceCenterP__CoreSend__sendDone(message_t *msg, error_t result)
5745          {
5746   1        AMResourceCenterP__AMResource__sendDone(__nesc_ntoh_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta
             -_data)->resource_id), msg, result);
5747   1      }
5748          
5749          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5750          #define RfMacBaseSendP__0__CoreSend__sendDone(arg_0x7e641dd8,arg_0x7e640010) AMResourceCenterP__CoreSend__
             -sendDone(arg_0x7e641dd8, arg_0x7e640010)
5751          //# 117 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
5752          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSen
             -d__sendDone(message_t *msg, error_t result)
5753          {
5754   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5755   2          {
5756   3            if (!/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending) {
5757   4              {
5758   5      //#line 121
5759   5                __nesc_atomic_end(__nesc_atomic); 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 103 

5760   5      //#line 121
5761   5                return;
5762   5              }
5763   4              }
5764   3          }
5765   2      //#line 124
5766   2          __nesc_atomic_end(__nesc_atomic); }
5767   1        /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(msg, result);
5768   1      
5769   1        if (result != 0) 
5770   1          {
5771   2            {
5772   3      //#line 129
5773   3              {
5774   4      //#line 129
5775   4                if (100 >= uart_debug_level) {
5776   5      //#line 129
5777   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5778   6      //#line 129
5779   6                      {
5780   7      //#line 129
5781   7                        sprintf(uart_debug_buf, "RfMacBaseSendP.SubCoreSend.sendDone result%d\n", (int )result);
5782   7                      }
5783   6      //#line 130
5784   6                      __nesc_atomic_end(__nesc_atomic); }
5785   5      //#line 129
5786   5                    ATOS_DEBUG_UART_PRINT();
5787   5                  }
5788   4              }
5789   3            }
5790   2      //#line 129
5791   2            ;
5792   2          }
5793   1      
5794   1      
5795   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5796   2      //#line 133
5797   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
5798   2      //#line 133
5799   2          __nesc_atomic_end(__nesc_atomic); }
5800   1        /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
5801   1      }
5802          
5803          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5804          #define RfMacBaseCsmaP__CoreSend__sendDone(arg_0x7e641dd8,arg_0x7e640010) RfMacBaseSendP__0__SubCoreSend__
             -sendDone(arg_0x7e641dd8, arg_0x7e640010)
5805          //# 53 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5806          static  /*inline*/   void RfMacBaseCsmaP__signalDoneTask__runTask(void)
5807          {
5808   1      
5809   1      
5810   1        if (RfMacBaseCsmaP__m_msg != (void *)0) 
5811   1          {
5812   2      
5813   2            RfMacBaseCsmaP__CoreSend__sendDone(RfMacBaseCsmaP__m_msg, RfMacBaseCsmaP__m_result);
5814   2          }
5815   1      }
5816          
5817          //# 52 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5818          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/
             -RfReliableMacReceiveP__0__AMSendAck__sendDone(message_t *msg, error_t result)
5819          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 104 

5820   1      }
5821          
5822          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5823          #define AMResourceP__3__AMSend__sendDone(arg_0x7eb52248,arg_0x7eb523d0) RfReliableMacReceiveP__0__AMSendAc
             -k__sendDone(arg_0x7eb52248, arg_0x7eb523d0)
5824          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5825          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP
             -*/AMResourceP__3__AMResource__sendDone(message_t *msg, error_t error)
5826          {
5827   1      
5828   1      
5829   1      
5830   1        /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3__AMSend
             -__sendDone(msg, error);
5831   1      }
5832          
5833          //# 52 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5834          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__AMSendAck__sendDone(message_t *msg, error_t result)
5835          {
5836   1      }
5837          
5838          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5839          #define AMResourceP__2__AMSend__sendDone(arg_0x7eb52248,arg_0x7eb523d0) RfReliableMacReceiveP__1__AMSendAc
             -k__sendDone(arg_0x7eb52248, arg_0x7eb523d0)
5840          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5841          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*
             -/AMResourceP__2__AMResource__sendDone(message_t *msg, error_t error)
5842          {
5843   1      
5844   1      
5845   1      
5846   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__AMSend_
             -_sendDone(msg, error);
5847   1      }
5848          
5849          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5850          #define RfReliableMacSendP__1__AckTimer__startOneShot(arg_0x7eb11d58) VirtualizeTimerC__0__Timer__startOne
             -Shot(3U, arg_0x7eb11d58)
5851          //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5852          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__SubAMSend__sendDone(message_t *msg, error_t error)
5853          {
5854   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
5855   1          {
5856   2            if (error == 0) 
5857   2              {
5858   3                rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSen
             -dC.RfReliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(msg);
5859   3      
5860   3      //#line 146
5861   3                if (header->ack_req) 
5862   3                  {
5863   4                    /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__1__AckTimer__startOneShot(50);
5864   4                    return;
5865   4                  }
5866   3              }
5867   2      
5868   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(msg, error);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 105 

5869   2          }
5870   1      }
5871          
5872          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5873          #define AMResourceP__1__AMSend__sendDone(arg_0x7eb52248,arg_0x7eb523d0) RfReliableMacSendP__1__SubAMSend__
             -sendDone(arg_0x7eb52248, arg_0x7eb523d0)
5874          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5875          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResour
             -ceC.AMResourceP*/AMResourceP__1__AMResource__sendDone(message_t *msg, error_t error)
5876          {
5877   1      
5878   1      
5879   1      
5880   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMResou
             -rceP__1__AMSend__sendDone(msg, error);
5881   1      }
5882          
5883          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5884          #define RfReliableMacSendP__1__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacSendP__1__signalDoneTask)
5885          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5886          #define RfReliableMacSendP__0__AckTimer__startOneShot(arg_0x7eb11d58) VirtualizeTimerC__0__Timer__startOne
             -Shot(1U, arg_0x7eb11d58)
5887          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5888          #define RfReliableMacSendP__0__PacketEx__getPacketHeader(arg_0x7e714ca0) RfReliableMacPacketP__PacketEx__g
             -etPacketHeader(arg_0x7e714ca0)
5889          //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5890          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRelia
             -bleMacSendP*/RfReliableMacSendP__0__SubAMSend__sendDone(message_t *msg, error_t error)
5891          {
5892   1        if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__m_sending) 
5893   1          {
5894   2            if (error == 0) 
5895   2              {
5896   3                rf_rmac_header_t *header = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSe
             -ndC.RfReliableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(msg);
5897   3      
5898   3      //#line 146
5899   3                if (header->ack_req) 
5900   3                  {
5901   4                    /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__0__AckTimer__startOneShot(50);
5902   4                    return;
5903   4                  }
5904   3              }
5905   2      
5906   2            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__signalDone(msg, error);
5907   2          }
5908   1      }
5909          
5910          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5911          #define AMResourceP__0__AMSend__sendDone(arg_0x7eb52248,arg_0x7eb523d0) RfReliableMacSendP__0__SubAMSend__
             -sendDone(arg_0x7eb52248, arg_0x7eb523d0)
5912          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5913          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResou
             -rceC.AMResourceP*/AMResourceP__0__AMResource__sendDone(message_t *msg, error_t error)
5914          {
5915   1      
5916   1      
5917   1      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 106 

5918   1        /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMReso
             -urceP__0__AMSend__sendDone(msg, error);
5919   1      }
5920          
5921          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5922          #define RfReliableMacSendP__0__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacSendP__0__signalDoneTask)
5923          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
5924          #define RfMacBaseCsmaP__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
5925          //# 75 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5926          static  /*inline*/  uint32_t RfMacBaseCsmaP__initBackoffTimer(void)
5927          {
5928   1        RfMacBaseCsmaP__m_this_random = RfMacBaseCsmaP__Random__rand16() % RfMacBaseCsmaP__m_congestion_delay;
5929   1        if (RfMacBaseCsmaP__m_this_random == 0) {
5930   2      //#line 78
5931   2          RfMacBaseCsmaP__m_this_random = 1;
5932   2          }
5933   1      //#line 79
5934   1        RfMacBaseCsmaP__m_this_delay += RfMacBaseCsmaP__m_this_random;
5935   1        return (uint32_t )RfMacBaseCsmaP__m_this_random * RfMacBaseCsmaP__RF_BACKOFF_PERIOD;
5936   1      }
5937          
5938          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5939          #define TransformAlarmC__1__Counter__get(void) TransformCounterC__1__Counter__get()
5940          //# 76 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
5941          static  /*inline*/    /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBa
             -seCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void)
5942          {
5943   1        /* atomic removed: atomic calls only */
5944   1      //#line 78
5945   1        {
5946   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type __nesc_temp = 
5947   2      //#line 78
5948   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__get();
5949   2      
5950   2      //#line 78
5951   2          return __nesc_temp;
5952   2        }
5953   1      }
5954          
5955          //#line 140
5956          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*
             -RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type t0, /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/T
             -ransformAlarmC__1__to_size_type dt)
5957          {
5958   1        /* atomic removed: atomic calls only */
5959   1        {
5960   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 = t0;
5961   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = dt;
5962   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm();
5963   2        }
5964   1      }
5965          
5966          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*Rf
             -MacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type dt)
5967          {
5968   1        /* atomic removed: atomic calls only */
5969   1      //#line 152
5970   1        /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*RfMacBaseCsmaC.Alarm32khz
             -32C.Transform*/TransformAlarmC__1__Alarm__getNow(), dt);
5971   1      }
5972          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 107 

5973          //# 55 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
5974          #define RfMacBaseCsmaP__BackoffTimer__start(arg_0x7e971d18) TransformAlarmC__1__Alarm__start(arg_0x7e971d1
             -8)
5975          //# 14 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
5976          static  /*inline*/  void RfHardwareTxP__writeTxfifo(uint8_t *buf, uint8_t len)
5977          {
5978   1        uint8_t i;
5979   1      
5980   1      //#line 17
5981   1        for (i = 0; i < len; ++i) 
5982   1          {
5983   2            RFD = buf[i];
5984   2          }
5985   1      }
5986          
5987          //#line 45
5988          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *packet, uint8_t len)
5989          {
5990   1      
5991   1        do {
5992   2      //#line 48
5993   2            RFST = 0xEE;
5994   2          }
5995   1        while (
5996   1      //#line 48
5997   1        48 == -1);
5998   1      
5999   1      
6000   1        do {
6001   2      //#line 51
6002   2            S1CON = 0x00;
6003   2      //#line 51
6004   2            RFIRQF1 = ~(1 << 1);
6005   2          }
6006   1        while (
6007   1      //#line 51
6008   1        51 == -1);
6009   1      
6010   1        len &= 0x7f;
6011   1        packet[0] = len;
6012   1      //#line 86
6013   1        RfHardwareTxP__writeTxfifo(packet, len);
6014   1      
6015   1        return 0;
6016   1      }
6017          
6018          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
6019          #define RfMacBaseCsmaP__RfHardwareTx__txPrepare(arg_0x7e5bb6d8,arg_0x7e5bb860) RfHardwareTxP__RfHardwareTx
             -__txPrepare(arg_0x7e5bb6d8, arg_0x7e5bb860)
6020          //# 164 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
6021          static  /*inline*/   error_t RfMacBaseCsmaP__CoreSend__send(message_t *msg, uint8_t len)
6022          {
6023   1        unsigned char *__nesc_temp45;
6024   1        unsigned char *__nesc_temp44;
6025   1      
6026   1        /* atomic removed: atomic calls only */
6027   1      //#line 168
6028   1        {
6029   2          if (msg == (void *)0) 
6030   2            {
6031   3              {
6032   4                unsigned char __nesc_temp = 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 108 

6033   4      //#line 171
6034   4                FAIL;
6035   4      
6036   4      //#line 171
6037   4                return __nesc_temp;
6038   4              }
6039   3            }
6040   2          RfMacBaseCsmaP__m_msg = msg;
6041   2          RfMacBaseCsmaP__m_cancel = FALSE;
6042   2          RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
6043   2          RfMacBaseCsmaP__m_congestion_count = 0;
6044   2          RfMacBaseCsmaP__m_this_delay = 0;
6045   2      //#line 192
6046   2          (__nesc_temp44 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nesc_te
             -mp44, __nesc_ntoh_leuint8(__nesc_temp44) + 0));
6047   2          RfMacBaseCsmaP__RfHardwareTx__txPrepare((uint8_t *)msg->header, __nesc_ntoh_leuint8((unsigned char *)&
             -((rf_header_t *)msg->header)->length));
6048   2          (__nesc_temp45 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nesc_te
             -mp45, __nesc_ntoh_leuint8(__nesc_temp45) - 0));
6049   2      
6050   2          ;
6051   2      
6052   2          RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__initBackoffTimer());
6053   2        }
6054   1      
6055   1        return 0;
6056   1      }
6057          
6058          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
6059          #define RfMacBaseSendP__0__SubCoreSend__send(arg_0x7e6412e8,arg_0x7e641470) RfMacBaseCsmaP__CoreSend__send
             -(arg_0x7e6412e8, arg_0x7e641470)
6060          //# 15 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
6061          static  /*inline*/   bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void)
6062          {
6063   1        /* atomic removed: atomic calls only */
6064   1        {
6065   2          {
6066   3            unsigned char __nesc_temp = 
6067   3      //#line 19
6068   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size == 0;
6069   3      
6070   3      //#line 19
6071   3            return __nesc_temp;
6072   3          }
6073   2        }
6074   1      }
6075          
6076          //#line 39
6077          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__head(void)
6078          {
6079   1        /* atomic removed: atomic calls only */
6080   1        {
6081   2          {
6082   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
6083   3      //#line 43
6084   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[/*AMResourceCenterC.RfMacBaseSendC.Q
             -ueueExC*/QueueExC__0__head];
6085   3      
6086   3      //#line 43
6087   3            return __nesc_temp;
6088   3          }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 109 

6089   2        }
6090   1      }
6091          
6092          //#line 47
6093          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void)
6094          {
6095   1        /* atomic removed: atomic calls only */
6096   1        {
6097   2          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t t = /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__head();
6098   2      
6099   2      //#line 52
6100   2          if (!/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty()) 
6101   2            {
6102   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head++;
6103   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head %= 4;
6104   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size--;
6105   3            }
6106   2      
6107   2          {
6108   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
6109   3      //#line 59
6110   3            t;
6111   3      
6112   3      //#line 59
6113   3            return __nesc_temp;
6114   3          }
6115   2        }
6116   1      }
6117          
6118          //# 40 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
6119          #define RfMacBaseSendP__0__SendQueue__dequeue(void) QueueExC__0__QueueEx__dequeue()
6120          //#line 9
6121          #define RfMacBaseSendP__0__SendQueue__empty(void) QueueExC__0__QueueEx__empty()
6122          //# 23 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
6123          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__
             -runTask(void)
6124          {
6125   1        error_t result;
6126   1        message_t *msg;
6127   1        rf_header_t *header;
6128   1      
6129   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6130   2          {
6131   3            if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending) {
6132   4              {
6133   5      //#line 31
6134   5                __nesc_atomic_end(__nesc_atomic); 
6135   5      //#line 31
6136   5                return;
6137   5              }
6138   4              }
6139   3      //#line 33
6140   3            if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__empty()) 
6141   3              {
6142   4                {
6143   5      //#line 35
6144   5                  __nesc_atomic_end(__nesc_atomic); 
6145   5      //#line 35
6146   5                  return;
6147   5                }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 110 

6148   4              }
6149   3      
6150   3            msg = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__dequeue();
6151   3      
6152   3      
6153   3      
6154   3            if (msg == (void *)0) 
6155   3              {
6156   4      
6157   4                ;
6158   4      
6159   4      
6160   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
6161   4      
6162   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
6163   4                {
6164   5      //#line 52
6165   5                  __nesc_atomic_end(__nesc_atomic); 
6166   5      //#line 52
6167   5                  return;
6168   5                }
6169   4              }
6170   3            result = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__send(msg
             -, __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length));
6171   3            if (result == 0) 
6172   3              {
6173   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = TRUE;
6174   4              }
6175   3            else 
6176   3              {
6177   4      
6178   4      
6179   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(msg, FA
             -IL);
6180   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
6181   4      
6182   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
6183   4              }
6184   3          }
6185   2      //#line 69
6186   2          __nesc_atomic_end(__nesc_atomic); }
6187   1      }
6188          
6189          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
6190          #define TransformCounterC__1__CounterFrom__get(void) HplCC2530Timer1P__0__Counter__get()
6191          
6192          
6193          
6194          
6195          
6196          
6197          
6198          #define TransformCounterC__1__CounterFrom__isOverflowPending(void) HplCC2530Timer1P__0__Counter__isOverflo
             -wPending()
6199          //# 200 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6200          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(uint1
             -6_t t0, uint16_t dt)
6201          {
6202   1        uint16_t set;
6203   1      //#line 202
6204   1        uint16_t now;
6205   1      //#line 202
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 111 

6206   1        uint16_t elapsed;
6207   1      
6208   1        /* atomic removed: atomic calls only */
6209   1      //#line 204
6210   1        {
6211   2          {
6212   3      //#line 205
6213   3            now = T1CNTL;
6214   3      //#line 205
6215   3            now += T1CNTH << 8;
6216   3          }
6217   2      //#line 205
6218   2          ;
6219   2      
6220   2          elapsed = now - t0;
6221   2      
6222   2          if (elapsed >= dt) 
6223   2            {
6224   3              set = now + 5;
6225   3            }
6226   2          else 
6227   2            {
6228   3              uint16_t remaining = dt - elapsed;
6229   3      
6230   3      //#line 216
6231   3              if (remaining <= 5) {
6232   4                  set = now + 5;
6233   4                }
6234   3              else 
6235   3                {
6236   4                  set = remaining + now;
6237   4                }
6238   3            }
6239   2      
6240   2          {
6241   3      //#line 225
6242   3            T1CCTL1 &= ~(1 << CC2530_T1CCTLx_MODE);
6243   3      //#line 225
6244   3            T1CC1L = (uint16_t )set & 0xFF;
6245   3      //#line 225
6246   3            T1CC1H = ((uint16_t )set >> 8) & 0xFF;
6247   3      //#line 225
6248   3            T1CCTL1 |= 1 << CC2530_T1CCTLx_MODE;
6249   3          }
6250   2      //#line 225
6251   2          ;
6252   2      
6253   2          T1CCTL1 |= 1 << CC2530_T1CCTLx_IM;
6254   2        }
6255   1      }
6256          
6257          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6258          #define TransformAlarmC__1__AlarmFrom__startAt(arg_0x7e970e78,arg_0x7e966030) HplCC2530Timer1P__0__Alarm1_
             -_startAt(arg_0x7e970e78, arg_0x7e966030)
6259          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6260          #define RfReliableMacRetrySendP__0__resendTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfReli
             -ableMacRetrySendP__0__resendTask)
6261          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
6262          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/R
             -fReliableMacRetrySendP__0__SubAMSend__sendDone(message_t *msg, error_t error)
6263          {
6264   1        if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 112 

             -dP__0__m_sending) 
6265   1          {
6266   2            if (error == 0) 
6267   2              {
6268   3                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__signalDone(msg, error);
6269   3              }
6270   2            else 
6271   2              {
6272   3                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__resendTask__postTask();
6273   3              }
6274   2          }
6275   1      }
6276          
6277          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6278          #define RfReliableMacSendP__0__AMSend__sendDone(arg_0x7eb52248,arg_0x7eb523d0) RfReliableMacRetrySendP__0_
             -_SubAMSend__sendDone(arg_0x7eb52248, arg_0x7eb523d0)
6279          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6280          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRelia
             -bleMacSendP*/RfReliableMacSendP__0__signalDoneTask__runTask(void)
6281          {
6282   1        message_t *msg;
6283   1        error_t result;
6284   1      
6285   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6286   2          {
6287   3            if (!/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__m_sending) 
6288   3              {
6289   4                {
6290   5      //#line 40
6291   5                  __nesc_atomic_end(__nesc_atomic); 
6292   5      //#line 40
6293   5                  return;
6294   5                }
6295   4              }
6296   3            msg = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__m_msg;
6297   3            result = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__0__m_result;
6298   3          }
6299   2      //#line 45
6300   2          __nesc_atomic_end(__nesc_atomic); }
6301   1      
6302   1        /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__AMSend__sendDone(msg, result);
6303   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6304   2      //#line 48
6305   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending = FALSE;
6306   2      //#line 48
6307   2          __nesc_atomic_end(__nesc_atomic); }
6308   1      }
6309          
6310          //# 46 "ADSenRFNodeP.nc"
6311          static  /*inline*/   void ADSenRFNodeP__AMSend__sendDone(message_t *msg, error_t success)
6312          {
6313   1        {
6314   2      //#line 48
6315   2          {
6316   3      //#line 48
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 113 

6317   3            if (9 >= uart_debug_level) {
6318   4      //#line 48
6319   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6320   5      //#line 48
6321   5                  {
6322   6      //#line 48
6323   6                    sprintf(uart_debug_buf, "* Sent%s!\r\n", success == 0 ? "OK" : "FAIL");
6324   6                  }
6325   5      //#line 49
6326   5                  __nesc_atomic_end(__nesc_atomic); }
6327   4      //#line 48
6328   4                ATOS_DEBUG_UART_PRINT();
6329   4              }
6330   3          }
6331   2        }
6332   1      //#line 48
6333   1        ;
6334   1      }
6335          
6336          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6337          #define RfReliableMacRetrySendP__0__AMSend__sendDone(arg_0x7eb52248,arg_0x7eb523d0) ADSenRFNodeP__AMSend__
             -sendDone(arg_0x7eb52248, arg_0x7eb523d0)
6338          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
6339          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/R
             -fReliableMacRetrySendP__0__resendTask__runTask(void)
6340          {
6341   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6342   2          {
6343   3            if (!/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__m_sending) 
6344   3              {
6345   4                {
6346   5      //#line 54
6347   5                  __nesc_atomic_end(__nesc_atomic); 
6348   5      //#line 54
6349   5                  return;
6350   5                }
6351   4              }
6352   3            if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__m_retry_times++ < 20) 
6353   3              {
6354   4                if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__doSend(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_msg) != 0) 
6355   4                  {
6356   5                    ;
6357   5                    /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__resendTask__postTask();
6358   5                  }
6359   4              }
6360   3            else 
6361   3              {
6362   4      
6363   4                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__signalDone(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_msg, ERR_MAC_RETRY_MAX);
6364   4              }
6365   3          }
6366   2      //#line 70
6367   2          __nesc_atomic_end(__nesc_atomic); }
6368   1      }
6369          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 114 

6370          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6371          #define RfReliableMacSendP__0__TimeoutTimer__startOneShot(arg_0x7eb11d58) VirtualizeTimerC__0__Timer__star
             -tOneShot(2U, arg_0x7eb11d58)
6372          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
6373          #define RfReliableMacSendP__0__SubPacket__payloadLength(arg_0x7eb21468) RfPacketP__Packet__payloadLength(a
             -rg_0x7eb21468)
6374          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
6375          #define AMResourceP__0__AMResource__send(arg_0x7e662268,arg_0x7e662418,arg_0x7e6625a0) AMResourceCenterP__
             -AMResource__send(AMResourceC__0__AM_RESOURCE_ID, arg_0x7e662268, arg_0x7e662418, arg_0x7e6625a0)
6376          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
6377          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMRe
             -sourceC.AMResourceP*/AMResourceP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
6378          {
6379   1        /* atomic removed: atomic calls only */
6380   1        {
6381   2          __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 0);
6382   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 123);
6383   2        }
6384   1      
6385   1        return /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*
             -/AMResourceP__0__AMResource__send(addr, msg, len);
6386   1      }
6387          
6388          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6389          #define RfReliableMacSendP__0__SubAMSend__send(arg_0x7eb54ee8,arg_0x7eb530a8,arg_0x7eb53230) AMResourceP__
             -0__AMSend__send(arg_0x7eb54ee8, arg_0x7eb530a8, arg_0x7eb53230)
6390          //# 89 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6391          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRe
             -liableMacSendP*/RfReliableMacSendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
6392          {
6393   1        error_t result;
6394   1      
6395   1        /* atomic removed: atomic calls only */
6396   1        {
6397   2          rf_rmac_header_t *header = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(msg);
6398   2          rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
6399   2      
6400   2      
6401   2      
6402   2          if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__m_sending) 
6403   2            {
6404   3              {
6405   4                unsigned char __nesc_temp = 
6406   4      //#line 102
6407   4                FAIL;
6408   4      
6409   4      //#line 102
6410   4                return __nesc_temp;
6411   4              }
6412   3            }
6413   2          header->ack_req = addr != 0xFFFF;
6414   2      
6415   2          __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
6416   2      
6417   2          result = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__SubAMSend__send(addr, msg, /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSen
             -dC.RfReliableMacSendP*/RfReliableMacSendP__0__SubPacket__payloadLength(msg));
6418   2      
6419   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__TimeoutTimer__startOneShot(10000);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 115 

6420   2      
6421   2          if (result == 0) 
6422   2            {
6423   3              /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__m_msg = msg;
6424   3              /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__m_sending = TRUE;
6425   3            }
6426   2      
6427   2          {
6428   3            unsigned char __nesc_temp = 
6429   3      //#line 119
6430   3            result;
6431   3      
6432   3      //#line 119
6433   3            return __nesc_temp;
6434   3          }
6435   2        }
6436   1      }
6437          
6438          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6439          #define RfReliableMacRetrySendP__0__SubAMSend__send(arg_0x7eb54ee8,arg_0x7eb530a8,arg_0x7eb53230) RfReliab
             -leMacSendP__0__AMSend__send(arg_0x7eb54ee8, arg_0x7eb530a8, arg_0x7eb53230)
6440          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
6441          #define RfReliableMacRetrySendP__0__AMPacket__destination(arg_0x7eb35a28) RfPacketP__AMPacket__destination
             -(arg_0x7eb35a28)
6442          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
6443          #define RfReliableMacRetrySendP__0__Packet__payloadLength(arg_0x7eb21468) RfReliableMacPacketP__Packet__pa
             -yloadLength(arg_0x7eb21468)
6444          //# 132 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
6445          static  /*inline*/   void AdcP__signalReadDone__runTask(void)
6446          //#line 132
6447          {
6448   1      }
6449          
6450          //# 140 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6451          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*
             -HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/T
             -ransformAlarmC__0__to_size_type dt)
6452          {
6453   1        /* atomic removed: atomic calls only */
6454   1        {
6455   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 = t0;
6456   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = dt;
6457   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm();
6458   2        }
6459   1      }
6460          
6461          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6462          #define AlarmToTimerC__0__Alarm__startAt(arg_0x7e970e78,arg_0x7e966030) TransformAlarmC__0__Alarm__startAt
             -(arg_0x7e970e78, arg_0x7e966030)
6463          //# 47 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6464          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(uint32_t t0, uint32_t dt,
             - bool oneshot)
6465          {
6466   1        /* atomic removed: atomic calls only */
6467   1        {
6468   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt = dt;
6469   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot = oneshot;
6470   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(t0, dt);
6471   2        }
6472   1      }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 116 

6473          
6474          //#line 113
6475          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t
             - t0, uint32_t dt)
6476          {
6477   1        /* atomic removed: atomic calls only */
6478   1      //#line 115
6479   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(t0, dt, TRUE);
6480   1      }
6481          
6482          //# 118 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6483          #define VirtualizeTimerC__0__TimerFrom__startOneShotAt(arg_0x7eb049b8,arg_0x7eb04b48) AlarmToTimerC__0__Ti
             -mer__startOneShotAt(arg_0x7eb049b8, arg_0x7eb04b48)
6484          //# 78 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6485          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void)
6486          {
6487   1        /* atomic removed: atomic calls only */
6488   1      //#line 80
6489   1        T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
6490   1      }
6491          
6492          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6493          #define TransformAlarmC__0__AlarmFrom__stop(void) HplCC2530Timer1P__0__Alarm0__stop()
6494          //# 91 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6495          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void)
6496          {
6497   1        /* atomic removed: atomic calls only */
6498   1      //#line 93
6499   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop();
6500   1      }
6501          
6502          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6503          #define AlarmToTimerC__0__Alarm__stop(void) TransformAlarmC__0__Alarm__stop()
6504          //# 73 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6505          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void)
6506          {
6507   1        /* atomic removed: atomic calls only */
6508   1        {
6509   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop();
6510   2        }
6511   1      }
6512          
6513          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6514          #define VirtualizeTimerC__0__TimerFrom__stop(void) AlarmToTimerC__0__Timer__stop()
6515          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
6516          #define TransformAlarmC__0__Counter__get(void) TransformCounterC__0__Counter__get()
6517          //# 76 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6518          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void)
6519          {
6520   1        /* atomic removed: atomic calls only */
6521   1      //#line 78
6522   1        {
6523   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type __nesc_temp = 
6524   2      //#line 78
6525   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__get();
6526   2      
6527   2      //#line 78
6528   2          return __nesc_temp;
6529   2        }
6530   1      }
6531          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 117 

6532          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6533          #define AlarmToTimerC__0__Alarm__getNow(void) TransformAlarmC__0__Alarm__getNow()
6534          //# 118 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6535          static  /*inline*/   uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void)
6536          {
6537   1        /* atomic removed: atomic calls only */
6538   1      //#line 120
6539   1        {
6540   2          unsigned long __nesc_temp = 
6541   2      //#line 120
6542   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__getNow();
6543   2      
6544   2      //#line 120
6545   2          return __nesc_temp;
6546   2        }
6547   1      }
6548          
6549          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6550          #define VirtualizeTimerC__0__TimerFrom__getNow(void) AlarmToTimerC__0__Timer__getNow()
6551          //# 98 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6552          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask
             -(void)
6553          {
6554   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6555   2          {
6556   3      
6557   3      
6558   3      
6559   3      
6560   3            uint32_t now = /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow();
6561   3            int32_t min_remaining = (1UL << 31) - 1;
6562   3            bool min_remaining_isset = FALSE;
6563   3            uint8_t num;
6564   3      
6565   3            {
6566   4      //#line 111
6567   4              {
6568   5      //#line 111
6569   5                if (1 >= uart_debug_level) {
6570   6      //#line 111
6571   6                    {
6572   7      //#line 111
6573   7                      sprintf(uart_debug_buf, "updateFromTimer NUM_TIMERS=%d\n", (int )/*HilTimerMilliC.Virtuali
             -zeTimerC*/VirtualizeTimerC__0__NUM_TIMERS);
6574   7                    }
6575   6      //#line 111
6576   6                    ATOS_DEBUG_UART_PRINT();
6577   6                  }
6578   5              }
6579   4            }
6580   3      //#line 111
6581   3            ;
6582   3      
6583   3            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop();
6584   3      
6585   3            for (num = 0; num < /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS; num++) 
6586   3              {
6587   4                /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtu
             -alizeTimerC*/VirtualizeTimerC__0__m_timers[num];
6588   4      
6589   4      
6590   4                if (timer->isrunning) 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 118 

6591   4                  {
6592   5                    uint32_t elapsed = now - timer->t0;
6593   5                    int32_t remaining = (timer->dt - elapsed) % (timer->dt + 1);
6594   5      
6595   5                    {
6596   6      //#line 125
6597   6                      {
6598   7      //#line 125
6599   7                        if (1 >= uart_debug_level) {
6600   8      //#line 125
6601   8                            {
6602   9      //#line 125
6603   9                              sprintf(uart_debug_buf, "elapsed = 0x%lx, remaining=0x%lx\n", elapsed, remaining);
6604   9                            }
6605   8      //#line 125
6606   8                            ATOS_DEBUG_UART_PRINT();
6607   8                          }
6608   7                      }
6609   6                    }
6610   5      //#line 125
6611   5                    ;
6612   5      
6613   5                    if (remaining < min_remaining) 
6614   5                      {
6615   6                        min_remaining = remaining;
6616   6                        min_remaining_isset = TRUE;
6617   6                      }
6618   5                  }
6619   4              }
6620   3      
6621   3            {
6622   4      //#line 135
6623   4              {
6624   5      //#line 135
6625   5                if (1 >= uart_debug_level) {
6626   6      //#line 135
6627   6                    {
6628   7      //#line 135
6629   7                      sprintf(uart_debug_buf, "updateFromTimer min_remaining_isset=%d, min_remaining=0x%x,\n", (
             -int )min_remaining_isset, (int )min_remaining);
6630   7                    }
6631   6      //#line 135
6632   6                    ATOS_DEBUG_UART_PRINT();
6633   6                  }
6634   5              }
6635   4            }
6636   3      //#line 135
6637   3            ;
6638   3      
6639   3            if (min_remaining_isset) 
6640   3              {
6641   4                if (min_remaining <= 0) 
6642   4                  {
6643   5                    /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(now);
6644   5                  }
6645   4                else 
6646   4                  {
6647   5                    {
6648   6      //#line 145
6649   6                      {
6650   7      //#line 145
6651   7                        if (1 >= uart_debug_level) {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 119 

6652   8      //#line 145
6653   8                            {
6654   9      //#line 145
6655   9                              sprintf(uart_debug_buf, "VirtualizeTimerC call TimerFrom.startOneShotAt\n");
6656   9                            }
6657   8      //#line 145
6658   8                            ATOS_DEBUG_UART_PRINT();
6659   8                          }
6660   7                      }
6661   6                    }
6662   5      //#line 145
6663   5                    ;
6664   5                    /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt(now, min_r
             -emaining);
6665   5                  }
6666   4              }
6667   3          }
6668   2      //#line 149
6669   2          __nesc_atomic_end(__nesc_atomic); }
6670   1      }
6671          
6672          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6673          #define RealMainP__fakeTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RealMainP__fakeTask)
6674          //# 111 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
6675          static  /*inline*/   void RealMainP__FakeTimer__fired(void)
6676          {
6677   1      
6678   1        RealMainP__fakeTask__postTask();
6679   1      }
6680          
6681          //# 71 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6682          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRelia
             -bleMacSendP*/RfReliableMacSendP__0__AckTimer__fired(void)
6683          {
6684   1        if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__m_sending) 
6685   1          {
6686   2            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__signalDone(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__m_msg, ERR_MAC_NO_ACK);
6687   2          }
6688   1      }
6689          
6690          static  /*inline*/   void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRelia
             -bleMacSendP*/RfReliableMacSendP__0__TimeoutTimer__fired(void)
6691          {
6692   1        if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__m_sending) 
6693   1          {
6694   2            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__signalDone(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__m_msg, ERR_MAC_NO_ACK);
6695   2          }
6696   1      }
6697          
6698          //#line 71
6699          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__AckTimer__fired(void)
6700          {
6701   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
6702   1          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 120 

6703   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg, ERR_MAC_NO_ACK);
6704   2          }
6705   1      }
6706          
6707          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__TimeoutTimer__fired(void)
6708          {
6709   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
6710   1          {
6711   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg, ERR_MAC_NO_ACK);
6712   2          }
6713   1      }
6714          
6715          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
6716          #define AtosNetStdP__WatchDog__resetCpu(void) WatchDogP__WatchDog__resetCpu()
6717          //# 49 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
6718          static  /*inline*/   void AtosNetStdP__RebootTimer__fired(void)
6719          {
6720   1        AtosNetStdP__WatchDog__resetCpu();
6721   1      }
6722          
6723          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6724          #define ADSenRFNodeP__sensorDataTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(ADSenRFNodeP__se
             -nsorDataTask)
6725          //# 104 "ADSenRFNodeP.nc"
6726          static  /*inline*/   void ADSenRFNodeP__Timer1__fired(void)
6727          {
6728   1        ADSenRFNodeP__sensorDataTask__postTask();
6729   1      }
6730          
6731          //# 232 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6732          static  /*inline*/    void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(u
             -int8_t num)
6733          //#line 232
6734          {
6735   1      }
6736          
6737          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6738           /*inline*/  static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(uint8_t arg
             -_0x7e7a9030){
6739   1      //#line 72
6740   1        switch (arg_0x7e7a9030) {
6741   2      //#line 72
6742   2          case 0U:
6743   2      //#line 72
6744   2            RealMainP__FakeTimer__fired();
6745   2      //#line 72
6746   2            break;
6747   2      //#line 72
6748   2          case 1U:
6749   2      //#line 72
6750   2            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__AckTimer__fired();
6751   2      //#line 72
6752   2            break;
6753   2      //#line 72
6754   2          case 2U:
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 121 

6755   2      //#line 72
6756   2            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__TimeoutTimer__fired();
6757   2      //#line 72
6758   2            break;
6759   2      //#line 72
6760   2          case 3U:
6761   2      //#line 72
6762   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__AckTimer__fired();
6763   2      //#line 72
6764   2            break;
6765   2      //#line 72
6766   2          case 4U:
6767   2      //#line 72
6768   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__TimeoutTimer__fired();
6769   2      //#line 72
6770   2            break;
6771   2      //#line 72
6772   2          case 5U:
6773   2      //#line 72
6774   2            AtosNetStdP__RebootTimer__fired();
6775   2      //#line 72
6776   2            break;
6777   2      //#line 72
6778   2          case 6U:
6779   2      //#line 72
6780   2            ADSenRFNodeP__Timer1__fired();
6781   2      //#line 72
6782   2            break;
6783   2      //#line 72
6784   2          default:
6785   2      //#line 72
6786   2            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(arg_0x7e7a9030);
6787   2      //#line 72
6788   2            break;
6789   2      //#line 72
6790   2          }
6791   1      //#line 72
6792   1      }
6793          //#line 72
6794          //# 121 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6795          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(uint1
             -6_t t0, uint16_t dt)
6796          {
6797   1        uint16_t set;
6798   1      //#line 123
6799   1        uint16_t now;
6800   1      //#line 123
6801   1        uint16_t elapsed;
6802   1      
6803   1        /* atomic removed: atomic calls only */
6804   1        {
6805   2          {
6806   3      //#line 127
6807   3            now = T1CNTL;
6808   3      //#line 127
6809   3            now += T1CNTH << 8;
6810   3          }
6811   2      //#line 127
6812   2          ;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 122 

6813   2      
6814   2          elapsed = now - t0;
6815   2      
6816   2          if (elapsed >= dt) 
6817   2            {
6818   3              set = now + 5;
6819   3            }
6820   2          else 
6821   2            {
6822   3              uint16_t remaining = dt - elapsed;
6823   3      
6824   3      //#line 138
6825   3              if (remaining <= 5) 
6826   3                {
6827   4                  set = now + 5;
6828   4                }
6829   3              else 
6830   3                {
6831   4                  set = remaining + now;
6832   4                }
6833   3            }
6834   2      
6835   2          {
6836   3      //#line 148
6837   3            T1CCTL0 &= ~(1 << CC2530_T1CCTLx_MODE);
6838   3      //#line 148
6839   3            T1CC0L = (uint16_t )set & 0xFF;
6840   3      //#line 148
6841   3            T1CC0H = ((uint16_t )set >> 8) & 0xFF;
6842   3      //#line 148
6843   3            T1CCTL0 |= 1 << CC2530_T1CCTLx_MODE;
6844   3          }
6845   2      //#line 148
6846   2          ;
6847   2      
6848   2          T1CCTL0 |= 1 << CC2530_T1CCTLx_IM;
6849   2      
6850   2          {
6851   3      //#line 152
6852   3            {
6853   4      //#line 152
6854   4              if (1 >= uart_debug_level) {
6855   5      //#line 152
6856   5                  {
6857   6      //#line 152
6858   6                    sprintf(uart_debug_buf, "Alarm0.startAt T1CCTL0=0x%x\n", T1CCTL0);
6859   6                  }
6860   5      //#line 152
6861   5                  ATOS_DEBUG_UART_PRINT();
6862   5                }
6863   4            }
6864   3          }
6865   2      //#line 152
6866   2          ;
6867   2        }
6868   1      }
6869          
6870          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6871          #define TransformAlarmC__0__AlarmFrom__startAt(arg_0x7e970e78,arg_0x7e966030) HplCC2530Timer1P__0__Alarm0_
             -_startAt(arg_0x7e970e78, arg_0x7e966030)
6872          //# 152 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6873          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 123 

6874          {
6875   1        /* atomic removed: atomic calls only */
6876   1        {
6877   2          {
6878   3      //#line 156
6879   3            {
6880   4      //#line 156
6881   4              if (1 >= uart_debug_level) {
6882   5      //#line 156
6883   5                  {
6884   6      //#line 156
6885   6                    sprintf(uart_debug_buf, "VirtualizeTimerC.TimerFrom.fired\n");
6886   6                  }
6887   5      //#line 156
6888   5                  ATOS_DEBUG_UART_PRINT();
6889   5                }
6890   4            }
6891   3          }
6892   2      //#line 156
6893   2          ;
6894   2          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(/*HilTimerMilliC.VirtualizeTimerC*/
             -VirtualizeTimerC__0__TimerFrom__getNow());
6895   2        }
6896   1      }
6897          
6898          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6899          #define AlarmToTimerC__0__Timer__fired(void) VirtualizeTimerC__0__TimerFrom__fired()
6900          //# 81 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6901          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void)
6902          {
6903   1        /* atomic removed: atomic calls only */
6904   1      //#line 83
6905   1        {
6906   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type __nesc_temp = 
6907   2      //#line 83
6908   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 + /*HilTimerMilliC.AlarmMilli32C.Tr
             -ansform*/TransformAlarmC__0__m_dt;
6909   2      
6910   2      //#line 83
6911   2          return __nesc_temp;
6912   2        }
6913   1      }
6914          
6915          //# 105 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6916          #define AlarmToTimerC__0__Alarm__getAlarm(void) TransformAlarmC__0__Alarm__getAlarm()
6917          //# 81 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6918          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void)
6919          {
6920   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6921   2          {
6922   3            if (/*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot == FALSE) 
6923   3              {
6924   4                /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(/*HilTimerMilliC.AlarmToTimerC*/AlarmToT
             -imerC__0__Alarm__getAlarm(), /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt, FALSE);
6925   4              }
6926   3            /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired();
6927   3          }
6928   2      //#line 90
6929   2          __nesc_atomic_end(__nesc_atomic); }
6930   1      }
6931          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 124 

6932          //# 103 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
6933          static  /*inline*/   void RealMainP__fakeTask__runTask(void)
6934          {
6935   1      }
6936          
6937          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
6938          #define RfReliableMacRetrySendP__0__Packet__setPayloadLength(arg_0x7eb21ad8,arg_0x7eb21c60) RfReliableMacP
             -acketP__Packet__setPayloadLength(arg_0x7eb21ad8, arg_0x7eb21c60)
6939          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
6940          #define RfReliableMacRetrySendP__0__AMPacket__setDestination(arg_0x7eb335f8,arg_0x7eb33788) RfPacketP__AMP
             -acket__setDestination(arg_0x7eb335f8, arg_0x7eb33788)
6941          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
6942          #define RfReliableMacRetrySendP__0__PacketEx__getPacketHeader(arg_0x7e714ca0) RfReliableMacPacketP__Packet
             -Ex__getPacketHeader(arg_0x7e714ca0)
6943          //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
6944          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP
             -*/RfReliableMacRetrySendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
6945          {
6946   1        error_t result;
6947   1      
6948   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6949   2          {
6950   3            rf_rmac_header_t *header = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetryS
             -endP*/RfReliableMacRetrySendP__0__PacketEx__getPacketHeader(msg);
6951   3            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
6952   3      
6953   3            if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__m_sending) 
6954   3              {
6955   4                {
6956   5                  unsigned char __nesc_temp = 
6957   5      //#line 85
6958   5                  FAIL;
6959   5      
6960   5                  {
6961   6      //#line 85
6962   6                    __nesc_atomic_end(__nesc_atomic); 
6963   6      //#line 85
6964   6                    return __nesc_temp;
6965   6                  }
6966   5                }
6967   4              }
6968   3            header->ack_req = addr != 0xFFFF;
6969   3      
6970   3            __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
6971   3      
6972   3            header->dsn = rf_rmac_dsn;
6973   3      
6974   3            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__AMPacket__setDestination(msg, addr);
6975   3            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__Packet__setPayloadLength(msg, len);
6976   3      
6977   3      
6978   3            result = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__0__doSend(msg);
6979   3      
6980   3            if (result == 0) 
6981   3              {
6982   4                rf_rmac_dsn++;
6983   4                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__m_sending = TRUE;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 125 

6984   4                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__m_msg = msg;
6985   4                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__m_retry_times = 0;
6986   4              }
6987   3      
6988   3            {
6989   4              unsigned char __nesc_temp = 
6990   4      //#line 109
6991   4              result;
6992   4      
6993   4              {
6994   5      //#line 109
6995   5                __nesc_atomic_end(__nesc_atomic); 
6996   5      //#line 109
6997   5                return __nesc_temp;
6998   5              }
6999   4            }
7000   3          }
7001   2      //#line 112
7002   2          __nesc_atomic_end(__nesc_atomic); }
7003   1      }
7004          
7005          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
7006          #define ADSenRFNodeP__AMSend__send(arg_0x7eb54ee8,arg_0x7eb530a8,arg_0x7eb53230) RfReliableMacRetrySendP__
             -0__AMSend__send(arg_0x7eb54ee8, arg_0x7eb530a8, arg_0x7eb53230)
7007          //# 37 "ADSenRFNodeP.nc"
7008          static  /*inline*/   void ADSenRFNodeP__sendMsgTask__runTask(void)
7009          {
7010   1      
7011   1        if (ADSenRFNodeP__AMSend__send(1, &ADSenRFNodeP__m_sensor_msg, 2) != 0) 
7012   1          {
7013   2            ADSenRFNodeP__sensorDataTask__postTask();
7014   2          }
7015   1      }
7016          
7017          //# 139 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
7018          static  /*inline*/    void AdcP__Read__default__readDone(uint8_t id, error_t result, int16_t val)
7019          //#line 139
7020          {
7021   1      }
7022          
7023          //# 63 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
7024           /*inline*/  static  void AdcP__Read__readDone(uint8_t arg_0x7e744990, error_t arg_0x7eb65a88, AdcP__Read_
             -_val_t arg_0x7eb65c10){
7025   1      //#line 63
7026   1        switch (arg_0x7e744990) {
7027   2      //#line 63
7028   2          case /*ADSenRFNodeC.ADSensor*/AdcC__0__ID:
7029   2      //#line 63
7030   2            ADSenRFNodeP__ADSensorRead__readDone(arg_0x7eb65a88, arg_0x7eb65c10);
7031   2      //#line 63
7032   2            break;
7033   2      //#line 63
7034   2          default:
7035   2      //#line 63
7036   2            AdcP__Read__default__readDone(arg_0x7e744990, arg_0x7eb65a88, arg_0x7eb65c10);
7037   2      //#line 63
7038   2            break;
7039   2      //#line 63
7040   2          }
7041   1      //#line 63
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 126 

7042   1      }
7043          //#line 63
7044          //# 74 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
7045          static  /*inline*/   error_t AdcP__Read__read(uint8_t id)
7046          //#line 74
7047          {
7048   1      
7049   1      
7050   1        if (AdcP__inputs[id] == 0xFF) {
7051   2            return FAIL;
7052   2          }
7053   1        else 
7054   1      //#line 79
7055   1          {
7056   2            int16_t value;
7057   2            uint8_t temp;
7058   2            int16_t retry = 0x7fff;
7059   2      
7060   2            do {
7061   3      //#line 84
7062   3                ADCCON1 |= 0x30;
7063   3              }
7064   2            while (
7065   2      //#line 84
7066   2            0);
7067   2      
7068   2            ADCCFG |= 0x01 << AdcP__inputs[id];
7069   2      
7070   2      
7071   2            temp = ADCH;
7072   2            temp = ADCL;
7073   2      
7074   2      
7075   2            do {
7076   3      //#line 93
7077   3                ADCCON3 = (AdcP__references[id] | AdcP__resolutions[id]) | AdcP__inputs[id];
7078   3              }
7079   2            while (
7080   2      //#line 93
7081   2            0);
7082   2      
7083   2            do {
7084   3      //#line 95
7085   3                do {
7086   4      //#line 95
7087   4                    ADCCON1 |= 0x30;
7088   4                  }
7089   3                while (
7090   3      //#line 95
7091   3                0);
7092   3      //#line 95
7093   3                ADCCON1 |= 0x40;
7094   3              }
7095   2            while (
7096   2      //#line 95
7097   2            0);
7098   2      
7099   2      
7100   2            while (!(ADCCON1 & 0x80) && --retry >= 0) ;
7101   2      
7102   2            if (retry >= 0) 
7103   2              {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 127 

7104   3      
7105   3                value = (int16_t )ADCL;
7106   3                value |= (int16_t )(ADCH << 8);
7107   3      
7108   3      
7109   3      
7110   3      
7111   3                ADCCFG &= ~(0x01 << AdcP__inputs[id]);
7112   3      
7113   3      
7114   3      
7115   3      
7116   3      
7117   3                AdcP__Read__readDone(id, 0, value);
7118   3              }
7119   2            else 
7120   2              {
7121   3      
7122   3                ADCCFG &= ~(0x01 << AdcP__inputs[id]);
7123   3      
7124   3                AdcP__Read__readDone(id, FAIL, 0);
7125   3              }
7126   2      
7127   2            return 0;
7128   2          }
7129   1      }
7130          
7131          //# 55 "/opt/tinyos-2.x/tos/interfaces/Read.nc"
7132          #define ADSenRFNodeP__ADSensorRead__read(void) AdcP__Read__read(AdcC__0__ID)
7133          //# 43 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
7134          static  /*inline*/   void AdcP__AdcControl__enable(uint8_t id, uint8_t reference, uint8_t resolution, uint
             -8_t input)
7135          //#line 43
7136          {
7137   1      
7138   1      
7139   1        AdcP__references[id] = reference;
7140   1        AdcP__resolutions[id] = resolution;
7141   1        AdcP__inputs[id] = input;
7142   1      
7143   1        AdcP__counter++;
7144   1      }
7145          
7146          //# 28 "/opt/atos/tos/chips/cc2530/adc/AdcControl.nc"
7147          #define ADSenRFNodeP__ADSensorControl__enable(arg_0x7eb72370,arg_0x7eb72500,arg_0x7eb72688) AdcP__AdcContr
             -ol__enable(AdcC__0__ID, arg_0x7eb72370, arg_0x7eb72500, arg_0x7eb72688)
7148          //# 30 "ADSenRFNodeP.nc"
7149          static  /*inline*/   void ADSenRFNodeP__sensorDataTask__runTask(void)
7150          {
7151   1        ADSenRFNodeP__ADSensorControl__enable(0x80, 0x30, 0x04);
7152   1        ADSenRFNodeP__ADSensorRead__read();
7153   1      }
7154          
7155          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
7156          #define ADSenRFNodeP__sendMsgTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(ADSenRFNodeP__sendM
             -sgTask)
7157          //# 50 "/opt/tinyos-2.x/tos/types/TinyError.h"
7158          static  /*inline*/  error_t ecombine(error_t r1, error_t r2)
7159          
7160          
7161          
7162          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 128 

7163          {
7164   1        return r1 == r2 ? r1 : FAIL;
7165   1      }
7166          
7167          //# 26 "/opt/atos/tos/chips/cc2530/adc/AdcP.nc"
7168          static  /*inline*/   error_t AdcP__Init__init(void)
7169          //#line 26
7170          {
7171   1      
7172   1        uint8_t i;
7173   1      
7174   1        for (i = 0; i < 1U; i++) {
7175   2            AdcP__inputs[i] = 0xFF;
7176   2          }
7177   1      
7178   1        AdcP__counter = 0;
7179   1      
7180   1      
7181   1        do {
7182   2      //#line 37
7183   2            ADCCON1 |= 0x30;
7184   2          }
7185   1        while (
7186   1      //#line 37
7187   1        0);
7188   1      
7189   1        return 0;
7190   1      }
7191          
7192          //# 38 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
7193          static  /*inline*/   error_t HalFlashP__Init__init(void)
7194          {
7195   1        return 0;
7196   1      }
7197          
7198          //# 103 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
7199          static  /*inline*/   error_t RfConfigP__Init__init(void)
7200          {
7201   1        /* atomic removed: atomic calls only */
7202   1        {
7203   2          RfConfigP__m_channel = 11;
7204   2      
7205   2      
7206   2      
7207   2      
7208   2      
7209   2      
7210   2          if (RfConfigP__m_channel < 11 || RfConfigP__m_channel > 26) 
7211   2            {
7212   3              RfConfigP__m_channel = 11;
7213   3            }
7214   2      
7215   2          RfConfigP__m_tx_power = 0xF5;
7216   2          RfConfigP__m_hw_auto_ack = FALSE;
7217   2      
7218   2      
7219   2      
7220   2      
7221   2      
7222   2          RfConfigP__m_address_recognition = TRUE;
7223   2        }
7224   1      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 129 

7225   1      
7226   1        return 0;
7227   1      }
7228          
7229          //# 10 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
7230          static  /*inline*/   error_t CC2530RandomLfsrP__Init__init(void)
7231          //#line 10
7232          {
7233   1        /* atomic removed: atomic calls only */
7234   1      //#line 11
7235   1        {
7236   2          uint16_t rndSeed;
7237   2          uint8_t i;
7238   2      
7239   2      
7240   2          ADCCON1 = ((ADCCON1 & ~((1 << 3) | (1 << 2))) | (1 << 3)) | (1 << 2);
7241   2          (
7242   2      
7243   2      
7244   2      
7245   2      
7246   2          (uint8_t xdata *)0)[0x6189] = 0x40 | (2 << 2);
7247   2      
7248   2      
7249   2          RFST = 0xE3;
7250   2      
7251   2      
7252   2      
7253   2      
7254   2      
7255   2      
7256   2          while (!(((uint8_t xdata *)0)[0x6199] & 0x01)) ;
7257   2      
7258   2          rndSeed = 0;
7259   2          for (i = 0; i < 16; i++) 
7260   2            {
7261   3      
7262   3              rndSeed = (rndSeed << 1) | (((uint8_t xdata *)0)[0x61A7] & 0x01);
7263   3            }
7264   2      
7265   2      
7266   2      
7267   2      
7268   2      
7269   2      
7270   2          if (rndSeed == 0x0000 || rndSeed == 0x0380) 
7271   2            {
7272   3              rndSeed = 0xBABE;
7273   3            }
7274   2      
7275   2      
7276   2      
7277   2      
7278   2      
7279   2          RNDL = rndSeed & 0xFF;
7280   2          RNDL = rndSeed >> 8;
7281   2      
7282   2      
7283   2          RFST = 0xEF;
7284   2          (
7285   2      
7286   2          (uint8_t xdata *)0)[0x6189] = 0x40 | (0 << 2);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 130 

7287   2        }
7288   1      
7289   1        return 0;
7290   1      }
7291          
7292          //# 80 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
7293          static  /*inline*/   error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void)
7294          {
7295   1        /* atomic removed: atomic calls only */
7296   1        {
7297   2          memset(/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address, 0, sizeof /*DsnFilt
             -erCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address);
7298   2          memset(/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn, 0, sizeof /*DsnFilterCe
             -nterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn);
7299   2      
7300   2          {
7301   3            unsigned char __nesc_temp = 
7302   3      //#line 87
7303   3            0;
7304   3      
7305   3      //#line 87
7306   3            return __nesc_temp;
7307   3          }
7308   2        }
7309   1      }
7310          
7311          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
7312           /*inline*/  static  error_t RealMainP__SoftwareInit__init(void){
7313   1      //#line 51
7314   1        unsigned char result;
7315   1      //#line 51
7316   1      
7317   1      //#line 51
7318   1        result = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init();
7319   1      //#line 51
7320   1        result = ecombine(result, CC2530RandomLfsrP__Init__init());
7321   1      //#line 51
7322   1        result = ecombine(result, RfConfigP__Init__init());
7323   1      //#line 51
7324   1        result = ecombine(result, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init());
7325   1      //#line 51
7326   1        result = ecombine(result, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init());
7327   1      //#line 51
7328   1        result = ecombine(result, HalFlashP__Init__init());
7329   1      //#line 51
7330   1        result = ecombine(result, AdcP__Init__init());
7331   1      //#line 51
7332   1      
7333   1      //#line 51
7334   1        return result;
7335   1      //#line 51
7336   1      }
7337          //#line 51
7338          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
7339          #define ADSenRFNodeP__Packet__getPayload(arg_0x7eb20840,arg_0x7eb209e8) RfReliableMacPacketP__Packet__getP
             -ayload(arg_0x7eb20840, arg_0x7eb209e8)
7340          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7341          #define ADSenRFNodeP__Timer1__startPeriodic(arg_0x7eb11788) VirtualizeTimerC__0__Timer__startPeriodic(6U, 
             -arg_0x7eb11788)
7342          //# 27 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
7343          static  /*inline*/   error_t RfHardwareTxP__StdControl__start(void)
7344          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 131 

7345   1        /* atomic removed: atomic calls only */
7346   1        {
7347   2      
7348   2          do {
7349   3              (
7350   3      //#line 32
7351   3              (uint8_t xdata *)0)[0x61A4] &= ~(1 << 1);
7352   3            }
7353   2          while (
7354   2      //#line 32
7355   2          32 == -1);
7356   2          do {
7357   3      //#line 33
7358   3              S1CON = 0x00;
7359   3      //#line 33
7360   3              RFIRQF1 = ~(1 << 1);
7361   3            }
7362   2          while (
7363   2      //#line 33
7364   2          33 == -1);
7365   2        }
7366   1      
7367   1        return 0;
7368   1      }
7369          
7370          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
7371          #define RfHardwareP__TxControl__start(void) RfHardwareTxP__StdControl__start()
7372          //# 59 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
7373          static  /*inline*/    error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void)
7374          {
7375   1        /* atomic removed: atomic calls only */
7376   1      //#line 61
7377   1        {
7378   2          RFERRIF = 0;
7379   2          ((uint8_t xdata *)0)[0x61A5] = 1 << 2;
7380   2          RFERRIE = 1;
7381   2        }
7382   1        return 0;
7383   1      }
7384          
7385          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
7386          #define RfHardwareRxP__0__InterruptRFErr__enableRisingEdge(void) RfInterruptsP__InterruptRFErr__enableRisi
             -ngEdge()
7387          //# 36 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
7388          static  /*inline*/    error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void)
7389          {
7390   1        /* atomic removed: atomic calls only */
7391   1      //#line 38
7392   1        {
7393   2          do {
7394   3              (
7395   3      //#line 39
7396   3              (uint8_t xdata *)0)[0x61A3] |= 1 << 2;
7397   3            }
7398   2          while (
7399   2      //#line 39
7400   2          39 == -1);
7401   2        }
7402   1        return 0;
7403   1      }
7404          
7405          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 132 

7406          #define RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge(void) RfInterruptsP__InterruptFIFOP__enableRisi
             -ngEdge()
7407          //# 33 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
7408          static  /*inline*/   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void)
7409          {
7410   1        {
7411   2      //#line 35
7412   2          /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHardwar
             -eRxP__0__rxbuf_tail = 0;
7413   2        }
7414   1      //#line 35
7415   1        ;
7416   1        {
7417   2      //#line 36
7418   2          do {
7419   3      //#line 36
7420   3              RFST = 0xED;
7421   3      //#line 36
7422   3              RFST = 0xED;
7423   3            }
7424   2          while (
7425   2      //#line 36
7426   2          36 == -1);
7427   2      //#line 36
7428   2          do {
7429   3      //#line 36
7430   3              S1CON = 0x00;
7431   3      //#line 36
7432   3              RFIRQF0 = ~(1 << 2);
7433   3            }
7434   2          while (
7435   2      //#line 36
7436   2          36 == -1);
7437   2        }
7438   1      //#line 36
7439   1        ;
7440   1      
7441   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge();
7442   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__enableRisingEdge();
7443   1      
7444   1        return 0;
7445   1      }
7446          
7447          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
7448          #define RfHardwareP__RxControl__start(void) RfHardwareRxP__0__StdControl__start()
7449          //# 57 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
7450          static  /*inline*/  void RfConfigP__writeTxPower(void)
7451          {
7452   1        /* atomic removed: atomic calls only */
7453   1        {
7454   2          do {
7455   3              (
7456   3      //#line 61
7457   3              (uint8_t xdata *)0)[0x6190] = RfConfigP__m_tx_power;
7458   3            }
7459   2          while (
7460   2      //#line 61
7461   2          61 == -1);
7462   2        }
7463   1      }
7464          
7465          //#line 52
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 133 

7466          static  /*inline*/  void RfConfigP__writeFIFOPThrehold(void)
7467          {
7468   1        do {
7469   2            (
7470   2      //#line 54
7471   2            (uint8_t xdata *)0)[0x6194] = 128 - 1;
7472   2          }
7473   1        while (
7474   1      //#line 54
7475   1        54 == -1);
7476   1      }
7477          
7478          //#line 34
7479          static  /*inline*/  void RfConfigP__writeFilter(void)
7480          {
7481   1        /* atomic removed: atomic calls only */
7482   1        {
7483   2      
7484   2          if (RfConfigP__m_hw_auto_ack) {
7485   3            ((uint8_t xdata *)0)[0x6189] = 0x40 | (1 << 5);
7486   3            }
7487   2          else {
7488   3            (
7489   3      //#line 42
7490   3            (uint8_t xdata *)0)[0x6189] = 0x40;
7491   3            }
7492   2      
7493   2          if (RfConfigP__m_address_recognition) {
7494   3            do {
7495   4                (
7496   4      //#line 46
7497   4                (uint8_t xdata *)0)[0x6180] |= 1 << 0;
7498   4              }
7499   3            while (
7500   3      //#line 46
7501   3            46 == -1);
7502   3            }
7503   2          else {
7504   3      //#line 48
7505   3            do {
7506   4                (
7507   4      //#line 48
7508   4                (uint8_t xdata *)0)[0x6180] &= ~(1 << 0);
7509   4              }
7510   3            while (
7511   3      //#line 48
7512   3            48 == -1);
7513   3            }
7514   2        }
7515   1      }
7516          
7517          //#line 26
7518          static  /*inline*/  void RfConfigP__writeChannel(void)
7519          {
7520   1        /* atomic removed: atomic calls only */
7521   1        {
7522   2          do {
7523   3              (
7524   3      //#line 30
7525   3              (uint8_t xdata *)0)[0x618F] = 0x0B + 5 * (RfConfigP__m_channel - 11);
7526   3            }
7527   2          while (
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 134 

7528   2      //#line 30
7529   2          30 == -1);
7530   2        }
7531   1      }
7532          
7533          //#line 65
7534          static  /*inline*/  void RfConfigP__RfConfigWrite(void)
7535          {
7536   1        /* atomic removed: atomic calls only */
7537   1        {
7538   2          RfConfigP__writeChannel();
7539   2          RfConfigP__writeFilter();
7540   2          RfConfigP__writeFIFOPThrehold();
7541   2          RfConfigP__writeTxPower();
7542   2        }
7543   1      }
7544          
7545          //#line 135
7546          static  /*inline*/   void RfConfigP__RfConfig__flush(void)
7547          {
7548   1        RfConfigP__RfConfigWrite();
7549   1      }
7550          
7551          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
7552          #define RfHardwareP__RfConfig__flush(void) RfConfigP__RfConfig__flush()
7553          //# 85 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7554          static  /*inline*/   void RfPowerP__RfPower__rxOn(void)
7555          {
7556   1        /* atomic removed: atomic calls only */
7557   1      //#line 87
7558   1        do {
7559   2      //#line 87
7560   2            RFST = 0xED;
7561   2      //#line 87
7562   2            RFST = 0xED;
7563   2          }
7564   1        while (
7565   1      //#line 87
7566   1        87 == -1);
7567   1        /* atomic removed: atomic calls only */
7568   1        do {
7569   2      //#line 89
7570   2            RFST = 0xE3;
7571   2          }
7572   1        while (
7573   1      //#line 89
7574   1        89 == -1);
7575   1      }
7576          
7577          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7578          #define RfHardwareP__RfPower__rxOn(void) RfPowerP__RfPower__rxOn()
7579          //# 103 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7580          static  /*inline*/   void RfPowerP__RfPower__oscOn(void)
7581          {
7582   1      }
7583          
7584          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7585          #define RfHardwareP__RfPower__oscOn(void) RfPowerP__RfPower__oscOn()
7586          //# 16 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7587          static  /*inline*/   void RfPowerP__RfPower__radioOn(void)
7588          {
7589   1        (
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 135 

7590   1      //#line 31
7591   1        (uint8_t xdata *)0)[0x6196] = 0xF8;
7592   1        (
7593   1      
7594   1      
7595   1      
7596   1      
7597   1      
7598   1      
7599   1      
7600   1      
7601   1      
7602   1        (uint8_t xdata *)0)[0x61AE] = 0x00;
7603   1        (
7604   1      
7605   1        (uint8_t xdata *)0)[0x61B2] = 0x15;
7606   1        (
7607   1      //#line 58
7608   1        (uint8_t xdata *)0)[0x61FA] = 0x09;
7609   1        (
7610   1      
7611   1        (uint8_t xdata *)0)[0x61E5] = 0xFF;
7612   1      
7613   1      
7614   1        IEN2 |= 1 << 0;
7615   1      
7616   1      
7617   1        RFERRIE = 1;
7618   1      
7619   1      
7620   1      
7621   1      
7622   1      
7623   1      
7624   1      
7625   1        do {
7626   2            (
7627   2      //#line 75
7628   2            (uint8_t xdata *)0)[0x6164] = 0;
7629   2            (
7630   2      //#line 75
7631   2            (uint8_t xdata *)0)[0x6165] = 0;
7632   2            (
7633   2      //#line 75
7634   2            (uint8_t xdata *)0)[0x6166] = 0;
7635   2          }
7636   1        while (
7637   1      //#line 75
7638   1        75 == -1);
7639   1        do {
7640   2            (
7641   2      //#line 76
7642   2            (uint8_t xdata *)0)[0x6167] = 0;
7643   2            (
7644   2      //#line 76
7645   2            (uint8_t xdata *)0)[0x6168] = 0;
7646   2            (
7647   2      //#line 76
7648   2            (uint8_t xdata *)0)[0x6169] = 0;
7649   2          }
7650   1        while (
7651   1      //#line 76
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 136 

7652   1        76 == -1);
7653   1      }
7654          
7655          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7656          #define RfHardwareP__RfPower__radioOn(void) RfPowerP__RfPower__radioOn()
7657          //# 11 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7658          static  /*inline*/   void RfPowerP__RfPower__reset(void)
7659          {
7660   1      }
7661          
7662          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7663          #define RfHardwareP__RfPower__reset(void) RfPowerP__RfPower__reset()
7664          //# 19 "/opt/atos/tos/chips/rf2530/hardware/RfHardwareP.nc"
7665          static  /*inline*/   error_t RfHardwareP__AtosControl__start(void)
7666          {
7667   1      
7668   1        RfHardwareP__RfPower__reset();
7669   1        RfHardwareP__RfPower__radioOn();
7670   1        RfHardwareP__RfPower__oscOn();
7671   1        RfHardwareP__RfPower__rxOn();
7672   1      
7673   1      
7674   1        RfHardwareP__RfConfig__flush();
7675   1      
7676   1      
7677   1      
7678   1      
7679   1      
7680   1      
7681   1      
7682   1      
7683   1        RfHardwareP__RxControl__start();
7684   1        RfHardwareP__TxControl__start();
7685   1      
7686   1        return 0;
7687   1      }
7688          
7689          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7690          #define AtosMacP__HardwareAtosControl__start(void) RfHardwareP__AtosControl__start()
7691          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
7692          #define RfMacBaseCsmaP__FlashIEEE__GetIEEE(arg_0x7ea60f08) FlashIEEEP__FlashIEEE__GetIEEE(arg_0x7ea60f08)
7693          //# 159 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
7694          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void)
7695          {
7696   1        /* atomic removed: atomic calls only */
7697   1      //#line 161
7698   1        T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
7699   1      }
7700          
7701          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
7702          #define TransformAlarmC__1__AlarmFrom__stop(void) HplCC2530Timer1P__0__Alarm1__stop()
7703          //# 91 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
7704          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void)
7705          {
7706   1        /* atomic removed: atomic calls only */
7707   1      //#line 93
7708   1        /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__stop();
7709   1      }
7710          
7711          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
7712          #define RfMacBaseCsmaP__BackoffTimer__stop(void) TransformAlarmC__1__Alarm__stop()
7713          //# 226 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 137 

7714          static  /*inline*/   error_t RfMacBaseCsmaP__AtosControl__start(void)
7715          {
7716   1        /* atomic removed: atomic calls only */
7717   1        {
7718   2          RfMacBaseCsmaP__BackoffTimer__stop();
7719   2          RfMacBaseCsmaP__m_cancel = FALSE;
7720   2          RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
7721   2          RfMacBaseCsmaP__m_congestion_count = 0;
7722   2      
7723   2          RfMacBaseCsmaP__m_started = TRUE;
7724   2      
7725   2          RfMacBaseCsmaP__m_congestion_delay = 0;
7726   2      
7727   2          RfMacBaseCsmaP__FlashIEEE__GetIEEE(RfMacBaseCsmaP__m_test_ieee);
7728   2      
7729   2          {
7730   3            unsigned char __nesc_temp = 
7731   3      //#line 241
7732   3            0;
7733   3      
7734   3      //#line 241
7735   3            return __nesc_temp;
7736   3          }
7737   2        }
7738   1      }
7739          
7740          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
7741          #define RfMacBaseSendP__0__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
7742          //# 96 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
7743          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t idx)
7744          {
7745   1        /* atomic removed: atomic calls only */
7746   1        {
7747   2          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t t = /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__element(idx);
7748   2          uint8_t end = (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail + 4 - 1) % 4;
7749   2          uint8_t next_idx;
7750   2      
7751   2          if (!/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty()) 
7752   2            {
7753   3              idx += /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head;
7754   3              idx %= 4;
7755   3      
7756   3              while (idx != end) 
7757   3                {
7758   4                  next_idx = (idx + 1) % 4;
7759   4                  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[idx] = /*AMResourceCenterC.RfM
             -acBaseSendC.QueueExC*/QueueExC__0__queue[next_idx];
7760   4                  idx = next_idx;
7761   4                }
7762   3      
7763   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail = end;
7764   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size--;
7765   3            }
7766   2      
7767   2          {
7768   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
7769   3      //#line 120
7770   3            t;
7771   3      
7772   3      //#line 120
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 138 

7773   3            return __nesc_temp;
7774   3          }
7775   2        }
7776   1      }
7777          
7778          //#line 124
7779          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void)
7780          {
7781   1        /* atomic removed: atomic calls only */
7782   1        {
7783   2          while (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size() > 0) 
7784   2            {
7785   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(0);
7786   3            }
7787   2        }
7788   1      }
7789          
7790          //# 67 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
7791          #define RfMacBaseSendP__0__SendQueue__clear(void) QueueExC__0__QueueEx__clear()
7792          //# 186 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
7793          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosCon
             -trol__start(void)
7794          {
7795   1        /* atomic removed: atomic calls only */
7796   1        {
7797   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__clear();
7798   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
7799   2      
7800   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_started = TRUE;
7801   2      
7802   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn = /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__Random__rand16();
7803   2      
7804   2          {
7805   3            unsigned char __nesc_temp = 
7806   3      //#line 197
7807   3            0;
7808   3      
7809   3      //#line 197
7810   3            return __nesc_temp;
7811   3          }
7812   2        }
7813   1      }
7814          
7815          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7816          #define AMResourceCenterP__SubAtosControl__start(void) RfMacBaseSendP__0__AtosControl__start()
7817          //# 83 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
7818          static  /*inline*/   error_t AMResourceCenterP__AtosControl__start(void)
7819          {
7820   1        /* atomic removed: atomic calls only */
7821   1        {
7822   2          AMResourceCenterP__SubAtosControl__start();
7823   2      
7824   2          AMResourceCenterP__m_started = TRUE;
7825   2      
7826   2          {
7827   3            unsigned char __nesc_temp = 
7828   3      //#line 91
7829   3            0;
7830   3      
7831   3      //#line 91
7832   3            return __nesc_temp;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 139 

7833   3          }
7834   2        }
7835   1      }
7836          
7837          //# 75 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
7838          static  /*inline*/   error_t RfActiveMessageP__AtosControl__start(void)
7839          {
7840   1        /* atomic removed: atomic calls only */
7841   1        {
7842   2          RfActiveMessageP__m_started = TRUE;
7843   2      
7844   2          {
7845   3            unsigned char __nesc_temp = 
7846   3      //#line 81
7847   3            0;
7848   3      
7849   3      //#line 81
7850   3            return __nesc_temp;
7851   3          }
7852   2        }
7853   1      }
7854          
7855          //# 192 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
7856          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(uint8_t num)
7857          {
7858   1        /* atomic removed: atomic calls only */
7859   1      //#line 194
7860   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__m_timers[num].isrunning = FALSE;
7861   1      }
7862          
7863          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7864          #define RfReliableMacSendP__0__AckTimer__stop(void) VirtualizeTimerC__0__Timer__stop(1U)
7865          #define RfReliableMacSendP__0__TimeoutTimer__stop(void) VirtualizeTimerC__0__Timer__stop(2U)
7866          //# 204 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
7867          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRe
             -liableMacSendP*/RfReliableMacSendP__0__AtosControl__start(void)
7868          {
7869   1        /* atomic removed: atomic calls only */
7870   1        {
7871   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending = FALSE;
7872   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_result = FAIL;
7873   2      
7874   2      
7875   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__TimeoutTimer__stop();
7876   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__AckTimer__stop();
7877   2      
7878   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_started = TRUE;
7879   2      
7880   2          {
7881   3            unsigned char __nesc_temp = 
7882   3      //#line 217
7883   3            0;
7884   3      
7885   3      //#line 217
7886   3            return __nesc_temp;
7887   3          }
7888   2        }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 140 

7889   1      }
7890          
7891          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7892          #define RfReliableMacRetrySendP__0__SubAtosControl__start(void) RfReliableMacSendP__0__AtosControl__start(
             -)
7893          //# 151 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
7894          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP
             -*/RfReliableMacRetrySendP__0__AtosControl__start(void)
7895          {
7896   1        /* atomic removed: atomic calls only */
7897   1        {
7898   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__m_sending = FALSE;
7899   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__m_retry_times = 0;
7900   2      
7901   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__SubAtosControl__start();
7902   2      
7903   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__m_started = TRUE;
7904   2      
7905   2          {
7906   3            unsigned char __nesc_temp = 
7907   3      //#line 162
7908   3            0;
7909   3      
7910   3      //#line 162
7911   3            return __nesc_temp;
7912   3          }
7913   2        }
7914   1      }
7915          
7916          //# 101 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
7917          static  /*inline*/   error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceive
             -P*/RfReliableMacReceiveP__0__AtosControl__start(void)
7918          {
7919   1        /* atomic removed: atomic calls only */
7920   1        {
7921   2          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_0__m_started = TRUE;
7922   2      
7923   2          memset(&/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__0__m_ack_msg, 0, sizeof /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRelia
             -bleMacReceiveP__0__m_ack_msg);
7924   2      
7925   2          {
7926   3            unsigned char __nesc_temp = 
7927   3      //#line 109
7928   3            0;
7929   3      
7930   3      //#line 109
7931   3            return __nesc_temp;
7932   3          }
7933   2        }
7934   1      }
7935          
7936          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7937          #define RfReliableMacSendP__1__AckTimer__stop(void) VirtualizeTimerC__0__Timer__stop(3U)
7938          #define RfReliableMacSendP__1__TimeoutTimer__stop(void) VirtualizeTimerC__0__Timer__stop(4U)
7939          //# 204 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
7940          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 141 

             -iableMacSendP*/RfReliableMacSendP__1__AtosControl__start(void)
7941          {
7942   1        /* atomic removed: atomic calls only */
7943   1        {
7944   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_sending = FALSE;
7945   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_result = FAIL;
7946   2      
7947   2      
7948   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__TimeoutTimer__stop();
7949   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__AckTimer__stop();
7950   2      
7951   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_started = TRUE;
7952   2      
7953   2          {
7954   3            unsigned char __nesc_temp = 
7955   3      //#line 217
7956   3            0;
7957   3      
7958   3      //#line 217
7959   3            return __nesc_temp;
7960   3          }
7961   2        }
7962   1      }
7963          
7964          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7965          #define RfReliableMacRetrySendP__1__SubAtosControl__start(void) RfReliableMacSendP__1__AtosControl__start(
             -)
7966          //# 151 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
7967          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*
             -/RfReliableMacRetrySendP__1__AtosControl__start(void)
7968          {
7969   1        /* atomic removed: atomic calls only */
7970   1        {
7971   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_sending = FALSE;
7972   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_retry_times = 0;
7973   2      
7974   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__SubAtosControl__start();
7975   2      
7976   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_started = TRUE;
7977   2      
7978   2          {
7979   3            unsigned char __nesc_temp = 
7980   3      //#line 162
7981   3            0;
7982   3      
7983   3      //#line 162
7984   3            return __nesc_temp;
7985   3          }
7986   2        }
7987   1      }
7988          
7989          //# 101 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
7990          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 142 

             -*/RfReliableMacReceiveP__1__AtosControl__start(void)
7991          {
7992   1        /* atomic removed: atomic calls only */
7993   1        {
7994   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__
             -1__m_started = TRUE;
7995   2      
7996   2          memset(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__1__m_ack_msg, 0, sizeof /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__m_ack_msg);
7997   2      
7998   2          {
7999   3            unsigned char __nesc_temp = 
8000   3      //#line 109
8001   3            0;
8002   3      
8003   3      //#line 109
8004   3            return __nesc_temp;
8005   3          }
8006   2        }
8007   1      }
8008          
8009          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
8010           /*inline*/  static  error_t AtosMacP__SubAtosControl__start(void){
8011   1      //#line 4
8012   1        unsigned char result;
8013   1      //#line 4
8014   1      
8015   1      //#line 4
8016   1        result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__AtosControl__start();
8017   1      //#line 4
8018   1        result = ecombine(result, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
             -RfReliableMacRetrySendP__1__AtosControl__start());
8019   1      //#line 4
8020   1        result = ecombine(result, /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
             -*/RfReliableMacReceiveP__0__AtosControl__start());
8021   1      //#line 4
8022   1        result = ecombine(result, /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*
             -/RfReliableMacRetrySendP__0__AtosControl__start());
8023   1      //#line 4
8024   1        result = ecombine(result, RfActiveMessageP__AtosControl__start());
8025   1      //#line 4
8026   1        result = ecombine(result, AMResourceCenterP__AtosControl__start());
8027   1      //#line 4
8028   1        result = ecombine(result, RfMacBaseCsmaP__AtosControl__start());
8029   1      //#line 4
8030   1      
8031   1      //#line 4
8032   1        return result;
8033   1      //#line 4
8034   1      }
8035          //#line 4
8036          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
8037          #define AtosMacP__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
8038          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AtosMacP.nc"
8039          static  /*inline*/   error_t AtosMacP__AtosControl__start(void)
8040          {
8041   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8042   2          {
8043   3            rf_rmac_dsn = AtosMacP__Random__rand16();
8044   3      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 143 

8045   3            AtosMacP__SubAtosControl__start();
8046   3            AtosMacP__HardwareAtosControl__start();
8047   3      
8048   3            AtosMacP__m_started = TRUE;
8049   3      
8050   3            {
8051   4              unsigned char __nesc_temp = 
8052   4      //#line 28
8053   4              0;
8054   4      
8055   4              {
8056   5      //#line 28
8057   5                __nesc_atomic_end(__nesc_atomic); 
8058   5      //#line 28
8059   5                return __nesc_temp;
8060   5              }
8061   4            }
8062   3          }
8063   2      //#line 31
8064   2          __nesc_atomic_end(__nesc_atomic); }
8065   1      }
8066          
8067          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
8068          #define ADSenRFNodeP__AtosControl__start(void) AtosMacP__AtosControl__start()
8069          //# 53 "ADSenRFNodeP.nc"
8070          static  /*inline*/   void ADSenRFNodeP__Boot__booted(void)
8071          {
8072   1      
8073   1        {
8074   2      //#line 56
8075   2          {
8076   3      //#line 56
8077   3            if (9 >= uart_debug_level) {
8078   4      //#line 56
8079   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8080   5      //#line 56
8081   5                  {
8082   6      //#line 56
8083   6                    sprintf(uart_debug_buf, "===========boot============\n");
8084   6                  }
8085   5      //#line 57
8086   5                  __nesc_atomic_end(__nesc_atomic); }
8087   4      //#line 56
8088   4                ATOS_DEBUG_UART_PRINT();
8089   4              }
8090   3          }
8091   2        }
8092   1      //#line 56
8093   1        ;
8094   1        {
8095   2      //#line 57
8096   2          P1_2 = ~P1_2;
8097   2        }
8098   1      //#line 57
8099   1        ;
8100   1        ADSenRFNodeP__AtosControl__start();
8101   1      
8102   1        ADSenRFNodeP__Timer1__startPeriodic(2000);
8103   1        ADSenRFNodeP__p_sensor_payload = ADSenRFNodeP__Packet__getPayload(&ADSenRFNodeP__m_sensor_msg, (void *)0
             -);
8104   1      }
8105          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 144 

8106          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
8107          #define RealMainP__Boot__booted(void) ADSenRFNodeP__Boot__booted()
8108          //# 81 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8109          static  /*inline*/    void McuSleepP__McuSleepControl__default__afterWakeup(void)
8110          {
8111   1      }
8112          
8113          //# 10 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
8114          #define McuSleepP__McuSleepControl__afterWakeup(void) McuSleepP__McuSleepControl__default__afterWakeup()
8115          //# 84 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8116          static  /*inline*/    error_t McuSleepP__ModuleReset__default__reset(uint8_t reset_level)
8117          {
8118   1      }
8119          
8120          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
8121          #define McuSleepP__ModuleReset__reset(arg_0x7ebe5310) McuSleepP__ModuleReset__default__reset(arg_0x7ebe531
             -0)
8122          //# 65 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
8123          static   /*inline*/   void __nesc_enable_interrupt(void)
8124          //#line 65
8125          {
8126   1      //#line 65
8127   1        EA = 1;
8128   1      }
8129          
8130          //# 78 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8131          static  /*inline*/    void McuSleepP__McuSleepControl__default__beforeSleep(void)
8132          {
8133   1      }
8134          
8135          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
8136          #define McuSleepP__McuSleepControl__beforeSleep(void) McuSleepP__McuSleepControl__default__beforeSleep()
8137          //# 36 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8138          static  /*inline*/    void McuSleepP__McuSleep__sleep(void)
8139          {
8140   1      
8141   1      
8142   1        if (McuSleepP__m_need_sleep) 
8143   1          {
8144   2      
8145   2            ;
8146   2      
8147   2            do {
8148   3      //#line 45
8149   3                SLEEPCMD = (SLEEPCMD & ~CC2530_SLEEP_MODE_MASK) | CC2530_SLEEP_POWERMODE_2;
8150   3              }
8151   2            while (
8152   2      //#line 45
8153   2            0);
8154   2      
8155   2            McuSleepP__McuSleepControl__beforeSleep();
8156   2      
8157   2            ;
8158   2            __nesc_enable_interrupt();
8159   2      
8160   2            {
8161   3      //#line 52
8162   3              P1_3 = 1;
8163   3            }
8164   2      //#line 52
8165   2            ;
8166   2      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 145 

8167   2            McuSleepP__m_need_sleep = FALSE;
8168   2            {
8169   3      //#line 55
8170   3              PCON = 0x01;
8171   3            }
8172   2      //#line 55
8173   2            ;
8174   2      
8175   2      
8176   2      
8177   2      
8178   2      
8179   2      
8180   2            ;
8181   2      
8182   2            {
8183   3      //#line 64
8184   3              P1_3 = 0;
8185   3            }
8186   2      //#line 64
8187   2            ;
8188   2      
8189   2            McuSleepP__ModuleReset__reset(0);
8190   2            ;
8191   2      
8192   2            McuSleepP__McuSleepControl__afterWakeup();
8193   2          }
8194   1        else 
8195   1          {
8196   2          }
8197   1      }
8198          
8199          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
8200          #define SchedulerBasicP__McuSleep__sleep(void) McuSleepP__McuSleep__sleep()
8201          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
8202          #define SchedulerBasicP__TopTaskMgr__hasTasks(void) TopTaskMgrP__TopTaskMgr__hasTasks()
8203          //# 47 "/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc"
8204          static  /*inline*/    void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow
             -(void)
8205          {
8206   1      }
8207          
8208          //# 170 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8209          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow
             -(void)
8210          {
8211   1      }
8212          
8213          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8214           /*inline*/  static   void /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow(void){
8215   1      //#line 71
8216   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow();
8217   1      //#line 71
8218   1        /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow();
8219   1      //#line 71
8220   1      }
8221          //#line 71
8222          //# 125 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
8223          static  /*inline*/    void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void)
8224          {
8225   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8226   2          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 146 

8227   3            /*CounterMilli32C.Transform*/TransformCounterC__0__m_upper++;
8228   3      
8229   3            if ((/*CounterMilli32C.Transform*/TransformCounterC__0__m_upper & /*CounterMilli32C.Transform*/Trans
             -formCounterC__0__OVERFLOW_MASK) == 0) 
8230   3              {
8231   4                /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow();
8232   4              }
8233   3          }
8234   2      //#line 135
8235   2          __nesc_atomic_end(__nesc_atomic); }
8236   1      }
8237          
8238          //# 170 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8239          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow
             -(void)
8240          {
8241   1      }
8242          
8243          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8244          #define TransformCounterC__1__Counter__overflow(void) TransformAlarmC__1__Counter__overflow()
8245          //# 125 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
8246          static  /*inline*/    void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflo
             -w(void)
8247          {
8248   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8249   2          {
8250   3            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__m_upper++;
8251   3      
8252   3            if ((/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__m_upper & /*Counter32khz32C.Transfor
             -mCounterC*/TransformCounterC__1__OVERFLOW_MASK) == 0) 
8253   3              {
8254   4                /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__overflow();
8255   4              }
8256   3          }
8257   2      //#line 135
8258   2          __nesc_atomic_end(__nesc_atomic); }
8259   1      }
8260          
8261          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8262           /*inline*/  static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow(voi
             -d){
8263   1      //#line 71
8264   1        /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflow();
8265   1      //#line 71
8266   1        /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow();
8267   1      //#line 71
8268   1      }
8269          //#line 71
8270          //# 534 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
8271          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fir
             -ed(void)
8272          //#line 534
8273          {
8274   1      }
8275          
8276          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8277          #define HplCC2530Timer1P__0__Alarm2__fired(void) HplCC2530Timer1P__0__Alarm2__default__fired()
8278          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8279          #define RfMacBaseCsmaP__doGo__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseCsmaP__doGo)
8280          //# 83 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
8281          static  /*inline*/  uint32_t RfMacBaseCsmaP__congestionBackoffTimer(void)
8282          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 147 

8283   1        RfMacBaseCsmaP__m_this_random = RfMacBaseCsmaP__Random__rand16() % RfMacBaseCsmaP__m_congestion_delay;
8284   1        if (RfMacBaseCsmaP__m_this_random == 0) {
8285   2      //#line 86
8286   2          RfMacBaseCsmaP__m_this_random = 1;
8287   2          }
8288   1      //#line 87
8289   1        RfMacBaseCsmaP__m_this_delay += RfMacBaseCsmaP__m_this_random;
8290   1        return (uint32_t )RfMacBaseCsmaP__m_this_random * RfMacBaseCsmaP__RF_BACKOFF_PERIOD;
8291   1      }
8292          
8293          static  /*inline*/  void RfMacBaseCsmaP__congestion(void)
8294          {
8295   1      
8296   1      
8297   1        if (RfMacBaseCsmaP__m_congestion_count++ < RfMacBaseCsmaP__RF_CONGESTION_MAX) 
8298   1          {
8299   2            RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__congestionBackoffTimer());
8300   2          }
8301   1        else 
8302   1          {
8303   2            RfMacBaseCsmaP__signalDone(ERR_MAC_CONGESTION_FAIL);
8304   2          }
8305   1      }
8306          
8307          //#line 135
8308          static  /*inline*/    void RfMacBaseCsmaP__BackoffTimer__fired(void)
8309          {
8310   1        if (!(((uint8_t xdata *)0)[0x6193] & (1 << 4))) 
8311   1          {
8312   2            RfMacBaseCsmaP__congestion();
8313   2            return;
8314   2          }
8315   1      
8316   1      
8317   1      
8318   1      
8319   1        if (RfMacBaseCsmaP__m_state == RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA) 
8320   1          {
8321   2            RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND;
8322   2      
8323   2      
8324   2            RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__RF_TIME_ACK_TURNAROUND);
8325   2          }
8326   1        else {
8327   2      //#line 153
8328   2          if (RfMacBaseCsmaP__m_state == RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND) 
8329   2            {
8330   3              RfMacBaseCsmaP__doGo__postTask();
8331   3            }
8332   2          else 
8333   2            {
8334   3            }
8335   2          }
8336   1      }
8337          
8338          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8339          #define TransformAlarmC__1__Alarm__fired(void) RfMacBaseCsmaP__BackoffTimer__fired()
8340          //# 155 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8341          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(
             -void)
8342          {
8343   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 148 

8344   2          {
8345   3            if (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt == 0) 
8346   3              {
8347   4                /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__fired();
8348   4              }
8349   3            else 
8350   3              {
8351   4                /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm();
8352   4              }
8353   3          }
8354   2      //#line 167
8355   2          __nesc_atomic_end(__nesc_atomic); }
8356   1      }
8357          
8358          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8359          #define HplCC2530Timer1P__0__Alarm1__fired(void) TransformAlarmC__1__AlarmFrom__fired()
8360          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8361          #define AlarmToTimerC__0__firedTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AlarmToTimerC__0_
             -_firedTask)
8362          //# 93 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
8363          static  /*inline*/    void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void)
8364          {
8365   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__postTask();
8366   1      }
8367          
8368          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8369          #define TransformAlarmC__0__Alarm__fired(void) AlarmToTimerC__0__Alarm__fired()
8370          //# 155 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8371          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(
             -void)
8372          {
8373   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8374   2          {
8375   3            if (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt == 0) 
8376   3              {
8377   4                /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired();
8378   4              }
8379   3            else 
8380   3              {
8381   4                /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm();
8382   4              }
8383   3          }
8384   2      //#line 167
8385   2          __nesc_atomic_end(__nesc_atomic); }
8386   1      }
8387          
8388          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8389          #define HplCC2530Timer1P__0__Alarm0__fired(void) TransformAlarmC__0__AlarmFrom__fired()
8390          //# 403 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
8391          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handle
             -r(void)
8392          {
8393   1        uint8_t flag;
8394   1      
8395   1        do {
8396   2      //#line 407
8397   2            m_critical_state = EA;
8398   2      //#line 407
8399   2            EA = 0;
8400   2          }
8401   1        while (
8402   1      //#line 407
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 149 

8403   1        407 == -1);
8404   1      
8405   1        {
8406   2          flag = /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag;
8407   2          /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag = 0x00;
8408   2        }
8409   1      
8410   1        do {
8411   2      //#line 414
8412   2            EA = m_critical_state;
8413   2          }
8414   1        while (
8415   1      //#line 414
8416   1        414 == -1);
8417   1      
8418   1      
8419   1        if (flag & (1 << 0)) 
8420   1          {
8421   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__fired();
8422   2          }
8423   1      
8424   1        if (flag & (1 << 1)) 
8425   1          {
8426   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__fired();
8427   2          }
8428   1      
8429   1        if (flag & (1 << 2)) 
8430   1          {
8431   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__fired();
8432   2          }
8433   1      
8434   1        if (flag & (1 << 3)) 
8435   1          {
8436   2          }
8437   1      
8438   1      
8439   1        if (flag & (1 << 4)) 
8440   1          {
8441   2          }
8442   1      
8443   1      
8444   1        if (flag & (1 << 5)) 
8445   1          {
8446   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow();
8447   2          }
8448   1      
8449   1      
8450   1        if (/*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag) 
8451   1          {
8452   2            {
8453   3      //#line 450
8454   3              { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8455   4      //#line 450
8456   4                {
8457   5      //#line 450
8458   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
8459   5                }
8460   4      //#line 451
8461   4                __nesc_atomic_end(__nesc_atomic); }
8462   3            }
8463   2      //#line 450
8464   2            ;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 150 

8465   2          }
8466   1      }
8467          
8468          //# 257 "/usr/lib/ncc/nesc_nx.h"
8469          static   /*inline*/   int8_t __nesc_ntoh_int8(const void *source)
8470          //#line 257
8471          {
8472   1      //#line 257
8473   1        return __nesc_ntoh_uint8(source);
8474   1      }
8475          
8476          //# 67 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
8477          static  /*inline*/    message_t *RfActiveMessageP__Snoop__default__receive(uint8_t id, message_t *msg, voi
             -d *payload, uint8_t len)
8478          {
8479   1      }
8480          
8481          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
8482          #define RfActiveMessageP__Snoop__receive(arg_0x7e3d6bb0,arg_0x7eb43010,arg_0x7eb431b0,arg_0x7eb43338) RfAc
             -tiveMessageP__Snoop__default__receive(arg_0x7e3d6bb0, arg_0x7eb43010, arg_0x7eb431b0, arg_0x7eb43338)
8483          //# 54 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
8484          static  /*inline*/   am_addr_t RfPacketP__AMPacket__source(message_t *amsg)
8485          {
8486   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->src);
8487   1      }
8488          
8489          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8490          #define ADSenRFNodeP__AMPacket__source(arg_0x7eb33030) RfPacketP__AMPacket__source(arg_0x7eb33030)
8491          //# 88 "ADSenRFNodeP.nc"
8492          static  /*inline*/   message_t *ADSenRFNodeP__Receive__receive(message_t *msg, void *payload, uint8_t len)
8493          {
8494   1      
8495   1      
8496   1      
8497   1      
8498   1      
8499   1      
8500   1      
8501   1      
8502   1      
8503   1        ADSenRFNodeP__dest_address = ADSenRFNodeP__AMPacket__source(msg);
8504   1        ADSenRFNodeP__sensorDataTask__postTask();
8505   1      }
8506          
8507          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
8508          #define RfReliableMacReceiveP__0__Receive__receive(arg_0x7eb43010,arg_0x7eb431b0,arg_0x7eb43338) ADSenRFNo
             -deP__Receive__receive(arg_0x7eb43010, arg_0x7eb431b0, arg_0x7eb43338)
8509          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8510          #define RfReliableMacReceiveP__0__AMPacket__source(arg_0x7eb33030) RfPacketP__AMPacket__source(arg_0x7eb33
             -030)
8511          //# 92 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
8512          static  /*inline*/   bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(uint
             -8_t field_id, uint16_t addr, uint8_t dsn)
8513          {
8514   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8515   2          {
8516   3            {
8517   4              unsigned char __nesc_temp = 
8518   4      //#line 96
8519   4              /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(addr, field_id, dsn);
8520   4      
8521   4              {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 151 

8522   5      //#line 96
8523   5                __nesc_atomic_end(__nesc_atomic); 
8524   5      //#line 96
8525   5                return __nesc_temp;
8526   5              }
8527   4            }
8528   3          }
8529   2      //#line 99
8530   2          __nesc_atomic_end(__nesc_atomic); }
8531   1      }
8532          
8533          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
8534          #define RfReliableMacReceiveP__0__DsnFilter__filter(arg_0x7e408ba8,arg_0x7e408d30) DsnFilterCenterP__0__Ds
             -nFilter__filter(0U, arg_0x7e408ba8, arg_0x7e408d30)
8535          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8536          #define RfReliableMacReceiveP__0__sendAckTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacReceiveP__0__sendAckTask)
8537          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8538          #define RfReliableMacReceiveP__0__AMPacket__setDestination(arg_0x7eb335f8,arg_0x7eb33788) RfPacketP__AMPac
             -ket__setDestination(arg_0x7eb335f8, arg_0x7eb33788)
8539          //# 86 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
8540          static  /*inline*/   am_group_t RfPacketP__AMPacket__group(message_t *amsg)
8541          {
8542   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->destpan);
8543   1      }
8544          
8545          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8546          #define RfReliableMacReceiveP__0__AMPacket__group(arg_0x7eb31d08) RfPacketP__AMPacket__group(arg_0x7eb31d0
             -8)
8547          
8548          
8549          
8550          
8551          
8552          
8553          
8554          
8555          
8556          
8557          #define RfReliableMacReceiveP__0__AMPacket__setGroup(arg_0x7eb25558,arg_0x7eb256e8) RfPacketP__AMPacket__s
             -etGroup(arg_0x7eb25558, arg_0x7eb256e8)
8558          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
8559          #define RfReliableMacReceiveP__0__RfReliableMacAck__fillAckMessage(arg_0x7e6b1850,arg_0x7e6b19e0,arg_0x7e6
             -b1b90,arg_0x7e6b1d40) RfReliableMacAckP__RfReliableMacAck__fillAckMessage(arg_0x7e6b1850, arg_0x7e6b19e0, arg_0x7e6b1b90
             -, arg_0x7e6b1d40)
8560          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
8561          #define RfReliableMacReceiveP__0__SubPacket__getPayload(arg_0x7eb20840,arg_0x7eb209e8) RfPacketP__Packet__
             -getPayload(arg_0x7eb20840, arg_0x7eb209e8)
8562          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
8563          #define RfReliableMacReceiveP__0__PacketEx__getPacketHeader(arg_0x7e714ca0) RfReliableMacPacketP__PacketEx
             -__getPacketHeader(arg_0x7e714ca0)
8564          
8565          
8566          #define RfReliableMacReceiveP__0__PacketEx__isValidPacket(arg_0x7e713190) RfReliableMacPacketP__PacketEx__
             -isValidPacket(arg_0x7e713190)
8567          //# 57 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
8568          static  /*inline*/   message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRece
             -iveP*/RfReliableMacReceiveP__0__SubReceive__receive(message_t *msg, void *payload, uint8_t len)
8569          {
8570   1        if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__0__PacketEx__isValidPacket(msg)) 
8571   1          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 152 

8572   2            rf_rmac_header_t *header = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRec
             -eiveP*/RfReliableMacReceiveP__0__PacketEx__getPacketHeader(msg);
8573   2            rf_ack_t *ack_header = (rf_ack_t *)/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliab
             -leMacReceiveP*/RfReliableMacReceiveP__0__SubPacket__getPayload(&/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC
             -.RfReliableMacReceiveP*/RfReliableMacReceiveP__0__m_ack_msg, (void *)0);
8574   2      
8575   2            payload = (uint8_t *)payload + sizeof(rf_rmac_header_t );
8576   2            len -= sizeof(rf_rmac_header_t );
8577   2      
8578   2      
8579   2      
8580   2      
8581   2      
8582   2            if (header->ack_req) 
8583   2              {
8584   3                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__RfReliableMacAck__fillAckMessage(msg, header->dsn, &/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.R
             -fReliableMacReceiveP*/RfReliableMacReceiveP__0__m_ack_msg, ack_header);
8585   3      
8586   3                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__AMPacket__setGroup(&/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__0__m_ack_msg, /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__AMPacket__group(msg));
8587   3      
8588   3                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__AMPacket__setDestination(&/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRe
             -liableMacReceiveP__0__m_ack_msg, /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRelia
             -bleMacReceiveP__0__AMPacket__source(msg));
8589   3      
8590   3                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__sendAckTask__postTask();
8591   3              }
8592   2      
8593   2      
8594   2            if (!/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__DsnFilter__filter(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__0__AMPacket__source(msg), header->dsn)) 
8595   2              {
8596   3                return msg;
8597   3              }
8598   2      
8599   2            return /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__Receive__receive(msg, payload, len);
8600   2          }
8601   1      
8602   1      
8603   1        return msg;
8604   1      }
8605          
8606          //# 403 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8607          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *msg, anstd_trace_
             -t *trace_ack)
8608          {
8609   1      }
8610          
8611          //# 19 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8612          #define AtosNetStdP__AtosNetStd__receivedTraceAck(arg_0x7e3741f8,arg_0x7e3743b8) AtosNetStdP__AtosNetStd__
             -default__receivedTraceAck(arg_0x7e3741f8, arg_0x7e3743b8)
8613          //# 177 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8614          static  /*inline*/  void AtosNetStdP__receiveTraceAck(message_t *msg, anstd_trace_ack_t *trace_ack)
8615          {
8616   1        int index = AtosNetStdP__indexOfTraceItem(trace_ack, AtosNetStdP__AMPacket__address());
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 153 

8617   1      
8618   1        if (trace_ack->total_count > 20) 
8619   1          {
8620   2            return;
8621   2          }
8622   1      
8623   1        if (index < 0) 
8624   1          {
8625   2            return;
8626   2          }
8627   1      
8628   1        if (index < trace_ack->total_count - 1) 
8629   1          {
8630   2            trace_ack->items[index + 1].backward_rssi = __nesc_ntoh_int8((unsigned char *)&((rf_meta_data_t *)ms
             -g->meta_data)->rssi);
8631   2          }
8632   1      
8633   1        AtosNetStdP__traceBackward(msg, trace_ack, index);
8634   1        AtosNetStdP__AtosNetStd__receivedTraceAck(msg, trace_ack);
8635   1      }
8636          
8637          //#line 399
8638          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *msg, anstd_trace_t *
             -trace)
8639          {
8640   1      }
8641          
8642          //# 18 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8643          #define AtosNetStdP__AtosNetStd__receivedTrace(arg_0x7e376b58,arg_0x7e376d08) AtosNetStdP__AtosNetStd__def
             -ault__receivedTrace(arg_0x7e376b58, arg_0x7e376d08)
8644          //# 134 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8645          static  /*inline*/  void AtosNetStdP__traceForward(message_t *msg, anstd_trace_t *trace, int index)
8646          {
8647   1        uint16_t node_id = 0xFFFF;
8648   1      
8649   1      //#line 137
8650   1        memcpy(&AtosNetStdP__m_send_msg, msg, sizeof AtosNetStdP__m_send_msg);
8651   1      
8652   1        if (index < trace->total_count - 1) 
8653   1          {
8654   2            node_id = trace->items[index + 1].node_id;
8655   2            AtosNetStdP__AMSend__send(node_id, &AtosNetStdP__m_send_msg, AtosNetStdP__Packet__payloadLength(&Ato
             -sNetStdP__m_send_msg));
8656   2          }
8657   1        else 
8658   1          {
8659   2            AtosNetStdP__traceEnd(msg, trace, index);
8660   2          }
8661   1      }
8662          
8663          
8664          static  /*inline*/  void AtosNetStdP__receiveTrace(message_t *msg, anstd_trace_t *trace)
8665          {
8666   1        int index = AtosNetStdP__indexOfTraceItem(trace, AtosNetStdP__AMPacket__address());
8667   1      
8668   1        if (trace->total_count > 20) 
8669   1          {
8670   2            return;
8671   2          }
8672   1      
8673   1        if (index < 0) 
8674   1          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 154 

8675   2            return;
8676   2          }
8677   1      
8678   1        if (index > 0) 
8679   1          {
8680   2            trace->items[index - 1].forward_rssi = __nesc_ntoh_int8((unsigned char *)&((rf_meta_data_t *)msg->me
             -ta_data)->rssi);
8681   2          }
8682   1      
8683   1      
8684   1        trace->traced_count = index + 1;
8685   1      
8686   1        AtosNetStdP__traceForward(msg, trace, index);
8687   1        AtosNetStdP__AtosNetStd__receivedTrace(msg, trace);
8688   1      }
8689          
8690          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8691          #define AtosNetStdP__rebootTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__rebootTa
             -sk)
8692          //# 394 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8693          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *reboot)
8694          {
8695   1      }
8696          
8697          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8698          #define AtosNetStdP__AtosNetStd__receivedReboot(arg_0x7e3766a8) AtosNetStdP__AtosNetStd__default__received
             -Reboot(arg_0x7e3766a8)
8699          //# 94 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8700          static  /*inline*/  void AtosNetStdP__receiveReboot(message_t *msg, anstd_reboot_t *reboot)
8701          {
8702   1        AtosNetStdP__AtosNetStd__receivedReboot(reboot);
8703   1        AtosNetStdP__rebootTask__postTask();
8704   1      }
8705          
8706          //# 166 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
8707          static  /*inline*/   void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *ieee)
8708          {
8709   1        /* atomic removed: atomic calls only */
8710   1        {
8711   2          memcpy(FlashIEEEP__m_ieee, ieee, sizeof FlashIEEEP__m_ieee);
8712   2          FlashIEEEP__m_ieee_flash[0] = FlashIEEEP__m_ieee[7];
8713   2          FlashIEEEP__m_ieee_flash[1] = FlashIEEEP__m_ieee[6];
8714   2          FlashIEEEP__m_ieee_flash[2] = FlashIEEEP__m_ieee[5];
8715   2          FlashIEEEP__m_ieee_flash[3] = FlashIEEEP__m_ieee[4];
8716   2          FlashIEEEP__m_ieee_flash[4] = FlashIEEEP__m_ieee[3];
8717   2          FlashIEEEP__m_ieee_flash[5] = FlashIEEEP__m_ieee[2];
8718   2          FlashIEEEP__m_ieee_flash[6] = FlashIEEEP__m_ieee[1];
8719   2          FlashIEEEP__m_ieee_flash[7] = FlashIEEEP__m_ieee[0];
8720   2      
8721   2      
8722   2          FlashIEEEP__HalFlash__erase(0x3FFE8);
8723   2          FlashIEEEP__HalFlash__write(0x3FFE8, FlashIEEEP__m_ieee_flash, sizeof FlashIEEEP__m_ieee_flash);
8724   2      
8725   2      
8726   2      
8727   2      
8728   2          FlashIEEEP__readFromFlash();
8729   2          FlashIEEEP__FlashIEEE__WriteToRegister();
8730   2          FlashIEEEP__FlashIEEE__WriteToAM();
8731   2        }
8732   1      }
8733          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 155 

8734          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
8735          #define AtosNetStdP__FlashIEEE__WriteIEEE(arg_0x7ea553d8) FlashIEEEP__FlashIEEE__WriteIEEE(arg_0x7ea553d8)
8736          //# 390 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8737          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *setieee)
8738          {
8739   1      }
8740          
8741          //# 16 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8742          #define AtosNetStdP__AtosNetStd__receivedSetIEEE(arg_0x7e3761f8) AtosNetStdP__AtosNetStd__default__receive
             -dSetIEEE(arg_0x7e3761f8)
8743          //# 84 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8744          static  /*inline*/  void AtosNetStdP__receiveSetIEEE(message_t *msg, anstd_setieee_t *setieee)
8745          {
8746   1        AtosNetStdP__AtosNetStd__receivedSetIEEE(setieee);
8747   1      
8748   1      
8749   1        AtosNetStdP__FlashIEEE__WriteIEEE(setieee->ieee);
8750   1      
8751   1        AtosNetStdP__rebootTask__postTask();
8752   1      }
8753          
8754          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8755          #define AtosNetStdP__nodeStatusUpTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__no
             -deStatusUpTask)
8756          //# 386 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8757          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *discover
             -y)
8758          {
8759   1      }
8760          
8761          //# 15 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8762          #define AtosNetStdP__AtosNetStd__receivedDiscovery(arg_0x7e377d20) AtosNetStdP__AtosNetStd__default__recei
             -vedDiscovery(arg_0x7e377d20)
8763          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8764          #define AtosNetStdP__AMPacket__source(arg_0x7eb33030) RfPacketP__AMPacket__source(arg_0x7eb33030)
8765          //# 75 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8766          static  /*inline*/  void AtosNetStdP__receiveDiscovery(message_t *msg, anstd_discovery_t *discovery)
8767          {
8768   1        AtosNetStdP__m_ack_addr = AtosNetStdP__AMPacket__source(msg);
8769   1        AtosNetStdP__AtosNetStd__receivedDiscovery(discovery);
8770   1      
8771   1      
8772   1        AtosNetStdP__nodeStatusUpTask__postTask();
8773   1      }
8774          
8775          //#line 382
8776          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *msg, anstd_no
             -de_status_t *status)
8777          {
8778   1      }
8779          
8780          //# 14 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
8781          #define AtosNetStdP__AtosNetStd__receivedNodeStatusUp(arg_0x7e377698,arg_0x7e377850) AtosNetStdP__AtosNetS
             -td__default__receivedNodeStatusUp(arg_0x7e377698, arg_0x7e377850)
8782          //# 69 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
8783          static  /*inline*/  void AtosNetStdP__receiveNodeStatusUp(message_t *msg, anstd_node_status_t *status)
8784          {
8785   1        AtosNetStdP__AtosNetStd__receivedNodeStatusUp(msg, status);
8786   1      }
8787          
8788          //#line 203
8789          static  /*inline*/   message_t *AtosNetStdP__Receive__receive(message_t *msg, void *payload, uint8_t len)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 156 

8790          {
8791   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8792   2          {
8793   3            anstd_header_t *anstd_header = (anstd_header_t *)payload;
8794   3      
8795   3            switch (anstd_header->_data_type) 
8796   3              {
8797   4                case ANSTD_DATA_TYPE_NODE_STATUS_UP: 
8798   4                  AtosNetStdP__receiveNodeStatusUp(msg, (anstd_node_status_t *)payload);
8799   4                break;
8800   4      
8801   4                case ANSTD_DATA_TYPE_DISCOVERY: 
8802   4                  AtosNetStdP__receiveDiscovery(msg, (anstd_discovery_t *)payload);
8803   4                break;
8804   4      
8805   4                case ANSTD_DATA_TYPE_SETIEEE: 
8806   4                  AtosNetStdP__receiveSetIEEE(msg, (anstd_setieee_t *)payload);
8807   4                break;
8808   4      
8809   4                case ANSTD_DATA_TYPE_REBOOT: 
8810   4                  AtosNetStdP__receiveReboot(msg, (anstd_reboot_t *)payload);
8811   4                break;
8812   4      
8813   4                case ANSTD_DATA_TYPE_TRACE: 
8814   4                  AtosNetStdP__receiveTrace(msg, (anstd_trace_t *)payload);
8815   4                break;
8816   4      
8817   4                case ANSTD_DATA_TYPE_TRACE_ACK: 
8818   4                  AtosNetStdP__receiveTraceAck(msg, (anstd_trace_ack_t *)payload);
8819   4                break;
8820   4              }
8821   3      
8822   3            {
8823   4              nx_struct message_t *__nesc_temp = 
8824   4      //#line 236
8825   4              msg;
8826   4      
8827   4              {
8828   5      //#line 236
8829   5                __nesc_atomic_end(__nesc_atomic); 
8830   5      //#line 236
8831   5                return __nesc_temp;
8832   5              }
8833   4            }
8834   3          }
8835   2      //#line 239
8836   2          __nesc_atomic_end(__nesc_atomic); }
8837   1      }
8838          
8839          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
8840          #define RfReliableMacReceiveP__1__Receive__receive(arg_0x7eb43010,arg_0x7eb431b0,arg_0x7eb43338) AtosNetSt
             -dP__Receive__receive(arg_0x7eb43010, arg_0x7eb431b0, arg_0x7eb43338)
8841          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8842          #define RfReliableMacReceiveP__1__AMPacket__source(arg_0x7eb33030) RfPacketP__AMPacket__source(arg_0x7eb33
             -030)
8843          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
8844          #define RfReliableMacReceiveP__1__DsnFilter__filter(arg_0x7e408ba8,arg_0x7e408d30) DsnFilterCenterP__0__Ds
             -nFilter__filter(0U, arg_0x7e408ba8, arg_0x7e408d30)
8845          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8846          #define RfReliableMacReceiveP__1__sendAckTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacReceiveP__1__sendAckTask)
8847          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 157 

8848          #define RfReliableMacReceiveP__1__AMPacket__setDestination(arg_0x7eb335f8,arg_0x7eb33788) RfPacketP__AMPac
             -ket__setDestination(arg_0x7eb335f8, arg_0x7eb33788)
8849          //#line 166
8850          #define RfReliableMacReceiveP__1__AMPacket__group(arg_0x7eb31d08) RfPacketP__AMPacket__group(arg_0x7eb31d0
             -8)
8851          
8852          
8853          
8854          
8855          
8856          
8857          
8858          
8859          
8860          
8861          #define RfReliableMacReceiveP__1__AMPacket__setGroup(arg_0x7eb25558,arg_0x7eb256e8) RfPacketP__AMPacket__s
             -etGroup(arg_0x7eb25558, arg_0x7eb256e8)
8862          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
8863          #define RfReliableMacReceiveP__1__RfReliableMacAck__fillAckMessage(arg_0x7e6b1850,arg_0x7e6b19e0,arg_0x7e6
             -b1b90,arg_0x7e6b1d40) RfReliableMacAckP__RfReliableMacAck__fillAckMessage(arg_0x7e6b1850, arg_0x7e6b19e0, arg_0x7e6b1b90
             -, arg_0x7e6b1d40)
8864          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
8865          #define RfReliableMacReceiveP__1__SubPacket__getPayload(arg_0x7eb20840,arg_0x7eb209e8) RfPacketP__Packet__
             -getPayload(arg_0x7eb20840, arg_0x7eb209e8)
8866          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
8867          #define RfReliableMacReceiveP__1__PacketEx__getPacketHeader(arg_0x7e714ca0) RfReliableMacPacketP__PacketEx
             -__getPacketHeader(arg_0x7e714ca0)
8868          
8869          
8870          #define RfReliableMacReceiveP__1__PacketEx__isValidPacket(arg_0x7e713190) RfReliableMacPacketP__PacketEx__
             -isValidPacket(arg_0x7e713190)
8871          //# 57 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
8872          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRecei
             -veP*/RfReliableMacReceiveP__1__SubReceive__receive(message_t *msg, void *payload, uint8_t len)
8873          {
8874   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__1__PacketEx__isValidPacket(msg)) 
8875   1          {
8876   2            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRece
             -iveP*/RfReliableMacReceiveP__1__PacketEx__getPacketHeader(msg);
8877   2            rf_ack_t *ack_header = (rf_ack_t *)/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliabl
             -eMacReceiveP*/RfReliableMacReceiveP__1__SubPacket__getPayload(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.R
             -fReliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack_msg, (void *)0);
8878   2      
8879   2            payload = (uint8_t *)payload + sizeof(rf_rmac_header_t );
8880   2            len -= sizeof(rf_rmac_header_t );
8881   2      
8882   2      
8883   2      
8884   2      
8885   2      
8886   2            if (header->ack_req) 
8887   2              {
8888   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__RfReliableMacAck__fillAckMessage(msg, header->dsn, &/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfR
             -eliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack_msg, ack_header);
8889   3      
8890   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__AMPacket__setGroup(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__1__m_ack_msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__AMPacket__group(msg));
8891   3      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 158 

8892   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__AMPacket__setDestination(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReli
             -ableMacReceiveP__1__m_ack_msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__1__AMPacket__source(msg));
8893   3      
8894   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__sendAckTask__postTask();
8895   3              }
8896   2      
8897   2      
8898   2            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__DsnFilter__filter(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__AMPacket__source(msg), header->dsn)) 
8899   2              {
8900   3                return msg;
8901   3              }
8902   2      
8903   2            return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__Receive__receive(msg, payload, len);
8904   2          }
8905   1      
8906   1      
8907   1        return msg;
8908   1      }
8909          
8910          //# 42 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
8911          static  /*inline*/    void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t 
             -*send_msg, message_t *ack_msg, rf_ack_t *ack)
8912          {
8913   1      }
8914          
8915          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
8916          #define RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(arg_0x7e428508,arg_0x7e4286b8,arg_0x7e
             -428868) RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(arg_0x7e428508, arg_0x7e4286b8, arg_0x7e428
             -868)
8917          //# 32 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
8918          static  /*inline*/   void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *send_msg, mess
             -age_t *ack_msg, rf_ack_t *ack)
8919          {
8920   1        RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(send_msg, ack_msg, ack);
8921   1      }
8922          
8923          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
8924          #define RfReliableMacSendP__1__RfReliableMacAck__receiveAckMessage(arg_0x7e6b0238,arg_0x7e6b03e8,arg_0x7e6
             -b0598) RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(arg_0x7e6b0238, arg_0x7e6b03e8, arg_0x7e6b0598)
8925          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8926          #define RfReliableMacSendP__1__AMPacket__source(arg_0x7eb33030) RfPacketP__AMPacket__source(arg_0x7eb33030
             -)
8927          //#line 67
8928          #define RfReliableMacSendP__1__AMPacket__destination(arg_0x7eb35a28) RfPacketP__AMPacket__destination(arg_
             -0x7eb35a28)
8929          //# 158 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
8930          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len)
8931          {
8932   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
8933   1          {
8934   2            rf_meta_data_t *meta_data = (rf_meta_data_t *)/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.R
             -fReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg->meta_data;
8935   2            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.R
             -fReliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 159 

             -.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg);
8936   2      
8937   2            rf_ack_t *ack_header = (rf_ack_t *)payload;
8938   2      
8939   2      
8940   2      
8941   2      
8942   2      
8943   2      
8944   2            if (
8945   2      //#line 169
8946   2            header->ack_req
8947   2             && header->dsn == __nesc_ntoh_uint8((unsigned char *)&ack_header->dsn)
8948   2             && /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__AMPacket__source(ack_msg) == /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.
             -RfReliableMacSendP*/RfReliableMacSendP__1__AMPacket__destination(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.Rf
             -ReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg)
8949   2             && /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__AMPacket__destination(ack_msg) == /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacS
             -endC.RfReliableMacSendP*/RfReliableMacSendP__1__AMPacket__source(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.Rf
             -ReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg)) 
8950   2      
8951   2              {
8952   3                rf_meta_data_t *ack_meta_data = (rf_meta_data_t *)ack_msg->meta_data;
8953   3      
8954   3      
8955   3                __nesc_hton_int8((unsigned char *)&meta_data->rssi, __nesc_ntoh_int8((unsigned char *)&ack_meta_
             -data->rssi));
8956   3                __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_uint8((unsigned char *)&ack_meta
             -_data->lqi));
8957   3                __nesc_hton_int8((unsigned char *)&meta_data->crc, __nesc_ntoh_int8((unsigned char *)&ack_meta_d
             -ata->crc));
8958   3                __nesc_hton_int8((unsigned char *)&meta_data->ack, TRUE);
8959   3      
8960   3      
8961   3                memcpy((void *)& meta_data->ack_msg, (void *)ack_header, sizeof  meta_data->ack_msg);
8962   3      
8963   3      
8964   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__RfReliableMacAck__receiveAckMessage(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMa
             -cSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg, ack_msg, ack_header);
8965   3      
8966   3      
8967   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__m_msg, 0);
8968   3              }
8969   2          }
8970   1      
8971   1        return ack_msg;
8972   1      }
8973          
8974          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
8975          #define RfReliableMacSendP__0__RfReliableMacAck__receiveAckMessage(arg_0x7e6b0238,arg_0x7e6b03e8,arg_0x7e6
             -b0598) RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(arg_0x7e6b0238, arg_0x7e6b03e8, arg_0x7e6b0598)
8976          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8977          #define RfReliableMacSendP__0__AMPacket__source(arg_0x7eb33030) RfPacketP__AMPacket__source(arg_0x7eb33030
             -)
8978          //#line 67
8979          #define RfReliableMacSendP__0__AMPacket__destination(arg_0x7eb35a28) RfPacketP__AMPacket__destination(arg_
             -0x7eb35a28)
8980          //# 158 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 160 

8981          static  /*inline*/   message_t */*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.R
             -fReliableMacSendP*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len)
8982          {
8983   1        if (/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__m_sending) 
8984   1          {
8985   2            rf_meta_data_t *meta_data = (rf_meta_data_t *)/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.
             -RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg->meta_data;
8986   2            rf_rmac_header_t *header = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.
             -RfReliableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSen
             -dC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg);
8987   2      
8988   2            rf_ack_t *ack_header = (rf_ack_t *)payload;
8989   2      
8990   2      
8991   2      
8992   2      
8993   2      
8994   2      
8995   2            if (
8996   2      //#line 169
8997   2            header->ack_req
8998   2             && header->dsn == __nesc_ntoh_uint8((unsigned char *)&ack_header->dsn)
8999   2             && /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__AMPacket__source(ack_msg) == /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSend
             -C.RfReliableMacSendP*/RfReliableMacSendP__0__AMPacket__destination(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC
             -.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg)
9000   2             && /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__AMPacket__destination(ack_msg) == /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMa
             -cSendC.RfReliableMacSendP*/RfReliableMacSendP__0__AMPacket__source(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC
             -.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg)) 
9001   2      
9002   2              {
9003   3                rf_meta_data_t *ack_meta_data = (rf_meta_data_t *)ack_msg->meta_data;
9004   3      
9005   3      
9006   3                __nesc_hton_int8((unsigned char *)&meta_data->rssi, __nesc_ntoh_int8((unsigned char *)&ack_meta_
             -data->rssi));
9007   3                __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_uint8((unsigned char *)&ack_meta
             -_data->lqi));
9008   3                __nesc_hton_int8((unsigned char *)&meta_data->crc, __nesc_ntoh_int8((unsigned char *)&ack_meta_d
             -ata->crc));
9009   3                __nesc_hton_int8((unsigned char *)&meta_data->ack, TRUE);
9010   3      
9011   3      
9012   3                memcpy((void *)& meta_data->ack_msg, (void *)ack_header, sizeof  meta_data->ack_msg);
9013   3      
9014   3      
9015   3                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__RfReliableMacAck__receiveAckMessage(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliable
             -MacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg, ack_msg, ack_header);
9016   3      
9017   3      
9018   3                /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__signalDone(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
             -dP*/RfReliableMacSendP__0__m_msg, 0);
9019   3              }
9020   2          }
9021   1      
9022   1        return ack_msg;
9023   1      }
9024          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 161 

9025          //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
9026          static  /*inline*/    message_t *RfActiveMessageP__Receive__default__receive(uint8_t id, message_t *msg, v
             -oid *payload, uint8_t len)
9027          {
9028   1      }
9029          
9030          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
9031           /*inline*/  static  message_t *RfActiveMessageP__Receive__receive(uint8_t arg_0x7e3d63f8, message_t *arg_
             -0x7eb43010, void *arg_0x7eb431b0, uint8_t arg_0x7eb43338){
9032   1      //#line 67
9033   1        nx_struct message_t *result;
9034   1      //#line 67
9035   1      
9036   1      //#line 67
9037   1        switch (arg_0x7e3d63f8) {
9038   2      //#line 67
9039   2          case 123:
9040   2      //#line 67
9041   2            result = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__0__SubReceive__receive(arg_0x7eb43010, arg_0x7eb431b0, arg_0x7eb43338);
9042   2      //#line 67
9043   2            break;
9044   2      //#line 67
9045   2          case 124:
9046   2      //#line 67
9047   2            result = /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__0__ReceiveAck__receive(arg_0x7eb43010, arg_0x7eb431b0, arg_0x7eb43338);
9048   2      //#line 67
9049   2            break;
9050   2      //#line 67
9051   2          case 240U:
9052   2      //#line 67
9053   2            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__1__SubReceive__receive(arg_0x7eb43010, arg_0x7eb431b0, arg_0x7eb43338);
9054   2      //#line 67
9055   2            break;
9056   2      //#line 67
9057   2          case 241:
9058   2      //#line 67
9059   2            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__ReceiveAck__receive(arg_0x7eb43010, arg_0x7eb431b0, arg_0x7eb43338);
9060   2      //#line 67
9061   2            break;
9062   2      //#line 67
9063   2          default:
9064   2      //#line 67
9065   2            result = RfActiveMessageP__Receive__default__receive(arg_0x7e3d63f8, arg_0x7eb43010, arg_0x7eb431b0,
             - arg_0x7eb43338);
9066   2      //#line 67
9067   2            break;
9068   2      //#line 67
9069   2          }
9070   1      //#line 67
9071   1      
9072   1      //#line 67
9073   1        return result;
9074   1      //#line 67
9075   1      }
9076          //#line 67
9077          //# 69 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9078          static  /*inline*/   bool RfPacketP__AMPacket__isForMe(message_t *amsg)
9079          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 162 

9080   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest) == RfPacketP__AMPacke
             -t__address()
9081   1         || __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest) == 0xFFFF;
9082   1      }
9083          
9084          //# 125 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9085          #define RfActiveMessageP__AMPacket__isForMe(arg_0x7eb327d8) RfPacketP__AMPacket__isForMe(arg_0x7eb327d8)
9086          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
9087          #define RfActiveMessageP__Packet__getPayload(arg_0x7eb20840,arg_0x7eb209e8) RfPacketP__Packet__getPayload(
             -arg_0x7eb20840, arg_0x7eb209e8)
9088          //# 76 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9089          static  /*inline*/   am_id_t RfPacketP__AMPacket__type(message_t *amsg)
9090          {
9091   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)amsg->header)->type);
9092   1      }
9093          
9094          //# 136 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9095          #define RfActiveMessageP__AMPacket__type(arg_0x7eb32f08) RfPacketP__AMPacket__type(arg_0x7eb32f08)
9096          //# 150 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9097          static  /*inline*/   uint8_t RfPacketP__PacketEx__packetHeaderSize(void)
9098          {
9099   1        return sizeof(rf_header_t ) - 1 + sizeof(uint16_t );
9100   1      }
9101          
9102          
9103          
9104          
9105          
9106          
9107          static  /*inline*/   bool RfPacketP__PacketEx__isValidPacket(message_t *msg)
9108          {
9109   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length) >= RfPacketP__PacketE
             -x__packetHeaderSize();
9110   1      }
9111          
9112          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
9113          #define RfActiveMessageP__PacketEx__isValidPacket(arg_0x7e713190) RfPacketP__PacketEx__isValidPacket(arg_0
             -x7e713190)
9114          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
9115          static  /*inline*/   void RfActiveMessageP__CoreReceive__receive(message_t *msg)
9116          {
9117   1        if (RfActiveMessageP__PacketEx__isValidPacket(msg)) 
9118   1          {
9119   2            uint8_t type = RfActiveMessageP__AMPacket__type(msg);
9120   2            uint8_t len;
9121   2            void *payload = RfActiveMessageP__Packet__getPayload(msg, &len);
9122   2      
9123   2      //#line 27
9124   2            if (RfActiveMessageP__AMPacket__isForMe(msg)) 
9125   2              {
9126   3                RfActiveMessageP__Receive__receive(type, msg, payload, len);
9127   3              }
9128   2            else 
9129   2              {
9130   3                RfActiveMessageP__Snoop__receive(type, msg, payload, len);
9131   3              }
9132   2          }
9133   1      }
9134          
9135          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
9136          #define RfMacBaseReceiveP__CoreReceive__receive(arg_0x7e3d1030) RfActiveMessageP__CoreReceive__receive(arg
             -_0x7e3d1030)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 163 

9137          //# 12 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseReceiveP.nc"
9138          static  /*inline*/   void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *buf, uint8_t len)
9139          {
9140   1        unsigned char *__nesc_temp48;
9141   1      //#line 14
9142   1        message_t *msg = (message_t *)buf;
9143   1      
9144   1      
9145   1        uint8_t frame_type = (__nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)msg->header)->fcf) >> IEEE1
             -54_FCF_FRAME_TYPE) & 7;
9146   1      
9147   1        if (frame_type == IEEE154_TYPE_ACK) 
9148   1          {
9149   2          }
9150   1        else {
9151   2      //#line 22
9152   2          if (frame_type == IEEE154_TYPE_DATA) 
9153   2            {
9154   3      
9155   3      
9156   3              rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
9157   3      
9158   3      //#line 27
9159   3              __nesc_hton_int8((unsigned char *)&meta_data->crc, buf[len - 1] >> 7);
9160   3              __nesc_hton_int8((unsigned char *)&meta_data->rssi, buf[len - 2]);
9161   3              __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_int8((unsigned char *)&meta_data->
             -rssi) + 0x7F);
9162   3      
9163   3      
9164   3              (__nesc_temp48 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nes
             -c_temp48, __nesc_ntoh_leuint8(__nesc_temp48) - 0));
9165   3      //#line 50
9166   3              RfMacBaseReceiveP__CoreReceive__receive(msg);
9167   3            }
9168   2          }
9169   1      }
9170          
9171          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
9172          #define RfHardwareRxP__0__RfHardwareRx__rxPacket(arg_0x7e582570,arg_0x7e5826f8) RfMacBaseReceiveP__RfHardw
             -areRx__rxPacket(arg_0x7e582570, arg_0x7e5826f8)
9173          //# 78 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9174          static  /*inline*/  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket(void)
9175          {
9176   1        if (!/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(/*RfHardwareRxC.RfHardwareRxP*/RfHardwar
             -eRxP__0__m_frame_buf, 1)) {
9177   2      //#line 80
9178   2          return;
9179   2          }
9180   1      //#line 81
9181   1        if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] > 0x7f) 
9182   1          {
9183   2      
9184   2      
9185   2            {
9186   3      //#line 85
9187   3              do {
9188   4      //#line 85
9189   4                  RFST = 0xED;
9190   4      //#line 85
9191   4                  RFST = 0xED;
9192   4                }
9193   3              while (
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 164 

9194   3      //#line 85
9195   3              85 == -1);
9196   3      //#line 85
9197   3              do {
9198   4      //#line 85
9199   4                  S1CON = 0x00;
9200   4      //#line 85
9201   4                  RFIRQF0 = ~(1 << 2);
9202   4                }
9203   3              while (
9204   3      //#line 85
9205   3              85 == -1);
9206   3            }
9207   2      //#line 85
9208   2            ;
9209   2            {
9210   3      //#line 86
9211   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHar
             -dwareRxP__0__rxbuf_tail = 0;
9212   3            }
9213   2      //#line 86
9214   2            ;
9215   2          }
9216   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] &= 0x7f;
9217   1      
9218   1      
9219   1        if (!/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(&/*RfHardwareRxC.RfHardwareRxP*/RfHardwa
             -reRxP__0__m_frame_buf[1], /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0])) {
9220   2      //#line 91
9221   2          return;
9222   2          }
9223   1      
9224   1        if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[/*RfHardwareRxC.RfHardwareRxP*/RfHardwa
             -reRxP__0__m_frame_buf[0]] & 0x80) 
9225   1          {
9226   2      //#line 131
9227   2            /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__RfHardwareRx__rxPacket(/*RfHardwareRxC.RfHardwareRx
             -P*/RfHardwareRxP__0__m_frame_buf, /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] + 1);
9228   2          }
9229   1        else 
9230   1          {
9231   2      
9232   2            {
9233   3      //#line 136
9234   3              do {
9235   4      //#line 136
9236   4                  RFST = 0xED;
9237   4      //#line 136
9238   4                  RFST = 0xED;
9239   4                }
9240   3              while (
9241   3      //#line 136
9242   3              136 == -1);
9243   3      //#line 136
9244   3              do {
9245   4      //#line 136
9246   4                  S1CON = 0x00;
9247   4      //#line 136
9248   4                  RFIRQF0 = ~(1 << 2);
9249   4                }
9250   3              while (
9251   3      //#line 136
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 165 

9252   3              136 == -1);
9253   3            }
9254   2      //#line 136
9255   2            ;
9256   2            {
9257   3      //#line 137
9258   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHar
             -dwareRxP__0__rxbuf_tail = 0;
9259   3            }
9260   2      //#line 137
9261   2            ;
9262   2          }
9263   1      }
9264          
9265          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void)
9266          {
9267   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket();
9268   1      
9269   1        if (!(/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head == /*RfHardwareRxC.RfHardwareRxP*/RfHa
             -rdwareRxP__0__rxbuf_tail)) 
9270   1          {
9271   2            {
9272   3      //#line 147
9273   3              { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9274   4      //#line 147
9275   4                {
9276   5      //#line 147
9277   5                  TopTaskMgrP__m_task_flag[1] = TRUE;
9278   5                }
9279   4      //#line 148
9280   4                __nesc_atomic_end(__nesc_atomic); }
9281   3            }
9282   2      //#line 147
9283   2            ;
9284   2          }
9285   1      }
9286          
9287          //# 57 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
9288          static  /*inline*/    void TopTaskMgrP__TopTaskHandler__default__handler(uint8_t n)
9289          {
9290   1      }
9291          
9292          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
9293           /*inline*/  static  void TopTaskMgrP__TopTaskHandler__handler(uint8_t arg_0x7ebb1360){
9294   1      //#line 4
9295   1        switch (arg_0x7ebb1360) {
9296   2      //#line 4
9297   2          case 0:
9298   2      //#line 4
9299   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handler();
9300   2      //#line 4
9301   2            break;
9302   2      //#line 4
9303   2          case 1:
9304   2      //#line 4
9305   2            /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler();
9306   2      //#line 4
9307   2            break;
9308   2      //#line 4
9309   2          default:
9310   2      //#line 4
9311   2            TopTaskMgrP__TopTaskHandler__default__handler(arg_0x7ebb1360);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 166 

9312   2      //#line 4
9313   2            break;
9314   2      //#line 4
9315   2          }
9316   1      //#line 4
9317   1      }
9318          //#line 4
9319          //# 40 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
9320          static  /*inline*/   void TopTaskMgrP__TopTaskMgr__runTasks(void)
9321          {
9322   1        uint8_t i;
9323   1      
9324   1        for (i = 0; i < TopTaskMgrP__TOP_TASK_COUNT; ++i) 
9325   1          {
9326   2            if (TopTaskMgrP__m_task_flag[i] != FALSE) 
9327   2              {
9328   3                EA = 0;
9329   3                TopTaskMgrP__m_task_flag[i] = FALSE;
9330   3                EA = 1;
9331   3      
9332   3                TopTaskMgrP__TopTaskHandler__handler(i);
9333   3              }
9334   2          }
9335   1      }
9336          
9337          //# 5 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
9338          #define SchedulerBasicP__TopTaskMgr__runTasks(void) TopTaskMgrP__TopTaskMgr__runTasks()
9339          //# 181 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9340          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(
             -void)
9341          {
9342   1        if (((uint8_t xdata *)0)[0x619B] > 0x80) 
9343   1          {
9344   2            {
9345   3      //#line 185
9346   3              do {
9347   4      //#line 185
9348   4                  RFST = 0xED;
9349   4      //#line 185
9350   4                  RFST = 0xED;
9351   4                }
9352   3              while (
9353   3      //#line 185
9354   3              185 == -1);
9355   3      //#line 185
9356   3              do {
9357   4      //#line 185
9358   4                  S1CON = 0x00;
9359   4      //#line 185
9360   4                  RFIRQF0 = ~(1 << 2);
9361   4                }
9362   3              while (
9363   3      //#line 185
9364   3              185 == -1);
9365   3            }
9366   2      //#line 185
9367   2            ;
9368   2          }
9369   1      }
9370          
9371          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
9372          #define SchedulerBasicP__AtosScheduler__periodScheduler(void) RfHardwareRxP__0__AtosScheduler__periodSched
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 167 

             -uler()
9373          //# 71 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
9374          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void)
9375          {
9376   1      //#line 91
9377   1        if (SchedulerBasicP__m_head == SchedulerBasicP__m_tail) 
9378   1          {
9379   2            return SchedulerBasicP__NO_TASK;
9380   2          }
9381   1        else 
9382   1          {
9383   2            uint8_t id = SchedulerBasicP__m_next[SchedulerBasicP__m_head];
9384   2      
9385   2            SchedulerBasicP__m_next[SchedulerBasicP__m_head] = SchedulerBasicP__NO_TASK;
9386   2      
9387   2            SchedulerBasicP__m_head = (SchedulerBasicP__m_head + 1) % SchedulerBasicP__NUM_TASKS;
9388   2            return id % SchedulerBasicP__NUM_TASKS;
9389   2          }
9390   1      }
9391          
9392          //#line 215
9393          static  /*inline*/   void SchedulerBasicP__Scheduler__taskLoop(void)
9394          {
9395   1        for (; ; ) 
9396   1          {
9397   2            uint8_t nextTask;
9398   2      
9399   2            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9400   3              {
9401   4                nextTask = SchedulerBasicP__popTask();
9402   4              }
9403   3      //#line 224
9404   3              __nesc_atomic_end(__nesc_atomic); }
9405   2      
9406   2            current_task_id = nextTask;
9407   2      
9408   2      
9409   2            SchedulerBasicP__AtosScheduler__periodScheduler();
9410   2      
9411   2            while (SchedulerBasicP__TopTaskMgr__hasTasks()) 
9412   2              {
9413   3                SchedulerBasicP__TopTaskMgr__runTasks();
9414   3              }
9415   2      
9416   2            if (nextTask != SchedulerBasicP__NO_TASK) 
9417   2              {
9418   3                SchedulerBasicP__TaskBasic__runTask(nextTask);
9419   3              }
9420   2            else 
9421   2              {
9422   3                if (!SchedulerBasicP__TopTaskMgr__hasTasks()) 
9423   3                  {
9424   4                    SchedulerBasicP__McuSleep__sleep();
9425   4                  }
9426   3              }
9427   2          }
9428   1      }
9429          
9430          //# 61 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
9431          #define RealMainP__Scheduler__taskLoop(void) SchedulerBasicP__Scheduler__taskLoop()
9432          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
9433          #define RfReliableMacPacketP__SubPacketEx__isValidPacket(arg_0x7e713190) RfPacketP__PacketEx__isValidPacke
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 168 

             -t(arg_0x7e713190)
9434          //# 46 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
9435          static  /*inline*/   uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void)
9436          {
9437   1        return sizeof(rf_rmac_header_t );
9438   1      }
9439          
9440          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
9441          static  /*inline*/  uint8_t RfReliableMacAckP__fillAckMessageDefault(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack)
9442          {
9443   1        memset(ack, 0, sizeof(rf_ack_t ));
9444   1      
9445   1      
9446   1        __nesc_hton_uint8((unsigned char *)&ack->dsn, receive_dsn);
9447   1      
9448   1        return sizeof(rf_ack_t );
9449   1      }
9450          
9451          //#line 37
9452          static  /*inline*/    uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t 
             -*receive_msg, uint8_t receive_dsn, message_t *ack_msg, rf_ack_t *ack)
9453          {
9454   1        return sizeof(rf_ack_t );
9455   1      }
9456          
9457          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
9458          #define RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(arg_0x7e42bb10,arg_0x7e42bca0,arg_0x7e42b
             -e50,arg_0x7e428030) RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(arg_0x7e42bb10, arg_0x7e42bca0, ar
             -g_0x7e42be50, arg_0x7e428030)
9459          //# 14 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
9460          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(uint16_t 
             -addr)
9461          {
9462   1        /* atomic removed: atomic calls only */
9463   1        {
9464   2          uint8_t i;
9465   2      
9466   2      //#line 19
9467   2          for (i = 0; i < 100; ++i) 
9468   2            {
9469   3              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[i] == addr) 
9470   3                {
9471   4                  {
9472   5                    int __nesc_temp = 
9473   5      //#line 23
9474   5                    i;
9475   5      
9476   5      //#line 23
9477   5                    return __nesc_temp;
9478   5                  }
9479   4                }
9480   3            }
9481   2          {
9482   3            int __nesc_temp = 
9483   3      //#line 27
9484   3            -1;
9485   3      
9486   3      //#line 27
9487   3            return __nesc_temp;
9488   3          }
9489   2        }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 169 

9490   1      }
9491          
9492          //#line 31
9493          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress(void)
9494          {
9495   1        /* atomic removed: atomic calls only */
9496   1        {
9497   2          uint8_t i;
9498   2      
9499   2      //#line 36
9500   2          for (i = 0; i < 100; ++i) 
9501   2            {
9502   3              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[i] == 0) 
9503   3                {
9504   4                  {
9505   5                    int __nesc_temp = 
9506   5      //#line 40
9507   5                    i;
9508   5      
9509   5      //#line 40
9510   5                    return __nesc_temp;
9511   5                  }
9512   4                }
9513   3            }
9514   2          i = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index;
9515   2          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index = (/*DsnFilterCenterC.DsnFilt
             -erCenterP*/DsnFilterCenterP__0__m_filter_index + 1) % 100;
9516   2      
9517   2          {
9518   3            int __nesc_temp = 
9519   3      //#line 47
9520   3            i;
9521   3      
9522   3      //#line 47
9523   3            return __nesc_temp;
9524   3          }
9525   2        }
9526   1      }
9527          
9528          //# 176 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9529          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void)
9530          {
9531   1        {
9532   2      //#line 178
9533   2          do {
9534   3      //#line 178
9535   3              RFST = 0xED;
9536   3      //#line 178
9537   3              RFST = 0xED;
9538   3            }
9539   2          while (
9540   2      //#line 178
9541   2          178 == -1);
9542   2      //#line 178
9543   2          do {
9544   3      //#line 178
9545   3              S1CON = 0x00;
9546   3      //#line 178
9547   3              RFIRQF0 = ~(1 << 2);
9548   3            }
9549   2          while (
9550   2      //#line 178
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 170 

9551   2          178 == -1);
9552   2        }
9553   1      //#line 178
9554   1        ;
9555   1      }
9556          
9557          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
9558          #define RfInterruptsP__InterruptRFErr__fired(void) RfHardwareRxP__0__InterruptRFErr__fired()
9559          //# 80 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
9560          static  /*inline*/   void RfInterruptsP__INT_RFERR__fired(void)
9561          {
9562   1      
9563   1      
9564   1        if ((RFERRF & (1 << 2)) & ((uint8_t xdata *)0)[0x61A5]) 
9565   1          {
9566   2            RFERRF &= ~(1 << 2);
9567   2            RfInterruptsP__InterruptRFErr__fired();
9568   2          }
9569   1      }
9570          
9571          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9572          #define PlatformInterruptC__INT_RFERR__fired(void) RfInterruptsP__INT_RFERR__fired()
9573          //# 153 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9574          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void)
9575          {
9576   1      
9577   1      
9578   1        while (((uint8_t xdata *)0)[0x619B] > 0) 
9579   1          {
9580   2            if (((uint8_t xdata *)0)[0x619B] > 0x80) 
9581   2              {
9582   3                {
9583   4      //#line 161
9584   4                  do {
9585   5      //#line 161
9586   5                      RFST = 0xED;
9587   5      //#line 161
9588   5                      RFST = 0xED;
9589   5                    }
9590   4                  while (
9591   4      //#line 161
9592   4                  161 == -1);
9593   4      //#line 161
9594   4                  do {
9595   5      //#line 161
9596   5                      S1CON = 0x00;
9597   5      //#line 161
9598   5                      RFIRQF0 = ~(1 << 2);
9599   5                    }
9600   4                  while (
9601   4      //#line 161
9602   4                  161 == -1);
9603   4                }
9604   3      //#line 161
9605   3                ;
9606   3              }
9607   2      
9608   2            if (((/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail + 1) & ((1 << 8) - 1)) == (/*RfHar
             -dwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head & ((1 << 8) - 1))) 
9609   2              {
9610   3              }
9611   2      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 171 

9612   2      
9613   2            {
9614   3      //#line 169
9615   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[/*RfHardwareRxC.RfHardwareRxP*/RfHard
             -wareRxP__0__rxbuf_tail & ((1 << 8) - 1)] = RFD;
9616   3      //#line 169
9617   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail = (/*RfHardwareRxC.RfHardwareRxP*/RfHa
             -rdwareRxP__0__rxbuf_tail + 1) & ((1 << 8) - 1);
9618   3            }
9619   2      //#line 169
9620   2            ;
9621   2          }
9622   1      
9623   1      
9624   1        {
9625   2      //#line 173
9626   2          TopTaskMgrP__m_task_flag[1] = TRUE;
9627   2        }
9628   1      //#line 173
9629   1        ;
9630   1      }
9631          
9632          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
9633          #define RfInterruptsP__InterruptFIFOP__fired(void) RfHardwareRxP__0__InterruptFIFOP__fired()
9634          //# 92 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
9635          static  /*inline*/   void RfInterruptsP__INT_RF__fired(void)
9636          {
9637   1      
9638   1      
9639   1        if ((RFIRQF1 & (1 << 3)) & ((uint8_t xdata *)0)[0x61A4]) 
9640   1          {
9641   2      
9642   2      
9643   2      
9644   2      
9645   2      
9646   2      
9647   2            RFIRQF1 = ~(1 << 3);
9648   2          }
9649   1        else {
9650   2          if ((RFIRQF1 & (1 << 4)) & ((uint8_t xdata *)0)[0x61A4]) 
9651   2            {
9652   3      
9653   3              RFIRQF1 = ~(1 << 4);
9654   3            }
9655   2          else {
9656   3            if ((RFIRQF1 & (1 << 0)) & ((uint8_t xdata *)0)[0x61A4]) 
9657   3              {
9658   4                (
9659   4                (uint8_t xdata *)0)[0x61A4] &= ~(1 << 0);
9660   4              }
9661   3            }
9662   2          }
9663   1      
9664   1      
9665   1      
9666   1        if ((RFIRQF0 & (1 << 2)) & ((uint8_t xdata *)0)[0x61A3]) 
9667   1          {
9668   2      
9669   2      
9670   2      
9671   2      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 172 

9672   2            RfInterruptsP__InterruptFIFOP__fired();
9673   2      
9674   2            RFIRQF0 = ~(1 << 2);
9675   2          }
9676   1      
9677   1      
9678   1      
9679   1        S1CON = 0x00;
9680   1      }
9681          
9682          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9683          #define PlatformInterruptC__INT_RF__fired(void) RfInterruptsP__INT_RF__fired()
9684          //# 536 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
9685          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__def
             -ault__captured(uint16_t time)
9686          //#line 536
9687          {
9688   1      }
9689          
9690          //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
9691          #define HplCC2530Timer1P__0__CaptureChannel2__captured(arg_0x7e937ba0) HplCC2530Timer1P__0__CaptureChannel
             -2__default__captured(arg_0x7e937ba0)
9692          //# 454 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
9693          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void)
9694          {
9695   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9696   2          {
9697   3            if (((uint8_t xdata *)0)[0x62A4] & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH4IF) 
9698   3              {
9699   4                T1STAT &= ~(1 << CC2530_T1STAT_CH4IF);
9700   4                T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
9701   4      
9702   4      
9703   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 4;
9704   4                {
9705   5      //#line 465
9706   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9707   5                }
9708   4      //#line 465
9709   4                ;
9710   4              }
9711   3      
9712   3            if (((uint8_t xdata *)0)[0x62A3] & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH3IF) 
9713   3              {
9714   4                T1STAT &= ~(1 << CC2530_T1STAT_CH3IF);
9715   4                T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
9716   4      
9717   4      
9718   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 3;
9719   4                {
9720   5      //#line 475
9721   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9722   5                }
9723   4      //#line 475
9724   4                ;
9725   4              }
9726   3      
9727   3            if (T1CCTL2 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH2IF) 
9728   3              {
9729   4                uint16_t value;
9730   4      
9731   4                T1STAT &= ~(1 << CC2530_T1STAT_CH2IF);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 173 

9732   4      
9733   4                if (!(T1CCTL2 & (1 << CC2530_T1CCTLx_CPSEL))) 
9734   4                  {
9735   5                    value = T1CC2L;
9736   5                    value += T1CC2H << 8;
9737   5      
9738   5                    /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__captured(value);
9739   5                  }
9740   4                else 
9741   4                  {
9742   5                    T1CCTL2 &= ~(1 << CC2530_T1CCTLx_IM);
9743   5      
9744   5      
9745   5                    /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 2;
9746   5                    {
9747   6      //#line 497
9748   6                      TopTaskMgrP__m_task_flag[0] = TRUE;
9749   6                    }
9750   5      //#line 497
9751   5                    ;
9752   5                  }
9753   4              }
9754   3      
9755   3            if (T1CCTL1 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH1IF) 
9756   3              {
9757   4                T1STAT &= ~(1 << CC2530_T1STAT_CH1IF);
9758   4                T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
9759   4      
9760   4      
9761   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 1;
9762   4                {
9763   5      //#line 508
9764   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9765   5                }
9766   4      //#line 508
9767   4                ;
9768   4              }
9769   3            if (T1CCTL0 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH0IF) 
9770   3              {
9771   4                T1STAT &= ~(1 << CC2530_T1STAT_CH0IF);
9772   4                T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
9773   4      
9774   4      
9775   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 0;
9776   4                {
9777   5      //#line 517
9778   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9779   5                }
9780   4      //#line 517
9781   4                ;
9782   4              }
9783   3      
9784   3            if (T1STAT & CC2530_T1_OVFIF) 
9785   3              {
9786   4                T1STAT &= ~(1 << CC2530_T1STAT_OVFIF);
9787   4      
9788   4      
9789   4                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 5;
9790   4                {
9791   5      //#line 526
9792   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
9793   5                }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 174 

9794   4      //#line 526
9795   4                ;
9796   4              }
9797   3          }
9798   2      //#line 528
9799   2          __nesc_atomic_end(__nesc_atomic); }
9800   1      }
9801          
9802          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9803          #define PlatformInterruptC__INT_TIM1__fired(void) HplCC2530Timer1P__0__INT_TIM1__fired()
9804          //# 76 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9805          static  /*inline*/    void PlatformInterruptC__INT_UART0_RX__default__fired(void)
9806          {
9807   1        URX0IF = 0;
9808   1      }
9809          
9810          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9811          #define PlatformInterruptC__INT_UART0_RX__fired(void) PlatformInterruptC__INT_UART0_RX__default__fired()
9812          //# 88 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9813          static  /*inline*/    void PlatformInterruptC__INT_UART0_TX__default__fired(void)
9814          {
9815   1        UTX0IF = 0;
9816   1      }
9817          
9818          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9819          #define PlatformInterruptC__INT_UART0_TX__fired(void) PlatformInterruptC__INT_UART0_TX__default__fired()
9820          //# 101 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9821          static  /*inline*/    void PlatformInterruptC__INT_UART1_RX__default__fired(void)
9822          {
9823   1        URX1IF = 0;
9824   1      }
9825          
9826          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9827          #define PlatformInterruptC__INT_UART1_RX__fired(void) PlatformInterruptC__INT_UART1_RX__default__fired()
9828          //# 113 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9829          static  /*inline*/    void PlatformInterruptC__INT_UART1_TX__default__fired(void)
9830          {
9831   1        UTX1IF = 0;
9832   1      }
9833          
9834          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9835          #define PlatformInterruptC__INT_UART1_TX__fired(void) PlatformInterruptC__INT_UART1_TX__default__fired()
9836          //# 126 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9837          static  /*inline*/    void PlatformInterruptC__INT_ST__default__fired(void)
9838          {
9839   1        STIF = 0;
9840   1      }
9841          
9842          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9843          #define PlatformInterruptC__INT_ST__fired(void) PlatformInterruptC__INT_ST__default__fired()
9844          //# 146 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9845          static  /*inline*/    void PlatformInterruptC__INT_P0__default__fired(void)
9846          {
9847   1        P0IFG = 0x00;
9848   1        P0IF = 0;
9849   1      }
9850          
9851          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9852          #define PlatformInterruptC__INT_P0__fired(void) PlatformInterruptC__INT_P0__default__fired()
9853          //# 152 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
9854          static  /*inline*/    void PlatformInterruptC__INT_P1__default__fired(void)
9855          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 175 

9856   1        P1IFG = 0x00;
9857   1        P1IF = 0;
9858   1      }
9859          
9860          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
9861          #define PlatformInterruptC__INT_P1__fired(void) PlatformInterruptC__INT_P1__default__fired()
9862          //# 64 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
9863          static   /*inline*/   void __nesc_disable_interrupt(void)
9864          //#line 64
9865          {
9866   1      //#line 64
9867   1        EA = 0;
9868   1      }
9869          
9870          //# 56 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
9871            int main(void)
9872          //#line 56
9873          {
9874   1      
9875   1      
9876   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9877   2          {
9878   3      
9879   3      
9880   3      
9881   3      
9882   3      
9883   3            {
9884   4            }
9885   3      //#line 66
9886   3            ;
9887   3      
9888   3            RealMainP__Scheduler__init();
9889   3      
9890   3      
9891   3      
9892   3      
9893   3      
9894   3            RealMainP__PlatformInit__init();
9895   3            while (RealMainP__Scheduler__runNextTask()) ;
9896   3      
9897   3      
9898   3      
9899   3      
9900   3      
9901   3            RealMainP__SoftwareInit__init();
9902   3            while (RealMainP__Scheduler__runNextTask()) ;
9903   3          }
9904   2      //#line 83
9905   2          __nesc_atomic_end(__nesc_atomic); }
9906   1      
9907   1      
9908   1        __nesc_enable_interrupt();
9909   1      
9910   1        RealMainP__Boot__booted();
9911   1      
9912   1      
9913   1        RealMainP__Scheduler__taskLoop();
9914   1      
9915   1      
9916   1      
9917   1      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 176 

9918   1        return -1;
9919   1      }
9920          
9921          //# 11 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
9922          static error_t PlatformP__clockSelect32k(uint8_t source)
9923          {
9924   1      
9925   1      
9926   1        if (!(CLKCONSTA & 0x40)) {
9927   2          return FAIL;
9928   2          }
9929   1        if (source == 0) {
9930   2            CLKCONCMD &= ~0x80;
9931   2          }
9932   1        else {
9933   2      //#line 21
9934   2          if (source == 1) {
9935   3              CLKCONCMD |= 0x80;
9936   3            }
9937   2          }
9938   1      //#line 24
9939   1        do {
9940   2      //#line 24
9941   2            uint8_t ____clkcon;
9942   2      //#line 24
9943   2            uint8_t ____clkconsta;
9944   2      
9945   2      //#line 24
9946   2            ____clkcon = CLKCONCMD;
9947   2      //#line 24
9948   2            do {
9949   3      //#line 24
9950   3                ____clkconsta = CLKCONSTA;
9951   3              }
9952   2            while (
9953   2      //#line 24
9954   2            ____clkconsta != ____clkcon);
9955   2          }
9956   1        while (
9957   1      //#line 24
9958   1        24 == -1);
9959   1      
9960   1        return 0;
9961   1      }
9962          
9963          static void PlatformP__clockSetMainSrc(uint8_t source)
9964          {
9965   1        register uint8_t osc32k_bm = CLKCONCMD & 0x80;
9966   1      
9967   1      
9968   1      
9969   1      
9970   1      
9971   1        SLEEPCMD &= ~0x04;
9972   1        while (!(SLEEPSTA & 0x20) || (SLEEPSTA & 0x04) != 0) ;
9973   1      
9974   1      
9975   1      
9976   1        if (source == 1) {
9977   2            CLKCONCMD = ((osc32k_bm | 0x40) | (0x01 << 3)) | 0x01;
9978   2          }
9979   1        else {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 177 

9980   2      //#line 45
9981   2          if (source == 0) {
9982   3              CLKCONCMD = osc32k_bm | (0x00 << 3);
9983   3            }
9984   2          }
9985   1      //#line 48
9986   1        do {
9987   2      //#line 48
9988   2            uint8_t ____clkcon;
9989   2      //#line 48
9990   2            uint8_t ____clkconsta;
9991   2      
9992   2      //#line 48
9993   2            ____clkcon = CLKCONCMD;
9994   2      //#line 48
9995   2            do {
9996   3      //#line 48
9997   3                ____clkconsta = CLKCONSTA;
9998   3              }
9999   2            while (
10000  02      //#line 48
10001  02            ____clkconsta != ____clkcon);
10002  02          }
10003  01        while (
10004  01      //#line 48
10005  01        48 == -1);
10006  01        SLEEPCMD |= 0x04;
10007  01      }
10008  00      
10009  00      //# 108 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
10010  00      static void FlashIEEEP__readFromFlash(void)
10011  00      {
10012  01        /* atomic removed: atomic calls only */
10013  01        {
10014  02          FlashIEEEP__HalFlash__read(FlashIEEEP__m_ieee_flash, 0x3FFE8, sizeof FlashIEEEP__m_ieee_flash);
10015  02      
10016  02      
10017  02          FlashIEEEP__ieeeProtect();
10018  02      
10019  02      
10020  02          FlashIEEEP__m_ieee[0] = FlashIEEEP__m_ieee_flash[7];
10021  02          FlashIEEEP__m_ieee[1] = FlashIEEEP__m_ieee_flash[6];
10022  02          FlashIEEEP__m_ieee[2] = FlashIEEEP__m_ieee_flash[5];
10023  02          FlashIEEEP__m_ieee[3] = FlashIEEEP__m_ieee_flash[4];
10024  02          FlashIEEEP__m_ieee[4] = FlashIEEEP__m_ieee_flash[3];
10025  02          FlashIEEEP__m_ieee[5] = FlashIEEEP__m_ieee_flash[2];
10026  02          FlashIEEEP__m_ieee[6] = FlashIEEEP__m_ieee_flash[1];
10027  02          FlashIEEEP__m_ieee[7] = FlashIEEEP__m_ieee_flash[0];
10028  02        }
10029  01      }
10030  00      
10031  00      //# 58 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
10032  00      static  error_t HalFlashP__HalFlash__erase(uint32_t address)
10033  00      {
10034  01        uint8_t page;
10035  01        uint16_t old;
10036  01        uint8_t old_ea;
10037  01      
10038  01        /* atomic removed: atomic calls only */
10039  01        {
10040  02          page = address >> 11;
10041  02      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 178 

10042  02      
10043  02      
10044  02          while (((uint8_t xdata *)0)[0x6270] & 0x80) ;
10045  02          ((uint8_t xdata *)0)[0x6272] = page << 1;
10046  02          ((uint8_t xdata *)0)[0x6270] |= 0x01;
10047  02          while (((uint8_t xdata *)0)[0x6270] & 0x80) ;
10048  02        }
10049  01      
10050  01        return 0;
10051  01      }
10052  00      
10053  00      //# 193 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
10054  00      static  void FlashIEEEP__FlashIEEE__WriteToRegister(void)
10055  00      {
10056  01        uint16_t addr;
10057  01      //#line 195
10058  01        uint16_t pan;
10059  01      
10060  01        (
10061  01        (uint8_t xdata *)0)[0x616A] = FlashIEEEP__m_ieee[0];
10062  01        ((uint8_t xdata *)0)[0x616B] = FlashIEEEP__m_ieee[1];
10063  01        ((uint8_t xdata *)0)[0x616C] = FlashIEEEP__m_ieee[2];
10064  01        ((uint8_t xdata *)0)[0x616D] = FlashIEEEP__m_ieee[3];
10065  01        ((uint8_t xdata *)0)[0x616E] = FlashIEEEP__m_ieee[4];
10066  01        ((uint8_t xdata *)0)[0x616F] = FlashIEEEP__m_ieee[5];
10067  01        ((uint8_t xdata *)0)[0x6170] = FlashIEEEP__m_ieee[6];
10068  01        ((uint8_t xdata *)0)[0x6171] = FlashIEEEP__m_ieee[7];
10069  01      
10070  01        pan = FlashIEEEP__FlashIEEE__GetPANID();
10071  01        addr = FlashIEEEP__FlashIEEE__GetShortAddress();
10072  01        (
10073  01        (uint8_t xdata *)0)[0x6172] = (uint16_t )pan & 0xFF;
10074  01        ((uint8_t xdata *)0)[0x6173] = ((uint16_t )pan >> 8) & 0xFF;
10075  01        (
10076  01        (uint8_t xdata *)0)[0x6174] = (uint16_t )addr & 0xFF;
10077  01        ((uint8_t xdata *)0)[0x6175] = ((uint16_t )addr >> 8) & 0xFF;
10078  01      }
10079  00      
10080  00      //#line 144
10081  00      static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void)
10082  00      {
10083  01        return (FlashIEEEP__m_ieee[4] << 8) | FlashIEEEP__m_ieee[5];
10084  01      }
10085  00      
10086  00      
10087  00      static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void)
10088  00      {
10089  01        return (FlashIEEEP__m_ieee[6] << 8) | FlashIEEEP__m_ieee[7];
10090  01      }
10091  00      
10092  00      //#line 217
10093  00      static  void FlashIEEEP__FlashIEEE__WriteToAM(void)
10094  00      {
10095  01        FlashIEEEP__ActiveMessageAddress__setAddress((uint8_t )(FlashIEEEP__FlashIEEE__GetPANID() & 0xFF), 
10096  01        FlashIEEEP__FlashIEEE__GetShortAddress());
10097  01      
10098  01        TOS_NODE_ID = FlashIEEEP__FlashIEEE__GetShortAddress();
10099  01      
10100  01        TOS_IEEE_SADDR = FlashIEEEP__FlashIEEE__GetShortAddress();
10101  01        TOS_IEEE_PANID = FlashIEEEP__FlashIEEE__GetPANID();
10102  01      }
10103  00      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 179 

10104  00      //# 198 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
10105  00      static  bool SchedulerBasicP__Scheduler__runNextTask(void)
10106  00      {
10107  01        uint8_t nextTask;
10108  01      
10109  01        /* atomic removed: atomic calls only */
10110  01      //#line 202
10111  01        {
10112  02          nextTask = SchedulerBasicP__popTask();
10113  02      
10114  02          if (nextTask == SchedulerBasicP__NO_TASK) 
10115  02            {
10116  03              {
10117  04                unsigned char __nesc_temp = 
10118  04      //#line 207
10119  04                FALSE;
10120  04      
10121  04      //#line 207
10122  04                return __nesc_temp;
10123  04              }
10124  03            }
10125  02        }
10126  01      //#line 210
10127  01        SchedulerBasicP__TaskBasic__runTask(nextTask);
10128  01        return TRUE;
10129  01      }
10130  00      
10131  00      //#line 269
10132  00      static   void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id)
10133  00      {
10134  01      }
10135  00      
10136  00      //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
10137  00      static  void SchedulerBasicP__TaskBasic__runTask(uint8_t arg_0x7ec64200){
10138  01      //#line 64
10139  01        switch (arg_0x7ec64200) {
10140  02      //#line 64
10141  02          case ADSenRFNodeP__sensorDataTask:
10142  02      //#line 64
10143  02            ADSenRFNodeP__sensorDataTask__runTask();
10144  02      //#line 64
10145  02            break;
10146  02      //#line 64
10147  02          case ADSenRFNodeP__sendMsgTask:
10148  02      //#line 64
10149  02            ADSenRFNodeP__sendMsgTask__runTask();
10150  02      //#line 64
10151  02            break;
10152  02      //#line 64
10153  02          case RealMainP__fakeTask:
10154  02      //#line 64
10155  02            RealMainP__fakeTask__runTask();
10156  02      //#line 64
10157  02            break;
10158  02      //#line 64
10159  02          case /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask:
10160  02      //#line 64
10161  02            /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask();
10162  02      //#line 64
10163  02            break;
10164  02      //#line 64
10165  02          case /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer:
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 180 

10166  02      //#line 64
10167  02            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask();
10168  02      //#line 64
10169  02            break;
10170  02      //#line 64
10171  02          case AdcP__signalReadDone:
10172  02      //#line 64
10173  02            AdcP__signalReadDone__runTask();
10174  02      //#line 64
10175  02            break;
10176  02      //#line 64
10177  02          case /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__resendTask:
10178  02      //#line 64
10179  02            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
             -ndP__0__resendTask__runTask();
10180  02      //#line 64
10181  02            break;
10182  02      //#line 64
10183  02          case /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__signalDoneTask:
10184  02      //#line 64
10185  02            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__0__signalDoneTask__runTask();
10186  02      //#line 64
10187  02            break;
10188  02      //#line 64
10189  02          case /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext:
10190  02      //#line 64
10191  02            /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__runTask();
10192  02      //#line 64
10193  02            break;
10194  02      //#line 64
10195  02          case RfMacBaseCsmaP__signalDoneTask:
10196  02      //#line 64
10197  02            RfMacBaseCsmaP__signalDoneTask__runTask();
10198  02      //#line 64
10199  02            break;
10200  02      //#line 64
10201  02          case RfMacBaseCsmaP__doGo:
10202  02      //#line 64
10203  02            RfMacBaseCsmaP__doGo__runTask();
10204  02      //#line 64
10205  02            break;
10206  02      //#line 64
10207  02          case /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__sendAckTask:
10208  02      //#line 64
10209  02            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiv
             -eP__0__sendAckTask__runTask();
10210  02      //#line 64
10211  02            break;
10212  02      //#line 64
10213  02          case AtosNetStdP__rebootTask:
10214  02      //#line 64
10215  02            AtosNetStdP__rebootTask__runTask();
10216  02      //#line 64
10217  02            break;
10218  02      //#line 64
10219  02          case AtosNetStdP__nodeStatusUpTask:
10220  02      //#line 64
10221  02            AtosNetStdP__nodeStatusUpTask__runTask();
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 181 

10222  02      //#line 64
10223  02            break;
10224  02      //#line 64
10225  02          case AtosNetStdP__sendDoneCheck:
10226  02      //#line 64
10227  02            AtosNetStdP__sendDoneCheck__runTask();
10228  02      //#line 64
10229  02            break;
10230  02      //#line 64
10231  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__resendTask:
10232  02      //#line 64
10233  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__resendTask__runTask();
10234  02      //#line 64
10235  02            break;
10236  02      //#line 64
10237  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__signalDoneTask:
10238  02      //#line 64
10239  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__signalDoneTask__runTask();
10240  02      //#line 64
10241  02            break;
10242  02      //#line 64
10243  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__sendAckTask:
10244  02      //#line 64
10245  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__1__sendAckTask__runTask();
10246  02      //#line 64
10247  02            break;
10248  02      //#line 64
10249  02          default:
10250  02      //#line 64
10251  02            SchedulerBasicP__TaskBasic__default__runTask(arg_0x7ec64200);
10252  02      //#line 64
10253  02            break;
10254  02      //#line 64
10255  02          }
10256  01      //#line 64
10257  01      }
10258  00      //#line 64
10259  00      //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
10260  00      static  error_t AMResourceCenterP__AMResource__send(uint8_t resource_id, am_addr_t addr, message_t *msg, 
             -uint8_t len)
10261  00      {
10262  01        unsigned char *__nesc_temp43;
10263  01        unsigned char *__nesc_temp42;
10264  01      
10265  01      //#line 19
10266  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10267  02          {
10268  03            rf_header_t *header = (rf_header_t *)msg->header;
10269  03            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
10270  03      
10271  03      
10272  03      
10273  03            AMResourceCenterP__Packet__setPayloadLength(msg, len);
10274  03      
10275  03      
10276  03            __nesc_hton_leuint16((unsigned char *)&header->fcf, 0);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 182 

10277  03            if (addr != 0xFFFF) 
10278  03              {
10279  04                (__nesc_temp42 = (unsigned char *)&header->fcf, __nesc_hton_leuint16(__nesc_temp42, __nesc_ntoh
             -_leuint16(__nesc_temp42) | (1 << IEEE154_FCF_ACK_REQ)));
10280  04              }
10281  03            (__nesc_temp43 = (unsigned char *)&header->fcf, __nesc_hton_leuint16(__nesc_temp43, __nesc_ntoh_leu
             -int16(__nesc_temp43) | ((((IEEE154_TYPE_DATA << IEEE154_FCF_FRAME_TYPE) | (
10282  03            1 << IEEE154_FCF_INTRAPAN)) | (
10283  03            IEEE154_ADDR_SHORT << IEEE154_FCF_DEST_ADDR_MODE)) | (
10284  03            IEEE154_ADDR_SHORT << IEEE154_FCF_SRC_ADDR_MODE))));
10285  03      
10286  03      
10287  03      
10288  03      
10289  03      
10290  03      
10291  03      
10292  03      
10293  03      
10294  03            AMResourceCenterP__AMPacket__setGroup(msg, AMResourceCenterP__AMPacket__localGroup());
10295  03      
10296  03      
10297  03      
10298  03            AMResourceCenterP__AMPacket__setDestination(msg, addr);
10299  03      
10300  03      
10301  03            AMResourceCenterP__AMPacket__setSource(msg, AMResourceCenterP__AMPacket__address());
10302  03      
10303  03      
10304  03            __nesc_hton_int8((unsigned char *)&meta_data->rssi, 0);
10305  03            __nesc_hton_uint8((unsigned char *)&meta_data->lqi, 0);
10306  03      
10307  03      
10308  03      
10309  03      
10310  03      
10311  03            {
10312  04              unsigned char __nesc_temp = 
10313  04      //#line 64
10314  04              AMResourceCenterP__CoreSend__send(msg, __nesc_ntoh_leuint8((unsigned char *)&header->length));
10315  04      
10316  04              {
10317  05      //#line 64
10318  05                __nesc_atomic_end(__nesc_atomic); 
10319  05      //#line 64
10320  05                return __nesc_temp;
10321  05              }
10322  04            }
10323  03          }
10324  02      //#line 67
10325  02          __nesc_atomic_end(__nesc_atomic); }
10326  01      }
10327  00      
10328  00      //# 8 "/opt/atos/tos/chips/cc2530/watchdog/WatchDogP.nc"
10329  00      static  void WatchDogP__WatchDog__resetCpu(void)
10330  00      {
10331  01        /* atomic removed: atomic calls only */
10332  01        {
10333  02          uint32_t i = 0;
10334  02      
10335  02          WDCTL = 0x00;
10336  02          WDCTL = 0x0B;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 183 

10337  02      
10338  02      
10339  02          while (i++ < 0xFFFFFF) ;
10340  02        }
10341  01      }
10342  00      
10343  00      //# 26 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
10344  00      static  am_addr_t RfPacketP__AMPacket__address(void)
10345  00      {
10346  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10347  02          {
10348  03            if (!RfPacketP__m_address_saved) 
10349  03              {
10350  04                RfPacketP__m_addr = RfPacketP__ActiveMessageAddress__amAddress();
10351  04                RfPacketP__m_address_saved = TRUE;
10352  04              }
10353  03      
10354  03      
10355  03            if (RfPacketP__m_addr != RfPacketP__ActiveMessageAddress__amAddress()) 
10356  03              {
10357  04      
10358  04      
10359  04                RfPacketP__WatchDog__resetCpu();
10360  04              }
10361  03          }
10362  02      //#line 43
10363  02          __nesc_atomic_end(__nesc_atomic); }
10364  01      
10365  01      
10366  01        return RfPacketP__ActiveMessageAddress__amAddress();
10367  01      }
10368  00      
10369  00      //# 95 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
10370  00      static   am_addr_t ActiveMessageAddressC__amAddress(void)
10371  00      //#line 95
10372  00      {
10373  01        am_addr_t myAddr;
10374  01      
10375  01      //#line 97
10376  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10377  02      //#line 97
10378  02          myAddr = ActiveMessageAddressC__addr;
10379  02      //#line 97
10380  02          __nesc_atomic_end(__nesc_atomic); }
10381  01        return myAddr;
10382  01      }
10383  00      
10384  00      //# 82 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
10385  00      static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSe
             -ndC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t idx)
10386  00      {
10387  01        /* atomic removed: atomic calls only */
10388  01        {
10389  02          idx += /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head;
10390  02          idx %= 4;
10391  02          {
10392  03            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
10393  03      //#line 88
10394  03            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[idx];
10395  03      
10396  03      //#line 88
10397  03            return __nesc_temp;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 184 

10398  03          }
10399  02        }
10400  01      }
10401  00      
10402  00      //# 264 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
10403  00      static   error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id)
10404  00      {
10405  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10406  02      //#line 266
10407  02          {
10408  03      //#line 266
10409  03            {
10410  04              unsigned char __nesc_temp = 
10411  04      //#line 266
10412  04              SchedulerBasicP__pushTask(id) ? 0 : EBUSY;
10413  04      
10414  04              {
10415  05      //#line 266
10416  05                __nesc_atomic_end(__nesc_atomic); 
10417  05      //#line 266
10418  05                return __nesc_temp;
10419  05              }
10420  04            }
10421  03          }
10422  02      //#line 269
10423  02          __nesc_atomic_end(__nesc_atomic); }
10424  01      }
10425  00      
10426  00      //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
10427  00      static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__signalDone(message_t *msg, error_t result)
10428  00      {
10429  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10430  02          {
10431  03            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1__m_sending) 
10432  03              {
10433  04                {
10434  05      //#line 30
10435  05                  __nesc_atomic_end(__nesc_atomic); 
10436  05      //#line 30
10437  05                  return;
10438  05                }
10439  04              }
10440  03          }
10441  02      //#line 33
10442  02          __nesc_atomic_end(__nesc_atomic); }
10443  01      
10444  01      
10445  01      
10446  01        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -1__AMSend__sendDone(msg, result);
10447  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10448  02      //#line 38
10449  02          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1__m_sending = FALSE;
10450  02      //#line 38
10451  02          __nesc_atomic_end(__nesc_atomic); }
10452  01      }
10453  00      
10454  00      
10455  00      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 185 

10456  00      static error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__doSend(message_t *msg)
10457  00      {
10458  01        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__SubAMSend__send(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1__AMPacket__destination(msg), msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySend
             -P*/RfReliableMacRetrySendP__1__Packet__payloadLength(msg));
10459  01      }
10460  00      
10461  00      //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
10462  00      static  void *RfPacketP__Packet__getPayload(message_t *msg, uint8_t *len)
10463  00      {
10464  01        if (len != (void *)0) 
10465  01          {
10466  02            *len = RfPacketP__Packet__payloadLength(msg);
10467  02          }
10468  01      
10469  01        return (uint8_t *)msg->_data;
10470  01      }
10471  00      
10472  00      //# 183 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
10473  00      static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(uint8_t num, uin
             -t32_t dt)
10474  00      {
10475  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10476  02          {
10477  03            {
10478  04      //#line 187
10479  04              {
10480  05      //#line 187
10481  05                if (1 >= uart_debug_level) {
10482  06      //#line 187
10483  06                    {
10484  07      //#line 187
10485  07                      sprintf(uart_debug_buf, "VirtualizeTimerC.Timer.startOneShot dt=%ld\n", dt);
10486  07                    }
10487  06      //#line 187
10488  06                    ATOS_DEBUG_UART_PRINT();
10489  06                  }
10490  05              }
10491  04            }
10492  03      //#line 187
10493  03            ;
10494  03            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(num, /*HilTimerMilliC.Virtualize
             -TimerC*/VirtualizeTimerC__0__TimerFrom__getNow(), dt, TRUE);
10495  03          }
10496  02      //#line 189
10497  02          __nesc_atomic_end(__nesc_atomic); }
10498  01      }
10499  00      
10500  00      //# 55 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
10501  00      static void ATOS_DEBUG_UART_PRINT(void)
10502  00      {
10503  01        int i = 0;
10504  01      
10505  01      //#line 58
10506  01        while (i < 256 && uart_debug_buf[i] != '\0') 
10507  01          {
10508  02            ATOS_DEBUG_UART_PUTC(uart_debug_buf[i++]);
10509  02          }
10510  01      }
10511  00      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 186 

10512  00      //# 57 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
10513  00      static void uart0PutChar(char c)
10514  00      {
10515  01        uint16_t i;
10516  01      
10517  01        for (i = 0; i < 10000; i++) 
10518  01          {
10519  02            if (!(U0CSR & 0x01)) {
10520  03              break;
10521  03              }
10522  02          }
10523  01      //#line 66
10524  01        U0DBUF = c;
10525  01      
10526  01        for (i = 0; i < 10000; i++) 
10527  01          {
10528  02            if (!(U0CSR & 0x01)) {
10529  03              break;
10530  03              }
10531  02          }
10532  01      }
10533  00      
10534  00      //# 161 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
10535  00      static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(uint8_t num, uint32_t t0, 
             -uint32_t dt, bool isoneshot)
10536  00      {
10537  01        /* atomic removed: atomic calls only */
10538  01        {
10539  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtualize
             -TimerC*/VirtualizeTimerC__0__m_timers[num];
10540  02      
10541  02      //#line 166
10542  02          timer->t0 = t0;
10543  02          timer->dt = dt;
10544  02          timer->isoneshot = isoneshot;
10545  02          timer->isrunning = TRUE;
10546  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask();
10547  02        }
10548  01      }
10549  00      
10550  00      //# 69 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
10551  00      static   /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Tra
             -nsformCounterC__0__Counter__get(void)
10552  00      {
10553  01        /* atomic removed: atomic calls only */
10554  01        {
10555  02          /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type rv = 0;
10556  02          /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type high = /*CounterMilli32C.Transfor
             -m*/TransformCounterC__0__m_upper;
10557  02          /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type low = /*CounterMilli32C.Transform*/
             -TransformCounterC__0__CounterFrom__get();
10558  02      
10559  02          if (/*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending()) 
10560  02            {
10561  03      
10562  03      
10563  03      
10564  03      
10565  03      
10566  03      
10567  03              high++;
10568  03              low = /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__get();
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 187 

10569  03            }
10570  02      
10571  02          {
10572  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type high_to = high;
10573  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type low_to = low >> /*CounterMilli32C.T
             -ransform*/TransformCounterC__0__LOW_SHIFT_RIGHT;
10574  03      
10575  03      //#line 92
10576  03            rv = (high_to << /*CounterMilli32C.Transform*/TransformCounterC__0__HIGH_SHIFT_LEFT) | low_to;
10577  03          }
10578  02      
10579  02          {
10580  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type __nesc_temp = 
10581  03      //#line 95
10582  03            rv;
10583  03      
10584  03      //#line 95
10585  03            return __nesc_temp;
10586  03          }
10587  02        }
10588  01      }
10589  00      
10590  00      //# 316 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
10591  00      static   uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void)
10592  00      {
10593  01        /* atomic removed: atomic calls only */
10594  01        {
10595  02          uint16_t r;
10596  02      
10597  02          {
10598  03      //#line 322
10599  03            r = T1CNTL;
10600  03      //#line 322
10601  03            r += T1CNTH << 8;
10602  03          }
10603  02      //#line 322
10604  02          ;
10605  02      
10606  02          {
10607  03            unsigned short __nesc_temp = 
10608  03      //#line 324
10609  03            r;
10610  03      
10611  03      //#line 324
10612  03            return __nesc_temp;
10613  03          }
10614  02        }
10615  01      }
10616  00      
10617  00      //# 35 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
10618  00      static  void *RfReliableMacPacketP__Packet__getPayload(message_t *msg, uint8_t *len)
10619  00      {
10620  01        if (len != (void *)0) 
10621  01          {
10622  02            *len = RfReliableMacPacketP__Packet__payloadLength(msg);
10623  02          }
10624  01      
10625  01        return RfReliableMacPacketP__SubPacket__getPayload(msg, (void *)0) + sizeof(rf_rmac_header_t );
10626  01      }
10627  00      
10628  00      //# 102 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
10629  00      static int AtosNetStdP__indexOfTraceItem(anstd_trace_t *trace, uint16_t node_id)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 188 

10630  00      {
10631  01        uint8_t i;
10632  01      
10633  01      //#line 105
10634  01        for (i = 0; i < trace->total_count; ++i) 
10635  01          {
10636  02            if (trace->items[i].node_id == node_id) 
10637  02              {
10638  03                return i;
10639  03              }
10640  02          }
10641  01      
10642  01        return -1;
10643  01      }
10644  00      
10645  00      static void AtosNetStdP__traceBackward(message_t *msg, anstd_trace_ack_t *trace_ack, int index)
10646  00      {
10647  01        uint16_t node_id = 0xFFFF;
10648  01      
10649  01      //#line 119
10650  01        memcpy(&AtosNetStdP__m_send_msg, msg, sizeof AtosNetStdP__m_send_msg);
10651  01      
10652  01        if (index > 0) 
10653  01          {
10654  02            node_id = trace_ack->items[index - 1].node_id;
10655  02            AtosNetStdP__AMSend__send(node_id, &AtosNetStdP__m_send_msg, AtosNetStdP__Packet__payloadLength(&At
             -osNetStdP__m_send_msg));
10656  02          }
10657  01      }
10658  00      
10659  00      //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
10660  00      static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
10661  00      {
10662  01        error_t result;
10663  01      
10664  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10665  02          {
10666  03            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetryS
             -endP*/RfReliableMacRetrySendP__1__PacketEx__getPacketHeader(msg);
10667  03            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
10668  03      
10669  03            if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending) 
10670  03              {
10671  04                {
10672  05                  unsigned char __nesc_temp = 
10673  05      //#line 85
10674  05                  FAIL;
10675  05      
10676  05                  {
10677  06      //#line 85
10678  06                    __nesc_atomic_end(__nesc_atomic); 
10679  06      //#line 85
10680  06                    return __nesc_temp;
10681  06                  }
10682  05                }
10683  04              }
10684  03            header->ack_req = addr != 0xFFFF;
10685  03      
10686  03            __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
10687  03      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 189 

10688  03            header->dsn = rf_rmac_dsn;
10689  03      
10690  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__AMPacket__setDestination(msg, addr);
10691  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__Packet__setPayloadLength(msg, len);
10692  03      
10693  03      
10694  03            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__doSend(msg);
10695  03      
10696  03            if (result == 0) 
10697  03              {
10698  04                rf_rmac_dsn++;
10699  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending = TRUE;
10700  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_msg = msg;
10701  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_retry_times = 0;
10702  04              }
10703  03      
10704  03            {
10705  04              unsigned char __nesc_temp = 
10706  04      //#line 109
10707  04              result;
10708  04      
10709  04              {
10710  05      //#line 109
10711  05                __nesc_atomic_end(__nesc_atomic); 
10712  05      //#line 109
10713  05                return __nesc_temp;
10714  05              }
10715  04            }
10716  03          }
10717  02      //#line 112
10718  02          __nesc_atomic_end(__nesc_atomic); }
10719  01      }
10720  00      
10721  00      //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
10722  00      static  uint8_t AtosNetStdP__Packet__payloadLength(message_t *arg_0x7eb21468){
10723  01      //#line 67
10724  01        unsigned char result;
10725  01      //#line 67
10726  01      
10727  01      //#line 67
10728  01        result = RfReliableMacPacketP__Packet__payloadLength(arg_0x7eb21468);
10729  01      //#line 67
10730  01      
10731  01      //#line 67
10732  01        return result;
10733  01      //#line 67
10734  01      }
10735  00      //#line 67
10736  00      //# 174 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
10737  00      static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(uint8_t num, ui
             -nt32_t dt)
10738  00      {
10739  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10740  02          {
10741  03            {
10742  04      //#line 178
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 190 

10743  04              {
10744  05      //#line 178
10745  05                if (1 >= uart_debug_level) {
10746  06      //#line 178
10747  06                    {
10748  07      //#line 178
10749  07                      sprintf(uart_debug_buf, "VirtualizeTimerC.Timer.startPeriodic dt=%ld\n", dt);
10750  07                    }
10751  06      //#line 178
10752  06                    ATOS_DEBUG_UART_PRINT();
10753  06                  }
10754  05              }
10755  04            }
10756  03      //#line 178
10757  03            ;
10758  03            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(num, /*HilTimerMilliC.Virtualize
             -TimerC*/VirtualizeTimerC__0__TimerFrom__getNow(), dt, FALSE);
10759  03          }
10760  02      //#line 180
10761  02          __nesc_atomic_end(__nesc_atomic); }
10762  01      }
10763  00      
10764  00      //# 64 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
10765  00      static void RfMacBaseCsmaP__signalDone(error_t result)
10766  00      {
10767  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10768  02          {
10769  03            RfMacBaseCsmaP__m_result = result;
10770  03          }
10771  02      //#line 69
10772  02          __nesc_atomic_end(__nesc_atomic); }
10773  01      
10774  01        RfMacBaseCsmaP__signalDoneTask__postTask();
10775  01      }
10776  00      
10777  00      //# 76 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
10778  00      static   void AMResourceCenterP__AMResource__default__sendDone(uint8_t resource_id, message_t *msg, error
             -_t error)
10779  00      {
10780  01      }
10781  00      
10782  00      //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
10783  00      static  void AMResourceCenterP__AMResource__sendDone(uint8_t arg_0x7e6476f0, message_t *arg_0x7e662a60, e
             -rror_t arg_0x7e662be8){
10784  01      //#line 7
10785  01        switch (arg_0x7e6476f0) {
10786  02      //#line 7
10787  02          case /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResource
             -C__0__AM_RESOURCE_ID:
10788  02      //#line 7
10789  02            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/A
             -MResourceP__0__AMResource__sendDone(arg_0x7e662a60, arg_0x7e662be8);
10790  02      //#line 7
10791  02            break;
10792  02      //#line 7
10793  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC
             -__2__AM_RESOURCE_ID:
10794  02      //#line 7
10795  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AM
             -ResourceP__1__AMResource__sendDone(arg_0x7e662a60, arg_0x7e662be8);
10796  02      //#line 7
10797  02            break;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 191 

10798  02      //#line 7
10799  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__3__AM_RESOURCE
             -_ID:
10800  02      //#line 7
10801  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__AM
             -Resource__sendDone(arg_0x7e662a60, arg_0x7e662be8);
10802  02      //#line 7
10803  02            break;
10804  02      //#line 7
10805  02          case /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__1__AM_RESOURC
             -E_ID:
10806  02      //#line 7
10807  02            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3__A
             -MResource__sendDone(arg_0x7e662a60, arg_0x7e662be8);
10808  02      //#line 7
10809  02            break;
10810  02      //#line 7
10811  02          default:
10812  02      //#line 7
10813  02            AMResourceCenterP__AMResource__default__sendDone(arg_0x7e6476f0, arg_0x7e662a60, arg_0x7e662be8);
10814  02      //#line 7
10815  02            break;
10816  02      //#line 7
10817  02          }
10818  01      //#line 7
10819  01      }
10820  00      //#line 7
10821  00      //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
10822  00      static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__signalDone(message_t *msg, error_t result)
10823  00      {
10824  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10825  02          {
10826  03            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_sending) 
10827  03              {
10828  04                {
10829  05      //#line 57
10830  05                  __nesc_atomic_end(__nesc_atomic); 
10831  05      //#line 57
10832  05                  return;
10833  05                }
10834  04              }
10835  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__TimeoutTimer__stop();
10836  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__AckTimer__stop();
10837  03      
10838  03      
10839  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__m_msg = msg;
10840  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__m_result = result;
10841  03          }
10842  02      //#line 66
10843  02          __nesc_atomic_end(__nesc_atomic); }
10844  01      
10845  01        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__1__signalDoneTask__postTask();
10846  01      }
10847  00      
10848  00      //#line 51
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 192 

10849  00      static void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__signalDone(message_t *msg, error_t result)
10850  00      {
10851  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10852  02          {
10853  03            if (!/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__m_sending) 
10854  03              {
10855  04                {
10856  05      //#line 57
10857  05                  __nesc_atomic_end(__nesc_atomic); 
10858  05      //#line 57
10859  05                  return;
10860  05                }
10861  04              }
10862  03            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__0__TimeoutTimer__stop();
10863  03            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__0__AckTimer__stop();
10864  03      
10865  03      
10866  03            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__0__m_msg = msg;
10867  03            /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__0__m_result = result;
10868  03          }
10869  02      //#line 66
10870  02          __nesc_atomic_end(__nesc_atomic); }
10871  01      
10872  01        /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__0__signalDoneTask__postTask();
10873  01      }
10874  00      
10875  00      //# 96 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
10876  00      static void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm(void)
10877  00      {
10878  01        /* atomic removed: atomic calls only */
10879  01        {
10880  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type now = /*RfMacBaseCsmaC.Ala
             -rm32khz32C.Transform*/TransformAlarmC__1__Counter__get();
10881  02      //#line 100
10882  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type expires;
10883  02      //#line 100
10884  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type remaining;
10885  02      
10886  02      
10887  02      
10888  02          expires = /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 + /*RfMacBaseCsmaC.Alarm
             -32khz32C.Transform*/TransformAlarmC__1__m_dt;
10889  02      
10890  02      
10891  02          remaining = (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type )(expires - n
             -ow);
10892  02      
10893  02      
10894  02          if (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 <= now) 
10895  02            {
10896  03              if (expires >= /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 && 
10897  03              expires <= now) {
10898  04                remaining = 0;
10899  04                }
10900  03            }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 193 

10901  02          else {
10902  03              if (expires >= /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 || 
10903  03              expires <= now) {
10904  04                remaining = 0;
10905  04                }
10906  03            }
10907  02          if (remaining > /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY) 
10908  02            {
10909  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 = now + /*RfMacBaseCsmaC.Alarm
             -32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
10910  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = remaining - /*RfMacBaseCsmaC
             -.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
10911  03              remaining = /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
10912  03            }
10913  02          else 
10914  02            {
10915  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 += /*RfMacBaseCsmaC.Alarm32khz
             -32C.Transform*/TransformAlarmC__1__m_dt;
10916  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = 0;
10917  03            }
10918  02      
10919  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__startAt((/*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__from_size_type )now << 0, 
10920  02          (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type )remaining << 0);
10921  02        }
10922  01      }
10923  00      
10924  00      //# 69 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
10925  00      static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transf
             -ormCounterC*/TransformCounterC__1__Counter__get(void)
10926  00      {
10927  01        /* atomic removed: atomic calls only */
10928  01        {
10929  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type rv = 0;
10930  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type high = /*Counter32khz32C.
             -TransformCounterC*/TransformCounterC__1__m_upper;
10931  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type low = /*Counter32khz32C.Tra
             -nsformCounterC*/TransformCounterC__1__CounterFrom__get();
10932  02      
10933  02          if (/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__isOverflowPending()) 
10934  02            {
10935  03      
10936  03      
10937  03      
10938  03      
10939  03      
10940  03      
10941  03              high++;
10942  03              low = /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__get();
10943  03            }
10944  02      
10945  02          {
10946  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type high_to = high;
10947  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type low_to = low >> /*Counter32
             -khz32C.TransformCounterC*/TransformCounterC__1__LOW_SHIFT_RIGHT;
10948  03      
10949  03      //#line 92
10950  03            rv = (high_to << /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__HIGH_SHIFT_LEFT) | low_
             -to;
10951  03          }
10952  02      
10953  02          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 194 

10954  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type __nesc_temp = 
10955  03      //#line 95
10956  03            rv;
10957  03      
10958  03      //#line 95
10959  03            return __nesc_temp;
10960  03          }
10961  02        }
10962  01      }
10963  00      
10964  00      //# 69 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
10965  00      static   uint16_t CC2530RandomLfsrP__Random__rand16(void)
10966  00      //#line 69
10967  00      {
10968  01        uint16_t result;
10969  01      
10970  01        /* atomic removed: atomic calls only */
10971  01        ADCCON1 = (ADCCON1 & ~((1 << 3) | (1 << 2))) | (1 << 2);
10972  01      
10973  01        result = RNDH << 8;
10974  01        result += RNDL;
10975  01        return result;
10976  01      }
10977  00      
10978  00      //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
10979  00      static void /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__signalDone(message_t *msg, error_t result)
10980  00      {
10981  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10982  02          {
10983  03            if (!/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__m_sending) 
10984  03              {
10985  04                {
10986  05      //#line 30
10987  05                  __nesc_atomic_end(__nesc_atomic); 
10988  05      //#line 30
10989  05                  return;
10990  05                }
10991  04              }
10992  03          }
10993  02      //#line 33
10994  02          __nesc_atomic_end(__nesc_atomic); }
10995  01      
10996  01      
10997  01      
10998  01        /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_0__AMSend__sendDone(msg, result);
10999  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11000  02      //#line 38
11001  02          /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySend
             -P__0__m_sending = FALSE;
11002  02      //#line 38
11003  02          __nesc_atomic_end(__nesc_atomic); }
11004  01      }
11005  00      
11006  00      
11007  00      
11008  00      static error_t /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__0__doSend(message_t *msg)
11009  00      {
11010  01        return /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 195 

             -ySendP__0__SubAMSend__send(/*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__AMPacket__destination(msg), msg, /*ADSenRFNodeC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetryS
             -endP*/RfReliableMacRetrySendP__0__Packet__payloadLength(msg));
11011  01      }
11012  00      
11013  00      //# 61 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
11014  00      static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(uint32_t now)
11015  00      {
11016  01        /* atomic removed: atomic calls only */
11017  01        {
11018  02          uint8_t num;
11019  02      
11020  02          for (num = 0; num < /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS; num++) 
11021  02            {
11022  03              /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtua
             -lizeTimerC*/VirtualizeTimerC__0__m_timers[num];
11023  03      
11024  03              if (timer->isrunning) 
11025  03                {
11026  04                  uint32_t elapsed = now - timer->t0;
11027  04      
11028  04                  if (elapsed >= timer->dt) 
11029  04                    {
11030  05                      if (timer->isoneshot) 
11031  05                        {
11032  06                          timer->isrunning = FALSE;
11033  06                        }
11034  05                      else 
11035  05                        {
11036  06      
11037  06                          timer->t0 = now - elapsed % timer->dt;
11038  06                        }
11039  05      
11040  05                      {
11041  06      //#line 87
11042  06                        {
11043  07      //#line 87
11044  07                          if (1 >= uart_debug_level) {
11045  08      //#line 87
11046  08                              {
11047  09      //#line 87
11048  09                                sprintf(uart_debug_buf, "fireTimers %d, now=0x%lx,elapsed=0x%lx, dt=0x%lx,t0=0x
             -%lx\n", (int )num, elapsed, now, timer->dt, timer->t0);
11049  09                              }
11050  08      //#line 87
11051  08                              ATOS_DEBUG_UART_PRINT();
11052  08                            }
11053  07                        }
11054  06                      }
11055  05      //#line 87
11056  05                      ;
11057  05      
11058  05                      /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(num);
11059  05                    }
11060  04                }
11061  03            }
11062  02      
11063  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask();
11064  02        }
11065  01      }
11066  00      
11067  00      //# 96 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 196 

11068  00      static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm(void)
11069  00      {
11070  01        /* atomic removed: atomic calls only */
11071  01        {
11072  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type now = /*HilTimerMilliC.Ala
             -rmMilli32C.Transform*/TransformAlarmC__0__Counter__get();
11073  02      //#line 100
11074  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type expires;
11075  02      //#line 100
11076  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type remaining;
11077  02      
11078  02      
11079  02      
11080  02          expires = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 + /*HilTimerMilliC.Alarm
             -Milli32C.Transform*/TransformAlarmC__0__m_dt;
11081  02      
11082  02      
11083  02          remaining = (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type )(expires - n
             -ow);
11084  02      
11085  02      
11086  02          if (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 <= now) 
11087  02            {
11088  03              if (expires >= /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 && 
11089  03              expires <= now) {
11090  04                remaining = 0;
11091  04                }
11092  03            }
11093  02          else {
11094  03              if (expires >= /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 || 
11095  03              expires <= now) {
11096  04                remaining = 0;
11097  04                }
11098  03            }
11099  02          if (remaining > /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY) 
11100  02            {
11101  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 = now + /*HilTimerMilliC.Alarm
             -Milli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11102  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = remaining - /*HilTimerMilliC
             -.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11103  03              remaining = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11104  03            }
11105  02          else 
11106  02            {
11107  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 += /*HilTimerMilliC.AlarmMilli
             -32C.Transform*/TransformAlarmC__0__m_dt;
11108  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = 0;
11109  03            }
11110  02      
11111  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt((/*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__from_size_type )now << 5, 
11112  02          (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type )remaining << 5);
11113  02        }
11114  01      }
11115  00      
11116  00      //# 65 "ADSenRFNodeP.nc"
11117  00      static  void ADSenRFNodeP__ADSensorRead__readDone(error_t result, int16_t val)
11118  00      {
11119  01      
11120  01        uint8_t sensor_payload[2];
11121  01      
11122  01      //#line 69
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 197 

11123  01        {
11124  02      //#line 69
11125  02          {
11126  03      //#line 69
11127  03            if (9 >= uart_debug_level) {
11128  04      //#line 69
11129  04                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11130  05      //#line 69
11131  05                  {
11132  06      //#line 69
11133  06                    sprintf(uart_debug_buf, "AD Data = %04x\n", val);
11134  06                  }
11135  05      //#line 70
11136  05                  __nesc_atomic_end(__nesc_atomic); }
11137  04      //#line 69
11138  04                ATOS_DEBUG_UART_PRINT();
11139  04              }
11140  03          }
11141  02        }
11142  01      //#line 69
11143  01        ;
11144  01      
11145  01        sensor_payload[0] = val >> 8;
11146  01        sensor_payload[1] = val & 0xff;
11147  01      
11148  01        memcpy(ADSenRFNodeP__p_sensor_payload, sensor_payload, 2);
11149  01      
11150  01        if (result == 0) 
11151  01          {
11152  02            ADSenRFNodeP__sendMsgTask__postTask();
11153  02          }
11154  01        else 
11155  01          {
11156  02            ADSenRFNodeP__sensorDataTask__postTask();
11157  02          }
11158  01      }
11159  00      
11160  00      //# 38 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
11161  00      static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void)
11162  00      {
11163  01        /* atomic removed: atomic calls only */
11164  01        {
11165  02          T1CCTL0 = 0;
11166  02          T1CCTL1 = 0;
11167  02          T1CCTL2 = 0;
11168  02          ((uint8_t xdata *)0)[0x62A3] = 0;
11169  02          ((uint8_t xdata *)0)[0x62A4] = 0;
11170  02      
11171  02          T1CNTL = 0;
11172  02      
11173  02      
11174  02          CLKCON = (CLKCON & ~CC2530_CLKCON_TICKSPD_MASK) | CC2530_TICKF_DIV_8;
11175  02      
11176  02      
11177  02      
11178  02          T1CTL = (T1CTL & ~CC2530_T1CTL_DIV_MASK) | CC2530_TIMER1_DIV_128;
11179  02      
11180  02      
11181  02      
11182  02          T1CTL = (T1CTL & ~CC2530_T1CTL_MODE_MASK) | CC2530_TIMER1_MODE_FREE;
11183  02      
11184  02      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 198 

11185  02          T1STAT = 0;
11186  02      
11187  02      
11188  02          TIMIF |= 1 << CC2530_TIMIF_OVFIM;
11189  02          T1IE = 1;
11190  02        }
11191  01      
11192  01        return 0;
11193  01      }
11194  00      
11195  00      //# 22 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
11196  00      static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void)
11197  00      {
11198  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11199  02          {
11200  03            uint8_t i;
11201  03      
11202  03            for (i = 0; i < TopTaskMgrP__TOP_TASK_COUNT; ++i) 
11203  03              {
11204  04                if (TopTaskMgrP__m_task_flag[i]) 
11205  04                  {
11206  05                    {
11207  06                      unsigned char __nesc_temp = 
11208  06      //#line 32
11209  06                      TRUE;
11210  06      
11211  06                      {
11212  07      //#line 32
11213  07                        __nesc_atomic_end(__nesc_atomic); 
11214  07      //#line 32
11215  07                        return __nesc_temp;
11216  07                      }
11217  06                    }
11218  05                  }
11219  04              }
11220  03      //#line 36
11221  03            {
11222  04              unsigned char __nesc_temp = 
11223  04      //#line 36
11224  04              FALSE;
11225  04      
11226  04              {
11227  05      //#line 36
11228  05                __nesc_atomic_end(__nesc_atomic); 
11229  05      //#line 36
11230  05                return __nesc_temp;
11231  05              }
11232  04            }
11233  03          }
11234  02      //#line 39
11235  02          __nesc_atomic_end(__nesc_atomic); }
11236  01      }
11237  00      
11238  00      //# 61 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
11239  00      static bool /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(uint8_t *_data, uint8_t length)
11240  00      {
11241  01        while (length > 0) 
11242  01          {
11243  02            if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head == /*RfHardwareRxC.RfHardwareRxP*/R
             -fHardwareRxP__0__rxbuf_tail) 
11244  02              {
11245  03                return FALSE;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 199 

11246  03              }
11247  02      
11248  02            {
11249  03      //#line 70
11250  03              *_data = /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[/*RfHardwareRxC.RfHardwareR
             -xP*/RfHardwareRxP__0__rxbuf_head & ((1 << 8) - 1)];
11251  03      //#line 70
11252  03              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = (/*RfHardwareRxC.RfHardwareRxP*/RfH
             -ardwareRxP__0__rxbuf_head + 1) & ((1 << 8) - 1);
11253  03            }
11254  02      //#line 70
11255  02            ;
11256  02            _data++;
11257  02            length--;
11258  02          }
11259  01      
11260  01        return TRUE;
11261  01      }
11262  00      
11263  00      //# 56 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
11264  00      static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *msg)
11265  00      {
11266  01        if (!RfReliableMacPacketP__SubPacketEx__isValidPacket(msg)) 
11267  01          {
11268  02            return FALSE;
11269  02          }
11270  01      
11271  01        return RfReliableMacPacketP__SubPacket__payloadLength(msg) >= RfReliableMacPacketP__PacketEx__packetHea
             -derSize();
11272  01      }
11273  00      
11274  00      //# 21 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
11275  00      static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack)
11276  00      {
11277  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11278  02          {
11279  03            RfReliableMacAckP__fillAckMessageDefault(receive_msg, receive_dsn, ack_msg, ack);
11280  03            RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(receive_msg, receive_dsn, ack_msg, ack);
11281  03      
11282  03            {
11283  04              unsigned char __nesc_temp = 
11284  04      //#line 28
11285  04              sizeof(rf_ack_t );
11286  04      
11287  04              {
11288  05      //#line 28
11289  05                __nesc_atomic_end(__nesc_atomic); 
11290  05      //#line 28
11291  05                return __nesc_temp;
11292  05              }
11293  04            }
11294  03          }
11295  02      //#line 31
11296  02          __nesc_atomic_end(__nesc_atomic); }
11297  01      }
11298  00      
11299  00      //# 51 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
11300  00      static bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(uint16_t addr, uint8_t fi
             -eld_id, uint8_t dsn)
11301  00      {
11302  01        /* atomic removed: atomic calls only */
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 200 

11303  01        {
11304  02          int index = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(addr);
11305  02      
11306  02          field_id %= 1;
11307  02      
11308  02          if (index < 0) 
11309  02            {
11310  03              index = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress();
11311  03            }
11312  02      
11313  02          if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[index] == addr) 
11314  02            {
11315  03              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[field_id][index] == ds
             -n) 
11316  03                {
11317  04                  {
11318  05                    unsigned char __nesc_temp = 
11319  05      //#line 68
11320  05                    FALSE;
11321  05      
11322  05      //#line 68
11323  05                    return __nesc_temp;
11324  05                  }
11325  04                }
11326  03            }
11327  02          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[index] = addr;
11328  02          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[field_id][index] = dsn;
11329  02      
11330  02          {
11331  03            unsigned char __nesc_temp = 
11332  03      //#line 75
11333  03            TRUE;
11334  03      
11335  03      //#line 75
11336  03            return __nesc_temp;
11337  03          }
11338  02        }
11339  01      }
11340  00      
11341  00      //# 22 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
11342  00      void __vector_0(void) interrupt 0
11343  00      {
11344  01        EA = 0;
11345  01        PlatformInterruptC__INT_RFERR__fired();
11346  01        EA = 1;
11347  01      }
11348  00      
11349  00      
11350  00      
11351  00      
11352  00      
11353  00      
11354  00      
11355  00      void __vector_16(void) interrupt 16
11356  00      {
11357  01        EA = 0;
11358  01        PlatformInterruptC__INT_RF__fired();
11359  01        EA = 1;
11360  01      }
11361  00      
11362  00      //#line 55
11363  00      void __vector_9(void) interrupt 9
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 201 

11364  00      {
11365  01        EA = 0;
11366  01        PlatformInterruptC__INT_TIM1__fired();
11367  01        EA = 1;
11368  01      }
11369  00      
11370  00      
11371  00      
11372  00      
11373  00      
11374  00      
11375  00      
11376  00      
11377  00      void __vector_2(void) interrupt 2
11378  00      {
11379  01        EA = 0;
11380  01        PlatformInterruptC__INT_UART0_RX__fired();
11381  01        EA = 1;
11382  01      }
11383  00      
11384  00      
11385  00      
11386  00      
11387  00      
11388  00      
11389  00      void __vector_7(void) interrupt 7
11390  00      {
11391  01        EA = 0;
11392  01        PlatformInterruptC__INT_UART0_TX__fired();
11393  01        EA = 1;
11394  01      }
11395  00      
11396  00      
11397  00      
11398  00      
11399  00      
11400  00      
11401  00      
11402  00      void __vector_3(void) interrupt 3
11403  00      {
11404  01        EA = 0;
11405  01        PlatformInterruptC__INT_UART1_RX__fired();
11406  01        EA = 1;
11407  01      }
11408  00      
11409  00      
11410  00      
11411  00      
11412  00      
11413  00      
11414  00      void __vector_14(void) interrupt 14
11415  00      {
11416  01        EA = 0;
11417  01        PlatformInterruptC__INT_UART1_TX__fired();
11418  01        EA = 1;
11419  01      }
11420  00      
11421  00      
11422  00      
11423  00      
11424  00      
11425  00      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:30:34 PAGE 202 

11426  00      
11427  00      void __vector_5(void) interrupt 5
11428  00      {
11429  01        EA = 0;
11430  01        PlatformInterruptC__INT_ST__fired();
11431  01        EA = 1;
11432  01      }
11433  00      
11434  00      
11435  00      
11436  00      
11437  00      
11438  00      
11439  00      
11440  00      void __vector_13(void) interrupt 13
11441  00      {
11442  01        EA = 0;
11443  01        PlatformInterruptC__INT_P0__fired();
11444  01        EA = 1;
11445  01      }
11446  00      
11447  00      void __vector_15(void) interrupt 15
11448  00      {
11449  01        EA = 0;
11450  01        PlatformInterruptC__INT_P1__fired();
11451  01        EA = 1;
11452  01      }
11453  00      


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  19485    ----
   CONSTANT SIZE    =    496    ----
   XDATA SIZE       =   1768     897
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
