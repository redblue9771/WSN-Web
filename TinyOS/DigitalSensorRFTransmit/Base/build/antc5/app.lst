C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN .\app.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe app.c LARGE OMF2 DEBUG BROWSE PRINT(.\app.lst) OBJECT(.\app.obj) WARNINGLEV
                    -EL(0)

line level    source

   1          
   2          #define MANGLED_NESC_APP_C
   3          #define nx_struct struct
   4          #define nx_union union
   5          #define dbg(mode, format) ((void)0)
   6          #define dbg_clear(mode, format) ((void)0)
   7          #define dbg_active(mode) 0
   8          //# 8 "/opt/atos/tos/chips/cc2530/mcs51/keil_stdint.h"
   9          typedef signed char int8_t;
  10          typedef short int16_t;
  11          
  12          
  13          
  14          typedef long int32_t;
  15          
  16          
  17          /*typedef long long int int64_t;*/
  18          
  19          
  20          
  21          
  22          typedef unsigned char uint8_t;
  23          typedef unsigned short uint16_t;
  24          
  25          
  26          
  27          typedef unsigned long uint32_t;
  28          
  29          
  30          /*typedef unsigned long long int uint64_t;*/
  31          //# 19 "/opt/atos/tos/chips/cc2530/mcs51/stdint.h"
  32          typedef signed char int_least8_t;
  33          typedef short int int_least16_t;
  34          typedef long int_least32_t;
  35          
  36          
  37          
  38          /*__extension__*/ 
  39          typedef
  40                   float* int_least64_t;
  41                
  42          
  43          
  44          
  45          typedef unsigned char uint_least8_t;
  46          typedef unsigned short uint_least16_t;
  47          typedef unsigned long uint_least32_t;
  48          
  49          
  50          
  51          /*__extension__*/ 
  52          typedef 
  53                   float* uint_least64_t;
  54                
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 2   

  55          
  56          
  57          
  58          
  59          
  60          
  61          typedef signed char int_fast8_t;
  62          
  63          
  64          
  65          
  66          
  67          typedef int int_fast16_t;
  68          typedef int int_fast32_t;
  69          /*__extension__*/ 
  70          typedef
  71                   float* int_fast64_t;
  72                
  73          
  74          
  75          
  76          typedef unsigned char uint_fast8_t;
  77          
  78          
  79          
  80          
  81          
  82          typedef unsigned int uint_fast16_t;
  83          typedef unsigned int uint_fast32_t;
  84          /*__extension__*/ 
  85          typedef 
  86                   float* uint_fast64_t;
  87                
  88          //# 79 "/opt/atos/tos/chips/cc2530/mcs51/stdint.h" 3
  89          typedef int intptr_t;
  90          
  91          
  92          typedef unsigned int uintptr_t;
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          
 101          /*__extension__*/ 
 102          typedef
 103                   float* intmax_t;
 104                
 105          /*__extension__*/ 
 106          typedef 
 107                   float* uintmax_t;
 108                
 109          //# 231 "/usr/include/inttypes.h"
 110          //#line 228
 111          typedef struct __nesc_unnamed4242 {
 112            intmax_t quot;
 113            intmax_t rem;
 114          } imaxdiv_t;
 115          //# 235 "/usr/lib/ncc/nesc_nx.h"
 116          static   /*inline*/   uint8_t __nesc_ntoh_uint8(const void *source);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 3   

 117          
 118          
 119          
 120          
 121          static   /*inline*/   uint8_t __nesc_hton_uint8(void *target, uint8_t value);
 122          
 123          
 124          
 125          
 126          
 127          static   /*inline*/   uint8_t __nesc_ntoh_leuint8(const void *source);
 128          
 129          
 130          
 131          
 132          static   /*inline*/   uint8_t __nesc_hton_leuint8(void *target, uint8_t value);
 133          
 134          
 135          
 136          
 137          
 138          static   /*inline*/   int8_t __nesc_ntoh_int8(const void *source);
 139          //#line 257
 140          static   /*inline*/   int8_t __nesc_hton_int8(void *target, int8_t value);
 141          //#line 276
 142          static   /*inline*/   uint16_t __nesc_ntoh_leuint16(const void *source);
 143          
 144          
 145          
 146          
 147          static   /*inline*/   uint16_t __nesc_hton_leuint16(void *target, uint16_t value);
 148          //#line 385
 149          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nx_int8_t;typedef int8_t __nesc_nxbase_nx_in
             -t8_t  ;
 150          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nx_int16_t;typedef int16_t __nesc_nxbase_nx_
             -int16_t  ;
 151          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nx_int32_t;typedef int32_t __nesc_nxbase_nx_
             -int32_t  ;
 152          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nx_int64_t;/*typedef int64_t __nesc_nxbase_n
             -x_int64_t  ;*/
 153          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nx_uint8_t;typedef uint8_t __nesc_nxbase_nx_
             -uint8_t  ;
 154          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nx_uint16_t;typedef uint16_t __nesc_nxbase_n
             -x_uint16_t  ;
 155          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nx_uint32_t;typedef uint32_t __nesc_nxbase_n
             -x_uint32_t  ;
 156          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nx_uint64_t;/*typedef uint64_t __nesc_nxbase
             -_nx_uint64_t  ;*/
 157          
 158          
 159          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nxle_int8_t;typedef int8_t __nesc_nxbase_nxl
             -e_int8_t  ;
 160          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nxle_int16_t;typedef int16_t __nesc_nxbase_n
             -xle_int16_t  ;
 161          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nxle_int32_t;typedef int32_t __nesc_nxbase_n
             -xle_int32_t  ;
 162          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nxle_int64_t;/*typedef int64_t __nesc_nxbase
             -_nxle_int64_t  ;*/
 163          typedef struct { char _data[1]; } /*__attribute__((packed))*/ nxle_uint8_t;typedef uint8_t __nesc_nxbase_n
             -xle_uint8_t  ;
 164          typedef struct { char _data[2]; } /*__attribute__((packed))*/ nxle_uint16_t;typedef uint16_t __nesc_nxbase
             -_nxle_uint16_t  ;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 4   

 165          typedef struct { char _data[4]; } /*__attribute__((packed))*/ nxle_uint32_t;typedef uint32_t __nesc_nxbase
             -_nxle_uint32_t  ;
 166          typedef struct { char _data[8]; } /*__attribute__((packed))*/ nxle_uint64_t;/*typedef uint64_t __nesc_nxba
             -se_nxle_uint64_t  ;*/
 167          //# 26 "/usr/include/machine/_types.h"
 168          typedef signed char __int8_t;
 169          typedef unsigned char __uint8_t;
 170          
 171          
 172          
 173          
 174          
 175          
 176          
 177          
 178          typedef signed short __int16_t;
 179          typedef unsigned short __uint16_t;
 180          
 181          
 182          
 183          
 184          
 185          
 186          
 187          
 188          typedef __int16_t __int_least16_t;
 189          typedef __uint16_t __uint_least16_t;
 190          //# 58 "/usr/include/machine/_types.h" 3
 191          typedef signed int __int32_t;
 192          typedef unsigned int __uint32_t;
 193          //#line 76
 194          typedef __int32_t __int_least32_t;
 195          typedef __uint32_t __uint_least32_t;
 196          //#line 99
 197          /*typedef signed long long __int64_t;*/
 198          /*typedef unsigned long long __uint64_t;*/
 199          //# 14 "/usr/include/sys/lock.h"
 200          typedef void *_LOCK_T;
 201          //# 14 "/usr/include/sys/_types.h"
 202          typedef long _off_t;
 203          /*__extension__*/ 
 204          //#line 15
 205          typedef
 206                   float* _off64_t;
 207                
 208          
 209          
 210          typedef int _ssize_t;
 211          //# 354 "/usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h" 3
 212          typedef unsigned int wint_t;
 213          //# 35 "/usr/include/sys/_types.h"
 214          //#line 27
 215          typedef struct __nesc_unnamed4243 {
 216          
 217            int __count;
 218            union __nesc_unnamed4244 {
 219          
 220              wint_t __wch;
 221              unsigned char __wchb[4];
 222            } __value;
 223          } _mbstate_t;
 224          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 5   

 225          typedef _LOCK_T _flock_t;
 226          
 227          
 228          typedef void *_iconv_t;
 229          //# 151 "/usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h" 3
 230          typedef int ptrdiff_t;
 231          //#line 213
 232          typedef unsigned int size_t;
 233          //#line 325
 234          typedef short unsigned int wchar_t;
 235          //# 19 "/usr/include/machine/types.h"
 236          typedef long int __off_t;
 237          typedef int __pid_t;
 238          
 239          /*__extension__*/ 
 240          //#line 22
 241          typedef
 242                   float* __loff_t;
 243                
 244          //# 92 "/usr/include/sys/types.h"
 245          typedef unsigned char u_char;
 246          typedef unsigned short u_short;
 247          typedef unsigned int u_int;
 248          typedef unsigned long u_long;
 249          
 250          
 251          
 252          typedef unsigned short ushort;
 253          typedef unsigned int uint;
 254          
 255          
 256          
 257          typedef unsigned long clock_t;
 258          
 259          
 260          
 261          
 262          typedef long time_t;
 263          
 264          
 265          
 266          
 267          struct timespec {
 268            time_t tv_sec;
 269            long tv_nsec;
 270          };
 271          
 272          struct itimerspec {
 273            struct timespec it_interval;
 274            struct timespec it_value;
 275          };
 276          
 277          
 278          typedef long daddr_t;
 279          typedef char *caddr_t;
 280          //# 180 "/usr/include/sys/types.h" 3
 281          typedef int pid_t;
 282          
 283          
 284          
 285          typedef _ssize_t ssize_t;
 286          //#line 203
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 6   

 287          typedef unsigned short nlink_t;
 288          //#line 225
 289          typedef long fd_mask;
 290          
 291          
 292          
 293          
 294          
 295          
 296          
 297          
 298          
 299          //#line 233
 300          typedef struct _types_fd_set {
 301            fd_mask fds_bits[(64 + (sizeof(fd_mask ) * 8 - 1)) / (sizeof(fd_mask ) * 8)];
 302          } _types_fd_set;
 303          //#line 256
 304          typedef unsigned long clockid_t;
 305          
 306          
 307          
 308          
 309          typedef unsigned long timer_t;
 310          
 311          
 312          
 313          typedef unsigned long useconds_t;
 314          typedef long suseconds_t;
 315          //# 26 "/usr/include/cygwin/types.h"
 316          typedef struct timespec timespec_t;
 317          
 318          
 319          
 320          
 321          typedef struct timespec timestruc_t;
 322          
 323          
 324          
 325          
 326          
 327          typedef _off64_t off_t;
 328          
 329          
 330          
 331          
 332          
 333          typedef __loff_t loff_t;
 334          
 335          
 336          
 337          typedef short __dev16_t;
 338          typedef unsigned long __dev32_t;
 339          
 340          typedef __dev32_t dev_t;
 341          
 342          
 343          
 344          
 345          
 346          
 347          
 348          typedef long blksize_t;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 7   

 349          
 350          
 351          
 352          
 353          typedef long __blkcnt32_t;
 354          typedef
 355                   float* __blkcnt64_t;
 356                
 357          
 358          typedef __blkcnt64_t blkcnt_t;
 359          
 360          
 361          
 362          
 363          
 364          
 365          
 366          typedef unsigned long fsblkcnt_t;
 367          
 368          
 369          
 370          
 371          typedef unsigned long fsfilcnt_t;
 372          
 373          
 374          
 375          
 376          typedef unsigned short __uid16_t;
 377          typedef unsigned long __uid32_t;
 378          
 379          typedef __uid32_t uid_t;
 380          
 381          
 382          
 383          
 384          
 385          
 386          
 387          typedef unsigned short __gid16_t;
 388          typedef unsigned long __gid32_t;
 389          
 390          typedef __gid32_t gid_t;
 391          
 392          
 393          
 394          
 395          
 396          
 397          
 398          typedef unsigned long __ino32_t;
 399          typedef 
 400                   float* __ino64_t;
 401                
 402          
 403          typedef __ino64_t ino_t;
 404          
 405          
 406          
 407          
 408          
 409          
 410          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 8   

 411          
 412          typedef unsigned long id_t;
 413          //# 140 "/usr/include/cygwin/types.h" 3
 414          struct flock {
 415            short l_type;
 416            short l_whence;
 417            off_t l_start;
 418            off_t l_len;
 419          
 420            pid_t l_pid;
 421          };
 422          
 423          
 424          
 425          
 426          
 427          
 428          
 429          typedef
 430                   float* key_t;
 431                
 432          
 433          
 434          
 435          
 436          
 437          
 438          
 439          typedef unsigned long vm_offset_t;
 440          
 441          
 442          
 443          
 444          typedef unsigned long vm_size_t;
 445          
 446          
 447          
 448          
 449          typedef void *vm_object_t;
 450          
 451          
 452          
 453          
 454          typedef unsigned char u_int8_t;
 455          
 456          
 457          
 458          typedef __uint16_t u_int16_t;
 459          
 460          
 461          
 462          typedef __uint32_t u_int32_t;
 463          
 464          
 465          
 466          /*typedef __uint64_t u_int64_t;*/
 467          
 468          
 469          
 470          
 471          typedef __int32_t register_t;
 472          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 9   

 473          
 474          
 475          
 476          typedef char *addr_t;
 477          
 478          
 479          
 480          
 481          typedef unsigned mode_t;
 482          
 483          
 484          
 485          
 486          
 487          typedef struct __pthread_t {
 488          //#line 211
 489            char __dummy;
 490          } *
 491          //#line 211
 492          pthread_t;
 493          typedef struct __pthread_mutex_t {
 494          //#line 212
 495            char __dummy;
 496          } *
 497          //#line 212
 498          pthread_mutex_t;
 499          
 500          typedef struct __pthread_key_t {
 501          //#line 214
 502            char __dummy;
 503          } *
 504          //#line 214
 505          pthread_key_t;
 506          typedef struct __pthread_attr_t {
 507          //#line 215
 508            char __dummy;
 509          } *
 510          //#line 215
 511          pthread_attr_t;
 512          typedef struct __pthread_mutexattr_t {
 513          //#line 216
 514            char __dummy;
 515          } *
 516          //#line 216
 517          pthread_mutexattr_t;
 518          typedef struct __pthread_condattr_t {
 519          //#line 217
 520            char __dummy;
 521          } *
 522          //#line 217
 523          pthread_condattr_t;
 524          typedef struct __pthread_cond_t {
 525          //#line 218
 526            char __dummy;
 527          } *
 528          //#line 218
 529          pthread_cond_t;
 530          
 531          
 532          
 533          
 534          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 10  

 535          
 536          
 537          //#line 221
 538          typedef struct __nesc_unnamed4245 {
 539          
 540            pthread_mutex_t mutex;
 541            int state;
 542          } 
 543          pthread_once_t;
 544          typedef struct __pthread_rwlock_t {
 545          //#line 227
 546            char __dummy;
 547          } *
 548          //#line 227
 549          pthread_rwlock_t;
 550          typedef struct __pthread_rwlockattr_t {
 551          //#line 228
 552            char __dummy;
 553          } *
 554          //#line 228
 555          pthread_rwlockattr_t;
 556          //# 30 "/opt/atos/tos/chips/cc2530/mcs51/stdio.h"
 557          extern int sprintf(char *, const char *, ...);
 558          //# 7 "/opt/atos/tos/chips/cc2530/mcs51/string.h"
 559          extern void *memcpy(void *s1, void *s2, int n);
 560          
 561          extern void *memset(void *s, char val, int n);
 562          //# 19 "/usr/include/sys/reent.h"
 563          typedef unsigned long __ULong;
 564          //# 40 "/usr/include/sys/reent.h" 3
 565          struct _Bigint {
 566          
 567            struct _Bigint *_next;
 568            int _k, _maxwds, _sign, _wds;
 569            __ULong _x[1];
 570          };
 571          
 572          
 573          struct __tm {
 574          
 575            int __tm_sec;
 576            int __tm_min;
 577            int __tm_hour;
 578            int __tm_mday;
 579            int __tm_mon;
 580            int __tm_year;
 581            int __tm_wday;
 582            int __tm_yday;
 583            int __tm_isdst;
 584          };
 585          
 586          
 587          
 588          
 589          
 590          
 591          
 592          struct _on_exit_args {
 593            void *_fnargs[32];
 594            void *_dso_handle[32];
 595          
 596            __ULong _fntypes;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 11  

 597          
 598          
 599            __ULong _is_cxa;
 600          };
 601          
 602          
 603          
 604          
 605          
 606          
 607          
 608          
 609          
 610          struct _atexit {
 611            struct _atexit *_next;
 612            int _ind;
 613          
 614            void (*_fns[32])(void );
 615            struct _on_exit_args _on_exit_args;
 616          };
 617          
 618          
 619          
 620          
 621          
 622          
 623          
 624          
 625          
 626          struct __sbuf {
 627            unsigned char *_base;
 628            int _size;
 629          };
 630          
 631          
 632          
 633          
 634          
 635          
 636          typedef long _fpos_t;
 637          
 638          
 639          
 640          typedef _off64_t _fpos64_t;
 641          //#line 166
 642          struct __sFILE {
 643            unsigned char *_p;
 644            int _r;
 645            int _w;
 646            short _flags;
 647            short _file;
 648            struct __sbuf _bf;
 649            int _lbfsize;
 650          
 651          
 652          
 653          
 654          
 655          
 656            void *_cookie;
 657          
 658            _ssize_t /*__attribute((__cdecl__))*/ (*_read)(void *_cookie, char *_buf, int _n);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 12  

 659            _ssize_t /*__attribute((__cdecl__))*/ (*_write)(void *_cookie, const char *_buf, int _n);
 660          
 661            _fpos_t /*__attribute((__cdecl__))*/ (*_seek)(void *_cookie, _fpos_t _offset, int _whence);
 662            int /*__attribute((__cdecl__))*/ (*_close)(void *_cookie);
 663          
 664          
 665            struct __sbuf _ub;
 666            unsigned char *_up;
 667            int _ur;
 668          
 669          
 670            unsigned char _ubuf[3];
 671            unsigned char _nbuf[1];
 672          
 673          
 674            struct __sbuf _lb;
 675          
 676          
 677            int _blksize;
 678            int _offset;
 679          
 680          
 681            struct _reent *__data;
 682          
 683          
 684          
 685            _flock_t _lock;
 686          };
 687          
 688          
 689          
 690          struct __sFILE64 {
 691            unsigned char *_p;
 692            int _r;
 693            int _w;
 694            short _flags;
 695            short _file;
 696            struct __sbuf _bf;
 697            int _lbfsize;
 698          
 699            struct _reent *__data;
 700          
 701          
 702            void *_cookie;
 703          
 704            _ssize_t /*__attribute((__cdecl__))*/ (*_read)(void *_cookie, char *_buf, int _n);
 705            _ssize_t /*__attribute((__cdecl__))*/ (*_write)(void *_cookie, const char *_buf, int _n);
 706          
 707            _fpos_t /*__attribute((__cdecl__))*/ (*_seek)(void *_cookie, _fpos_t _offset, int _whence);
 708            int /*__attribute((__cdecl__))*/ (*_close)(void *_cookie);
 709          
 710          
 711            struct __sbuf _ub;
 712            unsigned char *_up;
 713            int _ur;
 714          
 715          
 716            unsigned char _ubuf[3];
 717            unsigned char _nbuf[1];
 718          
 719          
 720            struct __sbuf _lb;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 13  

 721          
 722          
 723            int _blksize;
 724            int _flags2;
 725          
 726            _off64_t _offset;
 727            _fpos64_t /*__attribute((__cdecl__))*/ (*_seek64)(void *_cookie, _fpos64_t _offset, int _whence);
 728          
 729          
 730            _flock_t _lock;
 731          };
 732          
 733          typedef struct __sFILE64 __FILE;
 734          
 735          
 736          
 737          
 738          struct _glue {
 739          
 740            struct _glue *_next;
 741            int _niobs;
 742            __FILE *_iobs;
 743          };
 744          //#line 290
 745          struct _rand48 {
 746            unsigned short _seed[3];
 747            unsigned short _mult[3];
 748            unsigned short _add;
 749          };
 750          //#line 565
 751          struct _reent {
 752          
 753            int _errno;
 754          
 755          
 756          
 757          
 758            __FILE *_stdin, *_stdout, *_stderr;
 759          
 760            int _inc;
 761            char _emergency[25];
 762          
 763            int _current_category;
 764            const char *_current_locale;
 765          
 766            int __sdidinit;
 767          
 768            void /*__attribute((__cdecl__))*/ (*__cleanup)(struct _reent *);
 769          
 770          
 771            struct _Bigint *_result;
 772            int _result_k;
 773            struct _Bigint *_p5s;
 774            struct _Bigint **_freelist;
 775          
 776          
 777            int _cvtlen;
 778            char *_cvtbuf;
 779          
 780            union __nesc_unnamed4246 {
 781          
 782              struct __nesc_unnamed4247 {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 14  

 783          
 784                unsigned int _unused_rand;
 785                char *_strtok_last;
 786                char _asctime_buf[26];
 787                struct __tm _localtime_buf;
 788                int _gamma_signgam;
 789                /*__extension__*/ 
 790                   float* _rand_next;
 791                
 792                struct _rand48 _r48;
 793                _mbstate_t _mblen_state;
 794                _mbstate_t _mbtowc_state;
 795                _mbstate_t _wctomb_state;
 796                char _l64a_buf[8];
 797                char _signal_buf[24];
 798                int _getdate_err;
 799                _mbstate_t _mbrlen_state;
 800                _mbstate_t _mbrtowc_state;
 801                _mbstate_t _mbsrtowcs_state;
 802                _mbstate_t _wcrtomb_state;
 803                _mbstate_t _wcsrtombs_state;
 804              } _reent;
 805          
 806          
 807          
 808              struct __nesc_unnamed4248 {
 809          
 810          
 811                unsigned char *_nextf[30];
 812                unsigned int _nmalloc[30];
 813              } _unused;
 814            } _new;
 815          
 816          
 817            struct _atexit *_atexit;
 818            struct _atexit _atexit0;
 819          
 820          
 821            void (**_sig_func)(int );
 822          
 823          
 824          
 825          
 826            struct _glue __sglue;
 827            __FILE __sf[3];
 828          };
 829          //#line 799
 830          struct _reent;
 831          struct _reent;
 832          
 833          
 834          
 835          
 836          
 837          
 838          
 839          
 840          
 841          struct _reent;
 842          //# 32 "/usr/include/stdlib.h"
 843          //#line 28
 844          typedef struct __nesc_unnamed4249 {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 15  

 845          
 846            int quot;
 847            int rem;
 848          } div_t;
 849          
 850          
 851          
 852          
 853          
 854          //#line 34
 855          typedef struct __nesc_unnamed4250 {
 856          
 857            long quot;
 858            long rem;
 859          } ldiv_t;
 860          
 861          
 862          
 863          
 864          
 865          
 866          //#line 41
 867          typedef struct __nesc_unnamed4251 {
 868          
 869          
 870                   float* quot;
 871                
 872          
 873                   float* rem;
 874                
 875          } lldiv_t;
 876          //# 11 "/usr/include/math.h"
 877          union __dmath {
 878          
 879            __ULong i[2];
 880            double d;
 881          };
 882          
 883          union __fmath {
 884          
 885            __ULong i[1];
 886            float f;
 887          };
 888          
 889          union __ldmath {
 890          
 891            __ULong i[4];
 892            long double ld;
 893          };
 894          //# 111 "/usr/include/math.h" 3
 895          typedef float float_t;
 896          typedef double double_t;
 897          //#line 344
 898          struct exception {
 899          
 900          
 901            int type;
 902            char *name;
 903            double arg1;
 904            double arg2;
 905            double retval;
 906            int err;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 16  

 907          };
 908          //#line 399
 909          enum __fdlibm_version {
 910          
 911            __fdlibm_ieee = -1, 
 912            __fdlibm_svid, 
 913            __fdlibm_xopen, 
 914            __fdlibm_posix
 915          };
 916          
 917          
 918          
 919          
 920          enum __fdlibm_version;
 921          //# 20 "/opt/tinyos-2.x/tos/system/tos.h"
 922          typedef uint8_t bool;
 923          enum __nesc_unnamed4252 {
 924          //#line 21
 925            FALSE = 0, TRUE = 1
 926          };
 927          typedef nx_int8_t nx_bool;
 928          uint16_t TOS_NODE_ID = 1;
 929          
 930          
 931          
 932          
 933          
 934          /*struct __nesc_attr_atmostonce {
 935          };*/
 936          //#line 31
 937          /*struct __nesc_attr_atleastonce {
 938          };*/
 939          //#line 32
 940          /*struct __nesc_attr_exactlyonce {
 941          };*/
 942          //# 6 "/opt/tinyos-2.x/tos/types/AM.h"
 943          typedef nx_uint8_t nx_am_id_t;
 944          typedef nx_uint8_t nx_am_group_t;
 945          typedef nx_uint16_t nx_am_addr_t;
 946          
 947          typedef uint8_t am_id_t;
 948          typedef uint8_t am_group_t;
 949          typedef uint16_t am_addr_t;
 950          
 951          enum __nesc_unnamed4253 {
 952            AM_BROADCAST_ADDR = 0xffff
 953          };
 954          
 955          
 956          
 957          
 958          
 959          
 960          
 961          
 962          
 963          enum __nesc_unnamed4254 {
 964            TOS_AM_GROUP = 0x22, 
 965            TOS_AM_ADDRESS = 1
 966          };
 967          
 968          // TinyOS's ioCC2530.h is replaced by IAR/KEIL's 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 17  

 969          #include "ioCC2530.h"
 970          
 971          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/RfConstant.h"
 972          enum rf_fcs_enums {
 973            RF_FCS_CRC_OK_MASK = 0x80, 
 974            RF_FCS_CORRELATION_MASK = 0x7F
 975          };
 976          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/RfAck.h"
 977          //#line 10
 978          typedef nx_struct _rf_ack_t {
 979          
 980          
 981            nx_uint8_t dsn;
 982          
 983          
 984          
 985          
 986            nx_uint16_t parent;
 987            nx_uint16_t parent_cost;
 988            nx_uint8_t hopcount;
 989            nx_uint8_t buffer_pressure;
 990          
 991            nx_bool forward_full;
 992            nx_bool receive_this_msg;
 993          } /*__attribute__((packed))*/ 
 994          //#line 39
 995          rf_ack_t;
 996          //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/RfMessage.h"
 997          //#line 13
 998          typedef nx_struct _rf_header_t {
 999          
1000            nxle_uint8_t length;
1001            nxle_uint16_t fcf;
1002            nxle_uint8_t dsn;
1003            nxle_uint16_t destpan;
1004            nxle_uint16_t dest;
1005            nxle_uint16_t src;
1006            nxle_uint8_t type;
1007          
1008            nxle_uint8_t security;
1009          } /*__attribute__((packed))*/ rf_header_t;
1010          
1011          
1012          
1013          
1014          
1015          
1016          
1017          //#line 29
1018          typedef nx_struct _rf_footer_t {
1019          
1020            nx_uint8_t i;
1021          } /*__attribute__((packed))*/ rf_footer_t;
1022          //#line 51
1023          //#line 39
1024          typedef nx_struct _rf_meta_data_t {
1025          
1026            nx_int8_t rssi;
1027            nx_uint8_t lqi;
1028            nx_bool crc;
1029            nx_bool ack;
1030          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 18  

1031            nx_uint8_t resource_id;
1032            nx_uint8_t route_resource_id;
1033          
1034          
1035            rf_ack_t ack_msg;
1036          } /*__attribute__((packed))*/ rf_meta_data_t;
1037          //# 38 "/opt/atos/tos/lib/atos/net/AtosMac/IEEE802154.h"
1038          enum ieee154_fcf_enums {
1039            IEEE154_FCF_FRAME_TYPE = 0, 
1040            IEEE154_FCF_SECURITY_ENABLED = 3, 
1041            IEEE154_FCF_FRAME_PENDING = 4, 
1042            IEEE154_FCF_ACK_REQ = 5, 
1043            IEEE154_FCF_INTRAPAN = 6, 
1044            IEEE154_FCF_DEST_ADDR_MODE = 10, 
1045            IEEE154_FCF_SRC_ADDR_MODE = 14
1046          };
1047          
1048          enum ieee154_fcf_type_enums {
1049            IEEE154_TYPE_BEACON = 0, 
1050            IEEE154_TYPE_DATA = 1, 
1051            IEEE154_TYPE_ACK = 2, 
1052            IEEE154_TYPE_MAC_CMD = 3
1053          };
1054          
1055          enum iee154_fcf_addr_mode_enums {
1056            IEEE154_ADDR_NONE = 0, 
1057            IEEE154_ADDR_SHORT = 2, 
1058            IEEE154_ADDR_EXT = 3
1059          };
1060          //# 16 "/opt/atos/tos/platforms/antc5/platform_message.h"
1061          //#line 13
1062          typedef union message_header {
1063            rf_header_t header;
1064          } 
1065          message_header_t;
1066          
1067          
1068          
1069          //#line 18
1070          typedef union TOSRadioFooter {
1071            rf_footer_t footer;
1072          } message_footer_t;
1073          
1074          
1075          
1076          //#line 22
1077          typedef union TOSRadioMeta_data {
1078            rf_meta_data_t meta;
1079          } message_meta_data_t;
1080          //# 19 "/opt/tinyos-2.x/tos/types/message.h"
1081          //#line 14
1082          typedef nx_struct message_t {
1083            nx_uint8_t header[sizeof(message_header_t )];
1084            nx_uint8_t _data[127 - (sizeof(rf_header_t ) - 1 + sizeof(uint16_t )) - 0 + sizeof(uint16_t )];
1085            nx_uint8_t footer[sizeof(message_footer_t )];
1086            nx_uint8_t meta_data[sizeof(message_meta_data_t )];
1087          } /*__attribute__((packed))*/ message_t;
1088          //# 13 "/opt/atos/tos/platforms/antc5/platform.h"
1089          uint16_t TOS_IEEE_SADDR = TOS_AM_ADDRESS;
1090          uint16_t TOS_IEEE_PANID = TOS_AM_GROUP;
1091          //# 5 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTask.h"
1092          extern uint8_t TopTaskMgrP__m_task_flag[];
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 19  

1093          //# 36 "/opt/tinyos-2.x/tos/types/TinyError.h"
1094          enum __nesc_unnamed4261 {
1095            FAIL = 1, 
1096            ESIZE = 2, 
1097            ECANCEL = 3, 
1098            EOFF = 4, 
1099            EBUSY = 5, 
1100            EINVAL = 6, 
1101            ERETRY = 7, 
1102            ERESERVE = 8, 
1103            EALREADY = 9
1104          };
1105          
1106          typedef uint8_t error_t  ;
1107          
1108          static  /*inline*/  error_t ecombine(error_t r1, error_t r2);
1109          //# 62 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
1110          typedef uint8_t __nesc_atomic_t;
1111          
1112          static   /*inline*/   void __nesc_disable_interrupt(void);
1113          static   /*inline*/   void __nesc_enable_interrupt(void);
1114          
1115          
1116          
1117          
1118          
1119            /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )  ;
1120          
1121          
1122          
1123          
1124          
1125            /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)  ;
1126          //#line 98
1127          __nesc_atomic_t m_critical_state;
1128          //# 39 "/opt/atos/tos/chips/cc2530/timer/hardware/CC2530Timer.h"
1129          enum __nesc_unnamed4262 {
1130            CC2530_SLEEP_OSC32K_CALDIS = 7, 
1131            CC2530_SLEEP_XOSC_STB = 6, 
1132            CC2530_SLEEP_HFRC_STB = 5, 
1133            CC2530_SLEEP_DIV = 3, 
1134            CC2530_SLEEP_OSC_PD = 2, 
1135            CC2530_SLEEP_MODE = 0, 
1136            CC2530_SLEEP_MODE_MASK = 3
1137          };
1138          
1139          enum __nesc_unnamed4263 {
1140            CC2530_SLEEP_POWERMODE_0 = 0, 
1141            CC2530_SLEEP_POWERMODE_1 = 1, 
1142            CC2530_SLEEP_POWERMODE_2 = 2, 
1143            CC2530_SLEEP_POWERMODE_3 = 3
1144          };
1145          
1146          enum __nesc_unnamed4264 {
1147            CC2530_CLKCON_OSC32K = 7, 
1148            CC2530_CLKCON_OSC = 6, 
1149            CC2530_CLKCON_TICKSPD = 3, 
1150            CC2530_CLKCON_CLKSPD = 0, 
1151            CC2530_CLKCON_TICKSPD_MASK = 0x38
1152          };
1153          
1154          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 20  

1155          
1156          
1157          enum cc2530_tick_spd_t {
1158            CC2530_TICKF_DIV_1 = 0x0 << CC2530_CLKCON_TICKSPD, 
1159            CC2530_TICKF_DIV_2 = 0x1 << CC2530_CLKCON_TICKSPD, 
1160            CC2530_TICKF_DIV_4 = 0x2 << CC2530_CLKCON_TICKSPD, 
1161            CC2530_TICKF_DIV_8 = 0x3 << CC2530_CLKCON_TICKSPD, 
1162            CC2530_TICKF_DIV_16 = 0x4 << CC2530_CLKCON_TICKSPD, 
1163            CC2530_TICKF_DIV_32 = 0x5 << CC2530_CLKCON_TICKSPD, 
1164            CC2530_TICKF_DIV_64 = 0x6 << CC2530_CLKCON_TICKSPD, 
1165            CC2530_TICKF_DIV_128 = 0x7 << CC2530_CLKCON_TICKSPD
1166          };
1167          
1168          
1169          
1170          
1171          
1172          
1173          
1174          
1175          
1176          
1177          enum __nesc_unnamed4265 {
1178            CC2530_T1CTL_DIV = 0x2, 
1179            CC2530_T1CTL_MODE = 0x0, 
1180            CC2530_T1CTL_MODE_MASK = 0x3, 
1181            CC2530_T1CTL_DIV_MASK = 0xc
1182          };
1183          
1184          
1185          
1186          
1187          enum __nesc_unnamed4266 {
1188            CC2530_T1STAT_OVFIF = 0x5, 
1189            CC2530_T1STAT_CH4IF = 0x4, 
1190            CC2530_T1STAT_CH3IF = 0x3, 
1191            CC2530_T1STAT_CH2IF = 0x2, 
1192            CC2530_T1STAT_CH1IF = 0x1, 
1193            CC2530_T1STAT_CH0IF = 0x0, 
1194            CC2530_T1STAT_IF_MASK = 0x1f
1195          };
1196          
1197          
1198          
1199          
1200          
1201          enum cc2530_timer1_mode_t {
1202            CC2530_TIMER1_MODE_OFF = 0x0 << CC2530_T1CTL_MODE, 
1203            CC2530_TIMER1_MODE_FREE = 0x1 << CC2530_T1CTL_MODE, 
1204            CC2530_TIMER1_MODE_MODULO = 0x2 << CC2530_T1CTL_MODE, 
1205            CC2530_TIMER1_MODE_UPDOWN = 0x3 << CC2530_T1CTL_MODE
1206          };
1207          
1208          
1209          
1210          
1211          
1212          
1213          enum cc2530_timer1_if_t {
1214            CC2530_T1_OVFIF = 1 << CC2530_T1STAT_OVFIF, 
1215            CC2530_T1_CH4IF = 1 << CC2530_T1STAT_CH2IF, 
1216            CC2530_T1_CH3IF = 1 << CC2530_T1STAT_CH1IF, 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 21  

1217            CC2530_T1_CH2IF = 1 << CC2530_T1STAT_CH2IF, 
1218            CC2530_T1_CH1IF = 1 << CC2530_T1STAT_CH1IF, 
1219            CC2530_T1_CH0IF = 1 << CC2530_T1STAT_CH0IF
1220          };
1221          
1222          
1223          
1224          
1225          
1226          enum cc2530_timer1_prescaler_t {
1227            CC2530_TIMER1_DIV_1 = 0x0 << CC2530_T1CTL_DIV, 
1228            CC2530_TIMER1_DIV_8 = 0x1 << CC2530_T1CTL_DIV, 
1229            CC2530_TIMER1_DIV_32 = 0x2 << CC2530_T1CTL_DIV, 
1230            CC2530_TIMER1_DIV_128 = 0x3 << CC2530_T1CTL_DIV
1231          };
1232          
1233          
1234          
1235          
1236          
1237          enum __nesc_unnamed4267 {
1238            CC2530_T1CCTLx_CPSEL = 0x7, 
1239            CC2530_T1CCTLx_IM = 0x6, 
1240            CC2530_T1CCTLx_CMP = 0x3, 
1241            CC2530_T1CCTLx_MODE = 0x2, 
1242            CC2530_T1CCTLx_CAP = 0x0
1243          };
1244          
1245          
1246          
1247          
1248          
1249          
1250          
1251          
1252          
1253          
1254          enum cc2530_timerMAC_mode_t {
1255            CC2530_TIMERMAC_MODE_IDLE = 0x0, 
1256            CC2530_TIMERMAC_MODE_RUN = 0x1
1257          };
1258          
1259          
1260          
1261          
1262          
1263          enum cc2530_timerMAC_T2CNF_t {
1264            CC2530_T2CNF_CMPIF = 0x7, 
1265            CC2530_T2CNF_PERIF = 0x6, 
1266            CC2530_T2CNF_OFCMPIF = 0x5, 
1267            CC2530_T2CNF_CMSEL = 0x3, 
1268            CC2530_T2CNF_SYNC = 0x1, 
1269            CC2530_T2CNF_RUN = 0x0
1270          };
1271          
1272          
1273          
1274          
1275          
1276          
1277          enum cc2530_timerMAC_T2PEROF2_t {
1278            CC2530_T2PEROF2_CMPIM = 0x7, 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 22  

1279            CC2530_T2PEROF2_PERIM = 0x6, 
1280            CC2530_T2PEROF2_OFCMPIM = 0x5
1281          };
1282          
1283          enum cc2530_timerMAC_if_t {
1284            CC2530_TMAC_CMPIF = 1 << CC2530_T2CNF_CMPIF, 
1285            CC2530_TMAC_PERIF = 1 << CC2530_T2CNF_PERIF, 
1286            CC2530_TMAC_OFCMPIF = 1 << CC2530_T2CNF_OFCMPIF
1287          };
1288          
1289          enum cc2530_timerMAC_interval_t {
1290            CC2530_TIMERWDT_32768 = 0, 
1291            CC2530_TIMERWDT_8192 = 1, 
1292            CC2530_TIMERWDT_512 = 2, 
1293            CC2530_TIMERWDT_64 = 3
1294          };
1295          //#line 217
1296          enum __nesc_unnamed4268 {
1297            CC2530_TIMIF_OVFIM = 0x6
1298          };
1299          
1300          enum cc2530_timer34_if_t {
1301            CC2530_TIMIF_T4CH1IF = 0x5, 
1302            CC2530_TIMIF_T4CH0IF = 0x4, 
1303            CC2530_TIMIF_T4OVFIF = 0x3, 
1304            CC2530_TIMIF_T3CH1IF = 0x2, 
1305            CC2530_TIMIF_T3CH0IF = 0x1, 
1306            CC2530_TIMIF_T3OVFIF = 0x0
1307          };
1308          
1309          
1310          
1311          
1312          
1313          
1314          enum cc2530_timer3_4_mode_t {
1315            CC2530_TIMER3_4_MODE_FREE = 0x0, 
1316            CC2530_TIMER3_4_MODE_DOWN = 0x1, 
1317            CC2530_TIMER3_4_MODE_MODULO = 0x2, 
1318            CC2530_TIMER3_4_MODE_UPDOWN = 0x3
1319          };
1320          
1321          
1322          
1323          
1324          
1325          enum __nesc_unnamed4269 {
1326            CC2530_T34CTL_DIV = 0x5, 
1327            CC2530_T34CTL_START = 0x4, 
1328            CC2530_T34CTL_OVFIM = 0x3, 
1329            CC2530_T34CTL_WDTIF = 0x3, 
1330            CC2530_T34CTL_CLR = 0x2, 
1331            CC2530_T34CTL_MODE = 0x0, 
1332            CC2530_T34CTL_MODE_MASK = 0x3, 
1333            CC2530_T34CTL_DIV_MASK = 0xe0
1334          };
1335          
1336          
1337          
1338          
1339          
1340          enum cc2530_timer3_4_prescaler_t {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 23  

1341            CC2530_TIMER3_4_DIV_1 = 0x0 << CC2530_T34CTL_DIV, 
1342            CC2530_TIMER3_4_DIV_2 = 0x1 << CC2530_T34CTL_DIV, 
1343            CC2530_TIMER3_4_DIV_4 = 0x2 << CC2530_T34CTL_DIV, 
1344            CC2530_TIMER3_4_DIV_8 = 0x3 << CC2530_T34CTL_DIV, 
1345            CC2530_TIMER3_4_DIV_16 = 0x4 << CC2530_T34CTL_DIV, 
1346            CC2530_TIMER3_4_DIV_32 = 0x5 << CC2530_T34CTL_DIV, 
1347            CC2530_TIMER3_4_DIV_64 = 0x6 << CC2530_T34CTL_DIV, 
1348            CC2530_TIMER3_4_DIV_128 = 0x7 << CC2530_T34CTL_DIV
1349          };
1350          
1351          
1352          
1353          
1354          
1355          
1356          
1357          
1358          
1359          
1360          enum __nesc_unnamed4270 {
1361            CC2530_WDCTL_CLR = 0x4, 
1362            CC2530_WDCTL_EN = 0x3, 
1363            CC2530_WDCTL_MODE = 0x2, 
1364            CC2530_WDCTL_INT = 0x0, 
1365            CC2530_WDCTL_INT_MASK = 0x3
1366          };
1367          
1368          enum cc2530_timerWDT_mode_t {
1369            CC2530_TIMERWDT_MODE_WDT = 0x0 << CC2530_WDCTL_MODE, 
1370            CC2530_TIMERWDT_MODE_TIMER = 0x1 << CC2530_WDCTL_MODE
1371          };
1372          //# 6 "/opt/atos/tos/lib/atos/common/AtosError.h"
1373          enum __nesc_unnamed4271 {
1374          
1375          
1376            ERR_RF_TX_GO_FAIL = 50, 
1377          
1378          
1379            ERR_MAC_CONGESTION_FAIL = 51, 
1380            ERR_MAC_SEND_RESOURCE_EXISTS = 52, 
1381            ERR_MAC_SEND_RESOURCE_FULL = 53, 
1382          
1383            ERR_MAC_NO_ACK = 54, 
1384            ERR_MAC_RETRY_MAX = 55, 
1385          
1386          
1387            ERR_ROUTE_SELECT_ROUTE_FAIL = 56, 
1388            ERR_ROUTE_SEND_P2P_FAIL = 57, 
1389          
1390            ERR_ROUTE_SEND_QUEUE_EXISTS = 58, 
1391            ERR_ROUTE_SEND_QUEUE_FULL = 59, 
1392            ERR_ROUTE_SEND_QUEUE_FAIL = 60, 
1393          
1394            ERR_ROUTE_FUNSION_ERROR = 61, 
1395            ERR_ROUTE_FUNSION_NO_ENOUGH = 62, 
1396          
1397            ERR_ROUTE_DISABLED = 63, 
1398            ERR_ROUTE_FORWARD_INVALID = 64
1399          };
1400          //# 9 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
1401          int uart_debug_level = 1000;
1402          //# 11 "/opt/atos/tos/chips/cc2530/mcs51/stdarg.h"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 24  

1403          typedef char *va_list;
1404          //# 8 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
1405          static void uart0SetBaud(uint32_t baud);
1406          
1407          
1408          
1409          
1410          
1411          static  /*inline*/  void uart0IntEnable(void);
1412          //#line 34
1413          static  /*inline*/  void uart0PinMap(bool map);
1414          
1415          
1416          
1417          
1418          
1419          
1420          
1421          
1422          
1423          static  /*inline*/  void uart0SetMode(void);
1424          
1425          
1426          
1427          
1428          
1429          static  /*inline*/  void uart0Init(uint32_t baud);
1430          
1431          
1432          
1433          
1434          
1435          
1436          static void uart0PutChar(char c);
1437          //# 28 "/opt/atos/tos/lib/atos/power/McuSleep.h"
1438          typedef message_t message_t_xdata_pm0;
1439          //# 34 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
1440          uint8_t uart_debug_buf[256];
1441          uint8_t current_task_id = 255;
1442          
1443          
1444          
1445          
1446          static  /*inline*/  void ATOS_DEBUG_UART_INIT(void);
1447          
1448          
1449          
1450          
1451          
1452          static  /*inline*/  void ATOS_DEBUG_UART_PUTC(char c);
1453          
1454          
1455          
1456          
1457          
1458          
1459          
1460          
1461          static void ATOS_DEBUG_UART_PRINT(void);
1462          //# 7 "/opt/atos/tos/lib/atos/kernel/AtosTask/AtosTask.h"
1463          enum atostask_run_flag_t {
1464          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 25  

1465            ATOSTASK_RUN_FLAG_ALL = 1 << 0, 
1466            ATOSTASK_RUN_FLAG_SYNC = 1 << 1, 
1467            ATOSTASK_RUN_FLAG_UNSYNC = 1 << 2, 
1468          
1469            ATOSTASK_RUN_FLAG_STOPPED = 1 << 3
1470          };
1471          
1472          enum atostask_mgr_ctrl_t {
1473          
1474            ATOSTASK_CTRL_IS_ENABLED, 
1475            ATOSTASK_CTRL_ENABLE, 
1476            ATOSTASK_CTRL_DISABLE, 
1477          
1478            ATOSTASK_CTRL_IS_STARTED, 
1479            ATOSTASK_CTRL_START, 
1480            ATOSTASK_CTRL_STOP, 
1481          
1482            ATOSTASK_CTRL_IS_RUNNING
1483          };
1484          //# 29 "/opt/tinyos-2.x/tos/lib/timer/Timer.h"
1485          typedef struct __nesc_unnamed4272 {
1486          //#line 29
1487            int notUsed;
1488          } 
1489          //#line 29
1490          TMilli;
1491          typedef struct __nesc_unnamed4273 {
1492          //#line 30
1493            int notUsed;
1494          } 
1495          //#line 30
1496          T32khz;
1497          typedef struct __nesc_unnamed4274 {
1498          //#line 31
1499            int notUsed;
1500          } 
1501          //#line 31
1502          TMicro;
1503          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMac.h"
1504          //#line 9
1505          typedef struct _rf_rmac_header_t {
1506          
1507            uint8_t dsn;
1508            uint8_t ack_req;
1509          } rf_rmac_header_t;
1510          
1511          
1512          uint8_t rf_rmac_dsn = 1;
1513          //# 11 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.h"
1514          enum __nesc_unnamed4275 {
1515          
1516            ANSTD_DATA_TYPE_NODE_STATUS_UP = 0x21, 
1517            ANSTD_DATA_TYPE_DISCOVERY = 0x22, 
1518            ANSTD_DATA_TYPE_SETIEEE = 0x23, 
1519            ANSTD_DATA_TYPE_REBOOT = 0x24, 
1520            ANSTD_DATA_TYPE_TRACE = 0x25, 
1521            ANSTD_DATA_TYPE_TRACE_ACK = 0x26
1522          };
1523          
1524          
1525          
1526          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 26  

1527          //#line 21
1528          typedef struct _anstd_header_t {
1529          
1530            uint8_t _data_type;
1531          } anstd_header_t;
1532          //#line 40
1533          //#line 26
1534          typedef struct _anstd_node_status_t {
1535          
1536            uint8_t _data_type;
1537            uint8_t device_type;
1538            uint8_t industry_code;
1539            uint8_t application_code;
1540            uint16_t program_id;
1541            uint16_t program_version;
1542            uint8_t ieee[8];
1543            uint8_t node_type;
1544            uint8_t node_status;
1545            uint8_t rf_channel;
1546            uint8_t battery;
1547            uint8_t signal_strength;
1548          } anstd_node_status_t;
1549          
1550          
1551          
1552          
1553          
1554          
1555          
1556          
1557          
1558          //#line 43
1559          typedef struct _anstd_discovery_t {
1560          
1561            uint8_t _data_type;
1562            uint8_t device_type;
1563            uint8_t rf_channel;
1564            uint16_t node_group;
1565            uint16_t node_id;
1566          } anstd_discovery_t;
1567          
1568          
1569          
1570          
1571          
1572          
1573          
1574          
1575          //#line 53
1576          typedef struct _anstd_setieee_t {
1577          
1578            uint8_t _data_type;
1579            uint16_t node_group;
1580            uint16_t node_id;
1581            uint8_t ieee[8];
1582          } anstd_setieee_t;
1583          
1584          
1585          
1586          
1587          
1588          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 27  

1589          
1590          
1591          //#line 62
1592          typedef struct _anstd_reboot_t {
1593          
1594            uint8_t _data_type;
1595            uint16_t node_group;
1596            uint16_t node_id;
1597            uint8_t delay_time;
1598          } anstd_reboot_t;
1599          
1600          
1601          
1602          
1603          
1604          
1605          
1606          //#line 71
1607          typedef struct _anstd_trace_item_t {
1608          
1609            uint16_t node_id;
1610            int8_t forward_rssi;
1611            int8_t backward_rssi;
1612          } anstd_trace_item_t;
1613          
1614          
1615          
1616          
1617          
1618          
1619          
1620          
1621          //#line 77
1622          typedef struct _anstd_trace_t {
1623          
1624            uint8_t _data_type;
1625            uint8_t trace_dsn;
1626            uint16_t node_group;
1627            uint8_t total_count;
1628            uint8_t traced_count;
1629            anstd_trace_item_t items[1];
1630          } anstd_trace_t;
1631          
1632          
1633          
1634          typedef anstd_trace_t anstd_trace_ack_t;
1635          //# 7 "/opt/atos/tos/lib/atos/atp/atpcmd/app/AtpCmdPacketCommon.h"
1636          enum __nesc_unnamed4276 {
1637          
1638            ATP_CMD_MAX_RECEIVE_PACKET = 128
1639          };
1640          
1641          enum __nesc_unnamed4277 {
1642          
1643            ATP_CMD_SOF_ID_1 = 0x37, 
1644            ATP_CMD_SOF_ID_2 = 0xA9, 
1645          
1646            ATP_CMD_STATE_SOF_1 = 0, 
1647            ATP_CMD_STATE_SOF_2 = 1, 
1648            ATP_CMD_STATE_HEADER = 2, 
1649            ATP_CMD_STATE_HCS = 3, 
1650            ATP_CMD_STATE_DATA = 4, 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 28  

1651            ATP_CMD_STATE_PCS = 5
1652          };
1653          //#line 42
1654          //#line 35
1655          typedef struct _atp_cmd_packet {
1656          
1657            uint8_t cmd;
1658            uint16_t len;
1659            uint8_t hcs;
1660            uint8_t _data[ATP_CMD_MAX_RECEIVE_PACKET];
1661            uint8_t pcs;
1662          } atp_cmd_packet_t;
1663          
1664          
1665          
1666          
1667          
1668          
1669          enum __nesc_unnamed4278 {
1670          
1671            ATP_CMD_HEADER_SIZE_ALL = sizeof(uint8_t ) + sizeof(uint16_t ) + sizeof(uint8_t ), 
1672            ATP_CMD_HEADER_SIZE = sizeof(uint8_t ) + sizeof(uint16_t ), 
1673            ATP_CMD_HEADER_CMD_SIZE = sizeof(uint8_t ), 
1674            ATP_CMD_HEADER_LEN_SIZE = sizeof(uint16_t ), 
1675            ATP_CMD_HEADER_HCS_SIZE = sizeof(uint8_t )
1676          };
1677          //# 15 "/opt/atos/tos/lib/atos/atp/atpapp/AtpAppPacket.h"
1678          //#line 10
1679          typedef struct _atp_app_packet_header_t {
1680          
1681            uint8_t industry_code;
1682            uint8_t application_code;
1683            uint8_t _data_type;
1684          } atp_app_packet_header_t;
1685          //# 8 "/opt/atos/tos/lib/atos/atp/atpcmd/AtpCmdStd.h"
1686          enum __nesc_unnamed4279 {
1687          
1688            ATP_STD_CMD = 0xf0, 
1689            ATP_STD_INDUSTRY_CODE = 0xff, 
1690            ATP_STD_APPLICATION_CODE = 0x01
1691          };
1692          
1693          enum __nesc_unnamed4280 {
1694          
1695            ATP_STD_DATA_TYPE_PING = 0x01, 
1696            ATP_STD_DATA_TYPE_PING_ACK = 0x81, 
1697            ATP_STD_DATA_TYPE_DISCOVERY = 0x02, 
1698            ATP_STD_DATA_TYPE_DISCOVERY_ACK = 0x82, 
1699            ATP_STD_DATA_TYPE_SET_IEEE_ADDR = 0x03, 
1700            ATP_STD_DATA_TYPE_REBOOT = 0x04
1701          };
1702          
1703          enum __nesc_unnamed4281 {
1704          
1705            ATP_STD_EQUIPMENT_TYPE_PC = 0x01, 
1706            ATP_STD_EQUIPMENT_TYPE_GATEWAY = 0x02, 
1707            ATP_STD_EQUIPMENT_TYPE_NODE = 0x03
1708          };
1709          
1710          
1711          
1712          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 29  

1713          //#line 32
1714          typedef struct _atp_std_general_info_t_ {
1715          
1716            uint8_t equipment_type;
1717          } as_general_info_t;
1718          
1719          
1720          
1721          
1722          
1723          
1724          
1725          //#line 37
1726          typedef struct _atp_std_gateway_info_t_ {
1727          
1728            uint8_t industry_code;
1729            uint8_t application_code;
1730            uint8_t ieee_addr[8];
1731            uint8_t radio_channel;
1732          } as_gateway_info_t;
1733          
1734          
1735          
1736          
1737          
1738          
1739          
1740          
1741          
1742          
1743          //#line 45
1744          typedef struct _atp_std_node_info_t_ {
1745          
1746            uint8_t industry_code;
1747            uint8_t application_code;
1748            uint8_t ieee_addr[8];
1749            uint8_t node_type;
1750            uint8_t radio_channel;
1751            uint8_t battery_capacity;
1752            uint8_t radio_quality;
1753          } as_node_info_t;
1754          
1755          
1756          
1757          
1758          //#line 56
1759          typedef struct _atp_std_ping_extra_t_ {
1760          
1761            uint8_t config;
1762          } as_ping_extra_t;
1763          
1764          
1765          
1766          
1767          
1768          //#line 61
1769          typedef struct _atp_std_discovery_extra_t_ {
1770          
1771            uint8_t radio_channel;
1772            uint16_t addr_area;
1773          } as_discovery_extra_t;
1774          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 30  

1775          
1776          
1777          
1778          //#line 67
1779          typedef struct _atp_std_ieee_addr_extra_t_ {
1780          
1781            uint8_t ieee_addr[8];
1782          } as_ieee_addr_extra_t;
1783          typedef TMilli RealMainP__FakeTimer__precision_tag;
1784          enum HplCC2530Timer1C____nesc_unnamed4282 {
1785            HplCC2530Timer1C__TOP_TASK_ID = 0U
1786          };
1787          typedef T32khz /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency;
1788          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm2__precision_tag;
1789          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__size_type;
1790          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm0__precision_tag;
1791          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__size_type;
1792          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Counter__precision_tag;
1793          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__size_type;
1794          typedef /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__frequency /*HplCC2530Timer1C.HplCC2530Ti
             -mer1P*/HplCC2530Timer1P__0__Alarm1__precision_tag;
1795          typedef uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__size_type;
1796          enum /*HilTimerMilliC.AlarmMilli32C.AlarmFrom*/Alarm32khz16C__0____nesc_unnamed4283 {
1797            Alarm32khz16C__0__ALARM_ID = 0U
1798          };
1799          typedef TMilli /*CounterMilli32C.Transform*/TransformCounterC__0__to_precision_tag;
1800          typedef uint32_t /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type;
1801          typedef T32khz /*CounterMilli32C.Transform*/TransformCounterC__0__from_precision_tag;
1802          typedef uint16_t /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type;
1803          typedef uint32_t /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type;
1804          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__from_precision_tag /*CounterMilli32C.Transform*
             -/TransformCounterC__0__CounterFrom__precision_tag;
1805          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type /*CounterMilli32C.Transform*/Tra
             -nsformCounterC__0__CounterFrom__size_type;
1806          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__to_precision_tag /*CounterMilli32C.Transform*/T
             -ransformCounterC__0__Counter__precision_tag;
1807          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Trans
             -formCounterC__0__Counter__size_type;
1808          typedef TMilli /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag;
1809          typedef uint32_t /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type;
1810          typedef T32khz /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_precision_tag;
1811          typedef uint16_t /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type;
1812          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__Alarm__precision_tag;
1813          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Alarm__size_type;
1814          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_precision_tag /*HilTimerMilliC.
             -AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__precision_tag;
1815          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type /*HilTimerMilliC.Alar
             -mMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type;
1816          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__Counter__precision_tag;
1817          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Counter__size_type;
1818          typedef TMilli /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag;
1819          typedef /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag /*HilTimerMilliC.AlarmToTimerC*/Al
             -armToTimerC__0__Alarm__precision_tag;
1820          typedef uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type;
1821          typedef /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag /*HilTimerMilliC.AlarmToTimerC*/Al
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 31  

             -armToTimerC__0__Timer__precision_tag;
1822          typedef TMilli /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag;
1823          typedef /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__TimerFrom__precision_tag;
1824          typedef /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__Timer__precision_tag;
1825          typedef TMilli /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag;
1826          typedef /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag /*HilTimerMilliC.Count
             -erToLocalTimeC*/CounterToLocalTimeC__0__LocalTime__precision_tag;
1827          typedef /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__precision_tag /*HilTimerMilliC.Count
             -erToLocalTimeC*/CounterToLocalTimeC__0__Counter__precision_tag;
1828          typedef uint32_t /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__size_type;
1829          enum HalCC2530Uart0IsrC____nesc_unnamed4284 {
1830            HalCC2530Uart0IsrC__RX_TOP_TASK_ID = 1U
1831          };
1832          enum HalCC2530Uart0IsrC____nesc_unnamed4285 {
1833            HalCC2530Uart0IsrC__TX_TOP_TASK_ID = 2U
1834          };
1835          typedef TMilli /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__TimeoutTimer__precision_tag;
1836          typedef TMilli /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__AckTimer__precision_tag;
1837          enum /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC__0____n
             -esc_unnamed4286 {
1838            AMResourceC__0__AM_RESOURCE_ID = 0U
1839          };
1840          enum AMResourceCenterC____nesc_unnamed4287 {
1841            AMResourceCenterC__AM_RESOURCE_COUNT = 4U
1842          };
1843          typedef message_t */*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t;
1844          typedef message_t */*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t;
1845          typedef /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__t;
1846          typedef T32khz RfMacBaseCsmaP__BackoffTimer__precision_tag;
1847          typedef uint32_t RfMacBaseCsmaP__BackoffTimer__size_type;
1848          enum RfHardwareRxC____nesc_unnamed4288 {
1849            RfHardwareRxC__TOP_TASK_ID = 3U
1850          };
1851          enum /*RfMacBaseCsmaC.Alarm32khz32C.Alarm32khz16C*/Alarm32khz16C__1____nesc_unnamed4289 {
1852            Alarm32khz16C__1__ALARM_ID = 1U
1853          };
1854          typedef T32khz /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag;
1855          typedef uint32_t /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type;
1856          typedef T32khz /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_precision_tag;
1857          typedef uint16_t /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type;
1858          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag /*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__Alarm__precision_tag;
1859          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm3
             -2khz32C.Transform*/TransformAlarmC__1__Alarm__size_type;
1860          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_precision_tag /*RfMacBaseCsmaC.
             -Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__precision_tag;
1861          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type /*RfMacBaseCsmaC.Alar
             -m32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__size_type;
1862          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_precision_tag /*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__Counter__precision_tag;
1863          typedef /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm3
             -2khz32C.Transform*/TransformAlarmC__1__Counter__size_type;
1864          typedef T32khz /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_precision_tag;
1865          typedef uint32_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type;
1866          typedef T32khz /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_precision_tag;
1867          typedef uint16_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type;
1868          typedef uint16_t /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 32  

1869          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_precision_tag /*Counter32khz32C.Tr
             -ansformCounterC*/TransformCounterC__1__CounterFrom__precision_tag;
1870          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type /*Counter32khz32C.Transf
             -ormCounterC*/TransformCounterC__1__CounterFrom__size_type;
1871          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_precision_tag /*Counter32khz32C.Tran
             -sformCounterC*/TransformCounterC__1__Counter__precision_tag;
1872          typedef /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transfor
             -mCounterC*/TransformCounterC__1__Counter__size_type;
1873          typedef TMilli AtosNetStdP__RebootTimer__precision_tag;
1874          typedef TMilli /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__TimeoutTimer__precision_tag;
1875          typedef TMilli /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__AckTimer__precision_tag;
1876          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC__2__
             -__nesc_unnamed4290 {
1877            AMResourceC__2__AM_RESOURCE_ID = 1U
1878          };
1879          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__3____nesc_unnamed42
             -91 {
1880            AMResourceC__3__AM_RESOURCE_ID = 2U
1881          };
1882          enum DsnFilterCenterC____nesc_unnamed4292 {
1883            DsnFilterCenterC__DSN_FILTER_COUNT = 1U
1884          };
1885          enum /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__1____nesc_unnamed4293 
             -{
1886            AMResourceC__1__AM_RESOURCE_ID = 3U
1887          };
1888          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
1889          static  void DigBaseP__Boot__booted(void);
1890          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
1891          static  void DigBaseP__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
1892          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1893          static  void DigBaseP__showMenu__runTask(void);
1894          //#line 64
1895          static  void DigBaseP__sendData__runTask(void);
1896          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
1897          static  message_t *DigBaseP__Receive__receive(message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg
             -_0x7eb50010);
1898          //# 79 "/opt/tinyos-2.x/tos/interfaces/UartStream.nc"
1899          static   void DigBaseP__UartStream__receivedByte(uint8_t arg_0x7eb73860);
1900          //#line 99
1901          static   void DigBaseP__UartStream__receiveDone(uint8_t *arg_0x7eb72540, uint16_t arg_0x7eb726d0, error_t 
             -arg_0x7eb72858);
1902          //#line 57
1903          static   void DigBaseP__UartStream__sendDone(uint8_t *arg_0x7eb747c8, uint16_t arg_0x7eb74958, error_t arg
             -_0x7eb74ae0);
1904          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1905          static  error_t PlatformP__Init__init(void);
1906          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
1907          static  void WatchDogP__WatchDog__resetCpu(void);
1908          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
1909          static   void FlashIEEEP__ActiveMessageAddress__changed(void);
1910          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1911          static  error_t FlashIEEEP__Init__init(void);
1912          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
1913          static  void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *arg_0x7ea50510);
1914          //#line 5
1915          static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void);
1916          
1917          static  void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea50068);
1918          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 33  

1919          
1920          
1921          static  void FlashIEEEP__FlashIEEE__WriteToAM(void);
1922          //#line 4
1923          static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void);
1924          
1925          
1926          
1927          
1928          
1929          static  void FlashIEEEP__FlashIEEE__WriteToRegister(void);
1930          //# 44 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
1931          static   am_addr_t ActiveMessageAddressC__amAddress(void);
1932          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
1933          static   am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void);
1934          
1935          
1936          
1937          
1938          static   am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void);
1939          //#line 43
1940          static   void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t arg_0x7ea35030, am_addr_t
             - arg_0x7ea351c0);
1941          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
1942          static  error_t HalFlashP__HalFlash__read(uint8_t *arg_0x7ea32330, uint32_t arg_0x7ea324c0, uint16_t arg_0
             -x7ea32650);
1943          
1944          
1945          
1946          static  error_t HalFlashP__HalFlash__erase(uint32_t arg_0x7ea30338);
1947          //#line 5
1948          static  error_t HalFlashP__HalFlash__write(uint32_t arg_0x7ea32af8, uint8_t *arg_0x7ea32ca0, uint16_t arg_
             -0x7ea32e30);
1949          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1950          static  error_t HalFlashP__Init__init(void);
1951          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
1952          static  void RealMainP__FakeTimer__fired(void);
1953          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1954          static  void RealMainP__fakeTask__runTask(void);
1955          //#line 56
1956          static   error_t SchedulerBasicP__TaskBasic__postTask(
1957          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
1958          uint8_t arg_0x7ec64200);
1959          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1960          static  void SchedulerBasicP__TaskBasic__default__runTask(
1961          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
1962          uint8_t arg_0x7ec64200);
1963          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
1964          static  void SchedulerBasicP__Scheduler__init(void);
1965          //#line 61
1966          static  void SchedulerBasicP__Scheduler__taskLoop(void);
1967          //#line 54
1968          static  bool SchedulerBasicP__Scheduler__runNextTask(void);
1969          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
1970          static  error_t McuSleepP__ModuleReset__default__reset(uint8_t arg_0x7ebe5310);
1971          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
1972          static   void McuSleepP__McuSleep__sleep(void);
1973          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
1974          static  void McuSleepP__McuSleepControl__default__beforeSleep(void);
1975          
1976          static  void McuSleepP__McuSleepControl__default__afterWakeup(void);
1977          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 34  

1978          static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void);
1979          static  void TopTaskMgrP__TopTaskMgr__runTasks(void);
1980          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
1981          static  void TopTaskMgrP__TopTaskHandler__default__handler(
1982          //# 6 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
1983          uint8_t arg_0x7ebb1360);
1984          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
1985          static  void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void);
1986          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
1987          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fired(void);
1988          //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
1989          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__default__captured
             -(uint16_t arg_0x7e921bc8);
1990          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
1991          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(/*HplCC2530Timer1C
             -.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__size_type arg_0x7e952c28, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530
             -Timer1P__0__Alarm0__size_type arg_0x7e952db8);
1992          //#line 62
1993          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void);
1994          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1995          static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void);
1996          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
1997          static   /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__size_type /*HplCC2530Timer1C.H
             -plCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void);
1998          
1999          
2000          
2001          
2002          
2003          
2004          static   bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPending(void);
2005          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2006          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(/*HplCC2530Timer1C
             -.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__size_type arg_0x7e952c28, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530
             -Timer1P__0__Alarm1__size_type arg_0x7e952db8);
2007          //#line 62
2008          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void);
2009          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2010          static  void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handler(void);
2011          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2012          static  void PlatformInterruptC__INT_UART1_TX__default__fired(void);
2013          //#line 4
2014          static  void PlatformInterruptC__INT_UART1_RX__default__fired(void);
2015          //#line 4
2016          static  void PlatformInterruptC__INT_ST__default__fired(void);
2017          //#line 4
2018          static  void PlatformInterruptC__INT_P0__default__fired(void);
2019          //#line 4
2020          static  void PlatformInterruptC__INT_P1__default__fired(void);
2021          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2022          static   void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void);
2023          //#line 53
2024          static   /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__size_type /*CounterMilli32C.Transform
             -*/TransformCounterC__0__Counter__get(void);
2025          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2026          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type /*HilTimerMilliC.A
             -larmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void);
2027          //#line 92
2028          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*HilTimerMilli
             -C.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type arg_0x7e952c28, /*HilTimerMilliC.AlarmMilli32C.Transform
             -*/TransformAlarmC__0__Alarm__size_type arg_0x7e952db8);
2029          //#line 105
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 35  

2030          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type /*HilTimerMilliC.A
             -larmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void);
2031          //#line 62
2032          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void);
2033          
2034          
2035          
2036          
2037          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(void);
2038          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2039          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow(void);
2040          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2041          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void);
2042          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2043          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void);
2044          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2045          static  uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void);
2046          //#line 118
2047          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t arg_0x7e9a39
             -b8, uint32_t arg_0x7e9a3b48);
2048          //#line 67
2049          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void);
2050          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2051          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask(void);
2052          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2053          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void);
2054          //#line 72
2055          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(
2056          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2057          uint8_t arg_0x7e794030);
2058          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2059          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(
2060          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2061          uint8_t arg_0x7e794030, 
2062          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2063          uint32_t arg_0x7e9a6788);
2064          
2065          
2066          
2067          
2068          
2069          
2070          
2071          
2072          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(
2073          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2074          uint8_t arg_0x7e794030, 
2075          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2076          uint32_t arg_0x7e9a6d58);
2077          
2078          
2079          
2080          
2081          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(
2082          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
2083          uint8_t arg_0x7e794030);
2084          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2085          static   void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow(void);
2086          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2087          static  error_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStdControl__start(v
             -oid);
2088          //# 47 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 36  

2089          static   void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__Uart__get(uint8_t arg_0x7
             -e7108d8);
2090          
2091          
2092          
2093          
2094          
2095          static   void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__Uart__putDone(void);
2096          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2097          static  void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__TxTaskHandler__handler(void);
2098          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2099          static  void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__INT_UART0_TX__fired(void);
2100          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2101          static  error_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0StdControl__start(voi
             -d);
2102          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2103          static  void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__RxTaskHandler__handler(void);
2104          //# 41 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
2105          static   error_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0__put(uint8_t arg_0x
             -7e710338);
2106          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2107          static  void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__INT_UART0_RX__fired(void);
2108          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2109          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__SubAMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
2110          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2111          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__resendTask__runTask(void);
2112          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2113          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
2114          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2115          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__AtosControl__start(void);
2116          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2117          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__SubAMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
2118          //#line 69
2119          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
2120          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2121          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__TimeoutTimer__fired(void);
2122          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2123          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__signalDoneTask__runTask(void);
2124          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2125          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__AckTimer__fired(void);
2126          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2127          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__AtosControl__start(void);
2128          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2129          static  message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
2130          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2131          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*
             -/AMResourceP__0__AMResource__sendDone(message_t *arg_0x7e6080a8, error_t arg_0x7e608230);
2132          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2133          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourc
             -eP*/AMResourceP__0__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
2134          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 37  

2135          static  error_t AMResourceCenterP__AMResource__send(
2136          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
2137          uint8_t arg_0x7e5f3dd8, 
2138          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2139          am_addr_t arg_0x7e609888, message_t *arg_0x7e609a38, uint8_t arg_0x7e609bc0);
2140          static  void AMResourceCenterP__AMResource__default__sendDone(
2141          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
2142          uint8_t arg_0x7e5f3dd8, 
2143          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2144          message_t *arg_0x7e6080a8, error_t arg_0x7e608230);
2145          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
2146          static  void AMResourceCenterP__CoreSend__sendDone(message_t *arg_0x7e5e84c0, error_t arg_0x7e5e8648);
2147          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2148          static  error_t AMResourceCenterP__AtosControl__start(void);
2149          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
2150          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__sendDone(m
             -essage_t *arg_0x7e5e84c0, error_t arg_0x7e5e8648);
2151          //#line 7
2152          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__send(messa
             -ge_t *arg_0x7e5e9998, uint8_t arg_0x7e5e9b20);
2153          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2154          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__runTask(void)
             -;
2155          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2156          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosControl__start(v
             -oid);
2157          //# 32 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
2158          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__head(void);
2159          //#line 49
2160          static  error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*AMResourceCen
             -terC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t arg_0x7e5c8930);
2161          
2162          
2163          
2164          
2165          
2166          
2167          
2168          
2169          
2170          
2171          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t arg_0x7e5c8ea8);
2172          
2173          
2174          
2175          
2176          
2177          
2178          static  void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void);
2179          //#line 24
2180          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(void);
2181          //#line 65
2182          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t arg_0x7e5c6990);
2183          //#line 40
2184          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__t /*AMResourceCenterC.RfMacBase
             -SendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void);
2185          //#line 9
2186          static  bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void);
2187          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 38  

2188          
2189          
2190          
2191          
2192          
2193          
2194          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void);
2195          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2196          static   void RfMacBaseCsmaP__BackoffTimer__fired(void);
2197          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
2198          static  error_t RfMacBaseCsmaP__CoreSend__send(message_t *arg_0x7e5e9998, uint8_t arg_0x7e5e9b20);
2199          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2200          static  void RfMacBaseCsmaP__signalDoneTask__runTask(void);
2201          //#line 64
2202          static  void RfMacBaseCsmaP__doGo__runTask(void);
2203          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2204          static  error_t RfMacBaseCsmaP__AtosControl__start(void);
2205          //#line 4
2206          static  error_t RfHardwareP__AtosControl__start(void);
2207          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
2208          static  void RfPowerP__RfPower__oscOn(void);
2209          //#line 6
2210          static  void RfPowerP__RfPower__radioOn(void);
2211          //#line 4
2212          static  void RfPowerP__RfPower__reset(void);
2213          
2214          
2215          
2216          
2217          static  void RfPowerP__RfPower__rxOn(void);
2218          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
2219          static  void RfConfigP__RfConfig__flush(void);
2220          
2221          
2222          
2223          
2224          static  uint8_t RfConfigP__RfConfig__getChannel(void);
2225          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2226          static  error_t RfConfigP__Init__init(void);
2227          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2228          static   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void);
2229          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
2230          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(void);
2231          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2232          static   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void);
2233          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2234          static  error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void);
2235          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2236          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void);
2237          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2238          static  void RfInterruptsP__INT_RFERR__fired(void);
2239          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2240          static   error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void);
2241          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2242          static  void RfInterruptsP__INT_RF__fired(void);
2243          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
2244          static   error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void);
2245          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
2246          static  error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *arg_0x7e572c98, uint8_t arg_0x7e572e20);
2247          static  error_t RfHardwareTxP__RfHardwareTx__txGo(void);
2248          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2249          static  error_t RfHardwareTxP__StdControl__start(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 39  

2250          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2251          static   /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type /*RfMacBaseCsmaC.A
             -larm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void);
2252          //#line 92
2253          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*RfMacBaseCsma
             -C.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type arg_0x7e952c28, /*RfMacBaseCsmaC.Alarm32khz32C.Transform
             -*/TransformAlarmC__1__Alarm__size_type arg_0x7e952db8);
2254          //#line 55
2255          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*RfMacBaseCsmaC.
             -Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__size_type arg_0x7e953b10);
2256          
2257          
2258          
2259          
2260          
2261          
2262          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void);
2263          
2264          
2265          
2266          
2267          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(void);
2268          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2269          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow(void);
2270          //#line 71
2271          static   void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflow(void);
2272          //#line 53
2273          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__size_type /*Counter32khz32C.T
             -ransformCounterC*/TransformCounterC__1__Counter__get(void);
2274          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
2275          static   uint16_t CC2530RandomLfsrP__Random__rand16(void);
2276          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2277          static  error_t CC2530RandomLfsrP__Init__init(void);
2278          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2279          static  uint8_t RfPacketP__Packet__payloadLength(message_t *arg_0x7eb25e90);
2280          //#line 108
2281          static  void *RfPacketP__Packet__getPayload(message_t *arg_0x7eb23358, uint8_t *arg_0x7eb23500);
2282          //#line 95
2283          static  uint8_t RfPacketP__Packet__maxPayloadLength(void);
2284          //#line 83
2285          static  void RfPacketP__Packet__setPayloadLength(message_t *arg_0x7eb24538, uint8_t arg_0x7eb246c0);
2286          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2287          static   void RfPacketP__ActiveMessageAddress__changed(void);
2288          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
2289          static  am_group_t RfPacketP__AMPacket__group(message_t *arg_0x7eb348b8);
2290          //#line 77
2291          static  am_addr_t RfPacketP__AMPacket__source(message_t *arg_0x7eb42b90);
2292          //#line 57
2293          static  am_addr_t RfPacketP__AMPacket__address(void);
2294          
2295          
2296          
2297          
2298          
2299          
2300          
2301          
2302          
2303          static  am_addr_t RfPacketP__AMPacket__destination(message_t *arg_0x7eb425b0);
2304          //#line 110
2305          static  void RfPacketP__AMPacket__setSource(message_t *arg_0x7eb40a20, am_addr_t arg_0x7eb40bb0);
2306          //#line 92
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 40  

2307          static  void RfPacketP__AMPacket__setDestination(message_t *arg_0x7eb40190, am_addr_t arg_0x7eb40320);
2308          //#line 136
2309          static  am_id_t RfPacketP__AMPacket__type(message_t *arg_0x7eb35aa0);
2310          //#line 125
2311          static  bool RfPacketP__AMPacket__isForMe(message_t *arg_0x7eb35370);
2312          //#line 176
2313          static  void RfPacketP__AMPacket__setGroup(message_t *arg_0x7eb32010, am_group_t arg_0x7eb321a0);
2314          
2315          
2316          
2317          
2318          
2319          
2320          
2321          static  am_group_t RfPacketP__AMPacket__localGroup(void);
2322          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
2323          static  uint8_t RfPacketP__PacketEx__packetHeaderSize(void);
2324          
2325          
2326          static  bool RfPacketP__PacketEx__isValidPacket(message_t *arg_0x7e6b45f8);
2327          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2328          static  uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *arg_0x7eb25e90);
2329          //#line 108
2330          static  void *RfReliableMacPacketP__Packet__getPayload(message_t *arg_0x7eb23358, uint8_t *arg_0x7eb23500)
             -;
2331          //#line 95
2332          static  uint8_t RfReliableMacPacketP__Packet__maxPayloadLength(void);
2333          //#line 83
2334          static  void RfReliableMacPacketP__Packet__setPayloadLength(message_t *arg_0x7eb24538, uint8_t arg_0x7eb24
             -6c0);
2335          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
2336          static  uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void);
2337          static  void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *arg_0x7e6b4120);
2338          
2339          static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *arg_0x7e6b45f8);
2340          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
2341          static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e653b48, uint8_t arg
             -_0x7e653cd8, message_t *arg_0x7e653e88, rf_ack_t *arg_0x7e652068);
2342          static  void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e652540, message_t *
             -arg_0x7e6526f0, rf_ack_t *arg_0x7e6528a0);
2343          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
2344          static  uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t *arg_0x7e3eab1
             -0, uint8_t arg_0x7e3eaca0, message_t *arg_0x7e3eae50, rf_ack_t *arg_0x7e3e7030);
2345          static  void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t *arg_0x7e3e750
             -8, message_t *arg_0x7e3e76b8, rf_ack_t *arg_0x7e3e7868);
2346          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2347          static  message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__0__SubReceive__receive(message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
2348          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2349          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__0__sendAckTask__runTask(void);
2350          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2351          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__0__AMSendAck__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
2352          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2353          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__0__AtosControl__start(void);
2354          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
2355          static  void RfActiveMessageP__CoreReceive__receive(message_t *arg_0x7e393030);
2356          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2357          static  message_t *RfActiveMessageP__Snoop__default__receive(
2358          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 41  

2359          uint8_t arg_0x7e398bb0, 
2360          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2361          message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
2362          //#line 67
2363          static  message_t *RfActiveMessageP__Receive__default__receive(
2364          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
2365          uint8_t arg_0x7e3983f8, 
2366          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2367          message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
2368          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2369          static  error_t RfActiveMessageP__AtosControl__start(void);
2370          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
2371          static  void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *arg_0x7e5337e8, uint8_t arg_0x7e533970);
2372          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2373          static  error_t AtosMacP__AtosControl__start(void);
2374          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2375          static  void AtosNetStdP__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
2376          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2377          static  message_t *AtosNetStdP__Receive__receive(message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t 
             -arg_0x7eb50010);
2378          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
2379          static  void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *arg_0x7e2fc6a8);
2380          
2381          static  void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *arg_0x7e2fa1f8, anstd_trace_ack
             -_t *arg_0x7e2fa3b8);
2382          //#line 15
2383          static  void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *arg_0x7e2fdd20);
2384          
2385          
2386          static  void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *arg_0x7e2fcb58, anstd_trace_t *arg
             -_0x7e2fcd08);
2387          //#line 6
2388          static  error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t arg_0x7e310d68);
2389          
2390          
2391          
2392          
2393          
2394          static  void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *arg_0x7e2fd1e0);
2395          
2396          static  void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *arg_0x7e2fd698, anstd_node_
             -status_t *arg_0x7e2fd850);
2397          
2398          static  void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *arg_0x7e2fc1f8);
2399          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2400          static  void AtosNetStdP__nodeStatusUpTask__runTask(void);
2401          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2402          static  void AtosNetStdP__RebootTimer__fired(void);
2403          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2404          static  void AtosNetStdP__rebootTask__runTask(void);
2405          //#line 64
2406          static  void AtosNetStdP__sendDoneCheck__runTask(void);
2407          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2408          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__SubAMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
2409          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2410          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__resendTask__runTask(void);
2411          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2412          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
2413          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 42  

2414          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AtosControl__start(void);
2415          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2416          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__SubAMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
2417          //#line 69
2418          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
2419          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2420          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__fired(void);
2421          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2422          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__signalDoneTask__runTask(void);
2423          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
2424          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__fired(void);
2425          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2426          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__AtosControl__start(void);
2427          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2428          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSe
             -ndP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010)
             -;
2429          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2430          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourc
             -eP*/AMResourceP__1__AMResource__sendDone(message_t *arg_0x7e6080a8, error_t arg_0x7e608230);
2431          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2432          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMReso
             -urceP*/AMResourceP__1__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
2433          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
2434          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__SubReceive__receive(message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
2435          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2436          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__sendAckTask__runTask(void);
2437          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2438          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMSendAck__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
2439          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2440          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__AtosControl__start(void);
2441          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2442          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP_
             -_2__AMResource__sendDone(message_t *arg_0x7e6080a8, error_t arg_0x7e608230);
2443          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2444          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourc
             -eP__2__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
2445          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
2446          static  bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(
2447          //# 5 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
2448          uint8_t arg_0x7e21adc0, 
2449          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
2450          uint16_t arg_0x7e3c9ba8, uint8_t arg_0x7e3c9d30);
2451          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2452          static  error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void);
2453          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
2454          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3_
             -_AMResource__sendDone(message_t *arg_0x7e6080a8, error_t arg_0x7e608230);
2455          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2456          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP_
             -_3__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 43  

2457          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
2458          static  error_t DigBaseP__UartStdControl__start(void);
2459          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
2460          static  error_t DigBaseP__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x
             -7eb61b48);
2461          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
2462          static  void *DigBaseP__Packet__getPayload(message_t *arg_0x7eb23358, uint8_t *arg_0x7eb23500);
2463          //#line 95
2464          static  uint8_t DigBaseP__Packet__maxPayloadLength(void);
2465          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2466          static   error_t DigBaseP__showMenu__postTask(void);
2467          //#line 56
2468          static   error_t DigBaseP__sendData__postTask(void);
2469          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
2470          static  error_t DigBaseP__AtosControl__start(void);
2471          //# 57 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
2472          static  am_addr_t DigBaseP__AMPacket__address(void);
2473          //# 34 "DigBaseP.nc"
2474          enum DigBaseP____nesc_unnamed4294 {
2475          //#line 34
2476            DigBaseP__showMenu = 0U
2477          };
2478          //#line 34
2479          typedef int DigBaseP____nesc_sillytask_showMenu[];
2480          //#line 85
2481          enum DigBaseP____nesc_unnamed4295 {
2482          //#line 85
2483            DigBaseP__sendData = 1U
2484          };
2485          //#line 85
2486          typedef int DigBaseP____nesc_sillytask_sendData[DigBaseP__sendData];
2487          //#line 20
2488          enum DigBaseP____nesc_unnamed4296 {
2489          
2490            DigBaseP__MAX_ADDRESS_LEN = 5, 
2491            DigBaseP__INPUT_ADDRESS = 0, 
2492            DigBaseP__INPUT_DATA = 1
2493          };
2494          
2495          message_t DigBaseP__m_msg;
2496          uint8_t DigBaseP__m_len = 0;
2497          char DigBaseP__m_address_str[DigBaseP__MAX_ADDRESS_LEN] = { 0 };
2498          uint8_t DigBaseP__m_address_index = 0;
2499          uint8_t DigBaseP__m_input_type = 0;
2500          uint8_t DigBaseP__sensor_type = 0;
2501          
2502          static  /*inline*/   void DigBaseP__showMenu__runTask(void);
2503          //#line 52
2504          static  /*inline*/  uint16_t DigBaseP__getDestAddress(void);
2505          //#line 85
2506          static  /*inline*/   void DigBaseP__sendData__runTask(void);
2507          //#line 114
2508          static  /*inline*/   void DigBaseP__AMSend__sendDone(message_t *msg, error_t success);
2509          
2510          
2511          
2512          
2513          
2514          
2515          
2516          
2517          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 44  

2518          
2519          static  /*inline*/    void DigBaseP__UartStream__receivedByte(uint8_t c);
2520          //#line 176
2521          static  /*inline*/   void DigBaseP__Boot__booted(void);
2522          //#line 195
2523          static  /*inline*/    void DigBaseP__UartStream__sendDone(uint8_t *buf, uint16_t len, error_t error);
2524          
2525          
2526          
2527          static  /*inline*/    void DigBaseP__UartStream__receiveDone(uint8_t *buf, uint16_t len, error_t error);
2528          
2529          
2530          
2531          
2532          static  /*inline*/   message_t *DigBaseP__Receive__receive(message_t *msg, void *payload, uint8_t len);
2533          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2534          static  error_t PlatformP__PlatformInit__init(void);
2535          //# 11 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
2536          static error_t PlatformP__clockSelect32k(uint8_t source);
2537          //#line 29
2538          static void PlatformP__clockSetMainSrc(uint8_t source);
2539          //#line 52
2540          static  /*inline*/   error_t PlatformP__Init__init(void);
2541          //# 8 "/opt/atos/tos/chips/cc2530/watchdog/WatchDogP.nc"
2542          static  void WatchDogP__WatchDog__resetCpu(void);
2543          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
2544          static  error_t FlashIEEEP__HalFlash__read(uint8_t *arg_0x7ea32330, uint32_t arg_0x7ea324c0, uint16_t arg_
             -0x7ea32650);
2545          
2546          
2547          
2548          static  error_t FlashIEEEP__HalFlash__erase(uint32_t arg_0x7ea30338);
2549          //#line 5
2550          static  error_t FlashIEEEP__HalFlash__write(uint32_t arg_0x7ea32af8, uint8_t *arg_0x7ea32ca0, uint16_t arg
             -_0x7ea32e30);
2551          //# 43 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2552          static   void FlashIEEEP__ActiveMessageAddress__setAddress(am_group_t arg_0x7ea35030, am_addr_t arg_0x7ea3
             -51c0);
2553          //# 47 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
2554          uint8_t FlashIEEEP__m_ieee[8];
2555          uint8_t FlashIEEEP__m_ieee_flash[8];
2556          
2557          
2558          
2559          static  /*inline*/  void FlashIEEEP__ieeeProtect(void);
2560          //#line 108
2561          static void FlashIEEEP__readFromFlash(void);
2562          //#line 129
2563          static  /*inline*/   error_t FlashIEEEP__Init__init(void);
2564          //#line 144
2565          static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void);
2566          
2567          
2568          
2569          
2570          
2571          static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void);
2572          
2573          
2574          
2575          
2576          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 45  

2577          
2578          
2579          
2580          
2581          
2582          static  /*inline*/   void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *ieee);
2583          
2584          
2585          
2586          
2587          static  /*inline*/   void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *ieee);
2588          //#line 193
2589          static  void FlashIEEEP__FlashIEEE__WriteToRegister(void);
2590          //#line 217
2591          static  void FlashIEEEP__FlashIEEE__WriteToAM(void);
2592          
2593          
2594          
2595          
2596          
2597          
2598          
2599          
2600          
2601          
2602          static  /*inline*/    void FlashIEEEP__ActiveMessageAddress__changed(void);
2603          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
2604          static   void ActiveMessageAddressC__ActiveMessageAddress__changed(void);
2605          //# 51 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
2606          am_addr_t ActiveMessageAddressC__addr = TOS_AM_ADDRESS;
2607          
2608          
2609          am_group_t ActiveMessageAddressC__group = TOS_AM_GROUP;
2610          
2611          
2612          
2613          
2614          
2615          
2616          static  /*inline*/    am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void);
2617          
2618          
2619          
2620          
2621          
2622          
2623          
2624          
2625          static  /*inline*/    void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t myGroup, am_
             -addr_t myAddr);
2626          //#line 82
2627          static  /*inline*/    am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void);
2628          //#line 95
2629          static   am_addr_t ActiveMessageAddressC__amAddress(void);
2630          //# 35 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
2631          void HalFlashP__HalCC2530FlashRead(uint8_t *destination, uint32_t source, uint16_t length);
2632          void HalFlashP__HalCC2530FlashWrite(uint32_t destination, uint8_t *source, uint16_t length);
2633          
2634          static  /*inline*/   error_t HalFlashP__Init__init(void);
2635          
2636          
2637          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 46  

2638          
2639          
2640          static  /*inline*/   error_t HalFlashP__HalFlash__read(uint8_t *destination, uint32_t source, uint16_t len
             -gth);
2641          
2642          
2643          
2644          
2645          
2646          
2647          static  /*inline*/   error_t HalFlashP__HalFlash__write(uint32_t destination, uint8_t *source, uint16_t le
             -ngth);
2648          
2649          
2650          
2651          
2652          
2653          
2654          static  error_t HalFlashP__HalFlash__erase(uint32_t address);
2655          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2656          static  error_t RealMainP__SoftwareInit__init(void);
2657          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
2658          static  void RealMainP__Boot__booted(void);
2659          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
2660          static  error_t RealMainP__PlatformInit__init(void);
2661          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2662          static   error_t RealMainP__fakeTask__postTask(void);
2663          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
2664          static  void RealMainP__Scheduler__init(void);
2665          //#line 61
2666          static  void RealMainP__Scheduler__taskLoop(void);
2667          //#line 54
2668          static  bool RealMainP__Scheduler__runNextTask(void);
2669          //# 103 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
2670          enum RealMainP____nesc_unnamed4297 {
2671          //#line 103
2672            RealMainP__fakeTask = 2U
2673          };
2674          //#line 103
2675          typedef int RealMainP____nesc_sillytask_fakeTask[RealMainP__fakeTask];
2676          //#line 56
2677          int main(void)   ;
2678          //#line 103
2679          static  /*inline*/   void RealMainP__fakeTask__runTask(void);
2680          
2681          
2682          
2683          
2684          
2685          
2686          
2687          static  /*inline*/   void RealMainP__FakeTimer__fired(void);
2688          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
2689          static  void SchedulerBasicP__TaskBasic__runTask(
2690          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2691          uint8_t arg_0x7ec64200);
2692          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
2693          static  bool SchedulerBasicP__TopTaskMgr__hasTasks(void);
2694          static  void SchedulerBasicP__TopTaskMgr__runTasks(void);
2695          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
2696          static  void SchedulerBasicP__AtosScheduler__periodScheduler(void);
2697          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 47  

2698          static   void SchedulerBasicP__McuSleep__sleep(void);
2699          //# 54 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2700          enum SchedulerBasicP____nesc_unnamed4298 {
2701          
2702            SchedulerBasicP__NUM_TASKS = 17U + 1, 
2703            SchedulerBasicP__NO_TASK = 255
2704          };
2705          
2706          uint8_t SchedulerBasicP__m_head = 0;
2707          uint8_t SchedulerBasicP__m_tail = 0;
2708          uint8_t SchedulerBasicP__m_next[SchedulerBasicP__NUM_TASKS];
2709          
2710          
2711          
2712          
2713          
2714          
2715          
2716          
2717          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void);
2718          //#line 108
2719          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id);
2720          //#line 132
2721          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id);
2722          //#line 181
2723          static  /*inline*/   void SchedulerBasicP__Scheduler__init(void);
2724          //#line 198
2725          static  bool SchedulerBasicP__Scheduler__runNextTask(void);
2726          //#line 215
2727          static  /*inline*/   void SchedulerBasicP__Scheduler__taskLoop(void);
2728          //#line 264
2729          static   error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id);
2730          
2731          
2732          
2733          
2734          static   void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id);
2735          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
2736          static  error_t McuSleepP__ModuleReset__reset(uint8_t arg_0x7ebe5310);
2737          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
2738          static  void McuSleepP__McuSleepControl__beforeSleep(void);
2739          
2740          static  void McuSleepP__McuSleepControl__afterWakeup(void);
2741          //# 12 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
2742          bool McuSleepP__m_need_sleep = FALSE;
2743          //#line 36
2744          static  /*inline*/    void McuSleepP__McuSleep__sleep(void);
2745          //#line 78
2746          static  /*inline*/    void McuSleepP__McuSleepControl__default__beforeSleep(void);
2747          
2748          
2749          static  /*inline*/    void McuSleepP__McuSleepControl__default__afterWakeup(void);
2750          
2751          
2752          static  /*inline*/    error_t McuSleepP__ModuleReset__default__reset(uint8_t reset_level);
2753          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
2754          static  void TopTaskMgrP__TopTaskHandler__handler(
2755          //# 6 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
2756          uint8_t arg_0x7ebb1360);
2757          
2758          
2759          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 48  

2760          enum TopTaskMgrP____nesc_unnamed4299 {
2761          
2762            TopTaskMgrP__TOP_TASK_COUNT = 4U
2763          };
2764          
2765           uint8_t TopTaskMgrP__m_task_flag[TopTaskMgrP__TOP_TASK_COUNT];
2766          
2767          
2768          
2769          
2770          
2771          
2772          static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void);
2773          //#line 40
2774          static  /*inline*/   void TopTaskMgrP__TopTaskMgr__runTasks(void);
2775          //#line 57
2776          static  /*inline*/    void TopTaskMgrP__TopTaskHandler__default__handler(uint8_t n);
2777          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2778          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__fired(void);
2779          //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
2780          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__captured(uint16_t
             - arg_0x7e921bc8);
2781          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2782          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__fired(void);
2783          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2784          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow(void);
2785          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2786          static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__fired(void);
2787          //# 38 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
2788          static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void);
2789          //#line 78
2790          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void);
2791          //#line 121
2792          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(uint1
             -6_t t0, uint16_t dt);
2793          //#line 159
2794          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void);
2795          //#line 200
2796          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(uint1
             -6_t t0, uint16_t dt);
2797          //#line 316
2798          static   uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void);
2799          
2800          
2801          
2802          
2803          
2804          
2805          
2806          
2807          
2808          
2809          static  /*inline*/    bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPe
             -nding(void);
2810          //#line 402
2811          uint8_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag = 0x00;
2812          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handle
             -r(void);
2813          //#line 454
2814          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void);
2815          //#line 534
2816          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fir
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 49  

             -ed(void);
2817          
2818          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__def
             -ault__captured(uint16_t time);
2819          //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
2820          static  void PlatformInterruptC__INT_RFERR__fired(void);
2821          //#line 4
2822          static  void PlatformInterruptC__INT_TIM1__fired(void);
2823          //#line 4
2824          static  void PlatformInterruptC__INT_UART1_TX__fired(void);
2825          //#line 4
2826          static  void PlatformInterruptC__INT_RF__fired(void);
2827          //#line 4
2828          static  void PlatformInterruptC__INT_UART1_RX__fired(void);
2829          //#line 4
2830          static  void PlatformInterruptC__INT_UART0_TX__fired(void);
2831          //#line 4
2832          static  void PlatformInterruptC__INT_ST__fired(void);
2833          //#line 4
2834          static  void PlatformInterruptC__INT_P0__fired(void);
2835          //#line 4
2836          static  void PlatformInterruptC__INT_P1__fired(void);
2837          //#line 4
2838          static  void PlatformInterruptC__INT_UART0_RX__fired(void);
2839          //# 22 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
2840          void __vector_0(void);
2841          //#line 35
2842          void __vector_16(void);
2843          //#line 55
2844          void __vector_9(void);
2845          //#line 69
2846          void __vector_2(void);
2847          //#line 81
2848          void __vector_7(void);
2849          //#line 94
2850          void __vector_3(void);
2851          
2852          
2853          
2854          
2855          
2856          
2857          static  /*inline*/    void PlatformInterruptC__INT_UART1_RX__default__fired(void);
2858          
2859          
2860          
2861          
2862          void __vector_14(void);
2863          
2864          
2865          
2866          
2867          
2868          
2869          static  /*inline*/    void PlatformInterruptC__INT_UART1_TX__default__fired(void);
2870          
2871          
2872          
2873          
2874          
2875          void __vector_5(void);
2876          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 50  

2877          
2878          
2879          
2880          
2881          
2882          static  /*inline*/    void PlatformInterruptC__INT_ST__default__fired(void);
2883          
2884          
2885          
2886          
2887          
2888          void __vector_13(void);
2889          
2890          
2891          
2892          
2893          
2894          
2895          void __vector_15(void);
2896          
2897          
2898          
2899          
2900          
2901          
2902          static  /*inline*/    void PlatformInterruptC__INT_P0__default__fired(void);
2903          
2904          
2905          
2906          
2907          
2908          static  /*inline*/    void PlatformInterruptC__INT_P1__default__fired(void);
2909          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2910          static   /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__size_type /*CounterMilli32C.Trans
             -form*/TransformCounterC__0__CounterFrom__get(void);
2911          
2912          
2913          
2914          
2915          
2916          
2917          static   bool /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending(void);
2918          
2919          
2920          
2921          
2922          
2923          
2924          
2925          
2926          
2927          
2928          static   void /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow(void);
2929          //# 56 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
2930          /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type /*CounterMilli32C.Transform*/Transform
             -CounterC__0__m_upper = 0;
2931          
2932          enum /*CounterMilli32C.Transform*/TransformCounterC__0____nesc_unnamed4300 {
2933          
2934            TransformCounterC__0__LOW_SHIFT_RIGHT = 5, 
2935            TransformCounterC__0__HIGH_SHIFT_LEFT = 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__fr
             -om_size_type ) - /*CounterMilli32C.Transform*/TransformCounterC__0__LOW_SHIFT_RIGHT, 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 51  

2936            TransformCounterC__0__NUM_UPPER_BITS = 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__to_
             -size_type ) - 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type ) + 5, 
2937          
2938          
2939          
2940            TransformCounterC__0__OVERFLOW_MASK = /*CounterMilli32C.Transform*/TransformCounterC__0__NUM_UPPER_BITS 
             -? ((/*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type )2 << (/*CounterMilli32C.Transform*/TransformCou
             -nterC__0__NUM_UPPER_BITS - 1)) - 1 : 0
2941          };
2942          
2943          static   /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Tran
             -sformCounterC__0__Counter__get(void);
2944          //#line 125
2945          static  /*inline*/    void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void);
2946          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2947          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired(void);
2948          //#line 92
2949          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt(/*HilTimerM
             -illiC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type arg_0x7e952c28, /*HilTimerMilliC.AlarmMilli32C.T
             -ransform*/TransformAlarmC__0__AlarmFrom__size_type arg_0x7e952db8);
2950          //#line 62
2951          static   void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop(void);
2952          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
2953          static   /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__size_type /*HilTimerMilliC
             -.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__get(void);
2954          //# 67 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
2955          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_t0;
2956          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_dt;
2957          
2958          enum /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0____nesc_unnamed4301 {
2959          
2960            TransformAlarmC__0__MAX_DELAY_LOG2 = 8 * sizeof(/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarm
             -C__0__from_size_type ) - 1 - 5, 
2961            TransformAlarmC__0__MAX_DELAY = (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_t
             -ype )1 << /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY_LOG2
2962          };
2963          
2964          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void);
2965          
2966          
2967          
2968          
2969          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void);
2970          
2971          
2972          
2973          
2974          
2975          
2976          
2977          
2978          
2979          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void)
             -;
2980          
2981          
2982          
2983          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 52  

2984          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm(void);
2985          //#line 140
2986          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*
             -HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/T
             -ransformAlarmC__0__to_size_type dt);
2987          //#line 155
2988          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(
             -void);
2989          //#line 170
2990          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow
             -(void);
2991          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
2992          static   /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.AlarmToTimerC
             -*/AlarmToTimerC__0__Alarm__getNow(void);
2993          //#line 92
2994          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(/*HilTimerMilliC.AlarmToTim
             -erC*/AlarmToTimerC__0__Alarm__size_type arg_0x7e952c28, /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_ty
             -pe arg_0x7e952db8);
2995          //#line 105
2996          static   /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.AlarmToTimerC
             -*/AlarmToTimerC__0__Alarm__getAlarm(void);
2997          //#line 62
2998          static   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop(void);
2999          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3000          static   error_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__postTask(void);
3001          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3002          static  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired(void);
3003          //# 81 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
3004          enum /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0____nesc_unnamed4302 {
3005          //#line 81
3006            AlarmToTimerC__0__firedTask = 3U
3007          };
3008          //#line 81
3009          typedef int /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0____nesc_sillytask_firedTask[/*HilTimerMilliC.
             -AlarmToTimerC*/AlarmToTimerC__0__firedTask];
3010          //#line 44
3011          uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt = 0;
3012          bool /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot = FALSE;
3013          
3014          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(uint32_t t0, uint32_t dt,
             - bool oneshot);
3015          //#line 73
3016          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void);
3017          
3018          
3019          
3020          
3021          
3022          
3023          
3024          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void);
3025          //#line 93
3026          static  /*inline*/    void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void);
3027          //#line 113
3028          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t
             - t0, uint32_t dt);
3029          
3030          
3031          
3032          
3033          static  /*inline*/   uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void);
3034          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 53  

3035          static   error_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask(void);
3036          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3037          static  uint32_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow(void);
3038          //#line 118
3039          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt(uint32_t ar
             -g_0x7e9a39b8, uint32_t arg_0x7e9a3b48);
3040          //#line 67
3041          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop(void);
3042          
3043          
3044          
3045          
3046          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(
3047          //# 37 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
3048          uint8_t arg_0x7e794030);
3049          //#line 59
3050          enum /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4303 {
3051          //#line 59
3052            VirtualizeTimerC__0__updateFromTimer = 4U
3053          };
3054          //#line 59
3055          typedef int /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_sillytask_updateFromTimer[/*Hil
             -TimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer];
3056          //#line 42
3057          enum /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4304 {
3058          
3059            VirtualizeTimerC__0__NUM_TIMERS = 6U, 
3060            VirtualizeTimerC__0__END_OF_LIST = 255
3061          };
3062          
3063          
3064          
3065          
3066          
3067          
3068          
3069          
3070          //#line 48
3071          typedef struct /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4305 {
3072          
3073            uint32_t t0;
3074            uint32_t dt;
3075            bool isoneshot : 1;
3076            bool isrunning : 1;
3077            bool _reserved : 6;
3078          } /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t;
3079          
3080          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t /*HilTimerMilliC.VirtualizeTimerC*/Virtual
             -izeTimerC__0__m_timers[/*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS];
3081          
3082          
3083          
3084          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(uint32_t now);
3085          //#line 98
3086          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask
             -(void);
3087          //#line 152
3088          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void);
3089          
3090          
3091          
3092          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 54  

3093          
3094          
3095          
3096          
3097          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(uint8_t num, uint32_t t0, u
             -int32_t dt, bool isoneshot);
3098          //#line 174
3099          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(uin
             -t8_t num, uint32_t dt);
3100          
3101          
3102          
3103          
3104          
3105          
3106          
3107          
3108          static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(uint8_t num, uint
             -32_t dt);
3109          
3110          
3111          
3112          
3113          
3114          
3115          
3116          
3117          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(uint8_t num)
             -;
3118          //#line 232
3119          static  /*inline*/    void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(u
             -int8_t num);
3120          //# 47 "/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc"
3121          static  /*inline*/    void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow
             -(void);
3122          //# 79 "/opt/tinyos-2.x/tos/interfaces/UartStream.nc"
3123          static   void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStream__receivedByte(
             -uint8_t arg_0x7eb73860);
3124          //#line 99
3125          static   void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStream__receiveDone(u
             -int8_t *arg_0x7eb72540, uint16_t arg_0x7eb726d0, error_t arg_0x7eb72858);
3126          //#line 57
3127          static   void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStream__sendDone(uint
             -8_t *arg_0x7eb747c8, uint16_t arg_0x7eb74958, error_t arg_0x7eb74ae0);
3128          //# 41 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
3129          static   error_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__Uart__put(uint8_t arg_
             -0x7e710338);
3130          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
3131          static  error_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__subUartStdControl__star
             -t(void);
3132          //# 13 "/opt/atos/tos/chips/cc2530/usart/HplCC2530UartGenericP.nc"
3133           uint8_t */*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_buf;
3134          //#line 13
3135           uint8_t */*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_buf;
3136           uint16_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_len;
3137          //#line 14
3138           uint16_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_len;
3139           uint16_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_pos;
3140          //#line 15
3141           uint16_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_pos;
3142          
3143          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 55  

3144          static  /*inline*/   error_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStdCon
             -trol__start(void);
3145          //#line 70
3146          static  /*inline*/    void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__Uart__get(ui
             -nt8_t _data);
3147          //#line 106
3148          static  /*inline*/    void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__Uart__putDon
             -e(void);
3149          //# 47 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
3150          static   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0__get(uint8_t arg_0x7e7
             -108d8);
3151          
3152          
3153          
3154          
3155          
3156          static   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0__putDone(void);
3157          //# 20 "/opt/atos/tos/chips/cc2530/usart/HalCC2530Uart0IsrP.nc"
3158          uint8_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf__data[1 << 6] = { 0 };
3159          //#line 20
3160          uint8_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_head = 0;
3161          //#line 20
3162          uint8_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_tail = 0;
3163          
3164          static  /*inline*/  error_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__doUart0Init(ui
             -nt32_t baud);
3165          
3166          
3167          
3168          
3169          
3170          
3171          
3172          static  /*inline*/   error_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0StdContr
             -ol__start(void);
3173          
3174          
3175          
3176          
3177          
3178          
3179          
3180          
3181          
3182          
3183          static  /*inline*/    error_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0__put(u
             -int8_t _data);
3184          //#line 82
3185          static  /*inline*/   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__INT_UART0_RX__fi
             -red(void);
3186          
3187          
3188          
3189          
3190          
3191          
3192          
3193          static  /*inline*/   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__INT_UART0_TX__fi
             -red(void);
3194          //#line 104
3195          static  /*inline*/   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__RxTaskHandler__h
             -andler(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 56  

3196          //#line 121
3197          static  /*inline*/   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__TxTaskHandler__h
             -andler(void);
3198          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3199          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__SubAMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
3200          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3201          static  void */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__PacketEx__getPacketHeader(message_t *arg_0x7e6b4120);
3202          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3203          static   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__0__resendTask__postTask(void);
3204          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3205          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
3206          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3207          static  uint8_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__Packet__payloadLength(message_t *arg_0x7eb25e90);
3208          //#line 83
3209          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__Packet__setPayloadLength(message_t *arg_0x7eb24538, uint8_t arg_0x7eb246c0);
3210          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
3211          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__SubAtosControl__start(void);
3212          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3213          static  am_addr_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__0__AMPacket__destination(message_t *arg_0x7eb425b0);
3214          //#line 92
3215          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__AMPacket__setDestination(message_t *arg_0x7eb40190, am_addr_t arg_0x7eb40320);
3216          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
3217          enum /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0
             -____nesc_unnamed4306 {
3218          //#line 48
3219            RfReliableMacRetrySendP__0__resendTask = 5U
3220          };
3221          //#line 48
3222          typedef int /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0____nesc_sillytask_resendTask[/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliab
             -leMacRetrySendP__0__resendTask];
3223          //#line 19
3224          uint8_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__m_sending = FALSE;
3225          message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
             -ndP__0__m_msg;
3226          uint8_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__0__m_retry_times = 0;
3227          
3228          
3229          static void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__signalDone(message_t *msg, error_t result);
3230          //#line 43
3231          static error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__doSend(message_t *msg);
3232          
3233          
3234          
3235          
3236          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfRel
             -iableMacRetrySendP__0__resendTask__runTask(void);
3237          //#line 74
3238          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 57  

             -ReliableMacRetrySendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3239          //#line 129
3240          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfRel
             -iableMacRetrySendP__0__SubAMSend__sendDone(message_t *msg, error_t error);
3241          //#line 150
3242          bool /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0
             -__m_started = FALSE;
3243          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__0__AtosControl__start(void);
3244          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3245          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__SubAMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
3246          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3247          static  am_addr_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__0__AMPacket__source(message_t *arg_0x7eb42b90);
3248          //#line 67
3249          static  am_addr_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__0__AMPacket__destination(message_t *arg_0x7eb425b0);
3250          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3251          static  void */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__PacketEx__getPacketHeader(message_t *arg_0x7e6b4120);
3252          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3253          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
3254          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3255          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__TimeoutTimer__startOneShot(uint32_t arg_0x7e9a6d58);
3256          
3257          
3258          
3259          
3260          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__TimeoutTimer__stop(void);
3261          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3262          static  uint8_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__0__SubPacket__payloadLength(message_t *arg_0x7eb25e90);
3263          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
3264          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e652540, message_t *arg_0x7e6526f0, rf_ack_t *a
             -rg_0x7e6528a0);
3265          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3266          static   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__0__signalDoneTask__postTask(void);
3267          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
3268          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__AckTimer__startOneShot(uint32_t arg_0x7e9a6d58);
3269          
3270          
3271          
3272          
3273          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__AckTimer__stop(void);
3274          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
3275          enum /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMa
             -cSendP__0____nesc_unnamed4307 {
3276          //#line 31
3277            RfReliableMacSendP__0__signalDoneTask = 6U
3278          };
3279          //#line 31
3280          typedef int /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0____nesc_sillytask_signalDoneTask[/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.R
             -fReliableMacSendP*/RfReliableMacSendP__0__signalDoneTask];
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 58  

3281          //#line 26
3282          uint8_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending = FALSE;
3283          message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__0__m_msg;
3284          error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_result;
3285          
3286          
3287          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableM
             -acSendP*/RfReliableMacSendP__0__signalDoneTask__runTask(void);
3288          //#line 51
3289          static void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__signalDone(message_t *msg, error_t result);
3290          //#line 71
3291          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableM
             -acSendP*/RfReliableMacSendP__0__AckTimer__fired(void);
3292          
3293          
3294          
3295          
3296          
3297          
3298          
3299          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableM
             -acSendP*/RfReliableMacSendP__0__TimeoutTimer__fired(void);
3300          
3301          
3302          
3303          
3304          
3305          
3306          
3307          
3308          
3309          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3310          //#line 139
3311          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableM
             -acSendP*/RfReliableMacSendP__0__SubAMSend__sendDone(message_t *msg, error_t error);
3312          //#line 158
3313          static  /*inline*/   message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len);
3314          //#line 203
3315          bool /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMa
             -cSendP__0__m_started = FALSE;
3316          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__0__AtosControl__start(void);
3317          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3318          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourc
             -eP*/AMResourceP__0__AMResource__send(am_addr_t arg_0x7e609888, message_t *arg_0x7e609a38, uint8_t arg_0x7e609bc0);
3319          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
3320          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*
             -/AMResourceP__0__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
3321          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
3322          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResour
             -ceC.AMResourceP*/AMResourceP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
3323          //#line 39
3324          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC
             -.AMResourceP*/AMResourceP__0__AMResource__sendDone(message_t *msg, error_t error);
3325          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3326          static  void AMResourceCenterP__AMResource__sendDone(
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 59  

3327          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
3328          uint8_t arg_0x7e5f3dd8, 
3329          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
3330          message_t *arg_0x7e6080a8, error_t arg_0x7e608230);
3331          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3332          static  void AMResourceCenterP__Packet__setPayloadLength(message_t *arg_0x7eb24538, uint8_t arg_0x7eb246c0
             -);
3333          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
3334          static  error_t AMResourceCenterP__SubAtosControl__start(void);
3335          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3336          static  error_t AMResourceCenterP__CoreSend__send(message_t *arg_0x7e5e9998, uint8_t arg_0x7e5e9b20);
3337          //# 57 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
3338          static  am_addr_t AMResourceCenterP__AMPacket__address(void);
3339          //#line 110
3340          static  void AMResourceCenterP__AMPacket__setSource(message_t *arg_0x7eb40a20, am_addr_t arg_0x7eb40bb0);
3341          //#line 92
3342          static  void AMResourceCenterP__AMPacket__setDestination(message_t *arg_0x7eb40190, am_addr_t arg_0x7eb403
             -20);
3343          //#line 176
3344          static  void AMResourceCenterP__AMPacket__setGroup(message_t *arg_0x7eb32010, am_group_t arg_0x7eb321a0);
3345          
3346          
3347          
3348          
3349          
3350          
3351          
3352          static  am_group_t AMResourceCenterP__AMPacket__localGroup(void);
3353          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
3354          static  error_t AMResourceCenterP__AMResource__send(uint8_t resource_id, am_addr_t addr, message_t *msg, u
             -int8_t len);
3355          //#line 70
3356          static  /*inline*/   void AMResourceCenterP__CoreSend__sendDone(message_t *msg, error_t result);
3357          
3358          
3359          
3360          
3361          
3362          static   void AMResourceCenterP__AMResource__default__sendDone(uint8_t resource_id, message_t *msg, error_
             -t error);
3363          
3364          
3365          
3366          
3367          
3368          bool AMResourceCenterP__m_started = FALSE;
3369          static  /*inline*/   error_t AMResourceCenterP__AtosControl__start(void);
3370          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3371          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__send(me
             -ssage_t *arg_0x7e5e9998, uint8_t arg_0x7e5e9b20);
3372          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
3373          static   uint16_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__Random__rand16(voi
             -d);
3374          //# 49 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
3375          static  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__enqueue(/
             -*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t arg_0x7e5c8930);
3376          
3377          
3378          
3379          
3380          
3381          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 60  

3382          
3383          
3384          
3385          
3386          static  /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__element(uint8_t arg_0x7e5c8ea8);
3387          
3388          
3389          
3390          
3391          
3392          
3393          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__clear(void);
3394          //#line 40
3395          static  /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__t /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__dequeue(void);
3396          //#line 9
3397          static  bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__empty(void);
3398          
3399          
3400          
3401          
3402          
3403          
3404          
3405          static  uint8_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__size(void
             -);
3406          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3407          static  void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(mess
             -age_t *arg_0x7e5e84c0, error_t arg_0x7e5e8648);
3408          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3409          static   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask(
             -void);
3410          //# 23 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
3411          enum /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0____nesc_unnamed4308 {
3412          //#line 23
3413            RfMacBaseSendP__0__sendNext = 7U
3414          };
3415          //#line 23
3416          typedef int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0____nesc_sillytask_sendNex
             -t[/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext];
3417          //#line 18
3418          bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
3419          
3420          uint8_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn = 0;
3421          
3422          
3423          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__
             -runTask(void);
3424          //#line 74
3425          static  /*inline*/  int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessa
             -ge(uint8_t resource_id);
3426          //#line 93
3427          static  /*inline*/  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueM
             -essage(message_t *msg);
3428          //#line 117
3429          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSen
             -d__sendDone(message_t *msg, error_t result);
3430          //#line 139
3431          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSen
             -d__send(message_t *msg, uint8_t len);
3432          //#line 185
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 61  

3433          bool /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_started = FALSE;
3434          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosCon
             -trol__start(void);
3435          //# 10 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
3436          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSendC.Queue
             -ExC*/QueueExC__0__queue[4];
3437          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head = 0;
3438          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail = 0;
3439          uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size = 0;
3440          
3441          static  /*inline*/   bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void);
3442          
3443          
3444          
3445          
3446          
3447          
3448          
3449          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void)
             -;
3450          
3451          
3452          
3453          
3454          
3455          
3456          
3457          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(vo
             -id);
3458          
3459          
3460          
3461          
3462          
3463          
3464          
3465          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__head(void);
3466          
3467          
3468          
3469          
3470          
3471          
3472          
3473          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void);
3474          //#line 63
3475          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*
             -AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t newVal);
3476          //#line 82
3477          static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t idx);
3478          //#line 96
3479          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t idx);
3480          //#line 124
3481          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void);
3482          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
3483          static  error_t RfMacBaseCsmaP__RfHardwareTx__txPrepare(uint8_t *arg_0x7e572c98, uint8_t arg_0x7e572e20);
3484          static  error_t RfMacBaseCsmaP__RfHardwareTx__txGo(void);
3485          //# 55 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 62  

3486          static   void RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__BackoffTimer__size_type arg_0x7e953b10);
3487          
3488          
3489          
3490          
3491          
3492          
3493          static   void RfMacBaseCsmaP__BackoffTimer__stop(void);
3494          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
3495          static   uint16_t RfMacBaseCsmaP__Random__rand16(void);
3496          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
3497          static  void RfMacBaseCsmaP__CoreSend__sendDone(message_t *arg_0x7e5e84c0, error_t arg_0x7e5e8648);
3498          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
3499          static   error_t RfMacBaseCsmaP__signalDoneTask__postTask(void);
3500          //#line 56
3501          static   error_t RfMacBaseCsmaP__doGo__postTask(void);
3502          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
3503          static  void RfMacBaseCsmaP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea50068);
3504          //# 53 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
3505          enum RfMacBaseCsmaP____nesc_unnamed4309 {
3506          //#line 53
3507            RfMacBaseCsmaP__signalDoneTask = 8U
3508          };
3509          //#line 53
3510          typedef int RfMacBaseCsmaP____nesc_sillytask_signalDoneTask[RfMacBaseCsmaP__signalDoneTask];
3511          //#line 105
3512          enum RfMacBaseCsmaP____nesc_unnamed4310 {
3513          //#line 105
3514            RfMacBaseCsmaP__doGo = 9U
3515          };
3516          //#line 105
3517          typedef int RfMacBaseCsmaP____nesc_sillytask_doGo[RfMacBaseCsmaP__doGo];
3518          //#line 20
3519          enum RfMacBaseCsmaP____nesc_unnamed4311 {
3520          
3521            RfMacBaseCsmaP__RF_TIME_ACK_TURNAROUND = 7, 
3522            RfMacBaseCsmaP__RF_TIME_SYMBOL = 2, 
3523            RfMacBaseCsmaP__RF_BACKOFF_PERIOD = 20 / RfMacBaseCsmaP__RF_TIME_SYMBOL, 
3524            RfMacBaseCsmaP__RF_MIN_BACKOFF = 20 / RfMacBaseCsmaP__RF_TIME_SYMBOL, 
3525            RfMacBaseCsmaP__RF_CONGESTION_MAX = 100
3526          };
3527          
3528          
3529          enum RfMacBaseCsmaP____nesc_unnamed4312 {
3530          
3531            RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA, 
3532            RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND
3533          };
3534          
3535          
3536          uint8_t RfMacBaseCsmaP__m_test_ieee[8];
3537          
3538          
3539          uint8_t RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
3540          uint8_t RfMacBaseCsmaP__m_congestion_count = 0;
3541          error_t RfMacBaseCsmaP__m_result;
3542          message_t *RfMacBaseCsmaP__m_msg = (void *)0;
3543          bool RfMacBaseCsmaP__m_cancel = FALSE;
3544          
3545          
3546          uint8_t RfMacBaseCsmaP__m_congestion_delay = 0;
3547          uint16_t RfMacBaseCsmaP__m_this_delay = 0;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 63  

3548          uint8_t RfMacBaseCsmaP__m_this_random = 0;
3549          
3550          
3551          
3552          static  /*inline*/   void RfMacBaseCsmaP__signalDoneTask__runTask(void);
3553          
3554          
3555          
3556          
3557          
3558          
3559          
3560          
3561          
3562          
3563          static void RfMacBaseCsmaP__signalDone(error_t result);
3564          
3565          
3566          
3567          
3568          
3569          
3570          
3571          
3572          
3573          
3574          static  /*inline*/  uint32_t RfMacBaseCsmaP__initBackoffTimer(void);
3575          
3576          
3577          
3578          
3579          
3580          
3581          
3582          static  /*inline*/  uint32_t RfMacBaseCsmaP__congestionBackoffTimer(void);
3583          
3584          
3585          
3586          
3587          
3588          
3589          
3590          static  /*inline*/  void RfMacBaseCsmaP__congestion(void);
3591          //#line 105
3592          static  /*inline*/   void RfMacBaseCsmaP__doGo__runTask(void);
3593          //#line 135
3594          static  /*inline*/    void RfMacBaseCsmaP__BackoffTimer__fired(void);
3595          //#line 164
3596          static  /*inline*/   error_t RfMacBaseCsmaP__CoreSend__send(message_t *msg, uint8_t len);
3597          //#line 225
3598          bool RfMacBaseCsmaP__m_started = FALSE;
3599          static  /*inline*/   error_t RfMacBaseCsmaP__AtosControl__start(void);
3600          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
3601          static  void RfHardwareP__RfConfig__flush(void);
3602          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
3603          static  error_t RfHardwareP__RxControl__start(void);
3604          //#line 74
3605          static  error_t RfHardwareP__TxControl__start(void);
3606          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
3607          static  void RfHardwareP__RfPower__oscOn(void);
3608          //#line 6
3609          static  void RfHardwareP__RfPower__radioOn(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 64  

3610          //#line 4
3611          static  void RfHardwareP__RfPower__reset(void);
3612          
3613          
3614          
3615          
3616          static  void RfHardwareP__RfPower__rxOn(void);
3617          //# 19 "/opt/atos/tos/chips/rf2530/hardware/RfHardwareP.nc"
3618          static  /*inline*/   error_t RfHardwareP__AtosControl__start(void);
3619          //# 11 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
3620          static  /*inline*/   void RfPowerP__RfPower__reset(void);
3621          
3622          
3623          
3624          
3625          static  /*inline*/   void RfPowerP__RfPower__radioOn(void);
3626          //#line 85
3627          static  /*inline*/   void RfPowerP__RfPower__rxOn(void);
3628          //#line 103
3629          static  /*inline*/   void RfPowerP__RfPower__oscOn(void);
3630          //# 17 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
3631          uint8_t RfConfigP__m_channel;
3632          
3633          uint8_t RfConfigP__m_tx_power;
3634          
3635          bool RfConfigP__m_hw_auto_ack;
3636          
3637          bool RfConfigP__m_address_recognition;
3638          
3639          
3640          static  /*inline*/  void RfConfigP__writeChannel(void);
3641          
3642          
3643          
3644          
3645          
3646          
3647          
3648          static  /*inline*/  void RfConfigP__writeFilter(void);
3649          //#line 52
3650          static  /*inline*/  void RfConfigP__writeFIFOPThrehold(void);
3651          
3652          
3653          
3654          
3655          static  /*inline*/  void RfConfigP__writeTxPower(void);
3656          
3657          
3658          
3659          
3660          
3661          
3662          
3663          static  /*inline*/  void RfConfigP__RfConfigWrite(void);
3664          //#line 103
3665          static  /*inline*/   error_t RfConfigP__Init__init(void);
3666          //#line 135
3667          static  /*inline*/   void RfConfigP__RfConfig__flush(void);
3668          
3669          
3670          
3671          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 65  

3672          
3673          
3674          
3675          static  /*inline*/   uint8_t RfConfigP__RfConfig__getChannel(void);
3676          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3677          static   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__enableRisingEdge(void);
3678          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
3679          static  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__RfHardwareRx__rxPacket(uint8_t *arg_0x7e5337
             -e8, uint8_t arg_0x7e533970);
3680          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3681          static   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge(void);
3682          //# 23 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
3683          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[1 << 8] = { 0 };
3684          //#line 23
3685          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = 0;
3686          //#line 23
3687          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail = 0;
3688          
3689          
3690          
3691          
3692          
3693          
3694          
3695          
3696          
3697          static  /*inline*/   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void);
3698          //#line 58
3699          uint8_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[sizeof(message_t )];
3700          
3701          
3702          static bool /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(uint8_t *_data, uint8_t length);
3703          //#line 78
3704          static  /*inline*/  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket(void);
3705          //#line 141
3706          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void);
3707          //#line 153
3708          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void);
3709          //#line 176
3710          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void);
3711          
3712          
3713          
3714          
3715          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(
             -void);
3716          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
3717          static   void RfInterruptsP__InterruptRFErr__fired(void);
3718          //#line 57
3719          static   void RfInterruptsP__InterruptFIFOP__fired(void);
3720          //# 36 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
3721          static  /*inline*/    error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void);
3722          //#line 59
3723          static  /*inline*/    error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void);
3724          //#line 80
3725          static  /*inline*/   void RfInterruptsP__INT_RFERR__fired(void);
3726          //#line 92
3727          static  /*inline*/   void RfInterruptsP__INT_RF__fired(void);
3728          //# 14 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
3729          static  /*inline*/  void RfHardwareTxP__writeTxfifo(uint8_t *buf, uint8_t len);
3730          //#line 27
3731          static  /*inline*/   error_t RfHardwareTxP__StdControl__start(void);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 66  

3732          //#line 45
3733          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *packet, uint8_t len);
3734          //#line 91
3735          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txGo(void);
3736          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
3737          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__fired(void);
3738          //#line 92
3739          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__startAt(/*RfMacBase
             -CsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__size_type arg_0x7e952c28, /*RfMacBaseCsmaC.Alarm32khz32C.T
             -ransform*/TransformAlarmC__1__AlarmFrom__size_type arg_0x7e952db8);
3740          //#line 62
3741          static   void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__stop(void);
3742          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3743          static   /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__size_type /*RfMacBaseCsmaC
             -.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__get(void);
3744          //# 67 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
3745          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm32khz32C.
             -Transform*/TransformAlarmC__1__m_t0;
3746          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBaseCsmaC.Alarm32khz32C.
             -Transform*/TransformAlarmC__1__m_dt;
3747          
3748          enum /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1____nesc_unnamed4313 {
3749          
3750            TransformAlarmC__1__MAX_DELAY_LOG2 = 8 * sizeof(/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarm
             -C__1__from_size_type ) - 1 - 0, 
3751            TransformAlarmC__1__MAX_DELAY = (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_t
             -ype )1 << /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY_LOG2
3752          };
3753          
3754          static  /*inline*/    /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBa
             -seCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void);
3755          //#line 91
3756          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void)
             -;
3757          
3758          
3759          
3760          
3761          static void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm(void);
3762          //#line 140
3763          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*
             -RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type t0, /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/T
             -ransformAlarmC__1__to_size_type dt);
3764          
3765          
3766          
3767          
3768          
3769          
3770          
3771          
3772          
3773          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*Rf
             -MacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type dt);
3774          
3775          
3776          
3777          
3778          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(
             -void);
3779          //#line 170
3780          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 67  

             -(void);
3781          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
3782          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__size_type /*Counter32khz3
             -2C.TransformCounterC*/TransformCounterC__1__CounterFrom__get(void);
3783          
3784          
3785          
3786          
3787          
3788          
3789          static   bool /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__isOverflowPending(vo
             -id);
3790          
3791          
3792          
3793          
3794          
3795          
3796          
3797          
3798          
3799          
3800          static   void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__overflow(void);
3801          //# 56 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
3802          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type /*Counter32khz32C.TransformCou
             -nterC*/TransformCounterC__1__m_upper = 0;
3803          
3804          enum /*Counter32khz32C.TransformCounterC*/TransformCounterC__1____nesc_unnamed4314 {
3805          
3806            TransformCounterC__1__LOW_SHIFT_RIGHT = 0, 
3807            TransformCounterC__1__HIGH_SHIFT_LEFT = 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounter
             -C__1__from_size_type ) - /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__LOW_SHIFT_RIGHT, 
3808            TransformCounterC__1__NUM_UPPER_BITS = 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounterC
             -__1__to_size_type ) - 8 * sizeof(/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type ) + 0, 
3809          
3810          
3811          
3812            TransformCounterC__1__OVERFLOW_MASK = /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__NUM_UPP
             -ER_BITS ? ((/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type )2 << (/*Counter32khz32C.Transfo
             -rmCounterC*/TransformCounterC__1__NUM_UPPER_BITS - 1)) - 1 : 0
3813          };
3814          
3815          static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transfo
             -rmCounterC*/TransformCounterC__1__Counter__get(void);
3816          //#line 125
3817          static  /*inline*/    void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflo
             -w(void);
3818          //# 10 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
3819          static  /*inline*/   error_t CC2530RandomLfsrP__Init__init(void);
3820          //#line 69
3821          static   uint16_t CC2530RandomLfsrP__Random__rand16(void);
3822          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
3823          static  void RfPacketP__WatchDog__resetCpu(void);
3824          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
3825          static   am_addr_t RfPacketP__ActiveMessageAddress__amAddress(void);
3826          
3827          
3828          
3829          
3830          static   am_group_t RfPacketP__ActiveMessageAddress__amGroup(void);
3831          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
3832          bool RfPacketP__m_address_saved = FALSE;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 68  

3833          
3834          am_addr_t RfPacketP__m_addr = TOS_AM_ADDRESS;
3835          
3836          
3837          bool RfPacketP__m_group_saved = FALSE;
3838          am_group_t RfPacketP__m_group = TOS_AM_GROUP;
3839          
3840          
3841          static  am_addr_t RfPacketP__AMPacket__address(void);
3842          //#line 49
3843          static  /*inline*/   am_addr_t RfPacketP__AMPacket__destination(message_t *amsg);
3844          
3845          
3846          
3847          
3848          static  /*inline*/   am_addr_t RfPacketP__AMPacket__source(message_t *amsg);
3849          
3850          
3851          
3852          
3853          static  /*inline*/   void RfPacketP__AMPacket__setDestination(message_t *amsg, am_addr_t addr);
3854          
3855          
3856          
3857          
3858          static  /*inline*/   void RfPacketP__AMPacket__setSource(message_t *amsg, am_addr_t addr);
3859          
3860          
3861          
3862          
3863          static  /*inline*/   bool RfPacketP__AMPacket__isForMe(message_t *amsg);
3864          
3865          
3866          
3867          
3868          
3869          
3870          static  /*inline*/   am_id_t RfPacketP__AMPacket__type(message_t *amsg);
3871          
3872          
3873          
3874          
3875          
3876          
3877          
3878          
3879          
3880          static  /*inline*/   am_group_t RfPacketP__AMPacket__group(message_t *amsg);
3881          
3882          
3883          
3884          
3885          static  /*inline*/   void RfPacketP__AMPacket__setGroup(message_t *amsg, am_group_t grp);
3886          
3887          
3888          
3889          
3890          static  /*inline*/   am_group_t RfPacketP__AMPacket__localGroup(void);
3891          //#line 124
3892          static  /*inline*/   uint8_t RfPacketP__Packet__payloadLength(message_t *msg);
3893          
3894          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 69  

3895          
3896          
3897          static  /*inline*/   void RfPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len);
3898          
3899          
3900          
3901          
3902          static  /*inline*/   uint8_t RfPacketP__Packet__maxPayloadLength(void);
3903          
3904          
3905          
3906          
3907          static  void *RfPacketP__Packet__getPayload(message_t *msg, uint8_t *len);
3908          
3909          
3910          
3911          
3912          
3913          
3914          
3915          
3916          
3917          
3918          static  /*inline*/   uint8_t RfPacketP__PacketEx__packetHeaderSize(void);
3919          
3920          
3921          
3922          
3923          
3924          
3925          
3926          
3927          
3928          static  /*inline*/   bool RfPacketP__PacketEx__isValidPacket(message_t *msg);
3929          //#line 182
3930          static  /*inline*/    void RfPacketP__ActiveMessageAddress__changed(void);
3931          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
3932          static  uint8_t RfReliableMacPacketP__SubPacket__payloadLength(message_t *arg_0x7eb25e90);
3933          //#line 108
3934          static  void *RfReliableMacPacketP__SubPacket__getPayload(message_t *arg_0x7eb23358, uint8_t *arg_0x7eb235
             -00);
3935          //#line 95
3936          static  uint8_t RfReliableMacPacketP__SubPacket__maxPayloadLength(void);
3937          //#line 83
3938          static  void RfReliableMacPacketP__SubPacket__setPayloadLength(message_t *arg_0x7eb24538, uint8_t arg_0x7e
             -b246c0);
3939          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
3940          static  bool RfReliableMacPacketP__SubPacketEx__isValidPacket(message_t *arg_0x7e6b45f8);
3941          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
3942          static  /*inline*/   uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *msg);
3943          
3944          
3945          
3946          
3947          static  /*inline*/   void RfReliableMacPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len);
3948          
3949          
3950          
3951          
3952          static  /*inline*/   uint8_t RfReliableMacPacketP__Packet__maxPayloadLength(void);
3953          
3954          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 70  

3955          
3956          
3957          static  void *RfReliableMacPacketP__Packet__getPayload(message_t *msg, uint8_t *len);
3958          
3959          
3960          
3961          
3962          
3963          
3964          
3965          
3966          
3967          
3968          static  /*inline*/   uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void);
3969          
3970          
3971          
3972          
3973          static  /*inline*/   void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *msg);
3974          
3975          
3976          
3977          
3978          static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *msg);
3979          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
3980          static  uint8_t RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(message_t *arg_0x7e3eab10, uint8_
             -t arg_0x7e3eaca0, message_t *arg_0x7e3eae50, rf_ack_t *arg_0x7e3e7030);
3981          static  void RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(message_t *arg_0x7e3e7508, messag
             -e_t *arg_0x7e3e76b8, rf_ack_t *arg_0x7e3e7868);
3982          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
3983          static  /*inline*/  uint8_t RfReliableMacAckP__fillAckMessageDefault(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack);
3984          
3985          
3986          
3987          
3988          
3989          
3990          
3991          
3992          
3993          static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *receive_msg, uint8_t receiv
             -e_dsn, message_t *ack_msg, rf_ack_t *ack);
3994          
3995          
3996          
3997          
3998          
3999          
4000          
4001          
4002          
4003          
4004          static  /*inline*/   void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *send_msg, mess
             -age_t *ack_msg, rf_ack_t *ack);
4005          
4006          
4007          
4008          
4009          static  /*inline*/    uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t 
             -*receive_msg, uint8_t receive_dsn, message_t *ack_msg, rf_ack_t *ack);
4010          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 71  

4011          
4012          
4013          
4014          static  /*inline*/    void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t 
             -*send_msg, message_t *ack_msg, rf_ack_t *ack);
4015          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4016          static  void */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__PacketEx__getPacketHeader(message_t *arg_0x7e6b4120);
4017          
4018          static  bool /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__0__PacketEx__isValidPacket(message_t *arg_0x7e6b45f8);
4019          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4020          static  uint8_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__0__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e653b48, uint8_t arg_0x7e653cd8, message_t *arg_0x7e653e8
             -8, rf_ack_t *arg_0x7e652068);
4021          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
4022          static  bool /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__0__DsnFilter__filter(uint16_t arg_0x7e3c9ba8, uint8_t arg_0x7e3c9d30);
4023          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4024          static  void */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__0__SubPacket__getPayload(message_t *arg_0x7eb23358, uint8_t *arg_0x7eb23500);
4025          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4026          static   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__0__sendAckTask__postTask(void);
4027          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4028          static  message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__0__Receive__receive(message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
4029          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4030          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__0__AMSendAck__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
4031          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4032          static  am_group_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__0__AMPacket__group(message_t *arg_0x7eb348b8);
4033          //#line 77
4034          static  am_addr_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__0__AMPacket__source(message_t *arg_0x7eb42b90);
4035          //#line 67
4036          static  am_addr_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__0__AMPacket__destination(message_t *arg_0x7eb425b0);
4037          //#line 92
4038          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__0__AMPacket__setDestination(message_t *arg_0x7eb40190, am_addr_t arg_0x7eb40320);
4039          //#line 176
4040          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__0__AMPacket__setGroup(message_t *arg_0x7eb32010, am_group_t arg_0x7eb321a0);
4041          //# 47 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4042          enum /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0_
             -___nesc_unnamed4315 {
4043          //#line 47
4044            RfReliableMacReceiveP__0__sendAckTask = 10U
4045          };
4046          //#line 47
4047          typedef int /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0____nesc_sillytask_sendAckTask[/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRelia
             -bleMacReceiveP__0__sendAckTask];
4048          //#line 37
4049          message_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__0__m_ack_msg;
4050          
4051          static  /*inline*/  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRel
             -iableMacReceiveP__0__sendAck(message_t *msg);
4052          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 72  

4053          
4054          
4055          
4056          
4057          
4058          
4059          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRe
             -liableMacReceiveP__0__sendAckTask__runTask(void);
4060          
4061          
4062          
4063          
4064          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRe
             -liableMacReceiveP__0__AMSendAck__sendDone(message_t *msg, error_t result);
4065          
4066          
4067          
4068          
4069          static  /*inline*/   message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
             -*/RfReliableMacReceiveP__0__SubReceive__receive(message_t *msg, void *payload, uint8_t len);
4070          //#line 100
4071          bool /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0_
             -_m_started = FALSE;
4072          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__0__AtosControl__start(void);
4073          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4074          static  bool RfActiveMessageP__PacketEx__isValidPacket(message_t *arg_0x7e6b45f8);
4075          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4076          static  void *RfActiveMessageP__Packet__getPayload(message_t *arg_0x7eb23358, uint8_t *arg_0x7eb23500);
4077          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4078          static  message_t *RfActiveMessageP__Snoop__receive(
4079          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4080          uint8_t arg_0x7e398bb0, 
4081          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4082          message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
4083          //#line 67
4084          static  message_t *RfActiveMessageP__Receive__receive(
4085          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4086          uint8_t arg_0x7e3983f8, 
4087          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4088          message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
4089          //# 136 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4090          static  am_id_t RfActiveMessageP__AMPacket__type(message_t *arg_0x7eb35aa0);
4091          //#line 125
4092          static  bool RfActiveMessageP__AMPacket__isForMe(message_t *arg_0x7eb35370);
4093          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
4094          static  /*inline*/   void RfActiveMessageP__CoreReceive__receive(message_t *msg);
4095          //#line 51
4096          static  /*inline*/    message_t *RfActiveMessageP__Receive__default__receive(uint8_t id, message_t *msg, v
             -oid *payload, uint8_t len);
4097          //#line 67
4098          static  /*inline*/    message_t *RfActiveMessageP__Snoop__default__receive(uint8_t id, message_t *msg, voi
             -d *payload, uint8_t len);
4099          
4100          
4101          
4102          
4103          
4104          
4105          bool RfActiveMessageP__m_started = FALSE;
4106          static  /*inline*/   error_t RfActiveMessageP__AtosControl__start(void);
4107          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 73  

4108          static  void RfMacBaseReceiveP__CoreReceive__receive(message_t *arg_0x7e393030);
4109          //# 12 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseReceiveP.nc"
4110          static  /*inline*/   void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *buf, uint8_t len);
4111          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
4112          static   uint16_t AtosMacP__Random__rand16(void);
4113          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
4114          static  error_t AtosMacP__SubAtosControl__start(void);
4115          //#line 4
4116          static  error_t AtosMacP__HardwareAtosControl__start(void);
4117          //# 15 "/opt/atos/tos/lib/atos/net/AtosMac/AtosMacP.nc"
4118          bool AtosMacP__m_started = FALSE;
4119          
4120          static  /*inline*/   error_t AtosMacP__AtosControl__start(void);
4121          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
4122          static  uint8_t AtosNetStdP__RfConfig__getChannel(void);
4123          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4124          static  uint8_t AtosNetStdP__Packet__payloadLength(message_t *arg_0x7eb25e90);
4125          //#line 108
4126          static  void *AtosNetStdP__Packet__getPayload(message_t *arg_0x7eb23358, uint8_t *arg_0x7eb23500);
4127          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4128          static  error_t AtosNetStdP__AMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg
             -_0x7eb61b48);
4129          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
4130          static  void AtosNetStdP__WatchDog__resetCpu(void);
4131          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
4132          static  void AtosNetStdP__AtosNetStd__receivedReboot(anstd_reboot_t *arg_0x7e2fc6a8);
4133          
4134          static  void AtosNetStdP__AtosNetStd__receivedTraceAck(message_t *arg_0x7e2fa1f8, anstd_trace_ack_t *arg_0
             -x7e2fa3b8);
4135          //#line 15
4136          static  void AtosNetStdP__AtosNetStd__receivedDiscovery(anstd_discovery_t *arg_0x7e2fdd20);
4137          
4138          
4139          static  void AtosNetStdP__AtosNetStd__receivedTrace(message_t *arg_0x7e2fcb58, anstd_trace_t *arg_0x7e2fcd
             -08);
4140          //#line 12
4141          static  void AtosNetStdP__AtosNetStd__beforeNodeStatusUp(anstd_node_status_t *arg_0x7e2fd1e0);
4142          
4143          static  void AtosNetStdP__AtosNetStd__receivedNodeStatusUp(message_t *arg_0x7e2fd698, anstd_node_status_t 
             -*arg_0x7e2fd850);
4144          
4145          static  void AtosNetStdP__AtosNetStd__receivedSetIEEE(anstd_setieee_t *arg_0x7e2fc1f8);
4146          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4147          static   error_t AtosNetStdP__nodeStatusUpTask__postTask(void);
4148          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4149          static  void AtosNetStdP__RebootTimer__startPeriodic(uint32_t arg_0x7e9a6788);
4150          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4151          static   error_t AtosNetStdP__rebootTask__postTask(void);
4152          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
4153          static  void AtosNetStdP__FlashIEEE__WriteIEEE(uint8_t *arg_0x7ea50510);
4154          //#line 7
4155          static  void AtosNetStdP__FlashIEEE__GetIEEE(uint8_t *arg_0x7ea50068);
4156          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4157          static  am_addr_t AtosNetStdP__AMPacket__source(message_t *arg_0x7eb42b90);
4158          //#line 57
4159          static  am_addr_t AtosNetStdP__AMPacket__address(void);
4160          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4161          static   error_t AtosNetStdP__sendDoneCheck__postTask(void);
4162          //# 54 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
4163          enum AtosNetStdP____nesc_unnamed4316 {
4164          //#line 54
4165            AtosNetStdP__rebootTask = 11U
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 74  

4166          };
4167          //#line 54
4168          typedef int AtosNetStdP____nesc_sillytask_rebootTask[AtosNetStdP__rebootTask];
4169          
4170          
4171          
4172          
4173          enum AtosNetStdP____nesc_unnamed4317 {
4174          //#line 59
4175            AtosNetStdP__nodeStatusUpTask = 12U
4176          };
4177          //#line 59
4178          typedef int AtosNetStdP____nesc_sillytask_nodeStatusUpTask[AtosNetStdP__nodeStatusUpTask];
4179          //#line 350
4180          enum AtosNetStdP____nesc_unnamed4318 {
4181          //#line 350
4182            AtosNetStdP__sendDoneCheck = 13U
4183          };
4184          //#line 350
4185          typedef int AtosNetStdP____nesc_sillytask_sendDoneCheck[AtosNetStdP__sendDoneCheck];
4186          //#line 43
4187          message_t AtosNetStdP__m_send_msg;
4188          uint16_t AtosNetStdP__m_ack_addr = 0xFFFF;
4189          uint8_t AtosNetStdP__m_node_status = 0;
4190          
4191          
4192          
4193          static  /*inline*/   void AtosNetStdP__RebootTimer__fired(void);
4194          
4195          
4196          
4197          
4198          static  /*inline*/   void AtosNetStdP__rebootTask__runTask(void);
4199          
4200          
4201          
4202          
4203          static  /*inline*/   void AtosNetStdP__nodeStatusUpTask__runTask(void);
4204          
4205          
4206          
4207          
4208          
4209          
4210          
4211          
4212          
4213          static  /*inline*/  void AtosNetStdP__receiveNodeStatusUp(message_t *msg, anstd_node_status_t *status);
4214          
4215          
4216          
4217          
4218          
4219          static  /*inline*/  void AtosNetStdP__receiveDiscovery(message_t *msg, anstd_discovery_t *discovery);
4220          
4221          
4222          
4223          
4224          
4225          
4226          
4227          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 75  

4228          static  /*inline*/  void AtosNetStdP__receiveSetIEEE(message_t *msg, anstd_setieee_t *setieee);
4229          
4230          
4231          
4232          
4233          
4234          
4235          
4236          
4237          
4238          static  /*inline*/  void AtosNetStdP__receiveReboot(message_t *msg, anstd_reboot_t *reboot);
4239          
4240          
4241          
4242          
4243          
4244          
4245          
4246          static int AtosNetStdP__indexOfTraceItem(anstd_trace_t *trace, uint16_t node_id);
4247          //#line 116
4248          static void AtosNetStdP__traceBackward(message_t *msg, anstd_trace_ack_t *trace_ack, int index);
4249          //#line 128
4250          static  /*inline*/  void AtosNetStdP__traceEnd(message_t *msg, anstd_trace_t *trace, int index);
4251          
4252          
4253          
4254          
4255          
4256          static  /*inline*/  void AtosNetStdP__traceForward(message_t *msg, anstd_trace_t *trace, int index);
4257          //#line 151
4258          static  /*inline*/  void AtosNetStdP__receiveTrace(message_t *msg, anstd_trace_t *trace);
4259          //#line 177
4260          static  /*inline*/  void AtosNetStdP__receiveTraceAck(message_t *msg, anstd_trace_ack_t *trace_ack);
4261          //#line 203
4262          static  /*inline*/   message_t *AtosNetStdP__Receive__receive(message_t *msg, void *payload, uint8_t len);
4263          //#line 241
4264          static  /*inline*/   error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t address);
4265          //#line 350
4266          static  /*inline*/   void AtosNetStdP__sendDoneCheck__runTask(void);
4267          //#line 368
4268          static  /*inline*/   void AtosNetStdP__AMSend__sendDone(message_t *msg, error_t error);
4269          
4270          
4271          
4272          
4273          
4274          
4275          
4276          
4277          
4278          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *statu
             -s);
4279          
4280          
4281          
4282          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *msg, anstd_no
             -de_status_t *status);
4283          
4284          
4285          
4286          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *discover
             -y);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 76  

4287          
4288          
4289          
4290          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *setieee);
4291          
4292          
4293          
4294          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *reboot);
4295          
4296          
4297          
4298          
4299          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *msg, anstd_trace_t *
             -trace);
4300          
4301          
4302          
4303          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *msg, anstd_trace_
             -t *trace_ack);
4304          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4305          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__SubAMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
4306          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4307          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__PacketEx__getPacketHeader(message_t *arg_0x7e6b4120);
4308          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4309          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__1__resendTask__postTask(void);
4310          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4311          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
4312          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4313          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__Packet__payloadLength(message_t *arg_0x7eb25e90);
4314          //#line 83
4315          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__Packet__setPayloadLength(message_t *arg_0x7eb24538, uint8_t arg_0x7eb246c0);
4316          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
4317          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__SubAtosControl__start(void);
4318          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4319          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliable
             -MacRetrySendP__1__AMPacket__destination(message_t *arg_0x7eb425b0);
4320          //#line 92
4321          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__AMPacket__setDestination(message_t *arg_0x7eb40190, am_addr_t arg_0x7eb40320);
4322          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
4323          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1____nesc_unnamed4319 {
4324          //#line 48
4325            RfReliableMacRetrySendP__1__resendTask = 14U
4326          };
4327          //#line 48
4328          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1____nesc_sillytask_resendTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask];
4329          //#line 19
4330          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
             -ndP__1__m_sending = FALSE;
4331          message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_msg;
4332          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 77  

             -ndP__1__m_retry_times = 0;
4333          
4334          
4335          static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1__signalDone(message_t *msg, error_t result);
4336          //#line 43
4337          static error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMac
             -RetrySendP__1__doSend(message_t *msg);
4338          
4339          
4340          
4341          
4342          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask__runTask(void);
4343          //#line 74
4344          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4345          //#line 129
4346          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__SubAMSend__sendDone(message_t *msg, error_t error);
4347          //#line 150
4348          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1__m_started = FALSE;
4349          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*
             -/RfReliableMacRetrySendP__1__AtosControl__start(void);
4350          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4351          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__SubAMSend__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
4352          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4353          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
             -dP*/RfReliableMacSendP__1__AMPacket__source(message_t *arg_0x7eb42b90);
4354          //#line 67
4355          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSen
             -dP*/RfReliableMacSendP__1__AMPacket__destination(message_t *arg_0x7eb425b0);
4356          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4357          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__1__PacketEx__getPacketHeader(message_t *arg_0x7e6b4120);
4358          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4359          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
4360          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4361          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__startOneShot(uint32_t arg_0x7e9a6d58);
4362          
4363          
4364          
4365          
4366          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__TimeoutTimer__stop(void);
4367          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4368          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__SubPacket__payloadLength(message_t *arg_0x7eb25e90);
4369          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4370          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__RfReliableMacAck__receiveAckMessage(message_t *arg_0x7e652540, message_t *arg_0x7e6526f0, rf_ack_t
             - *arg_0x7e6528a0);
4371          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4372          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSend
             -P*/RfReliableMacSendP__1__signalDoneTask__postTask(void);
4373          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
4374          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__startOneShot(uint32_t arg_0x7e9a6d58);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 78  

4375          
4376          
4377          
4378          
4379          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__AckTimer__stop(void);
4380          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
4381          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__1____nesc_unnamed4320 {
4382          //#line 31
4383            RfReliableMacSendP__1__signalDoneTask = 15U
4384          };
4385          //#line 31
4386          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1____nesc_sillytask_signalDoneTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacS
             -endC.RfReliableMacSendP*/RfReliableMacSendP__1__signalDoneTask];
4387          //#line 26
4388          uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending = FALSE;
4389          message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__1__m_msg;
4390          error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_result;
4391          
4392          
4393          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__signalDoneTask__runTask(void);
4394          //#line 51
4395          static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__signalDone(message_t *msg, error_t result);
4396          //#line 71
4397          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__AckTimer__fired(void);
4398          
4399          
4400          
4401          
4402          
4403          
4404          
4405          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__TimeoutTimer__fired(void);
4406          
4407          
4408          
4409          
4410          
4411          
4412          
4413          
4414          
4415          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4416          //#line 139
4417          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__SubAMSend__sendDone(message_t *msg, error_t error);
4418          //#line 158
4419          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len);
4420          //#line 203
4421          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__1__m_started = FALSE;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 79  

4422          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AtosControl__start(void);
4423          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4424          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMReso
             -urceP*/AMResourceP__1__AMResource__send(am_addr_t arg_0x7e609888, message_t *arg_0x7e609a38, uint8_t arg_0x7e609bc0);
4425          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4426          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourc
             -eP*/AMResourceP__1__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
4427          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4428          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMRes
             -ourceC.AMResourceP*/AMResourceP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4429          //#line 39
4430          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResour
             -ceC.AMResourceP*/AMResourceP__1__AMResource__sendDone(message_t *msg, error_t error);
4431          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
4432          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__PacketEx__getPacketHeader(message_t *arg_0x7e6b4120);
4433          
4434          static  bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__PacketEx__isValidPacket(message_t *arg_0x7e6b45f8);
4435          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
4436          static  uint8_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__RfReliableMacAck__fillAckMessage(message_t *arg_0x7e653b48, uint8_t arg_0x7e653cd8, message_t *arg_0x7e65
             -3e88, rf_ack_t *arg_0x7e652068);
4437          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
4438          static  bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__DsnFilter__filter(uint16_t arg_0x7e3c9ba8, uint8_t arg_0x7e3c9d30);
4439          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4440          static  void */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__SubPacket__getPayload(message_t *arg_0x7eb23358, uint8_t *arg_0x7eb23500);
4441          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4442          static   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__1__sendAckTask__postTask(void);
4443          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
4444          static  message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__Receive__receive(message_t *arg_0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010);
4445          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4446          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableM
             -acReceiveP__1__AMSendAck__send(am_addr_t arg_0x7eb61810, message_t *arg_0x7eb619c0, uint8_t arg_0x7eb61b48);
4447          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4448          static  am_group_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliab
             -leMacReceiveP__1__AMPacket__group(message_t *arg_0x7eb348b8);
4449          //#line 77
4450          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__AMPacket__source(message_t *arg_0x7eb42b90);
4451          //#line 67
4452          static  am_addr_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__AMPacket__destination(message_t *arg_0x7eb425b0);
4453          //#line 92
4454          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMPacket__setDestination(message_t *arg_0x7eb40190, am_addr_t arg_0x7eb40320);
4455          //#line 176
4456          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__AMPacket__setGroup(message_t *arg_0x7eb32010, am_group_t arg_0x7eb321a0);
4457          //# 47 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4458          enum /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_1____nesc_unnamed4321 {
4459          //#line 47
4460            RfReliableMacReceiveP__1__sendAckTask = 16U
4461          };
4462          //#line 47
4463          typedef int /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 80  

             -ceiveP__1____nesc_sillytask_sendAckTask[/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask];
4464          //#line 37
4465          message_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__m_ack_msg;
4466          
4467          static  /*inline*/  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__1__sendAck(message_t *msg);
4468          
4469          
4470          
4471          
4472          
4473          
4474          
4475          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask__runTask(void);
4476          
4477          
4478          
4479          
4480          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__AMSendAck__sendDone(message_t *msg, error_t result);
4481          
4482          
4483          
4484          
4485          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRecei
             -veP*/RfReliableMacReceiveP__1__SubReceive__receive(message_t *msg, void *payload, uint8_t len);
4486          //#line 100
4487          bool /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP_
             -_1__m_started = FALSE;
4488          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
             -*/RfReliableMacReceiveP__1__AtosControl__start(void);
4489          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4490          static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourc
             -eP__2__AMResource__send(am_addr_t arg_0x7e609888, message_t *arg_0x7e609a38, uint8_t arg_0x7e609bc0);
4491          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4492          static  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP_
             -_2__AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
4493          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4494          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourc
             -eP*/AMResourceP__2__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4495          //#line 39
4496          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*
             -/AMResourceP__2__AMResource__sendDone(message_t *msg, error_t error);
4497          //# 9 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
4498          uint8_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index = 0;
4499          uint16_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[100];
4500          uint8_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[1][100];
4501          
4502          
4503          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(uint16_t 
             -addr);
4504          //#line 31
4505          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress(void);
4506          //#line 51
4507          static bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(uint16_t addr, uint8_t fie
             -ld_id, uint8_t dsn);
4508          //#line 80
4509          static  /*inline*/   error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void);
4510          //#line 92
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 81  

4511          static  /*inline*/   bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(uint
             -8_t field_id, uint16_t addr, uint8_t dsn);
4512          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4513          static  error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP_
             -_3__AMResource__send(am_addr_t arg_0x7e609888, message_t *arg_0x7e609a38, uint8_t arg_0x7e609bc0);
4514          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4515          static  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3_
             -_AMSend__sendDone(message_t *arg_0x7eb60eb8, error_t arg_0x7eb55068);
4516          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4517          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*
             -/AMResourceP__3__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len);
4518          //#line 39
4519          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AM
             -ResourceP__3__AMResource__sendDone(message_t *msg, error_t error);
4520          //# 71 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
4521             /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )
4522          //#line 71
4523          {
4524   1        __nesc_atomic_t tmp = EA;
4525   1      
4526   1      //#line 73
4527   1        EA = 0;
4528   1        return tmp;
4529   1      }
4530          
4531             /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)
4532          //#line 77
4533          {
4534   1        EA = oldSreg;
4535   1      }
4536          
4537          //# 181 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
4538          static  /*inline*/   void SchedulerBasicP__Scheduler__init(void)
4539          {
4540   1        /* atomic removed: atomic calls only */
4541   1        {
4542   2      
4543   2      
4544   2      
4545   2      
4546   2      
4547   2      
4548   2          memset((void *)SchedulerBasicP__m_next, SchedulerBasicP__NO_TASK, sizeof SchedulerBasicP__m_next);
4549   2          SchedulerBasicP__m_head = 0;
4550   2          SchedulerBasicP__m_tail = 0;
4551   2        }
4552   1      }
4553          
4554          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
4555          #define RealMainP__Scheduler__init(void) SchedulerBasicP__Scheduler__init()
4556          //# 129 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
4557          static  /*inline*/   error_t FlashIEEEP__Init__init(void)
4558          {
4559   1        /* atomic removed: atomic calls only */
4560   1        {
4561   2      
4562   2      
4563   2          FlashIEEEP__readFromFlash();
4564   2      
4565   2          FlashIEEEP__FlashIEEE__WriteToRegister();
4566   2          FlashIEEEP__FlashIEEE__WriteToAM();
4567   2      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 82  

4568   2          {
4569   3            unsigned char __nesc_temp = 
4570   3      //#line 140
4571   3            0;
4572   3      
4573   3      //#line 140
4574   3            return __nesc_temp;
4575   3          }
4576   2        }
4577   1      }
4578          
4579          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
4580          #define PlatformP__PlatformInit__init(void) FlashIEEEP__Init__init()
4581          //# 44 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
4582          static  /*inline*/  void uart0SetMode(void)
4583          {
4584   1        U0CSR |= 0x80u | 0x40u;
4585   1        U0UCR |= 0x2u | 0x80u;
4586   1      }
4587          
4588          //#line 34
4589          static  /*inline*/  void uart0PinMap(bool map)
4590          {
4591   1      
4592   1      
4593   1      
4594   1        PERCFG &= ~0x1u;
4595   1      
4596   1        P0_ALT |= 0x0Cu;
4597   1      }
4598          
4599          
4600          
4601          
4602          
4603          
4604          
4605          static  /*inline*/  void uart0Init(uint32_t baud)
4606          {
4607   1        uart0PinMap(TRUE);
4608   1        uart0SetBaud(baud);
4609   1        uart0SetMode();
4610   1      }
4611          
4612          //# 40 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
4613          static  /*inline*/  void ATOS_DEBUG_UART_INIT(void)
4614          {
4615   1        {
4616   2      //#line 42
4617   2          uart0Init(9600);
4618   2        }
4619   1      //#line 42
4620   1        ;
4621   1      }
4622          
4623          //# 52 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
4624          static  /*inline*/   error_t PlatformP__Init__init(void)
4625          //#line 52
4626          {
4627   1      
4628   1      
4629   1        if (PlatformP__clockSelect32k(0) != 0) {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 83  

4630   2            PlatformP__clockSetMainSrc(1);
4631   2            if (PlatformP__clockSelect32k(0) != 0) {
4632   3              }
4633   2          }
4634   1      
4635   1        PlatformP__clockSetMainSrc(0);
4636   1      
4637   1      
4638   1        ATOS_DEBUG_UART_INIT();
4639   1      
4640   1      
4641   1      
4642   1        {
4643   2      //#line 68
4644   2          {
4645   3      //#line 68
4646   3            P1_DIR |= 1 << 2;
4647   3      //#line 68
4648   3            P1_ALT &= ~(1 << 2);
4649   3          }
4650   2      //#line 68
4651   2          ;
4652   2      //#line 68
4653   2          {
4654   3      //#line 68
4655   3            P1_DIR |= 1 << 3;
4656   3      //#line 68
4657   3            P1_ALT &= ~(1 << 3);
4658   3          }
4659   2      //#line 68
4660   2          ;
4661   2        }
4662   1      //#line 68
4663   1        ;
4664   1      
4665   1        PlatformP__PlatformInit__init();
4666   1      
4667   1        return 0;
4668   1      }
4669          
4670          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
4671          #define RealMainP__PlatformInit__init(void) PlatformP__Init__init()
4672          //# 51 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
4673          static  /*inline*/   error_t HalFlashP__HalFlash__write(uint32_t destination, uint8_t *source, uint16_t le
             -ngth)
4674          {
4675   1        HalFlashP__HalCC2530FlashWrite(destination, source, length);
4676   1      
4677   1        return 0;
4678   1      }
4679          
4680          //# 5 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
4681          #define FlashIEEEP__HalFlash__write(arg_0x7ea32af8,arg_0x7ea32ca0,arg_0x7ea32e30) HalFlashP__HalFlash__wri
             -te(arg_0x7ea32af8, arg_0x7ea32ca0, arg_0x7ea32e30)
4682          
4683          
4684          #define FlashIEEEP__HalFlash__erase(arg_0x7ea30338) HalFlashP__HalFlash__erase(arg_0x7ea30338)
4685          //# 44 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
4686          static  /*inline*/   error_t HalFlashP__HalFlash__read(uint8_t *destination, uint32_t source, uint16_t len
             -gth)
4687          {
4688   1        HalFlashP__HalCC2530FlashRead(destination, source, length);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 84  

4689   1      
4690   1        return 0;
4691   1      }
4692          
4693          //# 3 "/opt/atos/tos/chips/cc2530/flash/HalFlash.nc"
4694          #define FlashIEEEP__HalFlash__read(arg_0x7ea32330,arg_0x7ea324c0,arg_0x7ea32650) HalFlashP__HalFlash__read
             -(arg_0x7ea32330, arg_0x7ea324c0, arg_0x7ea32650)
4695          //# 52 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
4696          static  /*inline*/  void FlashIEEEP__ieeeProtect(void)
4697          {
4698   1        /* atomic removed: atomic calls only */
4699   1        {
4700   2          uint8_t i;
4701   2          uint8_t tmp[0x4];
4702   2          uint8_t tmp_ieee[sizeof FlashIEEEP__m_ieee_flash];
4703   2      
4704   2      
4705   2      
4706   2      
4707   2          for (i = 0; i < sizeof FlashIEEEP__m_ieee_flash; ++i) 
4708   2            {
4709   3      
4710   3              if (FlashIEEEP__m_ieee_flash[i] != 0xFF) 
4711   3                {
4712   4                  break;
4713   4                }
4714   3            }
4715   2      
4716   2          if (i >= sizeof FlashIEEEP__m_ieee_flash) 
4717   2            {
4718   3      
4719   3              FlashIEEEP__HalFlash__read(FlashIEEEP__m_ieee_flash, 0xF800 + 0x4, sizeof FlashIEEEP__m_ieee_flash
             -);
4720   3            }
4721   2          else 
4722   2            {
4723   3      
4724   3              FlashIEEEP__HalFlash__read(tmp_ieee, 0xF800 + 0x4, sizeof tmp_ieee);
4725   3      
4726   3              for (i = 0; i < sizeof tmp_ieee; ++i) 
4727   3                {
4728   4      
4729   4      
4730   4                  if (tmp_ieee[i] != FlashIEEEP__m_ieee_flash[i]) 
4731   4                    {
4732   5                      break;
4733   5                    }
4734   4                }
4735   3      
4736   3              if (i < sizeof tmp_ieee) 
4737   3                {
4738   4      
4739   4                  FlashIEEEP__HalFlash__read(tmp, 0xF800, 0x4);
4740   4                  FlashIEEEP__HalFlash__erase(0xF800);
4741   4      
4742   4                  FlashIEEEP__HalFlash__write(0xF800, tmp, 0x4);
4743   4                  FlashIEEEP__HalFlash__write(0xF800 + 0x4, FlashIEEEP__m_ieee_flash, sizeof FlashIEEEP__m_ieee_
             -flash);
4744   4                }
4745   3            }
4746   2        }
4747   1      }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 85  

4748          
4749          //#line 228
4750          static  /*inline*/    void FlashIEEEP__ActiveMessageAddress__changed(void)
4751          {
4752   1      }
4753          
4754          //# 182 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4755          static  /*inline*/    void RfPacketP__ActiveMessageAddress__changed(void)
4756          {
4757   1        /* atomic removed: atomic calls only */
4758   1        {
4759   2          RfPacketP__m_address_saved = FALSE;
4760   2          RfPacketP__m_group_saved = FALSE;
4761   2        }
4762   1      }
4763          
4764          //# 58 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4765           /*inline*/  static   void ActiveMessageAddressC__ActiveMessageAddress__changed(void){
4766   1      //#line 58
4767   1        RfPacketP__ActiveMessageAddress__changed();
4768   1      //#line 58
4769   1        FlashIEEEP__ActiveMessageAddress__changed();
4770   1      //#line 58
4771   1      }
4772          //#line 58
4773          //# 70 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
4774          static  /*inline*/    void ActiveMessageAddressC__ActiveMessageAddress__setAddress(am_group_t myGroup, am_
             -addr_t myAddr)
4775          //#line 70
4776          {
4777   1        /* atomic removed: atomic calls only */
4778   1      //#line 71
4779   1        {
4780   2          ActiveMessageAddressC__addr = myAddr;
4781   2          ActiveMessageAddressC__group = myGroup;
4782   2        }
4783   1        ActiveMessageAddressC__ActiveMessageAddress__changed();
4784   1      }
4785          
4786          //# 43 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4787          #define FlashIEEEP__ActiveMessageAddress__setAddress(arg_0x7ea35030,arg_0x7ea351c0) ActiveMessageAddressC_
             -_ActiveMessageAddress__setAddress(arg_0x7ea35030, arg_0x7ea351c0)
4788          //# 54 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
4789          #define RealMainP__Scheduler__runNextTask(void) SchedulerBasicP__Scheduler__runNextTask()
4790          //# 276 "/usr/lib/ncc/nesc_nx.h"
4791          static   /*inline*/   uint16_t __nesc_ntoh_leuint16(const void *source)
4792          //#line 276
4793          {
4794   1        const uint8_t *base = source;
4795   1      
4796   1      //#line 278
4797   1        return ((uint16_t )base[1] << 8) | base[0];
4798   1      }
4799          
4800          //# 49 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4801          static  /*inline*/   am_addr_t RfPacketP__AMPacket__destination(message_t *amsg)
4802          {
4803   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest);
4804   1      }
4805          
4806          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4807          #define RfReliableMacReceiveP__1__AMPacket__destination(arg_0x7eb425b0) RfPacketP__AMPacket__destination(a
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 86  

             -rg_0x7eb425b0)
4808          //# 251 "/usr/lib/ncc/nesc_nx.h"
4809          static   /*inline*/   uint8_t __nesc_hton_leuint8(void *target, uint8_t value)
4810          //#line 251
4811          {
4812   1        uint8_t *base = target;
4813   1      
4814   1      //#line 253
4815   1        base[0] = value;
4816   1        return value;
4817   1      }
4818          
4819          //#line 240
4820          static   /*inline*/   uint8_t __nesc_hton_uint8(void *target, uint8_t value)
4821          //#line 240
4822          {
4823   1        uint8_t *base = target;
4824   1      
4825   1      //#line 242
4826   1        base[0] = value;
4827   1        return value;
4828   1      }
4829          
4830          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
4831          #define AMResourceP__2__AMResource__send(arg_0x7e609888,arg_0x7e609a38,arg_0x7e609bc0) AMResourceCenterP__
             -AMResource__send(AMResourceC__3__AM_RESOURCE_ID, arg_0x7e609888, arg_0x7e609a38, arg_0x7e609bc0)
4832          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
4833          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourc
             -eP*/AMResourceP__2__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
4834          {
4835   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
4836   2          {
4837   3            __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 2);
4838   3            __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 241);
4839   3          }
4840   2      //#line 17
4841   2          __nesc_atomic_end(__nesc_atomic); }
4842   1      
4843   1        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__
             -AMResource__send(addr, msg, len);
4844   1      }
4845          
4846          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
4847          #define RfReliableMacReceiveP__1__AMSendAck__send(arg_0x7eb61810,arg_0x7eb619c0,arg_0x7eb61b48) AMResource
             -P__2__AMSend__send(arg_0x7eb61810, arg_0x7eb619c0, arg_0x7eb61b48)
4848          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
4849          static  /*inline*/  void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__1__sendAck(message_t *msg)
4850          {
4851   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__1__AMSendAck__send(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__1__AMPacket__destination(msg), msg, sizeof(rf_ack_t )) != 0) 
4852   1          {
4853   2          }
4854   1      }
4855          
4856          
4857          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__sendAckTask__runTask(void)
4858          {
4859   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__1_
             -_sendAck(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 87  

             -_msg);
4860   1      }
4861          
4862          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4863          static  /*inline*/   void RfPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len)
4864          {
4865   1        __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length, len + (sizeof(rf_header_t ) 
             -- 1 + sizeof(uint16_t )));
4866   1      }
4867          
4868          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
4869          #define AMResourceCenterP__Packet__setPayloadLength(arg_0x7eb24538,arg_0x7eb246c0) RfPacketP__Packet__setP
             -ayloadLength(arg_0x7eb24538, arg_0x7eb246c0)
4870          //# 281 "/usr/lib/ncc/nesc_nx.h"
4871          static   /*inline*/   uint16_t __nesc_hton_leuint16(void *target, uint16_t value)
4872          //#line 281
4873          {
4874   1        uint8_t *base = target;
4875   1      
4876   1      //#line 283
4877   1        base[0] = value;
4878   1        base[1] = value >> 8;
4879   1        return value;
4880   1      }
4881          
4882          //# 91 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4883          static  /*inline*/   void RfPacketP__AMPacket__setGroup(message_t *amsg, am_group_t grp)
4884          {
4885   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->destpan, grp);
4886   1      }
4887          
4888          //# 176 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4889          #define AMResourceCenterP__AMPacket__setGroup(arg_0x7eb32010,arg_0x7eb321a0) RfPacketP__AMPacket__setGroup
             -(arg_0x7eb32010, arg_0x7eb321a0)
4890          //# 82 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
4891          static  /*inline*/    am_group_t ActiveMessageAddressC__ActiveMessageAddress__amGroup(void)
4892          //#line 82
4893          {
4894   1        am_group_t myGroup;
4895   1      
4896   1        /* atomic removed: atomic calls only */
4897   1      //#line 84
4898   1        myGroup = ActiveMessageAddressC__group;
4899   1        return myGroup;
4900   1      }
4901          
4902          //# 53 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4903          #define RfPacketP__ActiveMessageAddress__amGroup(void) ActiveMessageAddressC__ActiveMessageAddress__amGrou
             -p()
4904          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
4905          #define RfPacketP__WatchDog__resetCpu(void) WatchDogP__WatchDog__resetCpu()
4906          //# 96 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4907          static  /*inline*/   am_group_t RfPacketP__AMPacket__localGroup(void)
4908          {
4909   1        /* atomic removed: atomic calls only */
4910   1        {
4911   2          if (!RfPacketP__m_group_saved) 
4912   2            {
4913   3              RfPacketP__m_group = RfPacketP__ActiveMessageAddress__amGroup();
4914   3              RfPacketP__m_group_saved = TRUE;
4915   3            }
4916   2      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 88  

4917   2      
4918   2          if (RfPacketP__m_group != RfPacketP__ActiveMessageAddress__amGroup()) 
4919   2            {
4920   3      
4921   3      
4922   3              RfPacketP__WatchDog__resetCpu();
4923   3            }
4924   2        }
4925   1      
4926   1      
4927   1        return RfPacketP__ActiveMessageAddress__amGroup();
4928   1      }
4929          
4930          //# 184 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4931          #define AMResourceCenterP__AMPacket__localGroup(void) RfPacketP__AMPacket__localGroup()
4932          //# 59 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4933          static  /*inline*/   void RfPacketP__AMPacket__setDestination(message_t *amsg, am_addr_t addr)
4934          {
4935   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest, addr);
4936   1      }
4937          
4938          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4939          #define AMResourceCenterP__AMPacket__setDestination(arg_0x7eb40190,arg_0x7eb40320) RfPacketP__AMPacket__se
             -tDestination(arg_0x7eb40190, arg_0x7eb40320)
4940          //# 64 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
4941          static  /*inline*/   void RfPacketP__AMPacket__setSource(message_t *amsg, am_addr_t addr)
4942          {
4943   1        __nesc_hton_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->src, addr);
4944   1      }
4945          
4946          //# 110 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
4947          #define AMResourceCenterP__AMPacket__setSource(arg_0x7eb40a20,arg_0x7eb40bb0) RfPacketP__AMPacket__setSour
             -ce(arg_0x7eb40a20, arg_0x7eb40bb0)
4948          //#line 57
4949          #define AMResourceCenterP__AMPacket__address(void) RfPacketP__AMPacket__address()
4950          //# 61 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
4951          static  /*inline*/    am_addr_t ActiveMessageAddressC__ActiveMessageAddress__amAddress(void)
4952          //#line 61
4953          {
4954   1        return ActiveMessageAddressC__amAddress();
4955   1      }
4956          
4957          //# 48 "/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc"
4958          #define RfPacketP__ActiveMessageAddress__amAddress(void) ActiveMessageAddressC__ActiveMessageAddress__amAd
             -dress()
4959          //# 235 "/usr/lib/ncc/nesc_nx.h"
4960          static   /*inline*/   uint8_t __nesc_ntoh_uint8(const void *source)
4961          //#line 235
4962          {
4963   1        const uint8_t *base = source;
4964   1      
4965   1      //#line 237
4966   1        return base[0];
4967   1      }
4968          
4969          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
4970          #define RfMacBaseSendP__0__sendNext__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseSendP__0
             -__sendNext)
4971          //# 31 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
4972          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize(vo
             -id)
4973          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 89  

4974   1        /* atomic removed: atomic calls only */
4975   1        {
4976   2          {
4977   3            unsigned char __nesc_temp = 
4978   3      //#line 35
4979   3            4;
4980   3      
4981   3      //#line 35
4982   3            return __nesc_temp;
4983   3          }
4984   2        }
4985   1      }
4986          
4987          //#line 23
4988          static  /*inline*/   uint8_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size(void)
4989          {
4990   1        /* atomic removed: atomic calls only */
4991   1        {
4992   2          {
4993   3            unsigned char __nesc_temp = 
4994   3      //#line 27
4995   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size;
4996   3      
4997   3      //#line 27
4998   3            return __nesc_temp;
4999   3          }
5000   2        }
5001   1      }
5002          
5003          //#line 63
5004          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__enqueue(/*
             -AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t newVal)
5005          {
5006   1        /* atomic removed: atomic calls only */
5007   1        {
5008   2          if (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size() < /*AMResourceCenterC.Rf
             -MacBaseSendC.QueueExC*/QueueExC__0__QueueEx__maxSize()) 
5009   2            {
5010   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[/*AMResourceCenterC.RfMacBaseSendC
             -.QueueExC*/QueueExC__0__tail] = newVal;
5011   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail++;
5012   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail %= 4;
5013   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size++;
5014   3              {
5015   4                unsigned char __nesc_temp = 
5016   4      //#line 73
5017   4                0;
5018   4      
5019   4      //#line 73
5020   4                return __nesc_temp;
5021   4              }
5022   3            }
5023   2          else {
5024   3              {
5025   4                unsigned char __nesc_temp = 
5026   4      //#line 77
5027   4                FAIL;
5028   4      
5029   4      //#line 77
5030   4                return __nesc_temp;
5031   4              }
5032   3            }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 90  

5033   2        }
5034   1      }
5035          
5036          //# 49 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
5037          #define RfMacBaseSendP__0__SendQueue__enqueue(arg_0x7e5c8930) QueueExC__0__QueueEx__enqueue(arg_0x7e5c8930
             -)
5038          //#line 60
5039          #define RfMacBaseSendP__0__SendQueue__element(arg_0x7e5c8ea8) QueueExC__0__QueueEx__element(arg_0x7e5c8ea8
             -)
5040          //#line 17
5041          #define RfMacBaseSendP__0__SendQueue__size(void) QueueExC__0__QueueEx__size()
5042          //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
5043          static  /*inline*/  int /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessa
             -ge(uint8_t resource_id)
5044          {
5045   1        /* atomic removed: atomic calls only */
5046   1        {
5047   2          uint8_t i;
5048   2          uint8_t size = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__size()
             -;
5049   2      
5050   2      //#line 80
5051   2          for (i = 0; i < size; ++i) 
5052   2            {
5053   3              message_t *msg = (message_t *)/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0
             -__SendQueue__element(i);
5054   3      
5055   3      //#line 83
5056   3              if (msg != (void *)0 && __nesc_ntoh_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->re
             -source_id) == resource_id) 
5057   3                {
5058   4                  {
5059   5                    int __nesc_temp = 
5060   5      //#line 85
5061   5                    i;
5062   5      
5063   5      //#line 85
5064   5                    return __nesc_temp;
5065   5                  }
5066   4                }
5067   3            }
5068   2          {
5069   3            int __nesc_temp = 
5070   3      //#line 89
5071   3            -1;
5072   3      
5073   3      //#line 89
5074   3            return __nesc_temp;
5075   3          }
5076   2        }
5077   1      }
5078          
5079          //#line 93
5080          static  /*inline*/  error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueM
             -essage(message_t *msg)
5081          {
5082   1        /* atomic removed: atomic calls only */
5083   1        {
5084   2          if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__indexOfMessage(__nesc_ntoh_u
             -int8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id)) >= 0) 
5085   2            {
5086   3              {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 91  

5087   4                unsigned char __nesc_temp = 
5088   4      //#line 99
5089   4                ERR_MAC_SEND_RESOURCE_EXISTS;
5090   4      
5091   4      //#line 99
5092   4                return __nesc_temp;
5093   4              }
5094   3            }
5095   2      
5096   2      
5097   2          if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__enqueue(msg) != 0
             -) 
5098   2            {
5099   3              {
5100   4                unsigned char __nesc_temp = 
5101   4      //#line 106
5102   4                ERR_MAC_SEND_RESOURCE_FULL;
5103   4      
5104   4      //#line 106
5105   4                return __nesc_temp;
5106   4              }
5107   3            }
5108   2      
5109   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
5110   2      
5111   2          {
5112   3            unsigned char __nesc_temp = 
5113   3      //#line 112
5114   3            0;
5115   3      
5116   3      //#line 112
5117   3            return __nesc_temp;
5118   3          }
5119   2        }
5120   1      }
5121          
5122          //#line 139
5123          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSen
             -d__send(message_t *msg, uint8_t len)
5124          {
5125   1        /* atomic removed: atomic calls only */
5126   1      
5127   1        {
5128   2      
5129   2      
5130   2      
5131   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->dsn, ++/*AMResourceCenterC.RfMacBa
             -seSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn);
5132   2      
5133   2      
5134   2      
5135   2      
5136   2      
5137   2          {
5138   3            unsigned char __nesc_temp = 
5139   3      //#line 153
5140   3            /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__enqueueMessage(msg);
5141   3      
5142   3      //#line 153
5143   3            return __nesc_temp;
5144   3          }
5145   2        }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 92  

5146   1      }
5147          
5148          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5149          #define AMResourceCenterP__CoreSend__send(arg_0x7e5e9998,arg_0x7e5e9b20) RfMacBaseSendP__0__CoreSend__send
             -(arg_0x7e5e9998, arg_0x7e5e9b20)
5150          //# 108 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
5151          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id)
5152          {
5153   1      
5154   1      
5155   1      
5156   1      
5157   1        uint8_t i = SchedulerBasicP__m_head % SchedulerBasicP__NUM_TASKS;
5158   1      
5159   1        while (i != SchedulerBasicP__m_tail) 
5160   1          {
5161   2            if (SchedulerBasicP__m_next[i] == id) 
5162   2              {
5163   3                return TRUE;
5164   3              }
5165   2      
5166   2            i = (i + 1) % SchedulerBasicP__NUM_TASKS;
5167   2            SchedulerBasicP__m_tail = SchedulerBasicP__m_tail % SchedulerBasicP__NUM_TASKS;
5168   2          }
5169   1      
5170   1        return FALSE;
5171   1      }
5172          
5173          
5174          
5175          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id)
5176          {
5177   1        /* atomic removed: atomic calls only */
5178   1      //#line 156
5179   1        {
5180   2          id = id % SchedulerBasicP__NUM_TASKS;
5181   2      
5182   2          if (!SchedulerBasicP__isWaiting(id)) 
5183   2            {
5184   3              if ((SchedulerBasicP__m_tail + 1) % SchedulerBasicP__NUM_TASKS == SchedulerBasicP__m_head) 
5185   3                {
5186   4      
5187   4                  {
5188   5                    unsigned char __nesc_temp = 
5189   5      //#line 164
5190   5                    FALSE;
5191   5      
5192   5      //#line 164
5193   5                    return __nesc_temp;
5194   5                  }
5195   4                }
5196   3              SchedulerBasicP__m_tail = SchedulerBasicP__m_tail % SchedulerBasicP__NUM_TASKS;
5197   3              SchedulerBasicP__m_next[SchedulerBasicP__m_tail] = id;
5198   3              SchedulerBasicP__m_tail = (SchedulerBasicP__m_tail + 1) % SchedulerBasicP__NUM_TASKS;
5199   3              {
5200   4                unsigned char __nesc_temp = 
5201   4      //#line 170
5202   4                TRUE;
5203   4      
5204   4      //#line 170
5205   4                return __nesc_temp;
5206   4              }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 93  

5207   3            }
5208   2          else {
5209   3              {
5210   4                unsigned char __nesc_temp = 
5211   4      //#line 174
5212   4                FALSE;
5213   4      
5214   4      //#line 174
5215   4                return __nesc_temp;
5216   4              }
5217   3            }
5218   2        }
5219   1      }
5220          
5221          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5222          #define RfReliableMacRetrySendP__1__resendTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfReli
             -ableMacRetrySendP__1__resendTask)
5223          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
5224          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__SubAMSend__sendDone(message_t *msg, error_t error)
5225          {
5226   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySend
             -P__1__m_sending) 
5227   1          {
5228   2            if (error == 0) 
5229   2              {
5230   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__signalDone(msg, error);
5231   3              }
5232   2            else 
5233   2              {
5234   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__resendTask__postTask();
5235   3              }
5236   2          }
5237   1      }
5238          
5239          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5240          #define RfReliableMacSendP__1__AMSend__sendDone(arg_0x7eb60eb8,arg_0x7eb55068) RfReliableMacRetrySendP__1_
             -_SubAMSend__sendDone(arg_0x7eb60eb8, arg_0x7eb55068)
5241          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5242          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__signalDoneTask__runTask(void)
5243          {
5244   1        message_t *msg;
5245   1        error_t result;
5246   1      
5247   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5248   2          {
5249   3            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__1__m_sending) 
5250   3              {
5251   4                {
5252   5      //#line 40
5253   5                  __nesc_atomic_end(__nesc_atomic); 
5254   5      //#line 40
5255   5                  return;
5256   5                }
5257   4              }
5258   3            msg = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg;
5259   3            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 94  

             -/RfReliableMacSendP__1__m_result;
5260   3          }
5261   2      //#line 45
5262   2          __nesc_atomic_end(__nesc_atomic); }
5263   1      
5264   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMa
             -cSendP__1__AMSend__sendDone(msg, result);
5265   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5266   2      //#line 48
5267   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_sending = FALSE;
5268   2      //#line 48
5269   2          __nesc_atomic_end(__nesc_atomic); }
5270   1      }
5271          
5272          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5273          #define AtosNetStdP__sendDoneCheck__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__sendD
             -oneCheck)
5274          //# 368 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5275          static  /*inline*/   void AtosNetStdP__AMSend__sendDone(message_t *msg, error_t error)
5276          {
5277   1        if (error != 0) 
5278   1          {
5279   2            AtosNetStdP__sendDoneCheck__postTask();
5280   2          }
5281   1      }
5282          
5283          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5284          #define RfReliableMacRetrySendP__1__AMSend__sendDone(arg_0x7eb60eb8,arg_0x7eb55068) AtosNetStdP__AMSend__s
             -endDone(arg_0x7eb60eb8, arg_0x7eb55068)
5285          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
5286          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__1__resendTask__runTask(void)
5287          {
5288   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5289   2          {
5290   3            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending) 
5291   3              {
5292   4                {
5293   5      //#line 54
5294   5                  __nesc_atomic_end(__nesc_atomic); 
5295   5      //#line 54
5296   5                  return;
5297   5                }
5298   4              }
5299   3            if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__m_retry_times++ < 20) 
5300   3              {
5301   4                if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__doSend(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__m_msg) != 0) 
5302   4                  {
5303   5                    ;
5304   5                    /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacR
             -etrySendP__1__resendTask__postTask();
5305   5                  }
5306   4              }
5307   3            else 
5308   3              {
5309   4      
5310   4                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 95  

             -SendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__m_msg, ERR_MAC_RETRY_MAX);
5311   4              }
5312   3          }
5313   2      //#line 70
5314   2          __nesc_atomic_end(__nesc_atomic); }
5315   1      }
5316          
5317          //# 257 "/usr/lib/ncc/nesc_nx.h"
5318          static   /*inline*/   int8_t __nesc_hton_int8(void *target, int8_t value)
5319          //#line 257
5320          {
5321   1      //#line 257
5322   1        __nesc_hton_uint8(target, value);
5323   1      //#line 257
5324   1        return value;
5325   1      }
5326          
5327          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5328          #define RfReliableMacSendP__1__TimeoutTimer__startOneShot(arg_0x7e9a6d58) VirtualizeTimerC__0__Timer__star
             -tOneShot(4U, arg_0x7e9a6d58)
5329          //# 246 "/usr/lib/ncc/nesc_nx.h"
5330          static   /*inline*/   uint8_t __nesc_ntoh_leuint8(const void *source)
5331          //#line 246
5332          {
5333   1        const uint8_t *base = source;
5334   1      
5335   1      //#line 248
5336   1        return base[0];
5337   1      }
5338          
5339          //# 124 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
5340          static  /*inline*/   uint8_t RfPacketP__Packet__payloadLength(message_t *msg)
5341          {
5342   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length) - (sizeof(rf_header_t
             - ) - 1 + sizeof(uint16_t ));
5343   1      }
5344          
5345          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5346          #define RfReliableMacSendP__1__SubPacket__payloadLength(arg_0x7eb25e90) RfPacketP__Packet__payloadLength(a
             -rg_0x7eb25e90)
5347          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
5348          #define AMResourceP__1__AMResource__send(arg_0x7e609888,arg_0x7e609a38,arg_0x7e609bc0) AMResourceCenterP__
             -AMResource__send(AMResourceC__2__AM_RESOURCE_ID, arg_0x7e609888, arg_0x7e609a38, arg_0x7e609bc0)
5349          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5350          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMRes
             -ourceC.AMResourceP*/AMResourceP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5351          {
5352   1        /* atomic removed: atomic calls only */
5353   1        {
5354   2          __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 1);
5355   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 240U);
5356   2        }
5357   1      
5358   1        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/
             -AMResourceP__1__AMResource__send(addr, msg, len);
5359   1      }
5360          
5361          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5362          #define RfReliableMacSendP__1__SubAMSend__send(arg_0x7eb61810,arg_0x7eb619c0,arg_0x7eb61b48) AMResourceP__
             -1__AMSend__send(arg_0x7eb61810, arg_0x7eb619c0, arg_0x7eb61b48)
5363          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 96  

5364          #define RfReliableMacPacketP__SubPacket__getPayload(arg_0x7eb23358,arg_0x7eb23500) RfPacketP__Packet__getP
             -ayload(arg_0x7eb23358, arg_0x7eb23500)
5365          //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5366          static  /*inline*/   void *RfReliableMacPacketP__PacketEx__getPacketHeader(message_t *msg)
5367          {
5368   1        return RfReliableMacPacketP__SubPacket__getPayload(msg, (void *)0);
5369   1      }
5370          
5371          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5372          #define RfReliableMacSendP__1__PacketEx__getPacketHeader(arg_0x7e6b4120) RfReliableMacPacketP__PacketEx__g
             -etPacketHeader(arg_0x7e6b4120)
5373          //# 89 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5374          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5375          {
5376   1        error_t result;
5377   1      
5378   1        /* atomic removed: atomic calls only */
5379   1        {
5380   2          rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfR
             -eliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(msg);
5381   2          rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
5382   2      
5383   2      
5384   2      
5385   2          if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending) 
5386   2            {
5387   3              {
5388   4                unsigned char __nesc_temp = 
5389   4      //#line 102
5390   4                FAIL;
5391   4      
5392   4      //#line 102
5393   4                return __nesc_temp;
5394   4              }
5395   3            }
5396   2          header->ack_req = addr != 0xFFFF;
5397   2      
5398   2          __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
5399   2      
5400   2          result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__SubAMSend__send(addr, msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC
             -.RfReliableMacSendP*/RfReliableMacSendP__1__SubPacket__payloadLength(msg));
5401   2      
5402   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__TimeoutTimer__startOneShot(10000);
5403   2      
5404   2          if (result == 0) 
5405   2            {
5406   3              /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_msg = msg;
5407   3              /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__1__m_sending = TRUE;
5408   3            }
5409   2      
5410   2          {
5411   3            unsigned char __nesc_temp = 
5412   3      //#line 119
5413   3            result;
5414   3      
5415   3      //#line 119
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 97  

5416   3            return __nesc_temp;
5417   3          }
5418   2        }
5419   1      }
5420          
5421          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5422          #define RfReliableMacRetrySendP__1__SubAMSend__send(arg_0x7eb61810,arg_0x7eb619c0,arg_0x7eb61b48) RfReliab
             -leMacSendP__1__AMSend__send(arg_0x7eb61810, arg_0x7eb619c0, arg_0x7eb61b48)
5423          //# 46 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
5424          static  /*inline*/  void ATOS_DEBUG_UART_PUTC(char c)
5425          {
5426   1        if (c == '\n') 
5427   1          {
5428   2            {
5429   3      //#line 50
5430   3              uart0PutChar('\r');
5431   3            }
5432   2      //#line 50
5433   2            ;
5434   2          }
5435   1        {
5436   2      //#line 52
5437   2          uart0PutChar(c);
5438   2        }
5439   1      //#line 52
5440   1        ;
5441   1      }
5442          
5443          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5444          #define VirtualizeTimerC__0__updateFromTimer__postTask(void) SchedulerBasicP__TaskBasic__postTask(Virtuali
             -zeTimerC__0__updateFromTimer)
5445          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5446          #define TransformCounterC__0__CounterFrom__get(void) HplCC2530Timer1P__0__Counter__get()
5447          //# 327 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
5448          static  /*inline*/    bool /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__isOverflowPe
             -nding(void)
5449          {
5450   1        /* atomic removed: atomic calls only */
5451   1      //#line 329
5452   1        {
5453   2          unsigned char __nesc_temp = 
5454   2      //#line 329
5455   2          T1STAT & CC2530_T1_OVFIF;
5456   2      
5457   2      //#line 329
5458   2          return __nesc_temp;
5459   2        }
5460   1      }
5461          
5462          //# 60 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5463          #define TransformCounterC__0__CounterFrom__isOverflowPending(void) HplCC2530Timer1P__0__Counter__isOverflo
             -wPending()
5464          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5465          #define RfReliableMacRetrySendP__1__AMPacket__destination(arg_0x7eb425b0) RfPacketP__AMPacket__destination
             -(arg_0x7eb425b0)
5466          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5467          #define RfReliableMacPacketP__SubPacket__payloadLength(arg_0x7eb25e90) RfPacketP__Packet__payloadLength(ar
             -g_0x7eb25e90)
5468          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5469          static  /*inline*/   uint8_t RfReliableMacPacketP__Packet__payloadLength(message_t *msg)
5470          {
5471   1        return RfReliableMacPacketP__SubPacket__payloadLength(msg) - sizeof(rf_rmac_header_t );
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 98  

5472   1      }
5473          
5474          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5475          #define RfReliableMacRetrySendP__1__Packet__payloadLength(arg_0x7eb25e90) RfReliableMacPacketP__Packet__pa
             -yloadLength(arg_0x7eb25e90)
5476          //# 57 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5477          #define AtosNetStdP__AMPacket__address(void) RfPacketP__AMPacket__address()
5478          //# 128 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5479          static  /*inline*/  void AtosNetStdP__traceEnd(message_t *msg, anstd_trace_t *trace, int index)
5480          {
5481   1        trace->_data_type = ANSTD_DATA_TYPE_TRACE_ACK;
5482   1        AtosNetStdP__traceBackward(msg, (anstd_trace_ack_t *)trace, index);
5483   1      }
5484          
5485          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5486          #define AtosNetStdP__Packet__getPayload(arg_0x7eb23358,arg_0x7eb23500) RfReliableMacPacketP__Packet__getPa
             -yload(arg_0x7eb23358, arg_0x7eb23500)
5487          //# 350 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5488          static  /*inline*/   void AtosNetStdP__sendDoneCheck__runTask(void)
5489          {
5490   1        anstd_header_t *header = (anstd_header_t *)AtosNetStdP__Packet__getPayload(&AtosNetStdP__m_send_msg, (vo
             -id *)0);
5491   1      
5492   1        if (header->_data_type == ANSTD_DATA_TYPE_TRACE) 
5493   1          {
5494   2            anstd_trace_t *trace = (anstd_trace_t *)header;
5495   2            int index = AtosNetStdP__indexOfTraceItem(trace, AtosNetStdP__AMPacket__address());
5496   2      
5497   2      //#line 358
5498   2            AtosNetStdP__traceEnd(&AtosNetStdP__m_send_msg, trace, index);
5499   2          }
5500   1        else {
5501   2      //#line 360
5502   2          if (header->_data_type == ANSTD_DATA_TYPE_TRACE_ACK) 
5503   2            {
5504   3              anstd_trace_ack_t *trace_ack = (anstd_trace_ack_t *)header;
5505   3              int index = AtosNetStdP__indexOfTraceItem(trace_ack, AtosNetStdP__AMPacket__address());
5506   3      
5507   3      //#line 364
5508   3              AtosNetStdP__traceBackward(&AtosNetStdP__m_send_msg, trace_ack, index);
5509   3            }
5510   2          }
5511   1      }
5512          
5513          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5514          #define RfReliableMacRetrySendP__1__PacketEx__getPacketHeader(arg_0x7e6b4120) RfReliableMacPacketP__Packet
             -Ex__getPacketHeader(arg_0x7e6b4120)
5515          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5516          #define RfReliableMacRetrySendP__1__AMPacket__setDestination(arg_0x7eb40190,arg_0x7eb40320) RfPacketP__AMP
             -acket__setDestination(arg_0x7eb40190, arg_0x7eb40320)
5517          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5518          #define RfReliableMacPacketP__SubPacket__setPayloadLength(arg_0x7eb24538,arg_0x7eb246c0) RfPacketP__Packet
             -__setPayloadLength(arg_0x7eb24538, arg_0x7eb246c0)
5519          //# 25 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
5520          static  /*inline*/   void RfReliableMacPacketP__Packet__setPayloadLength(message_t *msg, uint8_t len)
5521          {
5522   1        RfReliableMacPacketP__SubPacket__setPayloadLength(msg, len + sizeof(rf_rmac_header_t ));
5523   1      }
5524          
5525          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
5526          #define RfReliableMacRetrySendP__1__Packet__setPayloadLength(arg_0x7eb24538,arg_0x7eb246c0) RfReliableMacP
             -acketP__Packet__setPayloadLength(arg_0x7eb24538, arg_0x7eb246c0)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 99  

5527          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5528          #define AtosNetStdP__AMSend__send(arg_0x7eb61810,arg_0x7eb619c0,arg_0x7eb61b48) RfReliableMacRetrySendP__1
             -__AMSend__send(arg_0x7eb61810, arg_0x7eb619c0, arg_0x7eb61b48)
5529          //# 378 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5530          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__beforeNodeStatusUp(anstd_node_status_t *statu
             -s)
5531          {
5532   1      }
5533          
5534          //# 12 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
5535          #define AtosNetStdP__AtosNetStd__beforeNodeStatusUp(arg_0x7e2fd1e0) AtosNetStdP__AtosNetStd__default__befo
             -reNodeStatusUp(arg_0x7e2fd1e0)
5536          //# 161 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
5537          static  /*inline*/   void FlashIEEEP__FlashIEEE__GetIEEE(uint8_t *ieee)
5538          {
5539   1        memcpy(ieee, FlashIEEEP__m_ieee, sizeof FlashIEEEP__m_ieee);
5540   1      }
5541          
5542          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
5543          #define AtosNetStdP__FlashIEEE__GetIEEE(arg_0x7ea50068) FlashIEEEP__FlashIEEE__GetIEEE(arg_0x7ea50068)
5544          //# 143 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
5545          static  /*inline*/   uint8_t RfConfigP__RfConfig__getChannel(void)
5546          {
5547   1        return RfConfigP__m_channel;
5548   1      }
5549          
5550          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
5551          #define AtosNetStdP__RfConfig__getChannel(void) RfConfigP__RfConfig__getChannel()
5552          //# 241 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5553          static  /*inline*/   error_t AtosNetStdP__AtosNetStd__sendNodeStatusUp(uint16_t address)
5554          {
5555   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5556   2          {
5557   3            anstd_node_status_t *status = (anstd_node_status_t *)AtosNetStdP__Packet__getPayload(&AtosNetStdP__m
             -_send_msg, (void *)0);
5558   3      
5559   3      //#line 246
5560   3            status->_data_type = ANSTD_DATA_TYPE_NODE_STATUS_UP;
5561   3            status->device_type = ATP_STD_EQUIPMENT_TYPE_NODE;
5562   3            status->industry_code = 0x00;
5563   3            status->application_code = 0x00;
5564   3      
5565   3            status->rf_channel = AtosNetStdP__RfConfig__getChannel();
5566   3      
5567   3            AtosNetStdP__FlashIEEE__GetIEEE(status->ieee);
5568   3      
5569   3            status->node_status = AtosNetStdP__m_node_status++;
5570   3      
5571   3            AtosNetStdP__AtosNetStd__beforeNodeStatusUp(status);
5572   3      
5573   3            if (AtosNetStdP__m_node_status == 0) 
5574   3              {
5575   4                AtosNetStdP__m_node_status = 1;
5576   4              }
5577   3      
5578   3            {
5579   4              unsigned char __nesc_temp = 
5580   4      //#line 264
5581   4              AtosNetStdP__AMSend__send(address, &AtosNetStdP__m_send_msg, sizeof(anstd_node_status_t ));
5582   4      
5583   4              {
5584   5      //#line 264
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 100 

5585   5                __nesc_atomic_end(__nesc_atomic); 
5586   5      //#line 264
5587   5                return __nesc_temp;
5588   5              }
5589   4            }
5590   3          }
5591   2      //#line 267
5592   2          __nesc_atomic_end(__nesc_atomic); }
5593   1      }
5594          
5595          //#line 59
5596          static  /*inline*/   void AtosNetStdP__nodeStatusUpTask__runTask(void)
5597          {
5598   1        AtosNetStdP__AtosNetStd__sendNodeStatusUp(AtosNetStdP__m_ack_addr);
5599   1      }
5600          
5601          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5602          #define TransformAlarmC__0__Counter__get(void) TransformCounterC__0__Counter__get()
5603          //# 76 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
5604          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void)
5605          {
5606   1        /* atomic removed: atomic calls only */
5607   1      //#line 78
5608   1        {
5609   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type __nesc_temp = 
5610   2      //#line 78
5611   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__get();
5612   2      
5613   2      //#line 78
5614   2          return __nesc_temp;
5615   2        }
5616   1      }
5617          
5618          //# 98 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
5619          #define AlarmToTimerC__0__Alarm__getNow(void) TransformAlarmC__0__Alarm__getNow()
5620          //# 118 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
5621          static  /*inline*/   uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void)
5622          {
5623   1        /* atomic removed: atomic calls only */
5624   1      //#line 120
5625   1        {
5626   2          unsigned long __nesc_temp = 
5627   2      //#line 120
5628   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__getNow();
5629   2      
5630   2      //#line 120
5631   2          return __nesc_temp;
5632   2        }
5633   1      }
5634          
5635          //# 125 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5636          #define VirtualizeTimerC__0__TimerFrom__getNow(void) AlarmToTimerC__0__Timer__getNow()
5637          //# 174 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
5638          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(uin
             -t8_t num, uint32_t dt)
5639          {
5640   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5641   2          {
5642   3            {
5643   4      //#line 178
5644   4              {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 101 

5645   5      //#line 178
5646   5                if (1 >= uart_debug_level) {
5647   6      //#line 178
5648   6                    {
5649   7      //#line 178
5650   7                      sprintf(uart_debug_buf, "VirtualizeTimerC.Timer.startPeriodic dt=%ld\n", dt);
5651   7                    }
5652   6      //#line 178
5653   6                    ATOS_DEBUG_UART_PRINT();
5654   6                  }
5655   5              }
5656   4            }
5657   3      //#line 178
5658   3            ;
5659   3            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(num, /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__TimerFrom__getNow(), dt, FALSE);
5660   3          }
5661   2      //#line 180
5662   2          __nesc_atomic_end(__nesc_atomic); }
5663   1      }
5664          
5665          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5666          #define AtosNetStdP__RebootTimer__startPeriodic(arg_0x7e9a6788) VirtualizeTimerC__0__Timer__startPeriodic(
             -5U, arg_0x7e9a6788)
5667          //# 54 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
5668          static  /*inline*/   void AtosNetStdP__rebootTask__runTask(void)
5669          {
5670   1        AtosNetStdP__RebootTimer__startPeriodic(500);
5671   1      }
5672          
5673          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
5674          #define RfReliableMacReceiveP__0__AMPacket__destination(arg_0x7eb425b0) RfPacketP__AMPacket__destination(a
             -rg_0x7eb425b0)
5675          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
5676          #define AMResourceP__3__AMResource__send(arg_0x7e609888,arg_0x7e609a38,arg_0x7e609bc0) AMResourceCenterP__
             -AMResource__send(AMResourceC__1__AM_RESOURCE_ID, arg_0x7e609888, arg_0x7e609a38, arg_0x7e609bc0)
5677          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5678          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*
             -/AMResourceP__3__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
5679          {
5680   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5681   2          {
5682   3            __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 3);
5683   3            __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 124);
5684   3          }
5685   2      //#line 17
5686   2          __nesc_atomic_end(__nesc_atomic); }
5687   1      
5688   1        return /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3__AMR
             -esource__send(addr, msg, len);
5689   1      }
5690          
5691          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5692          #define RfReliableMacReceiveP__0__AMSendAck__send(arg_0x7eb61810,arg_0x7eb619c0,arg_0x7eb61b48) AMResource
             -P__3__AMSend__send(arg_0x7eb61810, arg_0x7eb619c0, arg_0x7eb61b48)
5693          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5694          static  /*inline*/  void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRel
             -iableMacReceiveP__0__sendAck(message_t *msg)
5695          {
5696   1        if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0
             -__AMSendAck__send(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0__
             -AMPacket__destination(msg), msg, sizeof(rf_ack_t )) != 0) 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 102 

5697   1          {
5698   2          }
5699   1      }
5700          
5701          
5702          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRe
             -liableMacReceiveP__0__sendAckTask__runTask(void)
5703          {
5704   1        /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0__se
             -ndAck(&/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0__m_ack_msg);
5705   1      }
5706          
5707          //# 91 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
5708          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txGo(void)
5709          {
5710   1        uint32_t i = 0;
5711   1        error_t result = FAIL;
5712   1      
5713   1      
5714   1        RFST = 0xE9;
5715   1      
5716   1      
5717   1        while (i++ < 15000) 
5718   1          {
5719   2            if (RFIRQF1 & (1 << 1)) 
5720   2              {
5721   3                result = 0;
5722   3                break;
5723   3              }
5724   2          }
5725   1      
5726   1      
5727   1        do {
5728   2      //#line 110
5729   2            S1CON = 0x00;
5730   2      //#line 110
5731   2            RFIRQF1 = ~(1 << 1);
5732   2          }
5733   1        while (
5734   1      //#line 110
5735   1        110 == -1);
5736   1      
5737   1        return result;
5738   1      }
5739          
5740          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
5741          #define RfMacBaseCsmaP__RfHardwareTx__txGo(void) RfHardwareTxP__RfHardwareTx__txGo()
5742          //# 105 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5743          static  /*inline*/   void RfMacBaseCsmaP__doGo__runTask(void)
5744          {
5745   1        error_t result = RfMacBaseCsmaP__RfHardwareTx__txGo();
5746   1      
5747   1        if (RfMacBaseCsmaP__m_this_delay > 90) 
5748   1          {
5749   2            RfMacBaseCsmaP__m_congestion_delay = 90;
5750   2          }
5751   1        else 
5752   1          {
5753   2            if (RfMacBaseCsmaP__m_this_delay > RfMacBaseCsmaP__m_congestion_delay) 
5754   2              {
5755   3                RfMacBaseCsmaP__m_congestion_delay = (RfMacBaseCsmaP__m_this_delay + RfMacBaseCsmaP__m_congestio
             -n_delay) / 2;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 103 

5756   3              }
5757   2            else 
5758   2              {
5759   3                RfMacBaseCsmaP__m_congestion_delay = RfMacBaseCsmaP__m_this_delay;
5760   3              }
5761   2          }
5762   1      
5763   1        if (result != 0) 
5764   1          {
5765   2            RfMacBaseCsmaP__signalDone(result);
5766   2          }
5767   1        else 
5768   1          {
5769   2            RfMacBaseCsmaP__signalDone(0);
5770   2          }
5771   1      }
5772          
5773          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5774          #define RfMacBaseCsmaP__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseCsmaP
             -__signalDoneTask)
5775          //# 70 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
5776          static  /*inline*/   void AMResourceCenterP__CoreSend__sendDone(message_t *msg, error_t result)
5777          {
5778   1        AMResourceCenterP__AMResource__sendDone(__nesc_ntoh_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta
             -_data)->resource_id), msg, result);
5779   1      }
5780          
5781          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5782          #define RfMacBaseSendP__0__CoreSend__sendDone(arg_0x7e5e84c0,arg_0x7e5e8648) AMResourceCenterP__CoreSend__
             -sendDone(arg_0x7e5e84c0, arg_0x7e5e8648)
5783          //# 117 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
5784          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSen
             -d__sendDone(message_t *msg, error_t result)
5785          {
5786   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5787   2          {
5788   3            if (!/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending) {
5789   4              {
5790   5      //#line 121
5791   5                __nesc_atomic_end(__nesc_atomic); 
5792   5      //#line 121
5793   5                return;
5794   5              }
5795   4              }
5796   3          }
5797   2      //#line 124
5798   2          __nesc_atomic_end(__nesc_atomic); }
5799   1        /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(msg, result);
5800   1      
5801   1        if (result != 0) 
5802   1          {
5803   2            {
5804   3      //#line 129
5805   3              {
5806   4      //#line 129
5807   4                if (100 >= uart_debug_level) {
5808   5      //#line 129
5809   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5810   6      //#line 129
5811   6                      {
5812   7      //#line 129
5813   7                        sprintf(uart_debug_buf, "RfMacBaseSendP.SubCoreSend.sendDone result%d\n", (int )result);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 104 

5814   7                      }
5815   6      //#line 130
5816   6                      __nesc_atomic_end(__nesc_atomic); }
5817   5      //#line 129
5818   5                    ATOS_DEBUG_UART_PRINT();
5819   5                  }
5820   4              }
5821   3            }
5822   2      //#line 129
5823   2            ;
5824   2          }
5825   1      
5826   1      
5827   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5828   2      //#line 133
5829   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
5830   2      //#line 133
5831   2          __nesc_atomic_end(__nesc_atomic); }
5832   1        /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
5833   1      }
5834          
5835          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
5836          #define RfMacBaseCsmaP__CoreSend__sendDone(arg_0x7e5e84c0,arg_0x7e5e8648) RfMacBaseSendP__0__SubCoreSend__
             -sendDone(arg_0x7e5e84c0, arg_0x7e5e8648)
5837          //# 53 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5838          static  /*inline*/   void RfMacBaseCsmaP__signalDoneTask__runTask(void)
5839          {
5840   1      
5841   1      
5842   1        if (RfMacBaseCsmaP__m_msg != (void *)0) 
5843   1          {
5844   2      
5845   2            RfMacBaseCsmaP__CoreSend__sendDone(RfMacBaseCsmaP__m_msg, RfMacBaseCsmaP__m_result);
5846   2          }
5847   1      }
5848          
5849          //# 52 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5850          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfRe
             -liableMacReceiveP__0__AMSendAck__sendDone(message_t *msg, error_t result)
5851          {
5852   1      }
5853          
5854          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5855          #define AMResourceP__3__AMSend__sendDone(arg_0x7eb60eb8,arg_0x7eb55068) RfReliableMacReceiveP__0__AMSendAc
             -k__sendDone(arg_0x7eb60eb8, arg_0x7eb55068)
5856          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5857          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AM
             -ResourceP__3__AMResource__sendDone(message_t *msg, error_t error)
5858          {
5859   1      
5860   1      
5861   1      
5862   1        /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3__AMSend__se
             -ndDone(msg, error);
5863   1      }
5864          
5865          //# 52 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
5866          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__1__AMSendAck__sendDone(message_t *msg, error_t result)
5867          {
5868   1      }
5869          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 105 

5870          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5871          #define AMResourceP__2__AMSend__sendDone(arg_0x7eb60eb8,arg_0x7eb55068) RfReliableMacReceiveP__1__AMSendAc
             -k__sendDone(arg_0x7eb60eb8, arg_0x7eb55068)
5872          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5873          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*
             -/AMResourceP__2__AMResource__sendDone(message_t *msg, error_t error)
5874          {
5875   1      
5876   1      
5877   1      
5878   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__AMSend_
             -_sendDone(msg, error);
5879   1      }
5880          
5881          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5882          #define RfReliableMacSendP__1__AckTimer__startOneShot(arg_0x7e9a6d58) VirtualizeTimerC__0__Timer__startOne
             -Shot(3U, arg_0x7e9a6d58)
5883          //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5884          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__SubAMSend__sendDone(message_t *msg, error_t error)
5885          {
5886   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
5887   1          {
5888   2            if (error == 0) 
5889   2              {
5890   3                rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSen
             -dC.RfReliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(msg);
5891   3      
5892   3      //#line 146
5893   3                if (header->ack_req) 
5894   3                  {
5895   4                    /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/
             -RfReliableMacSendP__1__AckTimer__startOneShot(50);
5896   4                    return;
5897   4                  }
5898   3              }
5899   2      
5900   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(msg, error);
5901   2          }
5902   1      }
5903          
5904          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5905          #define AMResourceP__1__AMSend__sendDone(arg_0x7eb60eb8,arg_0x7eb55068) RfReliableMacSendP__1__SubAMSend__
             -sendDone(arg_0x7eb60eb8, arg_0x7eb55068)
5906          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5907          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResour
             -ceC.AMResourceP*/AMResourceP__1__AMResource__sendDone(message_t *msg, error_t error)
5908          {
5909   1      
5910   1      
5911   1      
5912   1        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMResou
             -rceP__1__AMSend__sendDone(msg, error);
5913   1      }
5914          
5915          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5916          #define RfReliableMacSendP__1__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacSendP__1__signalDoneTask)
5917          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
5918          #define RfReliableMacSendP__0__AckTimer__startOneShot(arg_0x7e9a6d58) VirtualizeTimerC__0__Timer__startOne
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 106 

             -Shot(1U, arg_0x7e9a6d58)
5919          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
5920          #define RfReliableMacSendP__0__PacketEx__getPacketHeader(arg_0x7e6b4120) RfReliableMacPacketP__PacketEx__g
             -etPacketHeader(arg_0x7e6b4120)
5921          //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
5922          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableM
             -acSendP*/RfReliableMacSendP__0__SubAMSend__sendDone(message_t *msg, error_t error)
5923          {
5924   1        if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__m_sending) 
5925   1          {
5926   2            if (error == 0) 
5927   2              {
5928   3                rf_rmac_header_t *header = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.
             -RfReliableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(msg);
5929   3      
5930   3      //#line 146
5931   3                if (header->ack_req) 
5932   3                  {
5933   4                    /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfR
             -eliableMacSendP__0__AckTimer__startOneShot(50);
5934   4                    return;
5935   4                  }
5936   3              }
5937   2      
5938   2            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__signalDone(msg, error);
5939   2          }
5940   1      }
5941          
5942          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
5943          #define AMResourceP__0__AMSend__sendDone(arg_0x7eb60eb8,arg_0x7eb55068) RfReliableMacSendP__0__SubAMSend__
             -sendDone(arg_0x7eb60eb8, arg_0x7eb55068)
5944          //# 39 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
5945          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC
             -.AMResourceP*/AMResourceP__0__AMResource__sendDone(message_t *msg, error_t error)
5946          {
5947   1      
5948   1      
5949   1      
5950   1        /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMResource
             -P__0__AMSend__sendDone(msg, error);
5951   1      }
5952          
5953          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
5954          #define RfReliableMacSendP__0__signalDoneTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacSendP__0__signalDoneTask)
5955          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
5956          #define RfMacBaseCsmaP__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
5957          //# 75 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
5958          static  /*inline*/  uint32_t RfMacBaseCsmaP__initBackoffTimer(void)
5959          {
5960   1        RfMacBaseCsmaP__m_this_random = RfMacBaseCsmaP__Random__rand16() % RfMacBaseCsmaP__m_congestion_delay;
5961   1        if (RfMacBaseCsmaP__m_this_random == 0) {
5962   2      //#line 78
5963   2          RfMacBaseCsmaP__m_this_random = 1;
5964   2          }
5965   1      //#line 79
5966   1        RfMacBaseCsmaP__m_this_delay += RfMacBaseCsmaP__m_this_random;
5967   1        return (uint32_t )RfMacBaseCsmaP__m_this_random * RfMacBaseCsmaP__RF_BACKOFF_PERIOD;
5968   1      }
5969          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 107 

5970          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
5971          #define TransformAlarmC__1__Counter__get(void) TransformCounterC__1__Counter__get()
5972          //# 76 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
5973          static  /*inline*/    /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type /*RfMacBa
             -seCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__getNow(void)
5974          {
5975   1        /* atomic removed: atomic calls only */
5976   1      //#line 78
5977   1        {
5978   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type __nesc_temp = 
5979   2      //#line 78
5980   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__get();
5981   2      
5982   2      //#line 78
5983   2          return __nesc_temp;
5984   2        }
5985   1      }
5986          
5987          //#line 140
5988          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*
             -RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type t0, /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/T
             -ransformAlarmC__1__to_size_type dt)
5989          {
5990   1        /* atomic removed: atomic calls only */
5991   1        {
5992   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 = t0;
5993   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = dt;
5994   2          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm();
5995   2        }
5996   1      }
5997          
5998          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__start(/*Rf
             -MacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type dt)
5999          {
6000   1        /* atomic removed: atomic calls only */
6001   1      //#line 152
6002   1        /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__startAt(/*RfMacBaseCsmaC.Alarm32khz
             -32C.Transform*/TransformAlarmC__1__Alarm__getNow(), dt);
6003   1      }
6004          
6005          //# 55 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6006          #define RfMacBaseCsmaP__BackoffTimer__start(arg_0x7e953b10) TransformAlarmC__1__Alarm__start(arg_0x7e953b1
             -0)
6007          //# 14 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
6008          static  /*inline*/  void RfHardwareTxP__writeTxfifo(uint8_t *buf, uint8_t len)
6009          {
6010   1        uint8_t i;
6011   1      
6012   1      //#line 17
6013   1        for (i = 0; i < len; ++i) 
6014   1          {
6015   2            RFD = buf[i];
6016   2          }
6017   1      }
6018          
6019          //#line 45
6020          static  /*inline*/   error_t RfHardwareTxP__RfHardwareTx__txPrepare(uint8_t *packet, uint8_t len)
6021          {
6022   1      
6023   1        do {
6024   2      //#line 48
6025   2            RFST = 0xEE;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 108 

6026   2          }
6027   1        while (
6028   1      //#line 48
6029   1        48 == -1);
6030   1      
6031   1      
6032   1        do {
6033   2      //#line 51
6034   2            S1CON = 0x00;
6035   2      //#line 51
6036   2            RFIRQF1 = ~(1 << 1);
6037   2          }
6038   1        while (
6039   1      //#line 51
6040   1        51 == -1);
6041   1      
6042   1        len &= 0x7f;
6043   1        packet[0] = len;
6044   1      //#line 86
6045   1        RfHardwareTxP__writeTxfifo(packet, len);
6046   1      
6047   1        return 0;
6048   1      }
6049          
6050          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareTx.nc"
6051          #define RfMacBaseCsmaP__RfHardwareTx__txPrepare(arg_0x7e572c98,arg_0x7e572e20) RfHardwareTxP__RfHardwareTx
             -__txPrepare(arg_0x7e572c98, arg_0x7e572e20)
6052          //# 164 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
6053          static  /*inline*/   error_t RfMacBaseCsmaP__CoreSend__send(message_t *msg, uint8_t len)
6054          {
6055   1        unsigned char *__nesc_temp45;
6056   1        unsigned char *__nesc_temp44;
6057   1      
6058   1        /* atomic removed: atomic calls only */
6059   1      //#line 168
6060   1        {
6061   2          if (msg == (void *)0) 
6062   2            {
6063   3              {
6064   4                unsigned char __nesc_temp = 
6065   4      //#line 171
6066   4                FAIL;
6067   4      
6068   4      //#line 171
6069   4                return __nesc_temp;
6070   4              }
6071   3            }
6072   2          RfMacBaseCsmaP__m_msg = msg;
6073   2          RfMacBaseCsmaP__m_cancel = FALSE;
6074   2          RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
6075   2          RfMacBaseCsmaP__m_congestion_count = 0;
6076   2          RfMacBaseCsmaP__m_this_delay = 0;
6077   2      //#line 192
6078   2          (__nesc_temp44 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nesc_te
             -mp44, __nesc_ntoh_leuint8(__nesc_temp44) + 0));
6079   2          RfMacBaseCsmaP__RfHardwareTx__txPrepare((uint8_t *)msg->header, __nesc_ntoh_leuint8((unsigned char *)&
             -((rf_header_t *)msg->header)->length));
6080   2          (__nesc_temp45 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nesc_te
             -mp45, __nesc_ntoh_leuint8(__nesc_temp45) - 0));
6081   2      
6082   2          ;
6083   2      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 109 

6084   2          RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__initBackoffTimer());
6085   2        }
6086   1      
6087   1        return 0;
6088   1      }
6089          
6090          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreSend.nc"
6091          #define RfMacBaseSendP__0__SubCoreSend__send(arg_0x7e5e9998,arg_0x7e5e9b20) RfMacBaseCsmaP__CoreSend__send
             -(arg_0x7e5e9998, arg_0x7e5e9b20)
6092          //# 15 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
6093          static  /*inline*/   bool /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty(void)
6094          {
6095   1        /* atomic removed: atomic calls only */
6096   1        {
6097   2          {
6098   3            unsigned char __nesc_temp = 
6099   3      //#line 19
6100   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size == 0;
6101   3      
6102   3      //#line 19
6103   3            return __nesc_temp;
6104   3          }
6105   2        }
6106   1      }
6107          
6108          //#line 39
6109          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__head(void)
6110          {
6111   1        /* atomic removed: atomic calls only */
6112   1        {
6113   2          {
6114   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
6115   3      //#line 43
6116   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[/*AMResourceCenterC.RfMacBaseSendC.Q
             -ueueExC*/QueueExC__0__head];
6117   3      
6118   3      //#line 43
6119   3            return __nesc_temp;
6120   3          }
6121   2        }
6122   1      }
6123          
6124          //#line 47
6125          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__dequeue(void)
6126          {
6127   1        /* atomic removed: atomic calls only */
6128   1        {
6129   2          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t t = /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__head();
6130   2      
6131   2      //#line 52
6132   2          if (!/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty()) 
6133   2            {
6134   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head++;
6135   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head %= 4;
6136   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size--;
6137   3            }
6138   2      
6139   2          {
6140   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 110 

6141   3      //#line 59
6142   3            t;
6143   3      
6144   3      //#line 59
6145   3            return __nesc_temp;
6146   3          }
6147   2        }
6148   1      }
6149          
6150          //# 40 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
6151          #define RfMacBaseSendP__0__SendQueue__dequeue(void) QueueExC__0__QueueEx__dequeue()
6152          //#line 9
6153          #define RfMacBaseSendP__0__SendQueue__empty(void) QueueExC__0__QueueEx__empty()
6154          //# 23 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
6155          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__
             -runTask(void)
6156          {
6157   1        error_t result;
6158   1        message_t *msg;
6159   1        rf_header_t *header;
6160   1      
6161   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6162   2          {
6163   3            if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending) {
6164   4              {
6165   5      //#line 31
6166   5                __nesc_atomic_end(__nesc_atomic); 
6167   5      //#line 31
6168   5                return;
6169   5              }
6170   4              }
6171   3      //#line 33
6172   3            if (/*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__empty()) 
6173   3              {
6174   4                {
6175   5      //#line 35
6176   5                  __nesc_atomic_end(__nesc_atomic); 
6177   5      //#line 35
6178   5                  return;
6179   5                }
6180   4              }
6181   3      
6182   3            msg = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__dequeue();
6183   3      
6184   3      
6185   3      
6186   3            if (msg == (void *)0) 
6187   3              {
6188   4      
6189   4                ;
6190   4      
6191   4      
6192   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
6193   4      
6194   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
6195   4                {
6196   5      //#line 52
6197   5                  __nesc_atomic_end(__nesc_atomic); 
6198   5      //#line 52
6199   5                  return;
6200   5                }
6201   4              }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 111 

6202   3            result = /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SubCoreSend__send(msg
             -, __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length));
6203   3            if (result == 0) 
6204   3              {
6205   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = TRUE;
6206   4              }
6207   3            else 
6208   3              {
6209   4      
6210   4      
6211   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__CoreSend__sendDone(msg, FA
             -IL);
6212   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
6213   4      
6214   4                /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__postTask();
6215   4              }
6216   3          }
6217   2      //#line 69
6218   2          __nesc_atomic_end(__nesc_atomic); }
6219   1      }
6220          
6221          //# 53 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
6222          #define TransformCounterC__1__CounterFrom__get(void) HplCC2530Timer1P__0__Counter__get()
6223          
6224          
6225          
6226          
6227          
6228          
6229          
6230          #define TransformCounterC__1__CounterFrom__isOverflowPending(void) HplCC2530Timer1P__0__Counter__isOverflo
             -wPending()
6231          //# 200 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6232          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__startAt(uint1
             -6_t t0, uint16_t dt)
6233          {
6234   1        uint16_t set;
6235   1      //#line 202
6236   1        uint16_t now;
6237   1      //#line 202
6238   1        uint16_t elapsed;
6239   1      
6240   1        /* atomic removed: atomic calls only */
6241   1      //#line 204
6242   1        {
6243   2          {
6244   3      //#line 205
6245   3            now = T1CNTL;
6246   3      //#line 205
6247   3            now += T1CNTH << 8;
6248   3          }
6249   2      //#line 205
6250   2          ;
6251   2      
6252   2          elapsed = now - t0;
6253   2      
6254   2          if (elapsed >= dt) 
6255   2            {
6256   3              set = now + 5;
6257   3            }
6258   2          else 
6259   2            {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 112 

6260   3              uint16_t remaining = dt - elapsed;
6261   3      
6262   3      //#line 216
6263   3              if (remaining <= 5) {
6264   4                  set = now + 5;
6265   4                }
6266   3              else 
6267   3                {
6268   4                  set = remaining + now;
6269   4                }
6270   3            }
6271   2      
6272   2          {
6273   3      //#line 225
6274   3            T1CCTL1 &= ~(1 << CC2530_T1CCTLx_MODE);
6275   3      //#line 225
6276   3            T1CC1L = (uint16_t )set & 0xFF;
6277   3      //#line 225
6278   3            T1CC1H = ((uint16_t )set >> 8) & 0xFF;
6279   3      //#line 225
6280   3            T1CCTL1 |= 1 << CC2530_T1CCTLx_MODE;
6281   3          }
6282   2      //#line 225
6283   2          ;
6284   2      
6285   2          T1CCTL1 |= 1 << CC2530_T1CCTLx_IM;
6286   2        }
6287   1      }
6288          
6289          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6290          #define TransformAlarmC__1__AlarmFrom__startAt(arg_0x7e952c28,arg_0x7e952db8) HplCC2530Timer1P__0__Alarm1_
             -_startAt(arg_0x7e952c28, arg_0x7e952db8)
6291          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6292          #define RfReliableMacRetrySendP__0__resendTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfReli
             -ableMacRetrySendP__0__resendTask)
6293          //# 129 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
6294          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfRel
             -iableMacRetrySendP__0__SubAMSend__sendDone(message_t *msg, error_t error)
6295          {
6296   1        if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -0__m_sending) 
6297   1          {
6298   2            if (error == 0) 
6299   2              {
6300   3                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__signalDone(msg, error);
6301   3              }
6302   2            else 
6303   2              {
6304   3                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__resendTask__postTask();
6305   3              }
6306   2          }
6307   1      }
6308          
6309          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6310          #define RfReliableMacSendP__0__AMSend__sendDone(arg_0x7eb60eb8,arg_0x7eb55068) RfReliableMacRetrySendP__0_
             -_SubAMSend__sendDone(arg_0x7eb60eb8, arg_0x7eb55068)
6311          //# 31 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6312          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableM
             -acSendP*/RfReliableMacSendP__0__signalDoneTask__runTask(void)
6313          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 113 

6314   1        message_t *msg;
6315   1        error_t result;
6316   1      
6317   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6318   2          {
6319   3            if (!/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReli
             -ableMacSendP__0__m_sending) 
6320   3              {
6321   4                {
6322   5      //#line 40
6323   5                  __nesc_atomic_end(__nesc_atomic); 
6324   5      //#line 40
6325   5                  return;
6326   5                }
6327   4              }
6328   3            msg = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__m_msg;
6329   3            result = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__m_result;
6330   3          }
6331   2      //#line 45
6332   2          __nesc_atomic_end(__nesc_atomic); }
6333   1      
6334   1        /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacSe
             -ndP__0__AMSend__sendDone(msg, result);
6335   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6336   2      //#line 48
6337   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMac
             -SendP__0__m_sending = FALSE;
6338   2      //#line 48
6339   2          __nesc_atomic_end(__nesc_atomic); }
6340   1      }
6341          
6342          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6343          #define DigBaseP__showMenu__postTask(void) SchedulerBasicP__TaskBasic__postTask(DigBaseP__showMenu)
6344          //# 114 "DigBaseP.nc"
6345          static  /*inline*/   void DigBaseP__AMSend__sendDone(message_t *msg, error_t success)
6346          {
6347   1        {
6348   2      //#line 116
6349   2          {
6350   3      //#line 116
6351   3            if (1000 >= uart_debug_level) {
6352   4      //#line 116
6353   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6354   5      //#line 116
6355   5                  {
6356   6      //#line 116
6357   6                    sprintf(uart_debug_buf, "* Sent%s!\r\n", success == 0 ? "OK" : "FAIL");
6358   6                  }
6359   5      //#line 117
6360   5                  __nesc_atomic_end(__nesc_atomic); }
6361   4      //#line 116
6362   4                ATOS_DEBUG_UART_PRINT();
6363   4              }
6364   3          }
6365   2        }
6366   1      //#line 116
6367   1        ;
6368   1      
6369   1        DigBaseP__m_len = 0;
6370   1        DigBaseP__m_input_type = DigBaseP__INPUT_ADDRESS;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 114 

6371   1      
6372   1        DigBaseP__showMenu__postTask();
6373   1      }
6374          
6375          //# 99 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6376          #define RfReliableMacRetrySendP__0__AMSend__sendDone(arg_0x7eb60eb8,arg_0x7eb55068) DigBaseP__AMSend__send
             -Done(arg_0x7eb60eb8, arg_0x7eb55068)
6377          //# 48 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
6378          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfRel
             -iableMacRetrySendP__0__resendTask__runTask(void)
6379          {
6380   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6381   2          {
6382   3            if (!/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySe
             -ndP__0__m_sending) 
6383   3              {
6384   4                {
6385   5      //#line 54
6386   5                  __nesc_atomic_end(__nesc_atomic); 
6387   5      //#line 54
6388   5                  return;
6389   5                }
6390   4              }
6391   3            if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__m_retry_times++ < 20) 
6392   3              {
6393   4                if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__doSend(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0_
             -_m_msg) != 0) 
6394   4                  {
6395   5                    ;
6396   5                    /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__0__resendTask__postTask();
6397   5                  }
6398   4              }
6399   3            else 
6400   3              {
6401   4      
6402   4                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__signalDone(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0_
             -_m_msg, ERR_MAC_RETRY_MAX);
6403   4              }
6404   3          }
6405   2      //#line 70
6406   2          __nesc_atomic_end(__nesc_atomic); }
6407   1      }
6408          
6409          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6410          #define RfReliableMacSendP__0__TimeoutTimer__startOneShot(arg_0x7e9a6d58) VirtualizeTimerC__0__Timer__star
             -tOneShot(2U, arg_0x7e9a6d58)
6411          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
6412          #define RfReliableMacSendP__0__SubPacket__payloadLength(arg_0x7eb25e90) RfPacketP__Packet__payloadLength(a
             -rg_0x7eb25e90)
6413          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
6414          #define AMResourceP__0__AMResource__send(arg_0x7e609888,arg_0x7e609a38,arg_0x7e609bc0) AMResourceCenterP__
             -AMResource__send(AMResourceC__0__AM_RESOURCE_ID, arg_0x7e609888, arg_0x7e609a38, arg_0x7e609bc0)
6415          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceP.nc"
6416          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResour
             -ceC.AMResourceP*/AMResourceP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
6417          {
6418   1        /* atomic removed: atomic calls only */
6419   1        {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 115 

6420   2          __nesc_hton_uint8((unsigned char *)&((rf_meta_data_t *)msg->meta_data)->resource_id, 0);
6421   2          __nesc_hton_leuint8((unsigned char *)&((rf_header_t *)msg->header)->type, 123);
6422   2        }
6423   1      
6424   1        return /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMR
             -esourceP__0__AMResource__send(addr, msg, len);
6425   1      }
6426          
6427          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6428          #define RfReliableMacSendP__0__SubAMSend__send(arg_0x7eb61810,arg_0x7eb619c0,arg_0x7eb61b48) AMResourceP__
             -0__AMSend__send(arg_0x7eb61810, arg_0x7eb619c0, arg_0x7eb61b48)
6429          //# 89 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6430          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
6431          {
6432   1        error_t result;
6433   1      
6434   1        /* atomic removed: atomic calls only */
6435   1        {
6436   2          rf_rmac_header_t *header = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReli
             -ableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(msg);
6437   2          rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
6438   2      
6439   2      
6440   2      
6441   2          if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending) 
6442   2            {
6443   3              {
6444   4                unsigned char __nesc_temp = 
6445   4      //#line 102
6446   4                FAIL;
6447   4      
6448   4      //#line 102
6449   4                return __nesc_temp;
6450   4              }
6451   3            }
6452   2          header->ack_req = addr != 0xFFFF;
6453   2      
6454   2          __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
6455   2      
6456   2          result = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__SubAMSend__send(addr, msg, /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__0__SubPacket__payloadLength(msg));
6457   2      
6458   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMac
             -SendP__0__TimeoutTimer__startOneShot(10000);
6459   2      
6460   2          if (result == 0) 
6461   2            {
6462   3              /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_msg = msg;
6463   3              /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliabl
             -eMacSendP__0__m_sending = TRUE;
6464   3            }
6465   2      
6466   2          {
6467   3            unsigned char __nesc_temp = 
6468   3      //#line 119
6469   3            result;
6470   3      
6471   3      //#line 119
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 116 

6472   3            return __nesc_temp;
6473   3          }
6474   2        }
6475   1      }
6476          
6477          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6478          #define RfReliableMacRetrySendP__0__SubAMSend__send(arg_0x7eb61810,arg_0x7eb619c0,arg_0x7eb61b48) RfReliab
             -leMacSendP__0__AMSend__send(arg_0x7eb61810, arg_0x7eb619c0, arg_0x7eb61b48)
6479          //# 67 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
6480          #define RfReliableMacRetrySendP__0__AMPacket__destination(arg_0x7eb425b0) RfPacketP__AMPacket__destination
             -(arg_0x7eb425b0)
6481          //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
6482          #define RfReliableMacRetrySendP__0__Packet__payloadLength(arg_0x7eb25e90) RfReliableMacPacketP__Packet__pa
             -yloadLength(arg_0x7eb25e90)
6483          //# 140 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6484          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*
             -HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/T
             -ransformAlarmC__0__to_size_type dt)
6485          {
6486   1        /* atomic removed: atomic calls only */
6487   1        {
6488   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 = t0;
6489   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = dt;
6490   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm();
6491   2        }
6492   1      }
6493          
6494          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6495          #define AlarmToTimerC__0__Alarm__startAt(arg_0x7e952c28,arg_0x7e952db8) TransformAlarmC__0__Alarm__startAt
             -(arg_0x7e952c28, arg_0x7e952db8)
6496          //# 47 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6497          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(uint32_t t0, uint32_t dt,
             - bool oneshot)
6498          {
6499   1        /* atomic removed: atomic calls only */
6500   1        {
6501   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt = dt;
6502   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot = oneshot;
6503   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(t0, dt);
6504   2        }
6505   1      }
6506          
6507          //#line 113
6508          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t
             - t0, uint32_t dt)
6509          {
6510   1        /* atomic removed: atomic calls only */
6511   1      //#line 115
6512   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(t0, dt, TRUE);
6513   1      }
6514          
6515          //# 118 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6516          #define VirtualizeTimerC__0__TimerFrom__startOneShotAt(arg_0x7e9a39b8,arg_0x7e9a3b48) AlarmToTimerC__0__Ti
             -mer__startOneShotAt(arg_0x7e9a39b8, arg_0x7e9a3b48)
6517          //# 78 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6518          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__stop(void)
6519          {
6520   1        /* atomic removed: atomic calls only */
6521   1      //#line 80
6522   1        T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
6523   1      }
6524          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 117 

6525          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6526          #define TransformAlarmC__0__AlarmFrom__stop(void) HplCC2530Timer1P__0__Alarm0__stop()
6527          //# 91 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6528          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void)
6529          {
6530   1        /* atomic removed: atomic calls only */
6531   1      //#line 93
6532   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop();
6533   1      }
6534          
6535          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6536          #define AlarmToTimerC__0__Alarm__stop(void) TransformAlarmC__0__Alarm__stop()
6537          //# 73 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6538          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void)
6539          {
6540   1        /* atomic removed: atomic calls only */
6541   1        {
6542   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop();
6543   2        }
6544   1      }
6545          
6546          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6547          #define VirtualizeTimerC__0__TimerFrom__stop(void) AlarmToTimerC__0__Timer__stop()
6548          //# 98 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6549          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask
             -(void)
6550          {
6551   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6552   2          {
6553   3      
6554   3      
6555   3      
6556   3      
6557   3            uint32_t now = /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow();
6558   3            int32_t min_remaining = (1UL << 31) - 1;
6559   3            bool min_remaining_isset = FALSE;
6560   3            uint8_t num;
6561   3      
6562   3            {
6563   4      //#line 111
6564   4              {
6565   5      //#line 111
6566   5                if (1 >= uart_debug_level) {
6567   6      //#line 111
6568   6                    {
6569   7      //#line 111
6570   7                      sprintf(uart_debug_buf, "updateFromTimer NUM_TIMERS=%d\n", (int )/*HilTimerMilliC.Virtuali
             -zeTimerC*/VirtualizeTimerC__0__NUM_TIMERS);
6571   7                    }
6572   6      //#line 111
6573   6                    ATOS_DEBUG_UART_PRINT();
6574   6                  }
6575   5              }
6576   4            }
6577   3      //#line 111
6578   3            ;
6579   3      
6580   3            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop();
6581   3      
6582   3            for (num = 0; num < /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS; num++) 
6583   3              {
6584   4                /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtu
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 118 

             -alizeTimerC*/VirtualizeTimerC__0__m_timers[num];
6585   4      
6586   4      
6587   4                if (timer->isrunning) 
6588   4                  {
6589   5                    uint32_t elapsed = now - timer->t0;
6590   5                    int32_t remaining = (timer->dt - elapsed) % (timer->dt + 1);
6591   5      
6592   5                    {
6593   6      //#line 125
6594   6                      {
6595   7      //#line 125
6596   7                        if (1 >= uart_debug_level) {
6597   8      //#line 125
6598   8                            {
6599   9      //#line 125
6600   9                              sprintf(uart_debug_buf, "elapsed = 0x%lx, remaining=0x%lx\n", elapsed, remaining);
6601   9                            }
6602   8      //#line 125
6603   8                            ATOS_DEBUG_UART_PRINT();
6604   8                          }
6605   7                      }
6606   6                    }
6607   5      //#line 125
6608   5                    ;
6609   5      
6610   5                    if (remaining < min_remaining) 
6611   5                      {
6612   6                        min_remaining = remaining;
6613   6                        min_remaining_isset = TRUE;
6614   6                      }
6615   5                  }
6616   4              }
6617   3      
6618   3            {
6619   4      //#line 135
6620   4              {
6621   5      //#line 135
6622   5                if (1 >= uart_debug_level) {
6623   6      //#line 135
6624   6                    {
6625   7      //#line 135
6626   7                      sprintf(uart_debug_buf, "updateFromTimer min_remaining_isset=%d, min_remaining=0x%x,\n", (
             -int )min_remaining_isset, (int )min_remaining);
6627   7                    }
6628   6      //#line 135
6629   6                    ATOS_DEBUG_UART_PRINT();
6630   6                  }
6631   5              }
6632   4            }
6633   3      //#line 135
6634   3            ;
6635   3      
6636   3            if (min_remaining_isset) 
6637   3              {
6638   4                if (min_remaining <= 0) 
6639   4                  {
6640   5                    /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(now);
6641   5                  }
6642   4                else 
6643   4                  {
6644   5                    {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 119 

6645   6      //#line 145
6646   6                      {
6647   7      //#line 145
6648   7                        if (1 >= uart_debug_level) {
6649   8      //#line 145
6650   8                            {
6651   9      //#line 145
6652   9                              sprintf(uart_debug_buf, "VirtualizeTimerC call TimerFrom.startOneShotAt\n");
6653   9                            }
6654   8      //#line 145
6655   8                            ATOS_DEBUG_UART_PRINT();
6656   8                          }
6657   7                      }
6658   6                    }
6659   5      //#line 145
6660   5                    ;
6661   5                    /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt(now, min_r
             -emaining);
6662   5                  }
6663   4              }
6664   3          }
6665   2      //#line 149
6666   2          __nesc_atomic_end(__nesc_atomic); }
6667   1      }
6668          
6669          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
6670          #define RealMainP__fakeTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RealMainP__fakeTask)
6671          //# 111 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
6672          static  /*inline*/   void RealMainP__FakeTimer__fired(void)
6673          {
6674   1      
6675   1        RealMainP__fakeTask__postTask();
6676   1      }
6677          
6678          //# 71 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
6679          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableM
             -acSendP*/RfReliableMacSendP__0__AckTimer__fired(void)
6680          {
6681   1        if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__m_sending) 
6682   1          {
6683   2            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__signalDone(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0__m_msg, ERR_MAC_NO_ACK);
6684   2          }
6685   1      }
6686          
6687          static  /*inline*/   void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableM
             -acSendP*/RfReliableMacSendP__0__TimeoutTimer__fired(void)
6688          {
6689   1        if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__m_sending) 
6690   1          {
6691   2            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__signalDone(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__0__m_msg, ERR_MAC_NO_ACK);
6692   2          }
6693   1      }
6694          
6695          //#line 71
6696          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__AckTimer__fired(void)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 120 

6697          {
6698   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
6699   1          {
6700   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg, ERR_MAC_NO_ACK);
6701   2          }
6702   1      }
6703          
6704          static  /*inline*/   void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__1__TimeoutTimer__fired(void)
6705          {
6706   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
6707   1          {
6708   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_msg, ERR_MAC_NO_ACK);
6709   2          }
6710   1      }
6711          
6712          //# 4 "/opt/atos/tos/chips/cc2530/watchdog/WatchDog.nc"
6713          #define AtosNetStdP__WatchDog__resetCpu(void) WatchDogP__WatchDog__resetCpu()
6714          //# 49 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
6715          static  /*inline*/   void AtosNetStdP__RebootTimer__fired(void)
6716          {
6717   1        AtosNetStdP__WatchDog__resetCpu();
6718   1      }
6719          
6720          //# 232 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6721          static  /*inline*/    void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(u
             -int8_t num)
6722          //#line 232
6723          {
6724   1      }
6725          
6726          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6727           /*inline*/  static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(uint8_t arg
             -_0x7e794030){
6728   1      //#line 72
6729   1        switch (arg_0x7e794030) {
6730   2      //#line 72
6731   2          case 0U:
6732   2      //#line 72
6733   2            RealMainP__FakeTimer__fired();
6734   2      //#line 72
6735   2            break;
6736   2      //#line 72
6737   2          case 1U:
6738   2      //#line 72
6739   2            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__AckTimer__fired();
6740   2      //#line 72
6741   2            break;
6742   2      //#line 72
6743   2          case 2U:
6744   2      //#line 72
6745   2            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__TimeoutTimer__fired();
6746   2      //#line 72
6747   2            break;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 121 

6748   2      //#line 72
6749   2          case 3U:
6750   2      //#line 72
6751   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__AckTimer__fired();
6752   2      //#line 72
6753   2            break;
6754   2      //#line 72
6755   2          case 4U:
6756   2      //#line 72
6757   2            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__TimeoutTimer__fired();
6758   2      //#line 72
6759   2            break;
6760   2      //#line 72
6761   2          case 5U:
6762   2      //#line 72
6763   2            AtosNetStdP__RebootTimer__fired();
6764   2      //#line 72
6765   2            break;
6766   2      //#line 72
6767   2          default:
6768   2      //#line 72
6769   2            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(arg_0x7e794030);
6770   2      //#line 72
6771   2            break;
6772   2      //#line 72
6773   2          }
6774   1      //#line 72
6775   1      }
6776          //#line 72
6777          //# 121 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
6778          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__startAt(uint1
             -6_t t0, uint16_t dt)
6779          {
6780   1        uint16_t set;
6781   1      //#line 123
6782   1        uint16_t now;
6783   1      //#line 123
6784   1        uint16_t elapsed;
6785   1      
6786   1        /* atomic removed: atomic calls only */
6787   1        {
6788   2          {
6789   3      //#line 127
6790   3            now = T1CNTL;
6791   3      //#line 127
6792   3            now += T1CNTH << 8;
6793   3          }
6794   2      //#line 127
6795   2          ;
6796   2      
6797   2          elapsed = now - t0;
6798   2      
6799   2          if (elapsed >= dt) 
6800   2            {
6801   3              set = now + 5;
6802   3            }
6803   2          else 
6804   2            {
6805   3              uint16_t remaining = dt - elapsed;
6806   3      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 122 

6807   3      //#line 138
6808   3              if (remaining <= 5) 
6809   3                {
6810   4                  set = now + 5;
6811   4                }
6812   3              else 
6813   3                {
6814   4                  set = remaining + now;
6815   4                }
6816   3            }
6817   2      
6818   2          {
6819   3      //#line 148
6820   3            T1CCTL0 &= ~(1 << CC2530_T1CCTLx_MODE);
6821   3      //#line 148
6822   3            T1CC0L = (uint16_t )set & 0xFF;
6823   3      //#line 148
6824   3            T1CC0H = ((uint16_t )set >> 8) & 0xFF;
6825   3      //#line 148
6826   3            T1CCTL0 |= 1 << CC2530_T1CCTLx_MODE;
6827   3          }
6828   2      //#line 148
6829   2          ;
6830   2      
6831   2          T1CCTL0 |= 1 << CC2530_T1CCTLx_IM;
6832   2      
6833   2          {
6834   3      //#line 152
6835   3            {
6836   4      //#line 152
6837   4              if (1 >= uart_debug_level) {
6838   5      //#line 152
6839   5                  {
6840   6      //#line 152
6841   6                    sprintf(uart_debug_buf, "Alarm0.startAt T1CCTL0=0x%x\n", T1CCTL0);
6842   6                  }
6843   5      //#line 152
6844   5                  ATOS_DEBUG_UART_PRINT();
6845   5                }
6846   4            }
6847   3          }
6848   2      //#line 152
6849   2          ;
6850   2        }
6851   1      }
6852          
6853          //# 92 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6854          #define TransformAlarmC__0__AlarmFrom__startAt(arg_0x7e952c28,arg_0x7e952db8) HplCC2530Timer1P__0__Alarm0_
             -_startAt(arg_0x7e952c28, arg_0x7e952db8)
6855          //# 152 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
6856          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void)
6857          {
6858   1        /* atomic removed: atomic calls only */
6859   1        {
6860   2          {
6861   3      //#line 156
6862   3            {
6863   4      //#line 156
6864   4              if (1 >= uart_debug_level) {
6865   5      //#line 156
6866   5                  {
6867   6      //#line 156
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 123 

6868   6                    sprintf(uart_debug_buf, "VirtualizeTimerC.TimerFrom.fired\n");
6869   6                  }
6870   5      //#line 156
6871   5                  ATOS_DEBUG_UART_PRINT();
6872   5                }
6873   4            }
6874   3          }
6875   2      //#line 156
6876   2          ;
6877   2          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(/*HilTimerMilliC.VirtualizeTimerC*/
             -VirtualizeTimerC__0__TimerFrom__getNow());
6878   2        }
6879   1      }
6880          
6881          //# 72 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
6882          #define AlarmToTimerC__0__Timer__fired(void) VirtualizeTimerC__0__TimerFrom__fired()
6883          //# 81 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
6884          static  /*inline*/    /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTime
             -rMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void)
6885          {
6886   1        /* atomic removed: atomic calls only */
6887   1      //#line 83
6888   1        {
6889   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type __nesc_temp = 
6890   2      //#line 83
6891   2          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 + /*HilTimerMilliC.AlarmMilli32C.Tr
             -ansform*/TransformAlarmC__0__m_dt;
6892   2      
6893   2      //#line 83
6894   2          return __nesc_temp;
6895   2        }
6896   1      }
6897          
6898          //# 105 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
6899          #define AlarmToTimerC__0__Alarm__getAlarm(void) TransformAlarmC__0__Alarm__getAlarm()
6900          //# 81 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
6901          static  /*inline*/   void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask(void)
6902          {
6903   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6904   2          {
6905   3            if (/*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot == FALSE) 
6906   3              {
6907   4                /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(/*HilTimerMilliC.AlarmToTimerC*/AlarmToT
             -imerC__0__Alarm__getAlarm(), /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt, FALSE);
6908   4              }
6909   3            /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired();
6910   3          }
6911   2      //#line 90
6912   2          __nesc_atomic_end(__nesc_atomic); }
6913   1      }
6914          
6915          //# 103 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
6916          static  /*inline*/   void RealMainP__fakeTask__runTask(void)
6917          {
6918   1      }
6919          
6920          //# 83 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
6921          #define RfReliableMacRetrySendP__0__Packet__setPayloadLength(arg_0x7eb24538,arg_0x7eb246c0) RfReliableMacP
             -acketP__Packet__setPayloadLength(arg_0x7eb24538, arg_0x7eb246c0)
6922          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
6923          #define RfReliableMacRetrySendP__0__AMPacket__setDestination(arg_0x7eb40190,arg_0x7eb40320) RfPacketP__AMP
             -acket__setDestination(arg_0x7eb40190, arg_0x7eb40320)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 124 

6924          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
6925          #define RfReliableMacRetrySendP__0__PacketEx__getPacketHeader(arg_0x7e6b4120) RfReliableMacPacketP__Packet
             -Ex__getPacketHeader(arg_0x7e6b4120)
6926          //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
6927          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__0__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
6928          {
6929   1        error_t result;
6930   1      
6931   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6932   2          {
6933   3            rf_rmac_header_t *header = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP
             -*/RfReliableMacRetrySendP__0__PacketEx__getPacketHeader(msg);
6934   3            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
6935   3      
6936   3            if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__m_sending) 
6937   3              {
6938   4                {
6939   5                  unsigned char __nesc_temp = 
6940   5      //#line 85
6941   5                  FAIL;
6942   5      
6943   5                  {
6944   6      //#line 85
6945   6                    __nesc_atomic_end(__nesc_atomic); 
6946   6      //#line 85
6947   6                    return __nesc_temp;
6948   6                  }
6949   5                }
6950   4              }
6951   3            header->ack_req = addr != 0xFFFF;
6952   3      
6953   3            __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
6954   3      
6955   3            header->dsn = rf_rmac_dsn;
6956   3      
6957   3            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -0__AMPacket__setDestination(msg, addr);
6958   3            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -0__Packet__setPayloadLength(msg, len);
6959   3      
6960   3      
6961   3            result = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__0__doSend(msg);
6962   3      
6963   3            if (result == 0) 
6964   3              {
6965   4                rf_rmac_dsn++;
6966   4                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__m_sending = TRUE;
6967   4                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__m_msg = msg;
6968   4                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__m_retry_times = 0;
6969   4              }
6970   3      
6971   3            {
6972   4              unsigned char __nesc_temp = 
6973   4      //#line 109
6974   4              result;
6975   4      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 125 

6976   4              {
6977   5      //#line 109
6978   5                __nesc_atomic_end(__nesc_atomic); 
6979   5      //#line 109
6980   5                return __nesc_temp;
6981   5              }
6982   4            }
6983   3          }
6984   2      //#line 112
6985   2          __nesc_atomic_end(__nesc_atomic); }
6986   1      }
6987          
6988          //# 69 "/opt/tinyos-2.x/tos/interfaces/AMSend.nc"
6989          #define DigBaseP__AMSend__send(arg_0x7eb61810,arg_0x7eb619c0,arg_0x7eb61b48) RfReliableMacRetrySendP__0__A
             -MSend__send(arg_0x7eb61810, arg_0x7eb619c0, arg_0x7eb61b48)
6990          //# 52 "DigBaseP.nc"
6991          static  /*inline*/  uint16_t DigBaseP__getDestAddress(void)
6992          {
6993   1        uint16_t address = 0;
6994   1        uint8_t i = 0;
6995   1      
6996   1        if (DigBaseP__m_address_index > DigBaseP__MAX_ADDRESS_LEN) 
6997   1          {
6998   2            DigBaseP__m_address_index = DigBaseP__MAX_ADDRESS_LEN - 1;
6999   2          }
7000   1      
7001   1        for (i = 0; i < DigBaseP__m_address_index; ++i) 
7002   1          {
7003   2            uint8_t digital = DigBaseP__m_address_str[i];
7004   2      
7005   2      //#line 65
7006   2            if (digital >= 'A' && digital <= 'F') 
7007   2              {
7008   3                digital = digital - 'A' + 10;
7009   3              }
7010   2            else {
7011   3      //#line 69
7012   3              if (digital >= 'a' && digital <= 'f') 
7013   3                {
7014   4                  digital = digital - 'a' + 10;
7015   4                }
7016   3              else {
7017   4      //#line 73
7018   4                if (digital >= '0' && digital <= '9') 
7019   4                  {
7020   5                    digital = digital - '0';
7021   5                  }
7022   4                }
7023   3              }
7024   2      //#line 78
7025   2            address = address * 16 + digital;
7026   2          }
7027   1      
7028   1        return address;
7029   1      }
7030          
7031          //# 57 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
7032          #define DigBaseP__AMPacket__address(void) RfPacketP__AMPacket__address()
7033          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
7034          #define DigBaseP__Packet__getPayload(arg_0x7eb23358,arg_0x7eb23500) RfReliableMacPacketP__Packet__getPaylo
             -ad(arg_0x7eb23358, arg_0x7eb23500)
7035          //# 85 "DigBaseP.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 126 

7036          static  /*inline*/   void DigBaseP__sendData__runTask(void)
7037          {
7038   1        uint8_t i;
7039   1        uint8_t *payload = DigBaseP__Packet__getPayload(&DigBaseP__m_msg, (void *)0);
7040   1        uint16_t address = DigBaseP__AMPacket__address();
7041   1        uint16_t dest_address = DigBaseP__getDestAddress();
7042   1      
7043   1        {
7044   2      //#line 92
7045   2          {
7046   3      //#line 92
7047   3            if (1000 >= uart_debug_level) {
7048   4      //#line 92
7049   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7050   5      //#line 92
7051   5                  {
7052   6      //#line 92
7053   6                    sprintf(uart_debug_buf, "\npayload = %c\n", *payload);
7054   6                  }
7055   5      //#line 93
7056   5                  __nesc_atomic_end(__nesc_atomic); }
7057   4      //#line 92
7058   4                ATOS_DEBUG_UART_PRINT();
7059   4              }
7060   3          }
7061   2        }
7062   1      //#line 92
7063   1        ;
7064   1        DigBaseP__m_len = 1;
7065   1      
7066   1        if (*payload == 'Y' || *payload == 'y') 
7067   1          {
7068   2            {
7069   3      //#line 97
7070   3              {
7071   4      //#line 97
7072   4                if (1000 >= uart_debug_level) {
7073   5      //#line 97
7074   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7075   6      //#line 97
7076   6                      {
7077   7      //#line 97
7078   7                        sprintf(uart_debug_buf, "\r\n\r\n* Sending ... from [%d], to [%d], len=[%d]\r\n", (int )
             -address, (int )dest_address, (int )DigBaseP__m_len);
7079   7                      }
7080   6      //#line 98
7081   6                      __nesc_atomic_end(__nesc_atomic); }
7082   5      //#line 97
7083   5                    ATOS_DEBUG_UART_PRINT();
7084   5                  }
7085   4              }
7086   3            }
7087   2      //#line 97
7088   2            ;
7089   2      
7090   2      
7091   2      
7092   2            DigBaseP__AMSend__send(dest_address, &DigBaseP__m_msg, DigBaseP__m_len);
7093   2          }
7094   1        else 
7095   1          {
7096   2            DigBaseP__m_input_type = DigBaseP__INPUT_ADDRESS;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 127 

7097   2      
7098   2            DigBaseP__showMenu__postTask();
7099   2          }
7100   1        {
7101   2      //#line 109
7102   2          P1_2 = ~P1_2;
7103   2        }
7104   1      //#line 109
7105   1        ;
7106   1      }
7107          
7108          //#line 34
7109          static  /*inline*/   void DigBaseP__showMenu__runTask(void)
7110          {
7111   1        if (DigBaseP__m_input_type == DigBaseP__INPUT_DATA) 
7112   1          {
7113   2            {
7114   3      //#line 38
7115   3              {
7116   4      //#line 38
7117   4                if (1000 >= uart_debug_level) {
7118   5      //#line 38
7119   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7120   6      //#line 38
7121   6                      {
7122   7      //#line 38
7123   7                        sprintf(uart_debug_buf, "\r\n* To Send:(Y or N)\r\n");
7124   7                      }
7125   6      //#line 39
7126   6                      __nesc_atomic_end(__nesc_atomic); }
7127   5      //#line 38
7128   5                    ATOS_DEBUG_UART_PRINT();
7129   5                  }
7130   4              }
7131   3            }
7132   2      //#line 38
7133   2            ;
7134   2          }
7135   1        else 
7136   1          {
7137   2            {
7138   3      //#line 42
7139   3              {
7140   4      //#line 42
7141   4                if (1000 >= uart_debug_level) {
7142   5      //#line 42
7143   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
7144   6      //#line 42
7145   6                      {
7146   7      //#line 42
7147   7                        sprintf(uart_debug_buf, "\r\n###################################################\r\n* MY
             - NodeId = 0x%x, Group=0x%x, destination ?\r\n", (int )DigBaseP__AMPacket__address(), (int )TOS_IEEE_PANID);
7148   7                      }
7149   6      //#line 43
7150   6                      __nesc_atomic_end(__nesc_atomic); }
7151   5      //#line 42
7152   5                    ATOS_DEBUG_UART_PRINT();
7153   5                  }
7154   4              }
7155   3            }
7156   2      //#line 42
7157   2            ;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 128 

7158   2      
7159   2      
7160   2      
7161   2            DigBaseP__m_input_type = DigBaseP__INPUT_ADDRESS;
7162   2            DigBaseP__m_address_index = 0;
7163   2          }
7164   1      }
7165          
7166          //# 50 "/opt/tinyos-2.x/tos/types/TinyError.h"
7167          static  /*inline*/  error_t ecombine(error_t r1, error_t r2)
7168          
7169          
7170          
7171          
7172          {
7173   1        return r1 == r2 ? r1 : FAIL;
7174   1      }
7175          
7176          //# 38 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
7177          static  /*inline*/   error_t HalFlashP__Init__init(void)
7178          {
7179   1        return 0;
7180   1      }
7181          
7182          //# 103 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
7183          static  /*inline*/   error_t RfConfigP__Init__init(void)
7184          {
7185   1        /* atomic removed: atomic calls only */
7186   1        {
7187   2          RfConfigP__m_channel = 11;
7188   2      
7189   2      
7190   2      
7191   2      
7192   2      
7193   2      
7194   2          if (RfConfigP__m_channel < 11 || RfConfigP__m_channel > 26) 
7195   2            {
7196   3              RfConfigP__m_channel = 11;
7197   3            }
7198   2      
7199   2          RfConfigP__m_tx_power = 0xF5;
7200   2          RfConfigP__m_hw_auto_ack = FALSE;
7201   2      
7202   2      
7203   2      
7204   2      
7205   2      
7206   2          RfConfigP__m_address_recognition = TRUE;
7207   2        }
7208   1      
7209   1      
7210   1        return 0;
7211   1      }
7212          
7213          //# 10 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
7214          static  /*inline*/   error_t CC2530RandomLfsrP__Init__init(void)
7215          //#line 10
7216          {
7217   1        /* atomic removed: atomic calls only */
7218   1      //#line 11
7219   1        {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 129 

7220   2          uint16_t rndSeed;
7221   2          uint8_t i;
7222   2      
7223   2      
7224   2          ADCCON1 = ((ADCCON1 & ~((1 << 3) | (1 << 2))) | (1 << 3)) | (1 << 2);
7225   2          (
7226   2      
7227   2      
7228   2      
7229   2      
7230   2          (uint8_t xdata *)0)[0x6189] = 0x40 | (2 << 2);
7231   2      
7232   2      
7233   2          RFST = 0xE3;
7234   2      
7235   2      
7236   2      
7237   2      
7238   2      
7239   2      
7240   2          while (!(((uint8_t xdata *)0)[0x6199] & 0x01)) ;
7241   2      
7242   2          rndSeed = 0;
7243   2          for (i = 0; i < 16; i++) 
7244   2            {
7245   3      
7246   3              rndSeed = (rndSeed << 1) | (((uint8_t xdata *)0)[0x61A7] & 0x01);
7247   3            }
7248   2      
7249   2      
7250   2      
7251   2      
7252   2      
7253   2      
7254   2          if (rndSeed == 0x0000 || rndSeed == 0x0380) 
7255   2            {
7256   3              rndSeed = 0xBABE;
7257   3            }
7258   2      
7259   2      
7260   2      
7261   2      
7262   2      
7263   2          RNDL = rndSeed & 0xFF;
7264   2          RNDL = rndSeed >> 8;
7265   2      
7266   2      
7267   2          RFST = 0xEF;
7268   2          (
7269   2      
7270   2          (uint8_t xdata *)0)[0x6189] = 0x40 | (0 << 2);
7271   2        }
7272   1      
7273   1        return 0;
7274   1      }
7275          
7276          //# 80 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
7277          static  /*inline*/   error_t /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init(void)
7278          {
7279   1        /* atomic removed: atomic calls only */
7280   1        {
7281   2          memset(/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address, 0, sizeof /*DsnFilt
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 130 

             -erCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address);
7282   2          memset(/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn, 0, sizeof /*DsnFilterCe
             -nterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn);
7283   2      
7284   2          {
7285   3            unsigned char __nesc_temp = 
7286   3      //#line 87
7287   3            0;
7288   3      
7289   3      //#line 87
7290   3            return __nesc_temp;
7291   3          }
7292   2        }
7293   1      }
7294          
7295          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
7296           /*inline*/  static  error_t RealMainP__SoftwareInit__init(void){
7297   1      //#line 51
7298   1        unsigned char result;
7299   1      //#line 51
7300   1      
7301   1      //#line 51
7302   1        result = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__Init__init();
7303   1      //#line 51
7304   1        result = ecombine(result, CC2530RandomLfsrP__Init__init());
7305   1      //#line 51
7306   1        result = ecombine(result, RfConfigP__Init__init());
7307   1      //#line 51
7308   1        result = ecombine(result, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init());
7309   1      //#line 51
7310   1        result = ecombine(result, /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init());
7311   1      //#line 51
7312   1        result = ecombine(result, HalFlashP__Init__init());
7313   1      //#line 51
7314   1      
7315   1      //#line 51
7316   1        return result;
7317   1      //#line 51
7318   1      }
7319          //#line 51
7320          //# 14 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
7321          static  /*inline*/  void uart0IntEnable(void)
7322          {
7323   1      
7324   1        UTX0IF = 0;
7325   1        URX0IF = 0;
7326   1      
7327   1        URX0IE = 1;
7328   1      }
7329          
7330          //# 22 "/opt/atos/tos/chips/cc2530/usart/HalCC2530Uart0IsrP.nc"
7331          static  /*inline*/  error_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__doUart0Init(ui
             -nt32_t baud)
7332          {
7333   1        uart0Init(baud);
7334   1        uart0IntEnable();
7335   1      
7336   1        return 0;
7337   1      }
7338          
7339          static  /*inline*/   error_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0StdContr
             -ol__start(void)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 131 

7340          {
7341   1        return /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__doUart0Init(9600);
7342   1      }
7343          
7344          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
7345          #define HplCC2530UartGenericP__0__subUartStdControl__start(void) HalCC2530Uart0IsrP__0__uart0StdControl__s
             -tart()
7346          //# 18 "/opt/atos/tos/chips/cc2530/usart/HplCC2530UartGenericP.nc"
7347          static  /*inline*/   error_t /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStdCon
             -trol__start(void)
7348          {
7349   1        /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_buf = (void *)0;
7350   1        /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_buf = (void *)0;
7351   1      
7352   1        /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_len = 0;
7353   1        /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_len = 0;
7354   1      
7355   1        /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_pos = 0;
7356   1        /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_pos = 0;
7357   1      
7358   1        return /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__subUartStdControl__start();
7359   1      }
7360          
7361          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
7362          #define DigBaseP__UartStdControl__start(void) HplCC2530UartGenericP__0__UartStdControl__start()
7363          //# 27 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareTxP.nc"
7364          static  /*inline*/   error_t RfHardwareTxP__StdControl__start(void)
7365          {
7366   1        /* atomic removed: atomic calls only */
7367   1        {
7368   2      
7369   2          do {
7370   3              (
7371   3      //#line 32
7372   3              (uint8_t xdata *)0)[0x61A4] &= ~(1 << 1);
7373   3            }
7374   2          while (
7375   2      //#line 32
7376   2          32 == -1);
7377   2          do {
7378   3      //#line 33
7379   3              S1CON = 0x00;
7380   3      //#line 33
7381   3              RFIRQF1 = ~(1 << 1);
7382   3            }
7383   2          while (
7384   2      //#line 33
7385   2          33 == -1);
7386   2        }
7387   1      
7388   1        return 0;
7389   1      }
7390          
7391          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
7392          #define RfHardwareP__TxControl__start(void) RfHardwareTxP__StdControl__start()
7393          //# 59 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
7394          static  /*inline*/    error_t RfInterruptsP__InterruptRFErr__enableRisingEdge(void)
7395          {
7396   1        /* atomic removed: atomic calls only */
7397   1      //#line 61
7398   1        {
7399   2          RFERRIF = 0;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 132 

7400   2          ((uint8_t xdata *)0)[0x61A5] = 1 << 2;
7401   2          RFERRIE = 1;
7402   2        }
7403   1        return 0;
7404   1      }
7405          
7406          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
7407          #define RfHardwareRxP__0__InterruptRFErr__enableRisingEdge(void) RfInterruptsP__InterruptRFErr__enableRisi
             -ngEdge()
7408          //# 36 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
7409          static  /*inline*/    error_t RfInterruptsP__InterruptFIFOP__enableRisingEdge(void)
7410          {
7411   1        /* atomic removed: atomic calls only */
7412   1      //#line 38
7413   1        {
7414   2          do {
7415   3              (
7416   3      //#line 39
7417   3              (uint8_t xdata *)0)[0x61A3] |= 1 << 2;
7418   3            }
7419   2          while (
7420   2      //#line 39
7421   2          39 == -1);
7422   2        }
7423   1        return 0;
7424   1      }
7425          
7426          //# 42 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
7427          #define RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge(void) RfInterruptsP__InterruptFIFOP__enableRisi
             -ngEdge()
7428          //# 33 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
7429          static  /*inline*/   error_t /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__StdControl__start(void)
7430          {
7431   1        {
7432   2      //#line 35
7433   2          /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHardwar
             -eRxP__0__rxbuf_tail = 0;
7434   2        }
7435   1      //#line 35
7436   1        ;
7437   1        {
7438   2      //#line 36
7439   2          do {
7440   3      //#line 36
7441   3              RFST = 0xED;
7442   3      //#line 36
7443   3              RFST = 0xED;
7444   3            }
7445   2          while (
7446   2      //#line 36
7447   2          36 == -1);
7448   2      //#line 36
7449   2          do {
7450   3      //#line 36
7451   3              S1CON = 0x00;
7452   3      //#line 36
7453   3              RFIRQF0 = ~(1 << 2);
7454   3            }
7455   2          while (
7456   2      //#line 36
7457   2          36 == -1);
7458   2        }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 133 

7459   1      //#line 36
7460   1        ;
7461   1      
7462   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__enableRisingEdge();
7463   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__enableRisingEdge();
7464   1      
7465   1        return 0;
7466   1      }
7467          
7468          //# 74 "/opt/tinyos-2.x/tos/interfaces/StdControl.nc"
7469          #define RfHardwareP__RxControl__start(void) RfHardwareRxP__0__StdControl__start()
7470          //# 57 "/opt/atos/tos/chips/rf2530/hardware/control/RfConfigP.nc"
7471          static  /*inline*/  void RfConfigP__writeTxPower(void)
7472          {
7473   1        /* atomic removed: atomic calls only */
7474   1        {
7475   2          do {
7476   3              (
7477   3      //#line 61
7478   3              (uint8_t xdata *)0)[0x6190] = RfConfigP__m_tx_power;
7479   3            }
7480   2          while (
7481   2      //#line 61
7482   2          61 == -1);
7483   2        }
7484   1      }
7485          
7486          //#line 52
7487          static  /*inline*/  void RfConfigP__writeFIFOPThrehold(void)
7488          {
7489   1        do {
7490   2            (
7491   2      //#line 54
7492   2            (uint8_t xdata *)0)[0x6194] = 128 - 1;
7493   2          }
7494   1        while (
7495   1      //#line 54
7496   1        54 == -1);
7497   1      }
7498          
7499          //#line 34
7500          static  /*inline*/  void RfConfigP__writeFilter(void)
7501          {
7502   1        /* atomic removed: atomic calls only */
7503   1        {
7504   2      
7505   2          if (RfConfigP__m_hw_auto_ack) {
7506   3            ((uint8_t xdata *)0)[0x6189] = 0x40 | (1 << 5);
7507   3            }
7508   2          else {
7509   3            (
7510   3      //#line 42
7511   3            (uint8_t xdata *)0)[0x6189] = 0x40;
7512   3            }
7513   2      
7514   2          if (RfConfigP__m_address_recognition) {
7515   3            do {
7516   4                (
7517   4      //#line 46
7518   4                (uint8_t xdata *)0)[0x6180] |= 1 << 0;
7519   4              }
7520   3            while (
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 134 

7521   3      //#line 46
7522   3            46 == -1);
7523   3            }
7524   2          else {
7525   3      //#line 48
7526   3            do {
7527   4                (
7528   4      //#line 48
7529   4                (uint8_t xdata *)0)[0x6180] &= ~(1 << 0);
7530   4              }
7531   3            while (
7532   3      //#line 48
7533   3            48 == -1);
7534   3            }
7535   2        }
7536   1      }
7537          
7538          //#line 26
7539          static  /*inline*/  void RfConfigP__writeChannel(void)
7540          {
7541   1        /* atomic removed: atomic calls only */
7542   1        {
7543   2          do {
7544   3              (
7545   3      //#line 30
7546   3              (uint8_t xdata *)0)[0x618F] = 0x0B + 5 * (RfConfigP__m_channel - 11);
7547   3            }
7548   2          while (
7549   2      //#line 30
7550   2          30 == -1);
7551   2        }
7552   1      }
7553          
7554          //#line 65
7555          static  /*inline*/  void RfConfigP__RfConfigWrite(void)
7556          {
7557   1        /* atomic removed: atomic calls only */
7558   1        {
7559   2          RfConfigP__writeChannel();
7560   2          RfConfigP__writeFilter();
7561   2          RfConfigP__writeFIFOPThrehold();
7562   2          RfConfigP__writeTxPower();
7563   2        }
7564   1      }
7565          
7566          //#line 135
7567          static  /*inline*/   void RfConfigP__RfConfig__flush(void)
7568          {
7569   1        RfConfigP__RfConfigWrite();
7570   1      }
7571          
7572          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfConfig.nc"
7573          #define RfHardwareP__RfConfig__flush(void) RfConfigP__RfConfig__flush()
7574          //# 85 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7575          static  /*inline*/   void RfPowerP__RfPower__rxOn(void)
7576          {
7577   1        /* atomic removed: atomic calls only */
7578   1      //#line 87
7579   1        do {
7580   2      //#line 87
7581   2            RFST = 0xED;
7582   2      //#line 87
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 135 

7583   2            RFST = 0xED;
7584   2          }
7585   1        while (
7586   1      //#line 87
7587   1        87 == -1);
7588   1        /* atomic removed: atomic calls only */
7589   1        do {
7590   2      //#line 89
7591   2            RFST = 0xE3;
7592   2          }
7593   1        while (
7594   1      //#line 89
7595   1        89 == -1);
7596   1      }
7597          
7598          //# 9 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7599          #define RfHardwareP__RfPower__rxOn(void) RfPowerP__RfPower__rxOn()
7600          //# 103 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7601          static  /*inline*/   void RfPowerP__RfPower__oscOn(void)
7602          {
7603   1      }
7604          
7605          //# 13 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7606          #define RfHardwareP__RfPower__oscOn(void) RfPowerP__RfPower__oscOn()
7607          //# 16 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7608          static  /*inline*/   void RfPowerP__RfPower__radioOn(void)
7609          {
7610   1        (
7611   1      //#line 31
7612   1        (uint8_t xdata *)0)[0x6196] = 0xF8;
7613   1        (
7614   1      
7615   1      
7616   1      
7617   1      
7618   1      
7619   1      
7620   1      
7621   1      
7622   1      
7623   1        (uint8_t xdata *)0)[0x61AE] = 0x00;
7624   1        (
7625   1      
7626   1        (uint8_t xdata *)0)[0x61B2] = 0x15;
7627   1        (
7628   1      //#line 58
7629   1        (uint8_t xdata *)0)[0x61FA] = 0x09;
7630   1        (
7631   1      
7632   1        (uint8_t xdata *)0)[0x61E5] = 0xFF;
7633   1      
7634   1      
7635   1        IEN2 |= 1 << 0;
7636   1      
7637   1      
7638   1        RFERRIE = 1;
7639   1      
7640   1      
7641   1      
7642   1      
7643   1      
7644   1      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 136 

7645   1      
7646   1        do {
7647   2            (
7648   2      //#line 75
7649   2            (uint8_t xdata *)0)[0x6164] = 0;
7650   2            (
7651   2      //#line 75
7652   2            (uint8_t xdata *)0)[0x6165] = 0;
7653   2            (
7654   2      //#line 75
7655   2            (uint8_t xdata *)0)[0x6166] = 0;
7656   2          }
7657   1        while (
7658   1      //#line 75
7659   1        75 == -1);
7660   1        do {
7661   2            (
7662   2      //#line 76
7663   2            (uint8_t xdata *)0)[0x6167] = 0;
7664   2            (
7665   2      //#line 76
7666   2            (uint8_t xdata *)0)[0x6168] = 0;
7667   2            (
7668   2      //#line 76
7669   2            (uint8_t xdata *)0)[0x6169] = 0;
7670   2          }
7671   1        while (
7672   1      //#line 76
7673   1        76 == -1);
7674   1      }
7675          
7676          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7677          #define RfHardwareP__RfPower__radioOn(void) RfPowerP__RfPower__radioOn()
7678          //# 11 "/opt/atos/tos/chips/rf2530/hardware/control/RfPowerP.nc"
7679          static  /*inline*/   void RfPowerP__RfPower__reset(void)
7680          {
7681   1      }
7682          
7683          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfPower.nc"
7684          #define RfHardwareP__RfPower__reset(void) RfPowerP__RfPower__reset()
7685          //# 19 "/opt/atos/tos/chips/rf2530/hardware/RfHardwareP.nc"
7686          static  /*inline*/   error_t RfHardwareP__AtosControl__start(void)
7687          {
7688   1      
7689   1        RfHardwareP__RfPower__reset();
7690   1        RfHardwareP__RfPower__radioOn();
7691   1        RfHardwareP__RfPower__oscOn();
7692   1        RfHardwareP__RfPower__rxOn();
7693   1      
7694   1      
7695   1        RfHardwareP__RfConfig__flush();
7696   1      
7697   1      
7698   1      
7699   1      
7700   1      
7701   1      
7702   1      
7703   1      
7704   1        RfHardwareP__RxControl__start();
7705   1        RfHardwareP__TxControl__start();
7706   1      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 137 

7707   1        return 0;
7708   1      }
7709          
7710          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7711          #define AtosMacP__HardwareAtosControl__start(void) RfHardwareP__AtosControl__start()
7712          //# 7 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
7713          #define RfMacBaseCsmaP__FlashIEEE__GetIEEE(arg_0x7ea50068) FlashIEEEP__FlashIEEE__GetIEEE(arg_0x7ea50068)
7714          //# 159 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
7715          static  /*inline*/    void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__stop(void)
7716          {
7717   1        /* atomic removed: atomic calls only */
7718   1      //#line 161
7719   1        T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
7720   1      }
7721          
7722          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
7723          #define TransformAlarmC__1__AlarmFrom__stop(void) HplCC2530Timer1P__0__Alarm1__stop()
7724          //# 91 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
7725          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__stop(void)
7726          {
7727   1        /* atomic removed: atomic calls only */
7728   1      //#line 93
7729   1        /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__stop();
7730   1      }
7731          
7732          //# 62 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
7733          #define RfMacBaseCsmaP__BackoffTimer__stop(void) TransformAlarmC__1__Alarm__stop()
7734          //# 226 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
7735          static  /*inline*/   error_t RfMacBaseCsmaP__AtosControl__start(void)
7736          {
7737   1        /* atomic removed: atomic calls only */
7738   1        {
7739   2          RfMacBaseCsmaP__BackoffTimer__stop();
7740   2          RfMacBaseCsmaP__m_cancel = FALSE;
7741   2          RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA;
7742   2          RfMacBaseCsmaP__m_congestion_count = 0;
7743   2      
7744   2          RfMacBaseCsmaP__m_started = TRUE;
7745   2      
7746   2          RfMacBaseCsmaP__m_congestion_delay = 0;
7747   2      
7748   2          RfMacBaseCsmaP__FlashIEEE__GetIEEE(RfMacBaseCsmaP__m_test_ieee);
7749   2      
7750   2          {
7751   3            unsigned char __nesc_temp = 
7752   3      //#line 241
7753   3            0;
7754   3      
7755   3      //#line 241
7756   3            return __nesc_temp;
7757   3          }
7758   2        }
7759   1      }
7760          
7761          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
7762          #define RfMacBaseSendP__0__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
7763          //# 96 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
7764          static  /*inline*/   /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC
             -.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(uint8_t idx)
7765          {
7766   1        /* atomic removed: atomic calls only */
7767   1        {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 138 

7768   2          /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t t = /*AMResourceCenterC.RfMacBaseSen
             -dC.QueueExC*/QueueExC__0__QueueEx__element(idx);
7769   2          uint8_t end = (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail + 4 - 1) % 4;
7770   2          uint8_t next_idx;
7771   2      
7772   2          if (!/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__empty()) 
7773   2            {
7774   3              idx += /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head;
7775   3              idx %= 4;
7776   3      
7777   3              while (idx != end) 
7778   3                {
7779   4                  next_idx = (idx + 1) % 4;
7780   4                  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[idx] = /*AMResourceCenterC.RfM
             -acBaseSendC.QueueExC*/QueueExC__0__queue[next_idx];
7781   4                  idx = next_idx;
7782   4                }
7783   3      
7784   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__tail = end;
7785   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__size--;
7786   3            }
7787   2      
7788   2          {
7789   3            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
7790   3      //#line 120
7791   3            t;
7792   3      
7793   3      //#line 120
7794   3            return __nesc_temp;
7795   3          }
7796   2        }
7797   1      }
7798          
7799          //#line 124
7800          static  /*inline*/   void /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__clear(void)
7801          {
7802   1        /* atomic removed: atomic calls only */
7803   1        {
7804   2          while (/*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__size() > 0) 
7805   2            {
7806   3              /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__QueueEx__remove(0);
7807   3            }
7808   2        }
7809   1      }
7810          
7811          //# 67 "/opt/atos/tos/lib/atos/utils/QueueEx.nc"
7812          #define RfMacBaseSendP__0__SendQueue__clear(void) QueueExC__0__QueueEx__clear()
7813          //# 186 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseSendP.nc"
7814          static  /*inline*/   error_t /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__AtosCon
             -trol__start(void)
7815          {
7816   1        /* atomic removed: atomic calls only */
7817   1        {
7818   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__SendQueue__clear();
7819   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_sending = FALSE;
7820   2      
7821   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_started = TRUE;
7822   2      
7823   2          /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__m_hardware_dsn = /*AMResourceCen
             -terC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__Random__rand16();
7824   2      
7825   2          {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 139 

7826   3            unsigned char __nesc_temp = 
7827   3      //#line 197
7828   3            0;
7829   3      
7830   3      //#line 197
7831   3            return __nesc_temp;
7832   3          }
7833   2        }
7834   1      }
7835          
7836          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7837          #define AMResourceCenterP__SubAtosControl__start(void) RfMacBaseSendP__0__AtosControl__start()
7838          //# 83 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
7839          static  /*inline*/   error_t AMResourceCenterP__AtosControl__start(void)
7840          {
7841   1        /* atomic removed: atomic calls only */
7842   1        {
7843   2          AMResourceCenterP__SubAtosControl__start();
7844   2      
7845   2          AMResourceCenterP__m_started = TRUE;
7846   2      
7847   2          {
7848   3            unsigned char __nesc_temp = 
7849   3      //#line 91
7850   3            0;
7851   3      
7852   3      //#line 91
7853   3            return __nesc_temp;
7854   3          }
7855   2        }
7856   1      }
7857          
7858          //# 75 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
7859          static  /*inline*/   error_t RfActiveMessageP__AtosControl__start(void)
7860          {
7861   1        /* atomic removed: atomic calls only */
7862   1        {
7863   2          RfActiveMessageP__m_started = TRUE;
7864   2      
7865   2          {
7866   3            unsigned char __nesc_temp = 
7867   3      //#line 81
7868   3            0;
7869   3      
7870   3      //#line 81
7871   3            return __nesc_temp;
7872   3          }
7873   2        }
7874   1      }
7875          
7876          //# 192 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
7877          static  /*inline*/   void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(uint8_t num)
7878          {
7879   1        /* atomic removed: atomic calls only */
7880   1      //#line 194
7881   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__m_timers[num].isrunning = FALSE;
7882   1      }
7883          
7884          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7885          #define RfReliableMacSendP__0__AckTimer__stop(void) VirtualizeTimerC__0__Timer__stop(1U)
7886          #define RfReliableMacSendP__0__TimeoutTimer__stop(void) VirtualizeTimerC__0__Timer__stop(2U)
7887          //# 204 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 140 

7888          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliab
             -leMacSendP*/RfReliableMacSendP__0__AtosControl__start(void)
7889          {
7890   1        /* atomic removed: atomic calls only */
7891   1        {
7892   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMac
             -SendP__0__m_sending = FALSE;
7893   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMac
             -SendP__0__m_result = FAIL;
7894   2      
7895   2      
7896   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMac
             -SendP__0__TimeoutTimer__stop();
7897   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMac
             -SendP__0__AckTimer__stop();
7898   2      
7899   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMac
             -SendP__0__m_started = TRUE;
7900   2      
7901   2          {
7902   3            unsigned char __nesc_temp = 
7903   3      //#line 217
7904   3            0;
7905   3      
7906   3      //#line 217
7907   3            return __nesc_temp;
7908   3          }
7909   2        }
7910   1      }
7911          
7912          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7913          #define RfReliableMacRetrySendP__0__SubAtosControl__start(void) RfReliableMacSendP__0__AtosControl__start(
             -)
7914          //# 151 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
7915          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/Rf
             -ReliableMacRetrySendP__0__AtosControl__start(void)
7916          {
7917   1        /* atomic removed: atomic calls only */
7918   1        {
7919   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0_
             -_m_sending = FALSE;
7920   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0_
             -_m_retry_times = 0;
7921   2      
7922   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0_
             -_SubAtosControl__start();
7923   2      
7924   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0_
             -_m_started = TRUE;
7925   2      
7926   2          {
7927   3            unsigned char __nesc_temp = 
7928   3      //#line 162
7929   3            0;
7930   3      
7931   3      //#line 162
7932   3            return __nesc_temp;
7933   3          }
7934   2        }
7935   1      }
7936          
7937          //# 101 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 141 

7938          static  /*inline*/   error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/R
             -fReliableMacReceiveP__0__AtosControl__start(void)
7939          {
7940   1        /* atomic removed: atomic calls only */
7941   1        {
7942   2          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0__
             -m_started = TRUE;
7943   2      
7944   2          memset(&/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__m_ack_msg, 0, sizeof /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__m_ack_msg);
7945   2      
7946   2          {
7947   3            unsigned char __nesc_temp = 
7948   3      //#line 109
7949   3            0;
7950   3      
7951   3      //#line 109
7952   3            return __nesc_temp;
7953   3          }
7954   2        }
7955   1      }
7956          
7957          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Timer.nc"
7958          #define RfReliableMacSendP__1__AckTimer__stop(void) VirtualizeTimerC__0__Timer__stop(3U)
7959          #define RfReliableMacSendP__1__TimeoutTimer__stop(void) VirtualizeTimerC__0__Timer__stop(4U)
7960          //# 204 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
7961          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__1__AtosControl__start(void)
7962          {
7963   1        /* atomic removed: atomic calls only */
7964   1        {
7965   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_sending = FALSE;
7966   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_result = FAIL;
7967   2      
7968   2      
7969   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__TimeoutTimer__stop();
7970   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__AckTimer__stop();
7971   2      
7972   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__1__m_started = TRUE;
7973   2      
7974   2          {
7975   3            unsigned char __nesc_temp = 
7976   3      //#line 217
7977   3            0;
7978   3      
7979   3      //#line 217
7980   3            return __nesc_temp;
7981   3          }
7982   2        }
7983   1      }
7984          
7985          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
7986          #define RfReliableMacRetrySendP__1__SubAtosControl__start(void) RfReliableMacSendP__1__AtosControl__start(
             -)
7987          //# 151 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
7988          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 142 

             -/RfReliableMacRetrySendP__1__AtosControl__start(void)
7989          {
7990   1        /* atomic removed: atomic calls only */
7991   1        {
7992   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_sending = FALSE;
7993   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_retry_times = 0;
7994   2      
7995   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__SubAtosControl__start();
7996   2      
7997   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_1__m_started = TRUE;
7998   2      
7999   2          {
8000   3            unsigned char __nesc_temp = 
8001   3      //#line 162
8002   3            0;
8003   3      
8004   3      //#line 162
8005   3            return __nesc_temp;
8006   3          }
8007   2        }
8008   1      }
8009          
8010          //# 101 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
8011          static  /*inline*/   error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
             -*/RfReliableMacReceiveP__1__AtosControl__start(void)
8012          {
8013   1        /* atomic removed: atomic calls only */
8014   1        {
8015   2          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__
             -1__m_started = TRUE;
8016   2      
8017   2          memset(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__1__m_ack_msg, 0, sizeof /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliabl
             -eMacReceiveP__1__m_ack_msg);
8018   2      
8019   2          {
8020   3            unsigned char __nesc_temp = 
8021   3      //#line 109
8022   3            0;
8023   3      
8024   3      //#line 109
8025   3            return __nesc_temp;
8026   3          }
8027   2        }
8028   1      }
8029          
8030          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
8031           /*inline*/  static  error_t AtosMacP__SubAtosControl__start(void){
8032   1      //#line 4
8033   1        unsigned char result;
8034   1      //#line 4
8035   1      
8036   1      //#line 4
8037   1        result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__AtosControl__start();
8038   1      //#line 4
8039   1        result = ecombine(result, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/
             -RfReliableMacRetrySendP__1__AtosControl__start());
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 143 

8040   1      //#line 4
8041   1        result = ecombine(result, /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/Rf
             -ReliableMacReceiveP__0__AtosControl__start());
8042   1      //#line 4
8043   1        result = ecombine(result, /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfR
             -eliableMacRetrySendP__0__AtosControl__start());
8044   1      //#line 4
8045   1        result = ecombine(result, RfActiveMessageP__AtosControl__start());
8046   1      //#line 4
8047   1        result = ecombine(result, AMResourceCenterP__AtosControl__start());
8048   1      //#line 4
8049   1        result = ecombine(result, RfMacBaseCsmaP__AtosControl__start());
8050   1      //#line 4
8051   1      
8052   1      //#line 4
8053   1        return result;
8054   1      //#line 4
8055   1      }
8056          //#line 4
8057          //# 41 "/opt/tinyos-2.x/tos/interfaces/Random.nc"
8058          #define AtosMacP__Random__rand16(void) CC2530RandomLfsrP__Random__rand16()
8059          //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AtosMacP.nc"
8060          static  /*inline*/   error_t AtosMacP__AtosControl__start(void)
8061          {
8062   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8063   2          {
8064   3            rf_rmac_dsn = AtosMacP__Random__rand16();
8065   3      
8066   3            AtosMacP__SubAtosControl__start();
8067   3            AtosMacP__HardwareAtosControl__start();
8068   3      
8069   3            AtosMacP__m_started = TRUE;
8070   3      
8071   3            {
8072   4              unsigned char __nesc_temp = 
8073   4      //#line 28
8074   4              0;
8075   4      
8076   4              {
8077   5      //#line 28
8078   5                __nesc_atomic_end(__nesc_atomic); 
8079   5      //#line 28
8080   5                return __nesc_temp;
8081   5              }
8082   4            }
8083   3          }
8084   2      //#line 31
8085   2          __nesc_atomic_end(__nesc_atomic); }
8086   1      }
8087          
8088          //# 4 "/opt/atos/tos/lib/atos/common/AtosControl.nc"
8089          #define DigBaseP__AtosControl__start(void) AtosMacP__AtosControl__start()
8090          //# 176 "DigBaseP.nc"
8091          static  /*inline*/   void DigBaseP__Boot__booted(void)
8092          {
8093   1      
8094   1        DigBaseP__AtosControl__start();
8095   1      
8096   1      
8097   1        DigBaseP__UartStdControl__start();
8098   1        {
8099   2      //#line 183
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 144 

8100   2          P1_3 = 1;
8101   2        }
8102   1      //#line 183
8103   1        ;
8104   1        {
8105   2      //#line 184
8106   2          P1_2 = 1;
8107   2        }
8108   1      //#line 184
8109   1        ;
8110   1      
8111   1        {
8112   2      //#line 186
8113   2          {
8114   3      //#line 186
8115   3            if (1000 >= uart_debug_level) {
8116   4      //#line 186
8117   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8118   5      //#line 186
8119   5                  {
8120   6      //#line 186
8121   6                    sprintf(uart_debug_buf, "\r\n###############################################\r\n");
8122   6                  }
8123   5      //#line 187
8124   5                  __nesc_atomic_end(__nesc_atomic); }
8125   4      //#line 186
8126   4                ATOS_DEBUG_UART_PRINT();
8127   4              }
8128   3          }
8129   2        }
8130   1      //#line 186
8131   1        ;
8132   1        {
8133   2      //#line 187
8134   2          {
8135   3      //#line 187
8136   3            if (1000 >= uart_debug_level) {
8137   4      //#line 187
8138   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8139   5      //#line 187
8140   5                  {
8141   6      //#line 187
8142   6                    sprintf(uart_debug_buf, "   My Address = 0x%x, Group = 0x%x\r\n", (int )DigBaseP__AMPacket__
             -address(), (int )TOS_IEEE_PANID);
8143   6                  }
8144   5      //#line 188
8145   5                  __nesc_atomic_end(__nesc_atomic); }
8146   4      //#line 187
8147   4                ATOS_DEBUG_UART_PRINT();
8148   4              }
8149   3          }
8150   2        }
8151   1      //#line 187
8152   1        ;
8153   1        {
8154   2      //#line 188
8155   2          {
8156   3      //#line 188
8157   3            if (1000 >= uart_debug_level) {
8158   4      //#line 188
8159   4                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8160   5      //#line 188
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 145 

8161   5                  {
8162   6      //#line 188
8163   6                    sprintf(uart_debug_buf, "###############################################\r\n");
8164   6                  }
8165   5      //#line 189
8166   5                  __nesc_atomic_end(__nesc_atomic); }
8167   4      //#line 188
8168   4                ATOS_DEBUG_UART_PRINT();
8169   4              }
8170   3          }
8171   2        }
8172   1      //#line 188
8173   1        ;
8174   1      
8175   1        DigBaseP__m_input_type = DigBaseP__INPUT_ADDRESS;
8176   1        DigBaseP__showMenu__postTask();
8177   1      }
8178          
8179          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
8180          #define RealMainP__Boot__booted(void) DigBaseP__Boot__booted()
8181          //# 81 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8182          static  /*inline*/    void McuSleepP__McuSleepControl__default__afterWakeup(void)
8183          {
8184   1      }
8185          
8186          //# 10 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
8187          #define McuSleepP__McuSleepControl__afterWakeup(void) McuSleepP__McuSleepControl__default__afterWakeup()
8188          //# 84 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8189          static  /*inline*/    error_t McuSleepP__ModuleReset__default__reset(uint8_t reset_level)
8190          {
8191   1      }
8192          
8193          //# 6 "/opt/atos/tos/lib/atos/utils/ModuleReset.nc"
8194          #define McuSleepP__ModuleReset__reset(arg_0x7ebe5310) McuSleepP__ModuleReset__default__reset(arg_0x7ebe531
             -0)
8195          //# 65 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
8196          static   /*inline*/   void __nesc_enable_interrupt(void)
8197          //#line 65
8198          {
8199   1      //#line 65
8200   1        EA = 1;
8201   1      }
8202          
8203          //# 78 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8204          static  /*inline*/    void McuSleepP__McuSleepControl__default__beforeSleep(void)
8205          {
8206   1      }
8207          
8208          //# 8 "/opt/atos/tos/lib/atos/power/McuSleepControl.nc"
8209          #define McuSleepP__McuSleepControl__beforeSleep(void) McuSleepP__McuSleepControl__default__beforeSleep()
8210          //# 36 "/opt/atos/tos/lib/atos/power/McuSleepP.nc"
8211          static  /*inline*/    void McuSleepP__McuSleep__sleep(void)
8212          {
8213   1      
8214   1      
8215   1        if (McuSleepP__m_need_sleep) 
8216   1          {
8217   2      
8218   2            ;
8219   2      
8220   2            do {
8221   3      //#line 45
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 146 

8222   3                SLEEPCMD = (SLEEPCMD & ~CC2530_SLEEP_MODE_MASK) | CC2530_SLEEP_POWERMODE_2;
8223   3              }
8224   2            while (
8225   2      //#line 45
8226   2            0);
8227   2      
8228   2            McuSleepP__McuSleepControl__beforeSleep();
8229   2      
8230   2            ;
8231   2            __nesc_enable_interrupt();
8232   2      
8233   2            {
8234   3      //#line 52
8235   3              P1_3 = 1;
8236   3            }
8237   2      //#line 52
8238   2            ;
8239   2      
8240   2            McuSleepP__m_need_sleep = FALSE;
8241   2            {
8242   3      //#line 55
8243   3              PCON = 0x01;
8244   3            }
8245   2      //#line 55
8246   2            ;
8247   2      
8248   2      
8249   2      
8250   2      
8251   2      
8252   2      
8253   2            ;
8254   2      
8255   2            {
8256   3      //#line 64
8257   3              P1_3 = 0;
8258   3            }
8259   2      //#line 64
8260   2            ;
8261   2      
8262   2            McuSleepP__ModuleReset__reset(0);
8263   2            ;
8264   2      
8265   2            McuSleepP__McuSleepControl__afterWakeup();
8266   2          }
8267   1        else 
8268   1          {
8269   2          }
8270   1      }
8271          
8272          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
8273          #define SchedulerBasicP__McuSleep__sleep(void) McuSleepP__McuSleep__sleep()
8274          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
8275          #define SchedulerBasicP__TopTaskMgr__hasTasks(void) TopTaskMgrP__TopTaskMgr__hasTasks()
8276          //# 47 "/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc"
8277          static  /*inline*/    void /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow
             -(void)
8278          {
8279   1      }
8280          
8281          //# 170 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8282          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 147 

             -(void)
8283          {
8284   1      }
8285          
8286          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8287           /*inline*/  static   void /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow(void){
8288   1      //#line 71
8289   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow();
8290   1      //#line 71
8291   1        /*HilTimerMilliC.CounterToLocalTimeC*/CounterToLocalTimeC__0__Counter__overflow();
8292   1      //#line 71
8293   1      }
8294          //#line 71
8295          //# 125 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
8296          static  /*inline*/    void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void)
8297          {
8298   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8299   2          {
8300   3            /*CounterMilli32C.Transform*/TransformCounterC__0__m_upper++;
8301   3      
8302   3            if ((/*CounterMilli32C.Transform*/TransformCounterC__0__m_upper & /*CounterMilli32C.Transform*/Trans
             -formCounterC__0__OVERFLOW_MASK) == 0) 
8303   3              {
8304   4                /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow();
8305   4              }
8306   3          }
8307   2      //#line 135
8308   2          __nesc_atomic_end(__nesc_atomic); }
8309   1      }
8310          
8311          //# 170 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8312          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Counter__overflow
             -(void)
8313          {
8314   1      }
8315          
8316          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8317          #define TransformCounterC__1__Counter__overflow(void) TransformAlarmC__1__Counter__overflow()
8318          //# 125 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
8319          static  /*inline*/    void /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflo
             -w(void)
8320          {
8321   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8322   2          {
8323   3            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__m_upper++;
8324   3      
8325   3            if ((/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__m_upper & /*Counter32khz32C.Transfor
             -mCounterC*/TransformCounterC__1__OVERFLOW_MASK) == 0) 
8326   3              {
8327   4                /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__Counter__overflow();
8328   4              }
8329   3          }
8330   2      //#line 135
8331   2          __nesc_atomic_end(__nesc_atomic); }
8332   1      }
8333          
8334          //# 71 "/opt/tinyos-2.x/tos/lib/timer/Counter.nc"
8335           /*inline*/  static   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow(voi
             -d){
8336   1      //#line 71
8337   1        /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__overflow();
8338   1      //#line 71
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 148 

8339   1        /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow();
8340   1      //#line 71
8341   1      }
8342          //#line 71
8343          //# 534 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
8344          static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__default__fir
             -ed(void)
8345          //#line 534
8346          {
8347   1      }
8348          
8349          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8350          #define HplCC2530Timer1P__0__Alarm2__fired(void) HplCC2530Timer1P__0__Alarm2__default__fired()
8351          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8352          #define RfMacBaseCsmaP__doGo__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfMacBaseCsmaP__doGo)
8353          //# 83 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
8354          static  /*inline*/  uint32_t RfMacBaseCsmaP__congestionBackoffTimer(void)
8355          {
8356   1        RfMacBaseCsmaP__m_this_random = RfMacBaseCsmaP__Random__rand16() % RfMacBaseCsmaP__m_congestion_delay;
8357   1        if (RfMacBaseCsmaP__m_this_random == 0) {
8358   2      //#line 86
8359   2          RfMacBaseCsmaP__m_this_random = 1;
8360   2          }
8361   1      //#line 87
8362   1        RfMacBaseCsmaP__m_this_delay += RfMacBaseCsmaP__m_this_random;
8363   1        return (uint32_t )RfMacBaseCsmaP__m_this_random * RfMacBaseCsmaP__RF_BACKOFF_PERIOD;
8364   1      }
8365          
8366          static  /*inline*/  void RfMacBaseCsmaP__congestion(void)
8367          {
8368   1      
8369   1      
8370   1        if (RfMacBaseCsmaP__m_congestion_count++ < RfMacBaseCsmaP__RF_CONGESTION_MAX) 
8371   1          {
8372   2            RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__congestionBackoffTimer());
8373   2          }
8374   1        else 
8375   1          {
8376   2            RfMacBaseCsmaP__signalDone(ERR_MAC_CONGESTION_FAIL);
8377   2          }
8378   1      }
8379          
8380          //#line 135
8381          static  /*inline*/    void RfMacBaseCsmaP__BackoffTimer__fired(void)
8382          {
8383   1        if (!(((uint8_t xdata *)0)[0x6193] & (1 << 4))) 
8384   1          {
8385   2            RfMacBaseCsmaP__congestion();
8386   2            return;
8387   2          }
8388   1      
8389   1      
8390   1      
8391   1      
8392   1        if (RfMacBaseCsmaP__m_state == RfMacBaseCsmaP__CSMA_STATE_SAMPLE_CCA) 
8393   1          {
8394   2            RfMacBaseCsmaP__m_state = RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND;
8395   2      
8396   2      
8397   2            RfMacBaseCsmaP__BackoffTimer__start(RfMacBaseCsmaP__RF_TIME_ACK_TURNAROUND);
8398   2          }
8399   1        else {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 149 

8400   2      //#line 153
8401   2          if (RfMacBaseCsmaP__m_state == RfMacBaseCsmaP__CSMA_STATE_BEGIN_SEND) 
8402   2            {
8403   3              RfMacBaseCsmaP__doGo__postTask();
8404   3            }
8405   2          else 
8406   2            {
8407   3            }
8408   2          }
8409   1      }
8410          
8411          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8412          #define TransformAlarmC__1__Alarm__fired(void) RfMacBaseCsmaP__BackoffTimer__fired()
8413          //# 155 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8414          static  /*inline*/    void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__fired(
             -void)
8415          {
8416   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8417   2          {
8418   3            if (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt == 0) 
8419   3              {
8420   4                /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__Alarm__fired();
8421   4              }
8422   3            else 
8423   3              {
8424   4                /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm();
8425   4              }
8426   3          }
8427   2      //#line 167
8428   2          __nesc_atomic_end(__nesc_atomic); }
8429   1      }
8430          
8431          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8432          #define HplCC2530Timer1P__0__Alarm1__fired(void) TransformAlarmC__1__AlarmFrom__fired()
8433          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8434          #define AlarmToTimerC__0__firedTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AlarmToTimerC__0_
             -_firedTask)
8435          //# 93 "/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc"
8436          static  /*inline*/    void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void)
8437          {
8438   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__postTask();
8439   1      }
8440          
8441          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8442          #define TransformAlarmC__0__Alarm__fired(void) AlarmToTimerC__0__Alarm__fired()
8443          //# 155 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
8444          static  /*inline*/    void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(
             -void)
8445          {
8446   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8447   2          {
8448   3            if (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt == 0) 
8449   3              {
8450   4                /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired();
8451   4              }
8452   3            else 
8453   3              {
8454   4                /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm();
8455   4              }
8456   3          }
8457   2      //#line 167
8458   2          __nesc_atomic_end(__nesc_atomic); }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 150 

8459   1      }
8460          
8461          //# 67 "/opt/tinyos-2.x/tos/lib/timer/Alarm.nc"
8462          #define HplCC2530Timer1P__0__Alarm0__fired(void) TransformAlarmC__0__AlarmFrom__fired()
8463          //# 403 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
8464          static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handle
             -r(void)
8465          {
8466   1        uint8_t flag;
8467   1      
8468   1        do {
8469   2      //#line 407
8470   2            m_critical_state = EA;
8471   2      //#line 407
8472   2            EA = 0;
8473   2          }
8474   1        while (
8475   1      //#line 407
8476   1        407 == -1);
8477   1      
8478   1        {
8479   2          flag = /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag;
8480   2          /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag = 0x00;
8481   2        }
8482   1      
8483   1        do {
8484   2      //#line 414
8485   2            EA = m_critical_state;
8486   2          }
8487   1        while (
8488   1      //#line 414
8489   1        414 == -1);
8490   1      
8491   1      
8492   1        if (flag & (1 << 0)) 
8493   1          {
8494   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm0__fired();
8495   2          }
8496   1      
8497   1        if (flag & (1 << 1)) 
8498   1          {
8499   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm1__fired();
8500   2          }
8501   1      
8502   1        if (flag & (1 << 2)) 
8503   1          {
8504   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Alarm2__fired();
8505   2          }
8506   1      
8507   1        if (flag & (1 << 3)) 
8508   1          {
8509   2          }
8510   1      
8511   1      
8512   1        if (flag & (1 << 4)) 
8513   1          {
8514   2          }
8515   1      
8516   1      
8517   1        if (flag & (1 << 5)) 
8518   1          {
8519   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__overflow();
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 151 

8520   2          }
8521   1      
8522   1      
8523   1        if (/*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag) 
8524   1          {
8525   2            {
8526   3      //#line 450
8527   3              { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8528   4      //#line 450
8529   4                {
8530   5      //#line 450
8531   5                  TopTaskMgrP__m_task_flag[0] = TRUE;
8532   5                }
8533   4      //#line 451
8534   4                __nesc_atomic_end(__nesc_atomic); }
8535   3            }
8536   2      //#line 450
8537   2            ;
8538   2          }
8539   1      }
8540          
8541          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8542          #define DigBaseP__sendData__postTask(void) SchedulerBasicP__TaskBasic__postTask(DigBaseP__sendData)
8543          //# 134 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
8544          static  /*inline*/   uint8_t RfPacketP__Packet__maxPayloadLength(void)
8545          {
8546   1        return 127 - (sizeof(rf_header_t ) - 1 + sizeof(uint16_t )) - 0;
8547   1      }
8548          
8549          //# 95 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
8550          #define RfReliableMacPacketP__SubPacket__maxPayloadLength(void) RfPacketP__Packet__maxPayloadLength()
8551          //# 30 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
8552          static  /*inline*/   uint8_t RfReliableMacPacketP__Packet__maxPayloadLength(void)
8553          {
8554   1        return RfReliableMacPacketP__SubPacket__maxPayloadLength() - sizeof(rf_rmac_header_t );
8555   1      }
8556          
8557          //# 95 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
8558          #define DigBaseP__Packet__maxPayloadLength(void) RfReliableMacPacketP__Packet__maxPayloadLength()
8559          //# 125 "DigBaseP.nc"
8560          static  /*inline*/    void DigBaseP__UartStream__receivedByte(uint8_t c)
8561          {
8562   1      
8563   1        if (c != '\r') 
8564   1          {
8565   2            if (DigBaseP__m_input_type == DigBaseP__INPUT_DATA) 
8566   2              {
8567   3                uint8_t *payload = (uint8_t *)DigBaseP__Packet__getPayload(&DigBaseP__m_msg, (void *)0);
8568   3      
8569   3      //#line 133
8570   3                if (DigBaseP__m_len >= DigBaseP__Packet__maxPayloadLength()) 
8571   3                  {
8572   4                    return;
8573   4                  }
8574   3      
8575   3                *payload = c;
8576   3                {
8577   4      //#line 139
8578   4                  {
8579   5      //#line 139
8580   5                    if (1000 >= uart_debug_level) {
8581   6      //#line 139
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 152 

8582   6                        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8583   7      //#line 139
8584   7                          {
8585   8      //#line 139
8586   8                            sprintf(uart_debug_buf, "%c", c);
8587   8                          }
8588   7      //#line 140
8589   7                          __nesc_atomic_end(__nesc_atomic); }
8590   6      //#line 139
8591   6                        ATOS_DEBUG_UART_PRINT();
8592   6                      }
8593   5                  }
8594   4                }
8595   3      //#line 139
8596   3                ;
8597   3      
8598   3                if (DigBaseP__m_len < DigBaseP__Packet__maxPayloadLength()) 
8599   3                  {
8600   4                    return;
8601   4                  }
8602   3              }
8603   2            else 
8604   2              {
8605   3                if (DigBaseP__m_address_index < DigBaseP__MAX_ADDRESS_LEN) 
8606   3                  {
8607   4                    DigBaseP__m_address_str[DigBaseP__m_address_index++] = c;
8608   4                    {
8609   5      //#line 151
8610   5                      {
8611   6      //#line 151
8612   6                        if (1000 >= uart_debug_level) {
8613   7      //#line 151
8614   7                            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8615   8      //#line 151
8616   8                              {
8617   9      //#line 151
8618   9                                sprintf(uart_debug_buf, "%c", c);
8619   9                              }
8620   8      //#line 152
8621   8                              __nesc_atomic_end(__nesc_atomic); }
8622   7      //#line 151
8623   7                            ATOS_DEBUG_UART_PRINT();
8624   7                          }
8625   6                      }
8626   5                    }
8627   4      //#line 151
8628   4                    ;
8629   4                  }
8630   3      
8631   3                if (DigBaseP__m_address_index < DigBaseP__MAX_ADDRESS_LEN) 
8632   3                  {
8633   4                    return;
8634   4                  }
8635   3              }
8636   2          }
8637   1        else {
8638   2      
8639   2            if (DigBaseP__m_input_type == DigBaseP__INPUT_DATA) 
8640   2              {
8641   3                DigBaseP__sendData__postTask();
8642   3              }
8643   2            else 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 153 

8644   2              {
8645   3      
8646   3                DigBaseP__m_input_type = DigBaseP__INPUT_DATA;
8647   3                DigBaseP__showMenu__postTask();
8648   3              }
8649   2          }
8650   1      }
8651          
8652          //# 79 "/opt/tinyos-2.x/tos/interfaces/UartStream.nc"
8653          #define HplCC2530UartGenericP__0__UartStream__receivedByte(arg_0x7eb73860) DigBaseP__UartStream__receivedB
             -yte(arg_0x7eb73860)
8654          //# 199 "DigBaseP.nc"
8655          static  /*inline*/    void DigBaseP__UartStream__receiveDone(uint8_t *buf, uint16_t len, error_t error)
8656          {
8657   1      }
8658          
8659          //# 99 "/opt/tinyos-2.x/tos/interfaces/UartStream.nc"
8660          #define HplCC2530UartGenericP__0__UartStream__receiveDone(arg_0x7eb72540,arg_0x7eb726d0,arg_0x7eb72858) Di
             -gBaseP__UartStream__receiveDone(arg_0x7eb72540, arg_0x7eb726d0, arg_0x7eb72858)
8661          //# 70 "/opt/atos/tos/chips/cc2530/usart/HplCC2530UartGenericP.nc"
8662          static  /*inline*/    void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__Uart__get(ui
             -nt8_t _data)
8663          {
8664   1        if (/*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_buf) 
8665   1          {
8666   2            /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_buf[/*HplCC2530Uart0C.HplCC2
             -530UartGenericP*/HplCC2530UartGenericP__0__m_rx_pos++] = _data;
8667   2            if (/*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_pos >= /*HplCC2530Uart0C
             -.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_len) 
8668   2              {
8669   3                uint8_t *buf = /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_buf;
8670   3      
8671   3      //#line 78
8672   3                /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_buf = (void *)0;
8673   3                /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStream__receiveDone(buf, 
             -/*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_rx_len, 0);
8674   3              }
8675   2          }
8676   1        else 
8677   1          {
8678   2            /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStream__receivedByte(_data);
8679   2          }
8680   1      }
8681          
8682          //# 47 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
8683          #define HalCC2530Uart0IsrP__0__uart0__get(arg_0x7e7108d8) HplCC2530UartGenericP__0__Uart__get(arg_0x7e7108
             -d8)
8684          //# 104 "/opt/atos/tos/chips/cc2530/usart/HalCC2530Uart0IsrP.nc"
8685          static  /*inline*/   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__RxTaskHandler__h
             -andler(void)
8686          {
8687   1        uint8_t _data;
8688   1      
8689   1        if (!(/*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_head == /*HalCC2530Uart0
             -IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_tail)) 
8690   1          {
8691   2            {
8692   3      //#line 110
8693   3              _data = /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf__data[/*HalCC253
             -0Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_head & ((1 << 6) - 1)];
8694   3      //#line 110
8695   3              /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_head = (/*HalCC2530Uart0
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 154 

             -IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_head + 1) & ((1 << 6) - 1);
8696   3            }
8697   2      //#line 110
8698   2            ;
8699   2      
8700   2            /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0__get(_data);
8701   2      
8702   2            if (!(/*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_head == /*HalCC2530U
             -art0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_tail)) 
8703   2              {
8704   3                {
8705   4      //#line 116
8706   4                  { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8707   5      //#line 116
8708   5                    {
8709   6      //#line 116
8710   6                      TopTaskMgrP__m_task_flag[1] = TRUE;
8711   6                    }
8712   5      //#line 117
8713   5                    __nesc_atomic_end(__nesc_atomic); }
8714   4                }
8715   3      //#line 116
8716   3                ;
8717   3              }
8718   2          }
8719   1      }
8720          
8721          //# 195 "DigBaseP.nc"
8722          static  /*inline*/    void DigBaseP__UartStream__sendDone(uint8_t *buf, uint16_t len, error_t error)
8723          {
8724   1      }
8725          
8726          //# 57 "/opt/tinyos-2.x/tos/interfaces/UartStream.nc"
8727          #define HplCC2530UartGenericP__0__UartStream__sendDone(arg_0x7eb747c8,arg_0x7eb74958,arg_0x7eb74ae0) DigBa
             -seP__UartStream__sendDone(arg_0x7eb747c8, arg_0x7eb74958, arg_0x7eb74ae0)
8728          //# 41 "/opt/atos/tos/chips/cc2530/usart/HalCC2530Uart0IsrP.nc"
8729          static  /*inline*/    error_t /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0__put(u
             -int8_t _data)
8730          {
8731   1      
8732   1      
8733   1      
8734   1        uart0PutChar(_data);
8735   1        {
8736   2      //#line 47
8737   2          { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8738   3      //#line 47
8739   3            {
8740   4      //#line 47
8741   4              TopTaskMgrP__m_task_flag[2] = TRUE;
8742   4            }
8743   3      //#line 48
8744   3            __nesc_atomic_end(__nesc_atomic); }
8745   2        }
8746   1      //#line 47
8747   1        ;
8748   1      
8749   1      
8750   1        return 0;
8751   1      }
8752          
8753          //# 41 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 155 

8754          #define HplCC2530UartGenericP__0__Uart__put(arg_0x7e710338) HalCC2530Uart0IsrP__0__uart0__put(arg_0x7e7103
             -38)
8755          //# 106 "/opt/atos/tos/chips/cc2530/usart/HplCC2530UartGenericP.nc"
8756          static  /*inline*/    void /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__Uart__putDon
             -e(void)
8757          {
8758   1        if (/*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_pos < /*HplCC2530Uart0C.HplC
             -C2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_len) 
8759   1          {
8760   2            /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__Uart__put(/*HplCC2530Uart0C.HplCC
             -2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_buf[/*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__
             -m_tx_pos++]);
8761   2          }
8762   1        else 
8763   1          {
8764   2            uint8_t *buf = /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_buf;
8765   2      
8766   2      //#line 115
8767   2            /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_buf = (void *)0;
8768   2            /*HplCC2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__UartStream__sendDone(buf, /*HplCC
             -2530Uart0C.HplCC2530UartGenericP*/HplCC2530UartGenericP__0__m_tx_len, 0);
8769   2          }
8770   1      }
8771          
8772          //# 53 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
8773          #define HalCC2530Uart0IsrP__0__uart0__putDone(void) HplCC2530UartGenericP__0__Uart__putDone()
8774          //# 121 "/opt/atos/tos/chips/cc2530/usart/HalCC2530Uart0IsrP.nc"
8775          static  /*inline*/   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__TxTaskHandler__h
             -andler(void)
8776          {
8777   1        /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uart0__putDone();
8778   1      }
8779          
8780          //# 257 "/usr/lib/ncc/nesc_nx.h"
8781          static   /*inline*/   int8_t __nesc_ntoh_int8(const void *source)
8782          //#line 257
8783          {
8784   1      //#line 257
8785   1        return __nesc_ntoh_uint8(source);
8786   1      }
8787          
8788          //# 67 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
8789          static  /*inline*/    message_t *RfActiveMessageP__Snoop__default__receive(uint8_t id, message_t *msg, voi
             -d *payload, uint8_t len)
8790          {
8791   1      }
8792          
8793          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
8794          #define RfActiveMessageP__Snoop__receive(arg_0x7e398bb0,arg_0x7eb51ca0,arg_0x7eb51e40,arg_0x7eb50010) RfAc
             -tiveMessageP__Snoop__default__receive(arg_0x7e398bb0, arg_0x7eb51ca0, arg_0x7eb51e40, arg_0x7eb50010)
8795          //# 204 "DigBaseP.nc"
8796          static  /*inline*/   message_t *DigBaseP__Receive__receive(message_t *msg, void *payload, uint8_t len)
8797          {
8798   1        float temp;
8799   1      //#line 206
8800   1        float hum;
8801   1        uint8_t i;
8802   1      
8803   1      //#line 208
8804   1        if (len == 2) 
8805   1          {
8806   2            {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 156 

8807   3      //#line 210
8808   3              {
8809   4      //#line 210
8810   4                if (1000 >= uart_debug_level) {
8811   5      //#line 210
8812   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8813   6      //#line 210
8814   6                      {
8815   7      //#line 210
8816   7                        sprintf(uart_debug_buf, "l%02x", (int )((uint8_t *)payload)[0]);
8817   7                      }
8818   6      //#line 211
8819   6                      __nesc_atomic_end(__nesc_atomic); }
8820   5      //#line 210
8821   5                    ATOS_DEBUG_UART_PRINT();
8822   5                  }
8823   4              }
8824   3            }
8825   2      //#line 210
8826   2            ;
8827   2            {
8828   3      //#line 211
8829   3              {
8830   4      //#line 211
8831   4                if (1000 >= uart_debug_level) {
8832   5      //#line 211
8833   5                    { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8834   6      //#line 211
8835   6                      {
8836   7      //#line 211
8837   7                        sprintf(uart_debug_buf, "%02x\r\n", (int )((uint8_t *)payload)[1]);
8838   7                      }
8839   6      //#line 212
8840   6                      __nesc_atomic_end(__nesc_atomic); }
8841   5      //#line 211
8842   5                    ATOS_DEBUG_UART_PRINT();
8843   5                  }
8844   4              }
8845   3            }
8846   2      //#line 211
8847   2            ;
8848   2          }
8849   1        else 
8850   1      //#line 212
8851   1          {
8852   2            memcpy(&temp, (float *)payload, 4);
8853   2            memcpy(&hum, (float *)(payload + 4), 4);
8854   2            if (DigBaseP__sensor_type == 0) 
8855   2              {
8856   3                {
8857   4      //#line 217
8858   4                  {
8859   5      //#line 217
8860   5                    if (1000 >= uart_debug_level) {
8861   6      //#line 217
8862   6                        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8863   7      //#line 217
8864   7                          {
8865   8      //#line 217
8866   8                            sprintf(uart_debug_buf, "h%f\r\n", temp);
8867   8                          }
8868   7      //#line 218
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 157 

8869   7                          __nesc_atomic_end(__nesc_atomic); }
8870   6      //#line 217
8871   6                        ATOS_DEBUG_UART_PRINT();
8872   6                      }
8873   5                  }
8874   4                }
8875   3      //#line 217
8876   3                ;
8877   3                DigBaseP__sensor_type = 1;
8878   3              }
8879   2            else 
8880   2      //#line 219
8881   2              {
8882   3                {
8883   4      //#line 220
8884   4                  {
8885   5      //#line 220
8886   5                    if (1000 >= uart_debug_level) {
8887   6      //#line 220
8888   6                        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8889   7      //#line 220
8890   7                          {
8891   8      //#line 220
8892   8                            sprintf(uart_debug_buf, "s%f\r\n", hum);
8893   8                          }
8894   7      //#line 221
8895   7                          __nesc_atomic_end(__nesc_atomic); }
8896   6      //#line 220
8897   6                        ATOS_DEBUG_UART_PRINT();
8898   6                      }
8899   5                  }
8900   4                }
8901   3      //#line 220
8902   3                ;
8903   3                DigBaseP__sensor_type = 0;
8904   3              }
8905   2      
8906   2      
8907   2      
8908   2      
8909   2      
8910   2      
8911   2            {
8912   3      //#line 229
8913   3              P1_3 = ~P1_3;
8914   3            }
8915   2      //#line 229
8916   2            ;
8917   2      
8918   2            DigBaseP__m_input_type = DigBaseP__INPUT_ADDRESS;
8919   2          }
8920   1      }
8921          
8922          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
8923          #define RfReliableMacReceiveP__0__Receive__receive(arg_0x7eb51ca0,arg_0x7eb51e40,arg_0x7eb50010) DigBaseP_
             -_Receive__receive(arg_0x7eb51ca0, arg_0x7eb51e40, arg_0x7eb50010)
8924          //# 54 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
8925          static  /*inline*/   am_addr_t RfPacketP__AMPacket__source(message_t *amsg)
8926          {
8927   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->src);
8928   1      }
8929          
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 158 

8930          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8931          #define RfReliableMacReceiveP__0__AMPacket__source(arg_0x7eb42b90) RfPacketP__AMPacket__source(arg_0x7eb42
             -b90)
8932          //# 92 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
8933          static  /*inline*/   bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__DsnFilter__filter(uint
             -8_t field_id, uint16_t addr, uint8_t dsn)
8934          {
8935   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
8936   2          {
8937   3            {
8938   4              unsigned char __nesc_temp = 
8939   4      //#line 96
8940   4              /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(addr, field_id, dsn);
8941   4      
8942   4              {
8943   5      //#line 96
8944   5                __nesc_atomic_end(__nesc_atomic); 
8945   5      //#line 96
8946   5                return __nesc_temp;
8947   5              }
8948   4            }
8949   3          }
8950   2      //#line 99
8951   2          __nesc_atomic_end(__nesc_atomic); }
8952   1      }
8953          
8954          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
8955          #define RfReliableMacReceiveP__0__DsnFilter__filter(arg_0x7e3c9ba8,arg_0x7e3c9d30) DsnFilterCenterP__0__Ds
             -nFilter__filter(0U, arg_0x7e3c9ba8, arg_0x7e3c9d30)
8956          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
8957          #define RfReliableMacReceiveP__0__sendAckTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacReceiveP__0__sendAckTask)
8958          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8959          #define RfReliableMacReceiveP__0__AMPacket__setDestination(arg_0x7eb40190,arg_0x7eb40320) RfPacketP__AMPac
             -ket__setDestination(arg_0x7eb40190, arg_0x7eb40320)
8960          //# 86 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
8961          static  /*inline*/   am_group_t RfPacketP__AMPacket__group(message_t *amsg)
8962          {
8963   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->destpan);
8964   1      }
8965          
8966          //# 166 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
8967          #define RfReliableMacReceiveP__0__AMPacket__group(arg_0x7eb348b8) RfPacketP__AMPacket__group(arg_0x7eb348b
             -8)
8968          
8969          
8970          
8971          
8972          
8973          
8974          
8975          
8976          
8977          
8978          #define RfReliableMacReceiveP__0__AMPacket__setGroup(arg_0x7eb32010,arg_0x7eb321a0) RfPacketP__AMPacket__s
             -etGroup(arg_0x7eb32010, arg_0x7eb321a0)
8979          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
8980          #define RfReliableMacReceiveP__0__RfReliableMacAck__fillAckMessage(arg_0x7e653b48,arg_0x7e653cd8,arg_0x7e6
             -53e88,arg_0x7e652068) RfReliableMacAckP__RfReliableMacAck__fillAckMessage(arg_0x7e653b48, arg_0x7e653cd8, arg_0x7e653e88
             -, arg_0x7e652068)
8981          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
8982          #define RfReliableMacReceiveP__0__SubPacket__getPayload(arg_0x7eb23358,arg_0x7eb23500) RfPacketP__Packet__
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 159 

             -getPayload(arg_0x7eb23358, arg_0x7eb23500)
8983          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
8984          #define RfReliableMacReceiveP__0__PacketEx__getPacketHeader(arg_0x7e6b4120) RfReliableMacPacketP__PacketEx
             -__getPacketHeader(arg_0x7e6b4120)
8985          
8986          
8987          #define RfReliableMacReceiveP__0__PacketEx__isValidPacket(arg_0x7e6b45f8) RfReliableMacPacketP__PacketEx__
             -isValidPacket(arg_0x7e6b45f8)
8988          //# 57 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
8989          static  /*inline*/   message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP
             -*/RfReliableMacReceiveP__0__SubReceive__receive(message_t *msg, void *payload, uint8_t len)
8990          {
8991   1        if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0
             -__PacketEx__isValidPacket(msg)) 
8992   1          {
8993   2            rf_rmac_header_t *header = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceive
             -P*/RfReliableMacReceiveP__0__PacketEx__getPacketHeader(msg);
8994   2            rf_ack_t *ack_header = (rf_ack_t *)/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMa
             -cReceiveP*/RfReliableMacReceiveP__0__SubPacket__getPayload(&/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfRelia
             -bleMacReceiveP*/RfReliableMacReceiveP__0__m_ack_msg, (void *)0);
8995   2      
8996   2            payload = (uint8_t *)payload + sizeof(rf_rmac_header_t );
8997   2            len -= sizeof(rf_rmac_header_t );
8998   2      
8999   2      
9000   2      
9001   2      
9002   2      
9003   2            if (header->ack_req) 
9004   2              {
9005   3                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__0__RfReliableMacAck__fillAckMessage(msg, header->dsn, &/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliabl
             -eMacReceiveP*/RfReliableMacReceiveP__0__m_ack_msg, ack_header);
9006   3      
9007   3                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__0__AMPacket__setGroup(&/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRecei
             -veP__0__m_ack_msg, /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__0_
             -_AMPacket__group(msg));
9008   3      
9009   3                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__0__AMPacket__setDestination(&/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__0__m_ack_msg, /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiv
             -eP__0__AMPacket__source(msg));
9010   3      
9011   3                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__0__sendAckTask__postTask();
9012   3              }
9013   2      
9014   2      
9015   2            if (!/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiv
             -eP__0__DsnFilter__filter(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiv
             -eP__0__AMPacket__source(msg), header->dsn)) 
9016   2              {
9017   3                return msg;
9018   3              }
9019   2      
9020   2            return /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__0__Receive__receive(msg, payload, len);
9021   2          }
9022   1      
9023   1      
9024   1        return msg;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 160 

9025   1      }
9026          
9027          //# 403 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9028          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTraceAck(message_t *msg, anstd_trace_
             -t *trace_ack)
9029          {
9030   1      }
9031          
9032          //# 19 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
9033          #define AtosNetStdP__AtosNetStd__receivedTraceAck(arg_0x7e2fa1f8,arg_0x7e2fa3b8) AtosNetStdP__AtosNetStd__
             -default__receivedTraceAck(arg_0x7e2fa1f8, arg_0x7e2fa3b8)
9034          //# 177 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9035          static  /*inline*/  void AtosNetStdP__receiveTraceAck(message_t *msg, anstd_trace_ack_t *trace_ack)
9036          {
9037   1        int index = AtosNetStdP__indexOfTraceItem(trace_ack, AtosNetStdP__AMPacket__address());
9038   1      
9039   1        if (trace_ack->total_count > 20) 
9040   1          {
9041   2            return;
9042   2          }
9043   1      
9044   1        if (index < 0) 
9045   1          {
9046   2            return;
9047   2          }
9048   1      
9049   1        if (index < trace_ack->total_count - 1) 
9050   1          {
9051   2            trace_ack->items[index + 1].backward_rssi = __nesc_ntoh_int8((unsigned char *)&((rf_meta_data_t *)ms
             -g->meta_data)->rssi);
9052   2          }
9053   1      
9054   1        AtosNetStdP__traceBackward(msg, trace_ack, index);
9055   1        AtosNetStdP__AtosNetStd__receivedTraceAck(msg, trace_ack);
9056   1      }
9057          
9058          //#line 399
9059          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedTrace(message_t *msg, anstd_trace_t *
             -trace)
9060          {
9061   1      }
9062          
9063          //# 18 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
9064          #define AtosNetStdP__AtosNetStd__receivedTrace(arg_0x7e2fcb58,arg_0x7e2fcd08) AtosNetStdP__AtosNetStd__def
             -ault__receivedTrace(arg_0x7e2fcb58, arg_0x7e2fcd08)
9065          //# 134 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9066          static  /*inline*/  void AtosNetStdP__traceForward(message_t *msg, anstd_trace_t *trace, int index)
9067          {
9068   1        uint16_t node_id = 0xFFFF;
9069   1      
9070   1      //#line 137
9071   1        memcpy(&AtosNetStdP__m_send_msg, msg, sizeof AtosNetStdP__m_send_msg);
9072   1      
9073   1        if (index < trace->total_count - 1) 
9074   1          {
9075   2            node_id = trace->items[index + 1].node_id;
9076   2            AtosNetStdP__AMSend__send(node_id, &AtosNetStdP__m_send_msg, AtosNetStdP__Packet__payloadLength(&Ato
             -sNetStdP__m_send_msg));
9077   2          }
9078   1        else 
9079   1          {
9080   2            AtosNetStdP__traceEnd(msg, trace, index);
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 161 

9081   2          }
9082   1      }
9083          
9084          
9085          static  /*inline*/  void AtosNetStdP__receiveTrace(message_t *msg, anstd_trace_t *trace)
9086          {
9087   1        int index = AtosNetStdP__indexOfTraceItem(trace, AtosNetStdP__AMPacket__address());
9088   1      
9089   1        if (trace->total_count > 20) 
9090   1          {
9091   2            return;
9092   2          }
9093   1      
9094   1        if (index < 0) 
9095   1          {
9096   2            return;
9097   2          }
9098   1      
9099   1        if (index > 0) 
9100   1          {
9101   2            trace->items[index - 1].forward_rssi = __nesc_ntoh_int8((unsigned char *)&((rf_meta_data_t *)msg->me
             -ta_data)->rssi);
9102   2          }
9103   1      
9104   1      
9105   1        trace->traced_count = index + 1;
9106   1      
9107   1        AtosNetStdP__traceForward(msg, trace, index);
9108   1        AtosNetStdP__AtosNetStd__receivedTrace(msg, trace);
9109   1      }
9110          
9111          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
9112          #define AtosNetStdP__rebootTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__rebootTa
             -sk)
9113          //# 394 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9114          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedReboot(anstd_reboot_t *reboot)
9115          {
9116   1      }
9117          
9118          //# 17 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
9119          #define AtosNetStdP__AtosNetStd__receivedReboot(arg_0x7e2fc6a8) AtosNetStdP__AtosNetStd__default__received
             -Reboot(arg_0x7e2fc6a8)
9120          //# 94 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9121          static  /*inline*/  void AtosNetStdP__receiveReboot(message_t *msg, anstd_reboot_t *reboot)
9122          {
9123   1        AtosNetStdP__AtosNetStd__receivedReboot(reboot);
9124   1        AtosNetStdP__rebootTask__postTask();
9125   1      }
9126          
9127          //# 166 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
9128          static  /*inline*/   void FlashIEEEP__FlashIEEE__WriteIEEE(uint8_t *ieee)
9129          {
9130   1        /* atomic removed: atomic calls only */
9131   1        {
9132   2          memcpy(FlashIEEEP__m_ieee, ieee, sizeof FlashIEEEP__m_ieee);
9133   2          FlashIEEEP__m_ieee_flash[0] = FlashIEEEP__m_ieee[7];
9134   2          FlashIEEEP__m_ieee_flash[1] = FlashIEEEP__m_ieee[6];
9135   2          FlashIEEEP__m_ieee_flash[2] = FlashIEEEP__m_ieee[5];
9136   2          FlashIEEEP__m_ieee_flash[3] = FlashIEEEP__m_ieee[4];
9137   2          FlashIEEEP__m_ieee_flash[4] = FlashIEEEP__m_ieee[3];
9138   2          FlashIEEEP__m_ieee_flash[5] = FlashIEEEP__m_ieee[2];
9139   2          FlashIEEEP__m_ieee_flash[6] = FlashIEEEP__m_ieee[1];
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 162 

9140   2          FlashIEEEP__m_ieee_flash[7] = FlashIEEEP__m_ieee[0];
9141   2      
9142   2      
9143   2          FlashIEEEP__HalFlash__erase(0x3FFE8);
9144   2          FlashIEEEP__HalFlash__write(0x3FFE8, FlashIEEEP__m_ieee_flash, sizeof FlashIEEEP__m_ieee_flash);
9145   2      
9146   2      
9147   2      
9148   2      
9149   2          FlashIEEEP__readFromFlash();
9150   2          FlashIEEEP__FlashIEEE__WriteToRegister();
9151   2          FlashIEEEP__FlashIEEE__WriteToAM();
9152   2        }
9153   1      }
9154          
9155          //# 8 "/opt/atos/tos/platforms/antc5/devices/FlashIEEE.nc"
9156          #define AtosNetStdP__FlashIEEE__WriteIEEE(arg_0x7ea50510) FlashIEEEP__FlashIEEE__WriteIEEE(arg_0x7ea50510)
9157          //# 390 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9158          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedSetIEEE(anstd_setieee_t *setieee)
9159          {
9160   1      }
9161          
9162          //# 16 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
9163          #define AtosNetStdP__AtosNetStd__receivedSetIEEE(arg_0x7e2fc1f8) AtosNetStdP__AtosNetStd__default__receive
             -dSetIEEE(arg_0x7e2fc1f8)
9164          //# 84 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9165          static  /*inline*/  void AtosNetStdP__receiveSetIEEE(message_t *msg, anstd_setieee_t *setieee)
9166          {
9167   1        AtosNetStdP__AtosNetStd__receivedSetIEEE(setieee);
9168   1      
9169   1      
9170   1        AtosNetStdP__FlashIEEE__WriteIEEE(setieee->ieee);
9171   1      
9172   1        AtosNetStdP__rebootTask__postTask();
9173   1      }
9174          
9175          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
9176          #define AtosNetStdP__nodeStatusUpTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(AtosNetStdP__no
             -deStatusUpTask)
9177          //# 386 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9178          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedDiscovery(anstd_discovery_t *discover
             -y)
9179          {
9180   1      }
9181          
9182          //# 15 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
9183          #define AtosNetStdP__AtosNetStd__receivedDiscovery(arg_0x7e2fdd20) AtosNetStdP__AtosNetStd__default__recei
             -vedDiscovery(arg_0x7e2fdd20)
9184          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9185          #define AtosNetStdP__AMPacket__source(arg_0x7eb42b90) RfPacketP__AMPacket__source(arg_0x7eb42b90)
9186          //# 75 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9187          static  /*inline*/  void AtosNetStdP__receiveDiscovery(message_t *msg, anstd_discovery_t *discovery)
9188          {
9189   1        AtosNetStdP__m_ack_addr = AtosNetStdP__AMPacket__source(msg);
9190   1        AtosNetStdP__AtosNetStd__receivedDiscovery(discovery);
9191   1      
9192   1      
9193   1        AtosNetStdP__nodeStatusUpTask__postTask();
9194   1      }
9195          
9196          //#line 382
9197          static  /*inline*/    void AtosNetStdP__AtosNetStd__default__receivedNodeStatusUp(message_t *msg, anstd_no
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 163 

             -de_status_t *status)
9198          {
9199   1      }
9200          
9201          //# 14 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStd.nc"
9202          #define AtosNetStdP__AtosNetStd__receivedNodeStatusUp(arg_0x7e2fd698,arg_0x7e2fd850) AtosNetStdP__AtosNetS
             -td__default__receivedNodeStatusUp(arg_0x7e2fd698, arg_0x7e2fd850)
9203          //# 69 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
9204          static  /*inline*/  void AtosNetStdP__receiveNodeStatusUp(message_t *msg, anstd_node_status_t *status)
9205          {
9206   1        AtosNetStdP__AtosNetStd__receivedNodeStatusUp(msg, status);
9207   1      }
9208          
9209          //#line 203
9210          static  /*inline*/   message_t *AtosNetStdP__Receive__receive(message_t *msg, void *payload, uint8_t len)
9211          {
9212   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9213   2          {
9214   3            anstd_header_t *anstd_header = (anstd_header_t *)payload;
9215   3      
9216   3            switch (anstd_header->_data_type) 
9217   3              {
9218   4                case ANSTD_DATA_TYPE_NODE_STATUS_UP: 
9219   4                  AtosNetStdP__receiveNodeStatusUp(msg, (anstd_node_status_t *)payload);
9220   4                break;
9221   4      
9222   4                case ANSTD_DATA_TYPE_DISCOVERY: 
9223   4                  AtosNetStdP__receiveDiscovery(msg, (anstd_discovery_t *)payload);
9224   4                break;
9225   4      
9226   4                case ANSTD_DATA_TYPE_SETIEEE: 
9227   4                  AtosNetStdP__receiveSetIEEE(msg, (anstd_setieee_t *)payload);
9228   4                break;
9229   4      
9230   4                case ANSTD_DATA_TYPE_REBOOT: 
9231   4                  AtosNetStdP__receiveReboot(msg, (anstd_reboot_t *)payload);
9232   4                break;
9233   4      
9234   4                case ANSTD_DATA_TYPE_TRACE: 
9235   4                  AtosNetStdP__receiveTrace(msg, (anstd_trace_t *)payload);
9236   4                break;
9237   4      
9238   4                case ANSTD_DATA_TYPE_TRACE_ACK: 
9239   4                  AtosNetStdP__receiveTraceAck(msg, (anstd_trace_ack_t *)payload);
9240   4                break;
9241   4              }
9242   3      
9243   3            {
9244   4              nx_struct message_t *__nesc_temp = 
9245   4      //#line 236
9246   4              msg;
9247   4      
9248   4              {
9249   5      //#line 236
9250   5                __nesc_atomic_end(__nesc_atomic); 
9251   5      //#line 236
9252   5                return __nesc_temp;
9253   5              }
9254   4            }
9255   3          }
9256   2      //#line 239
9257   2          __nesc_atomic_end(__nesc_atomic); }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 164 

9258   1      }
9259          
9260          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
9261          #define RfReliableMacReceiveP__1__Receive__receive(arg_0x7eb51ca0,arg_0x7eb51e40,arg_0x7eb50010) AtosNetSt
             -dP__Receive__receive(arg_0x7eb51ca0, arg_0x7eb51e40, arg_0x7eb50010)
9262          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9263          #define RfReliableMacReceiveP__1__AMPacket__source(arg_0x7eb42b90) RfPacketP__AMPacket__source(arg_0x7eb42
             -b90)
9264          //# 4 "/opt/atos/tos/lib/atos/utils/DsnFilter.nc"
9265          #define RfReliableMacReceiveP__1__DsnFilter__filter(arg_0x7e3c9ba8,arg_0x7e3c9d30) DsnFilterCenterP__0__Ds
             -nFilter__filter(0U, arg_0x7e3c9ba8, arg_0x7e3c9d30)
9266          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
9267          #define RfReliableMacReceiveP__1__sendAckTask__postTask(void) SchedulerBasicP__TaskBasic__postTask(RfRelia
             -bleMacReceiveP__1__sendAckTask)
9268          //# 92 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9269          #define RfReliableMacReceiveP__1__AMPacket__setDestination(arg_0x7eb40190,arg_0x7eb40320) RfPacketP__AMPac
             -ket__setDestination(arg_0x7eb40190, arg_0x7eb40320)
9270          //#line 166
9271          #define RfReliableMacReceiveP__1__AMPacket__group(arg_0x7eb348b8) RfPacketP__AMPacket__group(arg_0x7eb348b
             -8)
9272          
9273          
9274          
9275          
9276          
9277          
9278          
9279          
9280          
9281          
9282          #define RfReliableMacReceiveP__1__AMPacket__setGroup(arg_0x7eb32010,arg_0x7eb321a0) RfPacketP__AMPacket__s
             -etGroup(arg_0x7eb32010, arg_0x7eb321a0)
9283          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
9284          #define RfReliableMacReceiveP__1__RfReliableMacAck__fillAckMessage(arg_0x7e653b48,arg_0x7e653cd8,arg_0x7e6
             -53e88,arg_0x7e652068) RfReliableMacAckP__RfReliableMacAck__fillAckMessage(arg_0x7e653b48, arg_0x7e653cd8, arg_0x7e653e88
             -, arg_0x7e652068)
9285          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
9286          #define RfReliableMacReceiveP__1__SubPacket__getPayload(arg_0x7eb23358,arg_0x7eb23500) RfPacketP__Packet__
             -getPayload(arg_0x7eb23358, arg_0x7eb23500)
9287          //# 6 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
9288          #define RfReliableMacReceiveP__1__PacketEx__getPacketHeader(arg_0x7e6b4120) RfReliableMacPacketP__PacketEx
             -__getPacketHeader(arg_0x7e6b4120)
9289          
9290          
9291          #define RfReliableMacReceiveP__1__PacketEx__isValidPacket(arg_0x7e6b45f8) RfReliableMacPacketP__PacketEx__
             -isValidPacket(arg_0x7e6b45f8)
9292          //# 57 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacReceiveP.nc"
9293          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRecei
             -veP*/RfReliableMacReceiveP__1__SubReceive__receive(message_t *msg, void *payload, uint8_t len)
9294          {
9295   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP
             -__1__PacketEx__isValidPacket(msg)) 
9296   1          {
9297   2            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacRece
             -iveP*/RfReliableMacReceiveP__1__PacketEx__getPacketHeader(msg);
9298   2            rf_ack_t *ack_header = (rf_ack_t *)/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliabl
             -eMacReceiveP*/RfReliableMacReceiveP__1__SubPacket__getPayload(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.R
             -fReliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack_msg, (void *)0);
9299   2      
9300   2            payload = (uint8_t *)payload + sizeof(rf_rmac_header_t );
9301   2            len -= sizeof(rf_rmac_header_t );
9302   2      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 165 

9303   2      
9304   2      
9305   2      
9306   2      
9307   2            if (header->ack_req) 
9308   2              {
9309   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__RfReliableMacAck__fillAckMessage(msg, header->dsn, &/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfR
             -eliableMacReceiveP*/RfReliableMacReceiveP__1__m_ack_msg, ack_header);
9310   3      
9311   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__AMPacket__setGroup(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__1__m_ack_msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__AMPacket__group(msg));
9312   3      
9313   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__AMPacket__setDestination(&/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReli
             -ableMacReceiveP__1__m_ack_msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliable
             -MacReceiveP__1__AMPacket__source(msg));
9314   3      
9315   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__sendAckTask__postTask();
9316   3              }
9317   2      
9318   2      
9319   2            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRec
             -eiveP__1__DsnFilter__filter(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMac
             -ReceiveP__1__AMPacket__source(msg), header->dsn)) 
9320   2              {
9321   3                return msg;
9322   3              }
9323   2      
9324   2            return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacR
             -eceiveP__1__Receive__receive(msg, payload, len);
9325   2          }
9326   1      
9327   1      
9328   1        return msg;
9329   1      }
9330          
9331          //# 42 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
9332          static  /*inline*/    void RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(message_t 
             -*send_msg, message_t *ack_msg, rf_ack_t *ack)
9333          {
9334   1      }
9335          
9336          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
9337          #define RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(arg_0x7e3e7508,arg_0x7e3e76b8,arg_0x7e
             -3e7868) RfReliableMacAckP__RfReliableMacAckEvent__default__receiveAckMessage(arg_0x7e3e7508, arg_0x7e3e76b8, arg_0x7e3e7
             -868)
9338          //# 32 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
9339          static  /*inline*/   void RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(message_t *send_msg, mess
             -age_t *ack_msg, rf_ack_t *ack)
9340          {
9341   1        RfReliableMacAckP__RfReliableMacAckEvent__receiveAckMessage(send_msg, ack_msg, ack);
9342   1      }
9343          
9344          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
9345          #define RfReliableMacSendP__1__RfReliableMacAck__receiveAckMessage(arg_0x7e652540,arg_0x7e6526f0,arg_0x7e6
             -528a0) RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(arg_0x7e652540, arg_0x7e6526f0, arg_0x7e6528a0)
9346          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9347          #define RfReliableMacSendP__1__AMPacket__source(arg_0x7eb42b90) RfPacketP__AMPacket__source(arg_0x7eb42b90
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 166 

             -)
9348          //#line 67
9349          #define RfReliableMacSendP__1__AMPacket__destination(arg_0x7eb425b0) RfPacketP__AMPacket__destination(arg_
             -0x7eb425b0)
9350          //# 158 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
9351          static  /*inline*/   message_t */*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.Rf
             -ReliableMacSendP*/RfReliableMacSendP__1__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len)
9352          {
9353   1        if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliab
             -leMacSendP__1__m_sending) 
9354   1          {
9355   2            rf_meta_data_t *meta_data = (rf_meta_data_t *)/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.R
             -fReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg->meta_data;
9356   2            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.R
             -fReliableMacSendP*/RfReliableMacSendP__1__PacketEx__getPacketHeader(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC
             -.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg);
9357   2      
9358   2            rf_ack_t *ack_header = (rf_ack_t *)payload;
9359   2      
9360   2      
9361   2      
9362   2      
9363   2      
9364   2      
9365   2            if (
9366   2      //#line 169
9367   2            header->ack_req
9368   2             && header->dsn == __nesc_ntoh_uint8((unsigned char *)&ack_header->dsn)
9369   2             && /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__AMPacket__source(ack_msg) == /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.
             -RfReliableMacSendP*/RfReliableMacSendP__1__AMPacket__destination(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.Rf
             -ReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg)
9370   2             && /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__AMPacket__destination(ack_msg) == /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacS
             -endC.RfReliableMacSendP*/RfReliableMacSendP__1__AMPacket__source(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.Rf
             -ReliableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg)) 
9371   2      
9372   2              {
9373   3                rf_meta_data_t *ack_meta_data = (rf_meta_data_t *)ack_msg->meta_data;
9374   3      
9375   3      
9376   3                __nesc_hton_int8((unsigned char *)&meta_data->rssi, __nesc_ntoh_int8((unsigned char *)&ack_meta_
             -data->rssi));
9377   3                __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_uint8((unsigned char *)&ack_meta
             -_data->lqi));
9378   3                __nesc_hton_int8((unsigned char *)&meta_data->crc, __nesc_ntoh_int8((unsigned char *)&ack_meta_d
             -ata->crc));
9379   3                __nesc_hton_int8((unsigned char *)&meta_data->ack, TRUE);
9380   3      
9381   3      
9382   3                memcpy((void *)& meta_data->ack_msg, (void *)ack_header, sizeof  meta_data->ack_msg);
9383   3      
9384   3      
9385   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__RfReliableMacAck__receiveAckMessage(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMa
             -cSendC.RfReliableMacSendP*/RfReliableMacSendP__1__m_msg, ack_msg, ack_header);
9386   3      
9387   3      
9388   3                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__signalDone(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP
             -*/RfReliableMacSendP__1__m_msg, 0);
9389   3              }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 167 

9390   2          }
9391   1      
9392   1        return ack_msg;
9393   1      }
9394          
9395          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAck.nc"
9396          #define RfReliableMacSendP__0__RfReliableMacAck__receiveAckMessage(arg_0x7e652540,arg_0x7e6526f0,arg_0x7e6
             -528a0) RfReliableMacAckP__RfReliableMacAck__receiveAckMessage(arg_0x7e652540, arg_0x7e6526f0, arg_0x7e6528a0)
9397          //# 77 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9398          #define RfReliableMacSendP__0__AMPacket__source(arg_0x7eb42b90) RfPacketP__AMPacket__source(arg_0x7eb42b90
             -)
9399          //#line 67
9400          #define RfReliableMacSendP__0__AMPacket__destination(arg_0x7eb425b0) RfPacketP__AMPacket__destination(arg_
             -0x7eb425b0)
9401          //# 158 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
9402          static  /*inline*/   message_t */*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRel
             -iableMacSendP*/RfReliableMacSendP__0__ReceiveAck__receive(message_t *ack_msg, void *payload, uint8_t len)
9403          {
9404   1        if (/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__0__m_sending) 
9405   1          {
9406   2            rf_meta_data_t *meta_data = (rf_meta_data_t *)/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfRe
             -liableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg->meta_data;
9407   2            rf_rmac_header_t *header = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfRe
             -liableMacSendP*/RfReliableMacSendP__0__PacketEx__getPacketHeader(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfRel
             -iableMacSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg);
9408   2      
9409   2            rf_ack_t *ack_header = (rf_ack_t *)payload;
9410   2      
9411   2      
9412   2      
9413   2      
9414   2      
9415   2      
9416   2            if (
9417   2      //#line 169
9418   2            header->ack_req
9419   2             && header->dsn == __nesc_ntoh_uint8((unsigned char *)&ack_header->dsn)
9420   2             && /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__AMPacket__source(ack_msg) == /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReli
             -ableMacSendP*/RfReliableMacSendP__0__AMPacket__destination(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableM
             -acSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg)
9421   2             && /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__AMPacket__destination(ack_msg) == /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.R
             -fReliableMacSendP*/RfReliableMacSendP__0__AMPacket__source(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableM
             -acSendC.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg)) 
9422   2      
9423   2              {
9424   3                rf_meta_data_t *ack_meta_data = (rf_meta_data_t *)ack_msg->meta_data;
9425   3      
9426   3      
9427   3                __nesc_hton_int8((unsigned char *)&meta_data->rssi, __nesc_ntoh_int8((unsigned char *)&ack_meta_
             -data->rssi));
9428   3                __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_uint8((unsigned char *)&ack_meta
             -_data->lqi));
9429   3                __nesc_hton_int8((unsigned char *)&meta_data->crc, __nesc_ntoh_int8((unsigned char *)&ack_meta_d
             -ata->crc));
9430   3                __nesc_hton_int8((unsigned char *)&meta_data->ack, TRUE);
9431   3      
9432   3      
9433   3                memcpy((void *)& meta_data->ack_msg, (void *)ack_header, sizeof  meta_data->ack_msg);
9434   3      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 168 

9435   3      
9436   3                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__RfReliableMacAck__receiveAckMessage(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC
             -.RfReliableMacSendP*/RfReliableMacSendP__0__m_msg, ack_msg, ack_header);
9437   3      
9438   3      
9439   3                /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__signalDone(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__m_msg, 0);
9440   3              }
9441   2          }
9442   1      
9443   1        return ack_msg;
9444   1      }
9445          
9446          //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
9447          static  /*inline*/    message_t *RfActiveMessageP__Receive__default__receive(uint8_t id, message_t *msg, v
             -oid *payload, uint8_t len)
9448          {
9449   1      }
9450          
9451          //# 67 "/opt/tinyos-2.x/tos/interfaces/Receive.nc"
9452           /*inline*/  static  message_t *RfActiveMessageP__Receive__receive(uint8_t arg_0x7e3983f8, message_t *arg_
             -0x7eb51ca0, void *arg_0x7eb51e40, uint8_t arg_0x7eb50010){
9453   1      //#line 67
9454   1        nx_struct message_t *result;
9455   1      //#line 67
9456   1      
9457   1      //#line 67
9458   1        switch (arg_0x7e3983f8) {
9459   2      //#line 67
9460   2          case 123:
9461   2      //#line 67
9462   2            result = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRe
             -ceiveP__0__SubReceive__receive(arg_0x7eb51ca0, arg_0x7eb51e40, arg_0x7eb50010);
9463   2      //#line 67
9464   2            break;
9465   2      //#line 67
9466   2          case 124:
9467   2      //#line 67
9468   2            result = /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__0__ReceiveAck__receive(arg_0x7eb51ca0, arg_0x7eb51e40, arg_0x7eb50010);
9469   2      //#line 67
9470   2            break;
9471   2      //#line 67
9472   2          case 240U:
9473   2      //#line 67
9474   2            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMa
             -cReceiveP__1__SubReceive__receive(arg_0x7eb51ca0, arg_0x7eb51e40, arg_0x7eb50010);
9475   2      //#line 67
9476   2            break;
9477   2      //#line 67
9478   2          case 241:
9479   2      //#line 67
9480   2            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*
             -/RfReliableMacSendP__1__ReceiveAck__receive(arg_0x7eb51ca0, arg_0x7eb51e40, arg_0x7eb50010);
9481   2      //#line 67
9482   2            break;
9483   2      //#line 67
9484   2          default:
9485   2      //#line 67
9486   2            result = RfActiveMessageP__Receive__default__receive(arg_0x7e3983f8, arg_0x7eb51ca0, arg_0x7eb51e40,
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 169 

             - arg_0x7eb50010);
9487   2      //#line 67
9488   2            break;
9489   2      //#line 67
9490   2          }
9491   1      //#line 67
9492   1      
9493   1      //#line 67
9494   1        return result;
9495   1      //#line 67
9496   1      }
9497          //#line 67
9498          //# 69 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9499          static  /*inline*/   bool RfPacketP__AMPacket__isForMe(message_t *amsg)
9500          {
9501   1        return __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest) == RfPacketP__AMPacke
             -t__address()
9502   1         || __nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)amsg->header)->dest) == 0xFFFF;
9503   1      }
9504          
9505          //# 125 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9506          #define RfActiveMessageP__AMPacket__isForMe(arg_0x7eb35370) RfPacketP__AMPacket__isForMe(arg_0x7eb35370)
9507          //# 108 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
9508          #define RfActiveMessageP__Packet__getPayload(arg_0x7eb23358,arg_0x7eb23500) RfPacketP__Packet__getPayload(
             -arg_0x7eb23358, arg_0x7eb23500)
9509          //# 76 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9510          static  /*inline*/   am_id_t RfPacketP__AMPacket__type(message_t *amsg)
9511          {
9512   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)amsg->header)->type);
9513   1      }
9514          
9515          //# 136 "/opt/tinyos-2.x/tos/interfaces/AMPacket.nc"
9516          #define RfActiveMessageP__AMPacket__type(arg_0x7eb35aa0) RfPacketP__AMPacket__type(arg_0x7eb35aa0)
9517          //# 150 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
9518          static  /*inline*/   uint8_t RfPacketP__PacketEx__packetHeaderSize(void)
9519          {
9520   1        return sizeof(rf_header_t ) - 1 + sizeof(uint16_t );
9521   1      }
9522          
9523          
9524          
9525          
9526          
9527          
9528          static  /*inline*/   bool RfPacketP__PacketEx__isValidPacket(message_t *msg)
9529          {
9530   1        return __nesc_ntoh_leuint8((unsigned char *)&((rf_header_t *)msg->header)->length) >= RfPacketP__PacketE
             -x__packetHeaderSize();
9531   1      }
9532          
9533          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
9534          #define RfActiveMessageP__PacketEx__isValidPacket(arg_0x7e6b45f8) RfPacketP__PacketEx__isValidPacket(arg_0
             -x7e6b45f8)
9535          //# 20 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfActiveMessageP.nc"
9536          static  /*inline*/   void RfActiveMessageP__CoreReceive__receive(message_t *msg)
9537          {
9538   1        if (RfActiveMessageP__PacketEx__isValidPacket(msg)) 
9539   1          {
9540   2            uint8_t type = RfActiveMessageP__AMPacket__type(msg);
9541   2            uint8_t len;
9542   2            void *payload = RfActiveMessageP__Packet__getPayload(msg, &len);
9543   2      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 170 

9544   2      //#line 27
9545   2            if (RfActiveMessageP__AMPacket__isForMe(msg)) 
9546   2              {
9547   3                RfActiveMessageP__Receive__receive(type, msg, payload, len);
9548   3              }
9549   2            else 
9550   2              {
9551   3                RfActiveMessageP__Snoop__receive(type, msg, payload, len);
9552   3              }
9553   2          }
9554   1      }
9555          
9556          //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/CoreReceive.nc"
9557          #define RfMacBaseReceiveP__CoreReceive__receive(arg_0x7e393030) RfActiveMessageP__CoreReceive__receive(arg
             -_0x7e393030)
9558          //# 12 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseReceiveP.nc"
9559          static  /*inline*/   void RfMacBaseReceiveP__RfHardwareRx__rxPacket(uint8_t *buf, uint8_t len)
9560          {
9561   1        unsigned char *__nesc_temp48;
9562   1      //#line 14
9563   1        message_t *msg = (message_t *)buf;
9564   1      
9565   1      
9566   1        uint8_t frame_type = (__nesc_ntoh_leuint16((unsigned char *)&((rf_header_t *)msg->header)->fcf) >> IEEE1
             -54_FCF_FRAME_TYPE) & 7;
9567   1      
9568   1        if (frame_type == IEEE154_TYPE_ACK) 
9569   1          {
9570   2          }
9571   1        else {
9572   2      //#line 22
9573   2          if (frame_type == IEEE154_TYPE_DATA) 
9574   2            {
9575   3      
9576   3      
9577   3              rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
9578   3      
9579   3      //#line 27
9580   3              __nesc_hton_int8((unsigned char *)&meta_data->crc, buf[len - 1] >> 7);
9581   3              __nesc_hton_int8((unsigned char *)&meta_data->rssi, buf[len - 2]);
9582   3              __nesc_hton_uint8((unsigned char *)&meta_data->lqi, __nesc_ntoh_int8((unsigned char *)&meta_data->
             -rssi) + 0x7F);
9583   3      
9584   3      
9585   3              (__nesc_temp48 = (unsigned char *)&((rf_header_t *)msg->header)->length, __nesc_hton_leuint8(__nes
             -c_temp48, __nesc_ntoh_leuint8(__nesc_temp48) - 0));
9586   3      //#line 50
9587   3              RfMacBaseReceiveP__CoreReceive__receive(msg);
9588   3            }
9589   2          }
9590   1      }
9591          
9592          //# 5 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/RfHardwareRx.nc"
9593          #define RfHardwareRxP__0__RfHardwareRx__rxPacket(arg_0x7e5337e8,arg_0x7e533970) RfMacBaseReceiveP__RfHardw
             -areRx__rxPacket(arg_0x7e5337e8, arg_0x7e533970)
9594          //# 78 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9595          static  /*inline*/  void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket(void)
9596          {
9597   1        if (!/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(/*RfHardwareRxC.RfHardwareRxP*/RfHardwar
             -eRxP__0__m_frame_buf, 1)) {
9598   2      //#line 80
9599   2          return;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 171 

9600   2          }
9601   1      //#line 81
9602   1        if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] > 0x7f) 
9603   1          {
9604   2      
9605   2      
9606   2            {
9607   3      //#line 85
9608   3              do {
9609   4      //#line 85
9610   4                  RFST = 0xED;
9611   4      //#line 85
9612   4                  RFST = 0xED;
9613   4                }
9614   3              while (
9615   3      //#line 85
9616   3              85 == -1);
9617   3      //#line 85
9618   3              do {
9619   4      //#line 85
9620   4                  S1CON = 0x00;
9621   4      //#line 85
9622   4                  RFIRQF0 = ~(1 << 2);
9623   4                }
9624   3              while (
9625   3      //#line 85
9626   3              85 == -1);
9627   3            }
9628   2      //#line 85
9629   2            ;
9630   2            {
9631   3      //#line 86
9632   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHar
             -dwareRxP__0__rxbuf_tail = 0;
9633   3            }
9634   2      //#line 86
9635   2            ;
9636   2          }
9637   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] &= 0x7f;
9638   1      
9639   1      
9640   1        if (!/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(&/*RfHardwareRxC.RfHardwareRxP*/RfHardwa
             -reRxP__0__m_frame_buf[1], /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0])) {
9641   2      //#line 91
9642   2          return;
9643   2          }
9644   1      
9645   1        if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[/*RfHardwareRxC.RfHardwareRxP*/RfHardwa
             -reRxP__0__m_frame_buf[0]] & 0x80) 
9646   1          {
9647   2      //#line 131
9648   2            /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__RfHardwareRx__rxPacket(/*RfHardwareRxC.RfHardwareRx
             -P*/RfHardwareRxP__0__m_frame_buf, /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__m_frame_buf[0] + 1);
9649   2          }
9650   1        else 
9651   1          {
9652   2      
9653   2            {
9654   3      //#line 136
9655   3              do {
9656   4      //#line 136
9657   4                  RFST = 0xED;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 172 

9658   4      //#line 136
9659   4                  RFST = 0xED;
9660   4                }
9661   3              while (
9662   3      //#line 136
9663   3              136 == -1);
9664   3      //#line 136
9665   3              do {
9666   4      //#line 136
9667   4                  S1CON = 0x00;
9668   4      //#line 136
9669   4                  RFIRQF0 = ~(1 << 2);
9670   4                }
9671   3              while (
9672   3      //#line 136
9673   3              136 == -1);
9674   3            }
9675   2      //#line 136
9676   2            ;
9677   2            {
9678   3      //#line 137
9679   3              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = /*RfHardwareRxC.RfHardwareRxP*/RfHar
             -dwareRxP__0__rxbuf_tail = 0;
9680   3            }
9681   2      //#line 137
9682   2            ;
9683   2          }
9684   1      }
9685          
9686          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler(void)
9687          {
9688   1        /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__receiveNextPacket();
9689   1      
9690   1        if (!(/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head == /*RfHardwareRxC.RfHardwareRxP*/RfHa
             -rdwareRxP__0__rxbuf_tail)) 
9691   1          {
9692   2            {
9693   3      //#line 147
9694   3              { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9695   4      //#line 147
9696   4                {
9697   5      //#line 147
9698   5                  TopTaskMgrP__m_task_flag[3] = TRUE;
9699   5                }
9700   4      //#line 148
9701   4                __nesc_atomic_end(__nesc_atomic); }
9702   3            }
9703   2      //#line 147
9704   2            ;
9705   2          }
9706   1      }
9707          
9708          //# 57 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
9709          static  /*inline*/    void TopTaskMgrP__TopTaskHandler__default__handler(uint8_t n)
9710          {
9711   1      }
9712          
9713          //# 4 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskHandler.nc"
9714           /*inline*/  static  void TopTaskMgrP__TopTaskHandler__handler(uint8_t arg_0x7ebb1360){
9715   1      //#line 4
9716   1        switch (arg_0x7ebb1360) {
9717   2      //#line 4
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 173 

9718   2          case 0:
9719   2      //#line 4
9720   2            /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__TopTaskHandler__handler();
9721   2      //#line 4
9722   2            break;
9723   2      //#line 4
9724   2          case 1:
9725   2      //#line 4
9726   2            /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__RxTaskHandler__handler();
9727   2      //#line 4
9728   2            break;
9729   2      //#line 4
9730   2          case 2:
9731   2      //#line 4
9732   2            /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__TxTaskHandler__handler();
9733   2      //#line 4
9734   2            break;
9735   2      //#line 4
9736   2          case 3:
9737   2      //#line 4
9738   2            /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__TopTaskHandler__handler();
9739   2      //#line 4
9740   2            break;
9741   2      //#line 4
9742   2          default:
9743   2      //#line 4
9744   2            TopTaskMgrP__TopTaskHandler__default__handler(arg_0x7ebb1360);
9745   2      //#line 4
9746   2            break;
9747   2      //#line 4
9748   2          }
9749   1      //#line 4
9750   1      }
9751          //#line 4
9752          //# 40 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
9753          static  /*inline*/   void TopTaskMgrP__TopTaskMgr__runTasks(void)
9754          {
9755   1        uint8_t i;
9756   1      
9757   1        for (i = 0; i < TopTaskMgrP__TOP_TASK_COUNT; ++i) 
9758   1          {
9759   2            if (TopTaskMgrP__m_task_flag[i] != FALSE) 
9760   2              {
9761   3                EA = 0;
9762   3                TopTaskMgrP__m_task_flag[i] = FALSE;
9763   3                EA = 1;
9764   3      
9765   3                TopTaskMgrP__TopTaskHandler__handler(i);
9766   3              }
9767   2          }
9768   1      }
9769          
9770          //# 5 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgr.nc"
9771          #define SchedulerBasicP__TopTaskMgr__runTasks(void) TopTaskMgrP__TopTaskMgr__runTasks()
9772          //# 181 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9773          static  /*inline*/   void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__AtosScheduler__periodScheduler(
             -void)
9774          {
9775   1        if (((uint8_t xdata *)0)[0x619B] > 0x80) 
9776   1          {
9777   2            {
9778   3      //#line 185
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 174 

9779   3              do {
9780   4      //#line 185
9781   4                  RFST = 0xED;
9782   4      //#line 185
9783   4                  RFST = 0xED;
9784   4                }
9785   3              while (
9786   3      //#line 185
9787   3              185 == -1);
9788   3      //#line 185
9789   3              do {
9790   4      //#line 185
9791   4                  S1CON = 0x00;
9792   4      //#line 185
9793   4                  RFIRQF0 = ~(1 << 2);
9794   4                }
9795   3              while (
9796   3      //#line 185
9797   3              185 == -1);
9798   3            }
9799   2      //#line 185
9800   2            ;
9801   2          }
9802   1      }
9803          
9804          //# 9 "/opt/tinyos-2.x/tos/interfaces/AtosScheduler.nc"
9805          #define SchedulerBasicP__AtosScheduler__periodScheduler(void) RfHardwareRxP__0__AtosScheduler__periodSched
             -uler()
9806          //# 71 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
9807          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void)
9808          {
9809   1      //#line 91
9810   1        if (SchedulerBasicP__m_head == SchedulerBasicP__m_tail) 
9811   1          {
9812   2            return SchedulerBasicP__NO_TASK;
9813   2          }
9814   1        else 
9815   1          {
9816   2            uint8_t id = SchedulerBasicP__m_next[SchedulerBasicP__m_head];
9817   2      
9818   2            SchedulerBasicP__m_next[SchedulerBasicP__m_head] = SchedulerBasicP__NO_TASK;
9819   2      
9820   2            SchedulerBasicP__m_head = (SchedulerBasicP__m_head + 1) % SchedulerBasicP__NUM_TASKS;
9821   2            return id % SchedulerBasicP__NUM_TASKS;
9822   2          }
9823   1      }
9824          
9825          //#line 215
9826          static  /*inline*/   void SchedulerBasicP__Scheduler__taskLoop(void)
9827          {
9828   1        for (; ; ) 
9829   1          {
9830   2            uint8_t nextTask;
9831   2      
9832   2            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
9833   3              {
9834   4                nextTask = SchedulerBasicP__popTask();
9835   4              }
9836   3      //#line 224
9837   3              __nesc_atomic_end(__nesc_atomic); }
9838   2      
9839   2            current_task_id = nextTask;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 175 

9840   2      
9841   2      
9842   2            SchedulerBasicP__AtosScheduler__periodScheduler();
9843   2      
9844   2            while (SchedulerBasicP__TopTaskMgr__hasTasks()) 
9845   2              {
9846   3                SchedulerBasicP__TopTaskMgr__runTasks();
9847   3              }
9848   2      
9849   2            if (nextTask != SchedulerBasicP__NO_TASK) 
9850   2              {
9851   3                SchedulerBasicP__TaskBasic__runTask(nextTask);
9852   3              }
9853   2            else 
9854   2              {
9855   3                if (!SchedulerBasicP__TopTaskMgr__hasTasks()) 
9856   3                  {
9857   4                    SchedulerBasicP__McuSleep__sleep();
9858   4                  }
9859   3              }
9860   2          }
9861   1      }
9862          
9863          //# 61 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
9864          #define RealMainP__Scheduler__taskLoop(void) SchedulerBasicP__Scheduler__taskLoop()
9865          //# 8 "/opt/atos/tos/lib/atos/net/AtosMac/interfaces/PacketEx.nc"
9866          #define RfReliableMacPacketP__SubPacketEx__isValidPacket(arg_0x7e6b45f8) RfPacketP__PacketEx__isValidPacke
             -t(arg_0x7e6b45f8)
9867          //# 46 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
9868          static  /*inline*/   uint8_t RfReliableMacPacketP__PacketEx__packetHeaderSize(void)
9869          {
9870   1        return sizeof(rf_rmac_header_t );
9871   1      }
9872          
9873          //# 11 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
9874          static  /*inline*/  uint8_t RfReliableMacAckP__fillAckMessageDefault(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack)
9875          {
9876   1        memset(ack, 0, sizeof(rf_ack_t ));
9877   1      
9878   1      
9879   1        __nesc_hton_uint8((unsigned char *)&ack->dsn, receive_dsn);
9880   1      
9881   1        return sizeof(rf_ack_t );
9882   1      }
9883          
9884          //#line 37
9885          static  /*inline*/    uint8_t RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(message_t 
             -*receive_msg, uint8_t receive_dsn, message_t *ack_msg, rf_ack_t *ack)
9886          {
9887   1        return sizeof(rf_ack_t );
9888   1      }
9889          
9890          //# 4 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckEvent.nc"
9891          #define RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(arg_0x7e3eab10,arg_0x7e3eaca0,arg_0x7e3ea
             -e50,arg_0x7e3e7030) RfReliableMacAckP__RfReliableMacAckEvent__default__fillAckMessage(arg_0x7e3eab10, arg_0x7e3eaca0, ar
             -g_0x7e3eae50, arg_0x7e3e7030)
9892          //# 14 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
9893          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(uint16_t 
             -addr)
9894          {
9895   1        /* atomic removed: atomic calls only */
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 176 

9896   1        {
9897   2          uint8_t i;
9898   2      
9899   2      //#line 19
9900   2          for (i = 0; i < 100; ++i) 
9901   2            {
9902   3              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[i] == addr) 
9903   3                {
9904   4                  {
9905   5                    int __nesc_temp = 
9906   5      //#line 23
9907   5                    i;
9908   5      
9909   5      //#line 23
9910   5                    return __nesc_temp;
9911   5                  }
9912   4                }
9913   3            }
9914   2          {
9915   3            int __nesc_temp = 
9916   3      //#line 27
9917   3            -1;
9918   3      
9919   3      //#line 27
9920   3            return __nesc_temp;
9921   3          }
9922   2        }
9923   1      }
9924          
9925          //#line 31
9926          static  /*inline*/  int /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress(void)
9927          {
9928   1        /* atomic removed: atomic calls only */
9929   1        {
9930   2          uint8_t i;
9931   2      
9932   2      //#line 36
9933   2          for (i = 0; i < 100; ++i) 
9934   2            {
9935   3              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[i] == 0) 
9936   3                {
9937   4                  {
9938   5                    int __nesc_temp = 
9939   5      //#line 40
9940   5                    i;
9941   5      
9942   5      //#line 40
9943   5                    return __nesc_temp;
9944   5                  }
9945   4                }
9946   3            }
9947   2          i = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index;
9948   2          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_index = (/*DsnFilterCenterC.DsnFilt
             -erCenterP*/DsnFilterCenterP__0__m_filter_index + 1) % 100;
9949   2      
9950   2          {
9951   3            int __nesc_temp = 
9952   3      //#line 47
9953   3            i;
9954   3      
9955   3      //#line 47
9956   3            return __nesc_temp;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 177 

9957   3          }
9958   2        }
9959   1      }
9960          
9961          //# 176 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
9962          static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptRFErr__fired(void)
9963          {
9964   1        {
9965   2      //#line 178
9966   2          do {
9967   3      //#line 178
9968   3              RFST = 0xED;
9969   3      //#line 178
9970   3              RFST = 0xED;
9971   3            }
9972   2          while (
9973   2      //#line 178
9974   2          178 == -1);
9975   2      //#line 178
9976   2          do {
9977   3      //#line 178
9978   3              S1CON = 0x00;
9979   3      //#line 178
9980   3              RFIRQF0 = ~(1 << 2);
9981   3            }
9982   2          while (
9983   2      //#line 178
9984   2          178 == -1);
9985   2        }
9986   1      //#line 178
9987   1        ;
9988   1      }
9989          
9990          //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
9991          #define RfInterruptsP__InterruptRFErr__fired(void) RfHardwareRxP__0__InterruptRFErr__fired()
9992          //# 80 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
9993          static  /*inline*/   void RfInterruptsP__INT_RFERR__fired(void)
9994          {
9995   1      
9996   1      
9997   1        if ((RFERRF & (1 << 2)) & ((uint8_t xdata *)0)[0x61A5]) 
9998   1          {
9999   2            RFERRF &= ~(1 << 2);
10000  02            RfInterruptsP__InterruptRFErr__fired();
10001  02          }
10002  01      }
10003  00      
10004  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10005  00      #define PlatformInterruptC__INT_RFERR__fired(void) RfInterruptsP__INT_RFERR__fired()
10006  00      //# 153 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
10007  00      static  /*inline*/    void /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__InterruptFIFOP__fired(void)
10008  00      {
10009  01      
10010  01      
10011  01        while (((uint8_t xdata *)0)[0x619B] > 0) 
10012  01          {
10013  02            if (((uint8_t xdata *)0)[0x619B] > 0x80) 
10014  02              {
10015  03                {
10016  04      //#line 161
10017  04                  do {
10018  05      //#line 161
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 178 

10019  05                      RFST = 0xED;
10020  05      //#line 161
10021  05                      RFST = 0xED;
10022  05                    }
10023  04                  while (
10024  04      //#line 161
10025  04                  161 == -1);
10026  04      //#line 161
10027  04                  do {
10028  05      //#line 161
10029  05                      S1CON = 0x00;
10030  05      //#line 161
10031  05                      RFIRQF0 = ~(1 << 2);
10032  05                    }
10033  04                  while (
10034  04      //#line 161
10035  04                  161 == -1);
10036  04                }
10037  03      //#line 161
10038  03                ;
10039  03              }
10040  02      
10041  02            if (((/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail + 1) & ((1 << 8) - 1)) == (/*RfHa
             -rdwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head & ((1 << 8) - 1))) 
10042  02              {
10043  03              }
10044  02      
10045  02      
10046  02            {
10047  03      //#line 169
10048  03              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[/*RfHardwareRxC.RfHardwareRxP*/RfHar
             -dwareRxP__0__rxbuf_tail & ((1 << 8) - 1)] = RFD;
10049  03      //#line 169
10050  03              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_tail = (/*RfHardwareRxC.RfHardwareRxP*/RfH
             -ardwareRxP__0__rxbuf_tail + 1) & ((1 << 8) - 1);
10051  03            }
10052  02      //#line 169
10053  02            ;
10054  02          }
10055  01      
10056  01      
10057  01        {
10058  02      //#line 173
10059  02          TopTaskMgrP__m_task_flag[3] = TRUE;
10060  02        }
10061  01      //#line 173
10062  01        ;
10063  01      }
10064  00      
10065  00      //# 57 "/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc"
10066  00      #define RfInterruptsP__InterruptFIFOP__fired(void) RfHardwareRxP__0__InterruptFIFOP__fired()
10067  00      //# 92 "/opt/atos/tos/chips/rf2530/hardware/control/RfInterruptsP.nc"
10068  00      static  /*inline*/   void RfInterruptsP__INT_RF__fired(void)
10069  00      {
10070  01      
10071  01      
10072  01        if ((RFIRQF1 & (1 << 3)) & ((uint8_t xdata *)0)[0x61A4]) 
10073  01          {
10074  02      
10075  02      
10076  02      
10077  02      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 179 

10078  02      
10079  02      
10080  02            RFIRQF1 = ~(1 << 3);
10081  02          }
10082  01        else {
10083  02          if ((RFIRQF1 & (1 << 4)) & ((uint8_t xdata *)0)[0x61A4]) 
10084  02            {
10085  03      
10086  03              RFIRQF1 = ~(1 << 4);
10087  03            }
10088  02          else {
10089  03            if ((RFIRQF1 & (1 << 0)) & ((uint8_t xdata *)0)[0x61A4]) 
10090  03              {
10091  04                (
10092  04                (uint8_t xdata *)0)[0x61A4] &= ~(1 << 0);
10093  04              }
10094  03            }
10095  02          }
10096  01      
10097  01      
10098  01      
10099  01        if ((RFIRQF0 & (1 << 2)) & ((uint8_t xdata *)0)[0x61A3]) 
10100  01          {
10101  02      
10102  02      
10103  02      
10104  02      
10105  02            RfInterruptsP__InterruptFIFOP__fired();
10106  02      
10107  02            RFIRQF0 = ~(1 << 2);
10108  02          }
10109  01      
10110  01      
10111  01      
10112  01        S1CON = 0x00;
10113  01      }
10114  00      
10115  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10116  00      #define PlatformInterruptC__INT_RF__fired(void) RfInterruptsP__INT_RF__fired()
10117  00      //# 536 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
10118  00      static  /*inline*/     void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__de
             -fault__captured(uint16_t time)
10119  00      //#line 536
10120  00      {
10121  01      }
10122  00      
10123  00      //# 50 "/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc"
10124  00      #define HplCC2530Timer1P__0__CaptureChannel2__captured(arg_0x7e921bc8) HplCC2530Timer1P__0__CaptureChanne
             -l2__default__captured(arg_0x7e921bc8)
10125  00      //# 454 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
10126  00      static  /*inline*/   void /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__INT_TIM1__fired(void)
10127  00      {
10128  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10129  02          {
10130  03            if (((uint8_t xdata *)0)[0x62A4] & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH4IF) 
10131  03              {
10132  04                T1STAT &= ~(1 << CC2530_T1STAT_CH4IF);
10133  04                T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
10134  04      
10135  04      
10136  04                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 4;
10137  04                {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 180 

10138  05      //#line 465
10139  05                  TopTaskMgrP__m_task_flag[0] = TRUE;
10140  05                }
10141  04      //#line 465
10142  04                ;
10143  04              }
10144  03      
10145  03            if (((uint8_t xdata *)0)[0x62A3] & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH3IF) 
10146  03              {
10147  04                T1STAT &= ~(1 << CC2530_T1STAT_CH3IF);
10148  04                T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
10149  04      
10150  04      
10151  04                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 3;
10152  04                {
10153  05      //#line 475
10154  05                  TopTaskMgrP__m_task_flag[0] = TRUE;
10155  05                }
10156  04      //#line 475
10157  04                ;
10158  04              }
10159  03      
10160  03            if (T1CCTL2 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH2IF) 
10161  03              {
10162  04                uint16_t value;
10163  04      
10164  04                T1STAT &= ~(1 << CC2530_T1STAT_CH2IF);
10165  04      
10166  04                if (!(T1CCTL2 & (1 << CC2530_T1CCTLx_CPSEL))) 
10167  04                  {
10168  05                    value = T1CC2L;
10169  05                    value += T1CC2H << 8;
10170  05      
10171  05                    /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__CaptureChannel2__captured(value);
10172  05                  }
10173  04                else 
10174  04                  {
10175  05                    T1CCTL2 &= ~(1 << CC2530_T1CCTLx_IM);
10176  05      
10177  05      
10178  05                    /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 2;
10179  05                    {
10180  06      //#line 497
10181  06                      TopTaskMgrP__m_task_flag[0] = TRUE;
10182  06                    }
10183  05      //#line 497
10184  05                    ;
10185  05                  }
10186  04              }
10187  03      
10188  03            if (T1CCTL1 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH1IF) 
10189  03              {
10190  04                T1STAT &= ~(1 << CC2530_T1STAT_CH1IF);
10191  04                T1CCTL1 &= ~(1 << CC2530_T1CCTLx_IM);
10192  04      
10193  04      
10194  04                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 1;
10195  04                {
10196  05      //#line 508
10197  05                  TopTaskMgrP__m_task_flag[0] = TRUE;
10198  05                }
10199  04      //#line 508
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 181 

10200  04                ;
10201  04              }
10202  03            if (T1CCTL0 & (1 << CC2530_T1CCTLx_IM) && T1STAT & CC2530_T1_CH0IF) 
10203  03              {
10204  04                T1STAT &= ~(1 << CC2530_T1STAT_CH0IF);
10205  04                T1CCTL0 &= ~(1 << CC2530_T1CCTLx_IM);
10206  04      
10207  04      
10208  04                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 0;
10209  04                {
10210  05      //#line 517
10211  05                  TopTaskMgrP__m_task_flag[0] = TRUE;
10212  05                }
10213  04      //#line 517
10214  04                ;
10215  04              }
10216  03      
10217  03            if (T1STAT & CC2530_T1_OVFIF) 
10218  03              {
10219  04                T1STAT &= ~(1 << CC2530_T1STAT_OVFIF);
10220  04      
10221  04      
10222  04                /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__m_alarm_flag |= 1 << 5;
10223  04                {
10224  05      //#line 526
10225  05                  TopTaskMgrP__m_task_flag[0] = TRUE;
10226  05                }
10227  04      //#line 526
10228  04                ;
10229  04              }
10230  03          }
10231  02      //#line 528
10232  02          __nesc_atomic_end(__nesc_atomic); }
10233  01      }
10234  00      
10235  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10236  00      #define PlatformInterruptC__INT_TIM1__fired(void) HplCC2530Timer1P__0__INT_TIM1__fired()
10237  00      //# 82 "/opt/atos/tos/chips/cc2530/usart/HalCC2530Uart0IsrP.nc"
10238  00      static  /*inline*/   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__INT_UART0_RX__f
             -ired(void)
10239  00      {
10240  01        URX0IF = 0;
10241  01      
10242  01        {
10243  02      //#line 86
10244  02          /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf__data[/*HalCC2530Uart0IsrC.
             -HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_tail & ((1 << 6) - 1)] = U0DBUF;
10245  02      //#line 86
10246  02          /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_tail = (/*HalCC2530Uart0Isr
             -C.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__uartRxBuf_tail + 1) & ((1 << 6) - 1);
10247  02        }
10248  01      //#line 86
10249  01        ;
10250  01        {
10251  02      //#line 87
10252  02          TopTaskMgrP__m_task_flag[1] = TRUE;
10253  02        }
10254  01      //#line 87
10255  01        ;
10256  01      }
10257  00      
10258  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 182 

10259  00      #define PlatformInterruptC__INT_UART0_RX__fired(void) HalCC2530Uart0IsrP__0__INT_UART0_RX__fired()
10260  00      //# 90 "/opt/atos/tos/chips/cc2530/usart/HalCC2530Uart0IsrP.nc"
10261  00      static  /*inline*/   void /*HalCC2530Uart0IsrC.HalCC2530Uart0IsrP*/HalCC2530Uart0IsrP__0__INT_UART0_TX__f
             -ired(void)
10262  00      {
10263  01      }
10264  00      
10265  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10266  00      #define PlatformInterruptC__INT_UART0_TX__fired(void) HalCC2530Uart0IsrP__0__INT_UART0_TX__fired()
10267  00      //# 101 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
10268  00      static  /*inline*/    void PlatformInterruptC__INT_UART1_RX__default__fired(void)
10269  00      {
10270  01        URX1IF = 0;
10271  01      }
10272  00      
10273  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10274  00      #define PlatformInterruptC__INT_UART1_RX__fired(void) PlatformInterruptC__INT_UART1_RX__default__fired()
10275  00      //# 113 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
10276  00      static  /*inline*/    void PlatformInterruptC__INT_UART1_TX__default__fired(void)
10277  00      {
10278  01        UTX1IF = 0;
10279  01      }
10280  00      
10281  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10282  00      #define PlatformInterruptC__INT_UART1_TX__fired(void) PlatformInterruptC__INT_UART1_TX__default__fired()
10283  00      //# 126 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
10284  00      static  /*inline*/    void PlatformInterruptC__INT_ST__default__fired(void)
10285  00      {
10286  01        STIF = 0;
10287  01      }
10288  00      
10289  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10290  00      #define PlatformInterruptC__INT_ST__fired(void) PlatformInterruptC__INT_ST__default__fired()
10291  00      //# 146 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
10292  00      static  /*inline*/    void PlatformInterruptC__INT_P0__default__fired(void)
10293  00      {
10294  01        P0IFG = 0x00;
10295  01        P0IF = 0;
10296  01      }
10297  00      
10298  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10299  00      #define PlatformInterruptC__INT_P0__fired(void) PlatformInterruptC__INT_P0__default__fired()
10300  00      //# 152 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
10301  00      static  /*inline*/    void PlatformInterruptC__INT_P1__default__fired(void)
10302  00      {
10303  01        P1IFG = 0x00;
10304  01        P1IF = 0;
10305  01      }
10306  00      
10307  00      //# 4 "/opt/atos/tos/platforms/antc5/interrupt/PlatformIntHandler.nc"
10308  00      #define PlatformInterruptC__INT_P1__fired(void) PlatformInterruptC__INT_P1__default__fired()
10309  00      //# 64 "/opt/atos/tos/chips/cc2530/mcs51/mcs51hardware.h"
10310  00      static   /*inline*/   void __nesc_disable_interrupt(void)
10311  00      //#line 64
10312  00      {
10313  01      //#line 64
10314  01        EA = 0;
10315  01      }
10316  00      
10317  00      //# 56 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
10318  00        int main(void)
10319  00      //#line 56
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 183 

10320  00      {
10321  01      
10322  01      
10323  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10324  02          {
10325  03      
10326  03      
10327  03      
10328  03      
10329  03      
10330  03            {
10331  04            }
10332  03      //#line 66
10333  03            ;
10334  03      
10335  03            RealMainP__Scheduler__init();
10336  03      
10337  03      
10338  03      
10339  03      
10340  03      
10341  03            RealMainP__PlatformInit__init();
10342  03            while (RealMainP__Scheduler__runNextTask()) ;
10343  03      
10344  03      
10345  03      
10346  03      
10347  03      
10348  03            RealMainP__SoftwareInit__init();
10349  03            while (RealMainP__Scheduler__runNextTask()) ;
10350  03          }
10351  02      //#line 83
10352  02          __nesc_atomic_end(__nesc_atomic); }
10353  01      
10354  01      
10355  01        __nesc_enable_interrupt();
10356  01      
10357  01        RealMainP__Boot__booted();
10358  01      
10359  01      
10360  01        RealMainP__Scheduler__taskLoop();
10361  01      
10362  01      
10363  01      
10364  01      
10365  01        return -1;
10366  01      }
10367  00      
10368  00      //# 11 "/opt/atos/tos/platforms/antc5/boot/PlatformP.nc"
10369  00      static error_t PlatformP__clockSelect32k(uint8_t source)
10370  00      {
10371  01      
10372  01      
10373  01        if (!(CLKCONSTA & 0x40)) {
10374  02          return FAIL;
10375  02          }
10376  01        if (source == 0) {
10377  02            CLKCONCMD &= ~0x80;
10378  02          }
10379  01        else {
10380  02      //#line 21
10381  02          if (source == 1) {
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 184 

10382  03              CLKCONCMD |= 0x80;
10383  03            }
10384  02          }
10385  01      //#line 24
10386  01        do {
10387  02      //#line 24
10388  02            uint8_t ____clkcon;
10389  02      //#line 24
10390  02            uint8_t ____clkconsta;
10391  02      
10392  02      //#line 24
10393  02            ____clkcon = CLKCONCMD;
10394  02      //#line 24
10395  02            do {
10396  03      //#line 24
10397  03                ____clkconsta = CLKCONSTA;
10398  03              }
10399  02            while (
10400  02      //#line 24
10401  02            ____clkconsta != ____clkcon);
10402  02          }
10403  01        while (
10404  01      //#line 24
10405  01        24 == -1);
10406  01      
10407  01        return 0;
10408  01      }
10409  00      
10410  00      static void PlatformP__clockSetMainSrc(uint8_t source)
10411  00      {
10412  01        register uint8_t osc32k_bm = CLKCONCMD & 0x80;
10413  01      
10414  01      
10415  01      
10416  01      
10417  01      
10418  01        SLEEPCMD &= ~0x04;
10419  01        while (!(SLEEPSTA & 0x20) || (SLEEPSTA & 0x04) != 0) ;
10420  01      
10421  01      
10422  01      
10423  01        if (source == 1) {
10424  02            CLKCONCMD = ((osc32k_bm | 0x40) | (0x01 << 3)) | 0x01;
10425  02          }
10426  01        else {
10427  02      //#line 45
10428  02          if (source == 0) {
10429  03              CLKCONCMD = osc32k_bm | (0x00 << 3);
10430  03            }
10431  02          }
10432  01      //#line 48
10433  01        do {
10434  02      //#line 48
10435  02            uint8_t ____clkcon;
10436  02      //#line 48
10437  02            uint8_t ____clkconsta;
10438  02      
10439  02      //#line 48
10440  02            ____clkcon = CLKCONCMD;
10441  02      //#line 48
10442  02            do {
10443  03      //#line 48
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 185 

10444  03                ____clkconsta = CLKCONSTA;
10445  03              }
10446  02            while (
10447  02      //#line 48
10448  02            ____clkconsta != ____clkcon);
10449  02          }
10450  01        while (
10451  01      //#line 48
10452  01        48 == -1);
10453  01        SLEEPCMD |= 0x04;
10454  01      }
10455  00      
10456  00      //# 8 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
10457  00      static void uart0SetBaud(uint32_t baud)
10458  00      {
10459  01        U0GCR = baud == 1200 ? 5 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 2400 ? 
             -6 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 4800 ? 7 + ((CLKCON & (1 << CC2530_CLKCON_OSC))
             - >> CC2530_CLKCON_OSC) : baud == 9600 ? 8 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 14400 ?
             - 8 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 19200 ? 9 + ((CLKCON & (1 << CC2530_CLKCON_OSC
             -)) >> CC2530_CLKCON_OSC) : baud == 28800 ? 9 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 3840
             -0 ? 10 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 57600 ? 10 + ((CLKCON & (1 << CC2530_CLKCO
             -N_OSC)) >> CC2530_CLKCON_OSC) : baud == 76800 ? 11 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud =
             -= 115200 ? 11 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 153600 ? 12 + ((CLKCON & (1 << CC25
             -30_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : baud == 230400 ? 12 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC)
             - : baud == 307200 ? 13 + ((CLKCON & (1 << CC2530_CLKCON_OSC)) >> CC2530_CLKCON_OSC) : 0;
10460  01        U0BAUD = baud == 1200 ? 59 : baud == 2400 ? 59 : baud == 4800 ? 59 : baud == 9600 ? 59 : baud == 14400 
             -? 216 : baud == 19200 ? 59 : baud == 28800 ? 216 : baud == 38400 ? 59 : baud == 57600 ? 216 : baud == 76800 ? 59 : baud 
             -== 115200 ? 216 : baud == 153600 ? 59 : baud == 230400 ? 216 : baud == 307200 ? 59 : 0;
10461  01      }
10462  00      
10463  00      //# 108 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
10464  00      static void FlashIEEEP__readFromFlash(void)
10465  00      {
10466  01        /* atomic removed: atomic calls only */
10467  01        {
10468  02          FlashIEEEP__HalFlash__read(FlashIEEEP__m_ieee_flash, 0x3FFE8, sizeof FlashIEEEP__m_ieee_flash);
10469  02      
10470  02      
10471  02          FlashIEEEP__ieeeProtect();
10472  02      
10473  02      
10474  02          FlashIEEEP__m_ieee[0] = FlashIEEEP__m_ieee_flash[7];
10475  02          FlashIEEEP__m_ieee[1] = FlashIEEEP__m_ieee_flash[6];
10476  02          FlashIEEEP__m_ieee[2] = FlashIEEEP__m_ieee_flash[5];
10477  02          FlashIEEEP__m_ieee[3] = FlashIEEEP__m_ieee_flash[4];
10478  02          FlashIEEEP__m_ieee[4] = FlashIEEEP__m_ieee_flash[3];
10479  02          FlashIEEEP__m_ieee[5] = FlashIEEEP__m_ieee_flash[2];
10480  02          FlashIEEEP__m_ieee[6] = FlashIEEEP__m_ieee_flash[1];
10481  02          FlashIEEEP__m_ieee[7] = FlashIEEEP__m_ieee_flash[0];
10482  02        }
10483  01      }
10484  00      
10485  00      //# 58 "/opt/atos/tos/chips/cc2530/flash/HalFlashP.nc"
10486  00      static  error_t HalFlashP__HalFlash__erase(uint32_t address)
10487  00      {
10488  01        uint8_t page;
10489  01        uint16_t old;
10490  01        uint8_t old_ea;
10491  01      
10492  01        /* atomic removed: atomic calls only */
10493  01        {
10494  02          page = address >> 11;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 186 

10495  02      
10496  02      
10497  02      
10498  02          while (((uint8_t xdata *)0)[0x6270] & 0x80) ;
10499  02          ((uint8_t xdata *)0)[0x6272] = page << 1;
10500  02          ((uint8_t xdata *)0)[0x6270] |= 0x01;
10501  02          while (((uint8_t xdata *)0)[0x6270] & 0x80) ;
10502  02        }
10503  01      
10504  01        return 0;
10505  01      }
10506  00      
10507  00      //# 193 "/opt/atos/tos/platforms/antc5/devices/FlashIEEEP.nc"
10508  00      static  void FlashIEEEP__FlashIEEE__WriteToRegister(void)
10509  00      {
10510  01        uint16_t addr;
10511  01      //#line 195
10512  01        uint16_t pan;
10513  01      
10514  01        (
10515  01        (uint8_t xdata *)0)[0x616A] = FlashIEEEP__m_ieee[0];
10516  01        ((uint8_t xdata *)0)[0x616B] = FlashIEEEP__m_ieee[1];
10517  01        ((uint8_t xdata *)0)[0x616C] = FlashIEEEP__m_ieee[2];
10518  01        ((uint8_t xdata *)0)[0x616D] = FlashIEEEP__m_ieee[3];
10519  01        ((uint8_t xdata *)0)[0x616E] = FlashIEEEP__m_ieee[4];
10520  01        ((uint8_t xdata *)0)[0x616F] = FlashIEEEP__m_ieee[5];
10521  01        ((uint8_t xdata *)0)[0x6170] = FlashIEEEP__m_ieee[6];
10522  01        ((uint8_t xdata *)0)[0x6171] = FlashIEEEP__m_ieee[7];
10523  01      
10524  01        pan = FlashIEEEP__FlashIEEE__GetPANID();
10525  01        addr = FlashIEEEP__FlashIEEE__GetShortAddress();
10526  01        (
10527  01        (uint8_t xdata *)0)[0x6172] = (uint16_t )pan & 0xFF;
10528  01        ((uint8_t xdata *)0)[0x6173] = ((uint16_t )pan >> 8) & 0xFF;
10529  01        (
10530  01        (uint8_t xdata *)0)[0x6174] = (uint16_t )addr & 0xFF;
10531  01        ((uint8_t xdata *)0)[0x6175] = ((uint16_t )addr >> 8) & 0xFF;
10532  01      }
10533  00      
10534  00      //#line 144
10535  00      static  uint16_t FlashIEEEP__FlashIEEE__GetPANID(void)
10536  00      {
10537  01        return (FlashIEEEP__m_ieee[4] << 8) | FlashIEEEP__m_ieee[5];
10538  01      }
10539  00      
10540  00      
10541  00      static  uint16_t FlashIEEEP__FlashIEEE__GetShortAddress(void)
10542  00      {
10543  01        return (FlashIEEEP__m_ieee[6] << 8) | FlashIEEEP__m_ieee[7];
10544  01      }
10545  00      
10546  00      //#line 217
10547  00      static  void FlashIEEEP__FlashIEEE__WriteToAM(void)
10548  00      {
10549  01        FlashIEEEP__ActiveMessageAddress__setAddress((uint8_t )(FlashIEEEP__FlashIEEE__GetPANID() & 0xFF), 
10550  01        FlashIEEEP__FlashIEEE__GetShortAddress());
10551  01      
10552  01        TOS_NODE_ID = FlashIEEEP__FlashIEEE__GetShortAddress();
10553  01      
10554  01        TOS_IEEE_SADDR = FlashIEEEP__FlashIEEE__GetShortAddress();
10555  01        TOS_IEEE_PANID = FlashIEEEP__FlashIEEE__GetPANID();
10556  01      }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 187 

10557  00      
10558  00      //# 198 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
10559  00      static  bool SchedulerBasicP__Scheduler__runNextTask(void)
10560  00      {
10561  01        uint8_t nextTask;
10562  01      
10563  01        /* atomic removed: atomic calls only */
10564  01      //#line 202
10565  01        {
10566  02          nextTask = SchedulerBasicP__popTask();
10567  02      
10568  02          if (nextTask == SchedulerBasicP__NO_TASK) 
10569  02            {
10570  03              {
10571  04                unsigned char __nesc_temp = 
10572  04      //#line 207
10573  04                FALSE;
10574  04      
10575  04      //#line 207
10576  04                return __nesc_temp;
10577  04              }
10578  03            }
10579  02        }
10580  01      //#line 210
10581  01        SchedulerBasicP__TaskBasic__runTask(nextTask);
10582  01        return TRUE;
10583  01      }
10584  00      
10585  00      //#line 269
10586  00      static   void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id)
10587  00      {
10588  01      }
10589  00      
10590  00      //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
10591  00      static  void SchedulerBasicP__TaskBasic__runTask(uint8_t arg_0x7ec64200){
10592  01      //#line 64
10593  01        switch (arg_0x7ec64200) {
10594  02      //#line 64
10595  02          case DigBaseP__showMenu:
10596  02      //#line 64
10597  02            DigBaseP__showMenu__runTask();
10598  02      //#line 64
10599  02            break;
10600  02      //#line 64
10601  02          case DigBaseP__sendData:
10602  02      //#line 64
10603  02            DigBaseP__sendData__runTask();
10604  02      //#line 64
10605  02            break;
10606  02      //#line 64
10607  02          case RealMainP__fakeTask:
10608  02      //#line 64
10609  02            RealMainP__fakeTask__runTask();
10610  02      //#line 64
10611  02            break;
10612  02      //#line 64
10613  02          case /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask:
10614  02      //#line 64
10615  02            /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__firedTask__runTask();
10616  02      //#line 64
10617  02            break;
10618  02      //#line 64
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 188 

10619  02          case /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer:
10620  02      //#line 64
10621  02            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask();
10622  02      //#line 64
10623  02            break;
10624  02      //#line 64
10625  02          case /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__resendTask:
10626  02      //#line 64
10627  02            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP_
             -_0__resendTask__runTask();
10628  02      //#line 64
10629  02            break;
10630  02      //#line 64
10631  02          case /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__0__signalDoneTask:
10632  02      //#line 64
10633  02            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__0__signalDoneTask__runTask();
10634  02      //#line 64
10635  02            break;
10636  02      //#line 64
10637  02          case /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext:
10638  02      //#line 64
10639  02            /*AMResourceCenterC.RfMacBaseSendC.RfMacBaseSendP*/RfMacBaseSendP__0__sendNext__runTask();
10640  02      //#line 64
10641  02            break;
10642  02      //#line 64
10643  02          case RfMacBaseCsmaP__signalDoneTask:
10644  02      //#line 64
10645  02            RfMacBaseCsmaP__signalDoneTask__runTask();
10646  02      //#line 64
10647  02            break;
10648  02      //#line 64
10649  02          case RfMacBaseCsmaP__doGo:
10650  02      //#line 64
10651  02            RfMacBaseCsmaP__doGo__runTask();
10652  02      //#line 64
10653  02            break;
10654  02      //#line 64
10655  02          case /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__0__sendAckTask:
10656  02      //#line 64
10657  02            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceiveP__
             -0__sendAckTask__runTask();
10658  02      //#line 64
10659  02            break;
10660  02      //#line 64
10661  02          case AtosNetStdP__rebootTask:
10662  02      //#line 64
10663  02            AtosNetStdP__rebootTask__runTask();
10664  02      //#line 64
10665  02            break;
10666  02      //#line 64
10667  02          case AtosNetStdP__nodeStatusUpTask:
10668  02      //#line 64
10669  02            AtosNetStdP__nodeStatusUpTask__runTask();
10670  02      //#line 64
10671  02            break;
10672  02      //#line 64
10673  02          case AtosNetStdP__sendDoneCheck:
10674  02      //#line 64
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 189 

10675  02            AtosNetStdP__sendDoneCheck__runTask();
10676  02      //#line 64
10677  02            break;
10678  02      //#line 64
10679  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__resendTask:
10680  02      //#line 64
10681  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__resendTask__runTask();
10682  02      //#line 64
10683  02            break;
10684  02      //#line 64
10685  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__1__signalDoneTask:
10686  02      //#line 64
10687  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__signalDoneTask__runTask();
10688  02      //#line 64
10689  02            break;
10690  02      //#line 64
10691  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacRece
             -iveP__1__sendAckTask:
10692  02      //#line 64
10693  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.RfReliableMacReceiveP*/RfReliableMacReceive
             -P__1__sendAckTask__runTask();
10694  02      //#line 64
10695  02            break;
10696  02      //#line 64
10697  02          default:
10698  02      //#line 64
10699  02            SchedulerBasicP__TaskBasic__default__runTask(arg_0x7ec64200);
10700  02      //#line 64
10701  02            break;
10702  02      //#line 64
10703  02          }
10704  01      //#line 64
10705  01      }
10706  00      //#line 64
10707  00      //# 17 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
10708  00      static  error_t AMResourceCenterP__AMResource__send(uint8_t resource_id, am_addr_t addr, message_t *msg, 
             -uint8_t len)
10709  00      {
10710  01        unsigned char *__nesc_temp43;
10711  01        unsigned char *__nesc_temp42;
10712  01      
10713  01      //#line 19
10714  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10715  02          {
10716  03            rf_header_t *header = (rf_header_t *)msg->header;
10717  03            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
10718  03      
10719  03      
10720  03      
10721  03            AMResourceCenterP__Packet__setPayloadLength(msg, len);
10722  03      
10723  03      
10724  03            __nesc_hton_leuint16((unsigned char *)&header->fcf, 0);
10725  03            if (addr != 0xFFFF) 
10726  03              {
10727  04                (__nesc_temp42 = (unsigned char *)&header->fcf, __nesc_hton_leuint16(__nesc_temp42, __nesc_ntoh
             -_leuint16(__nesc_temp42) | (1 << IEEE154_FCF_ACK_REQ)));
10728  04              }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 190 

10729  03            (__nesc_temp43 = (unsigned char *)&header->fcf, __nesc_hton_leuint16(__nesc_temp43, __nesc_ntoh_leu
             -int16(__nesc_temp43) | ((((IEEE154_TYPE_DATA << IEEE154_FCF_FRAME_TYPE) | (
10730  03            1 << IEEE154_FCF_INTRAPAN)) | (
10731  03            IEEE154_ADDR_SHORT << IEEE154_FCF_DEST_ADDR_MODE)) | (
10732  03            IEEE154_ADDR_SHORT << IEEE154_FCF_SRC_ADDR_MODE))));
10733  03      
10734  03      
10735  03      
10736  03      
10737  03      
10738  03      
10739  03      
10740  03      
10741  03      
10742  03            AMResourceCenterP__AMPacket__setGroup(msg, AMResourceCenterP__AMPacket__localGroup());
10743  03      
10744  03      
10745  03      
10746  03            AMResourceCenterP__AMPacket__setDestination(msg, addr);
10747  03      
10748  03      
10749  03            AMResourceCenterP__AMPacket__setSource(msg, AMResourceCenterP__AMPacket__address());
10750  03      
10751  03      
10752  03            __nesc_hton_int8((unsigned char *)&meta_data->rssi, 0);
10753  03            __nesc_hton_uint8((unsigned char *)&meta_data->lqi, 0);
10754  03      
10755  03      
10756  03      
10757  03      
10758  03      
10759  03            {
10760  04              unsigned char __nesc_temp = 
10761  04      //#line 64
10762  04              AMResourceCenterP__CoreSend__send(msg, __nesc_ntoh_leuint8((unsigned char *)&header->length));
10763  04      
10764  04              {
10765  05      //#line 64
10766  05                __nesc_atomic_end(__nesc_atomic); 
10767  05      //#line 64
10768  05                return __nesc_temp;
10769  05              }
10770  04            }
10771  03          }
10772  02      //#line 67
10773  02          __nesc_atomic_end(__nesc_atomic); }
10774  01      }
10775  00      
10776  00      //# 8 "/opt/atos/tos/chips/cc2530/watchdog/WatchDogP.nc"
10777  00      static  void WatchDogP__WatchDog__resetCpu(void)
10778  00      {
10779  01        /* atomic removed: atomic calls only */
10780  01        {
10781  02          uint32_t i = 0;
10782  02      
10783  02          WDCTL = 0x00;
10784  02          WDCTL = 0x0B;
10785  02      
10786  02      
10787  02          while (i++ < 0xFFFFFF) ;
10788  02        }
10789  01      }
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 191 

10790  00      
10791  00      //# 26 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
10792  00      static  am_addr_t RfPacketP__AMPacket__address(void)
10793  00      {
10794  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10795  02          {
10796  03            if (!RfPacketP__m_address_saved) 
10797  03              {
10798  04                RfPacketP__m_addr = RfPacketP__ActiveMessageAddress__amAddress();
10799  04                RfPacketP__m_address_saved = TRUE;
10800  04              }
10801  03      
10802  03      
10803  03            if (RfPacketP__m_addr != RfPacketP__ActiveMessageAddress__amAddress()) 
10804  03              {
10805  04      
10806  04      
10807  04                RfPacketP__WatchDog__resetCpu();
10808  04              }
10809  03          }
10810  02      //#line 43
10811  02          __nesc_atomic_end(__nesc_atomic); }
10812  01      
10813  01      
10814  01        return RfPacketP__ActiveMessageAddress__amAddress();
10815  01      }
10816  00      
10817  00      //# 95 "/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc"
10818  00      static   am_addr_t ActiveMessageAddressC__amAddress(void)
10819  00      //#line 95
10820  00      {
10821  01        am_addr_t myAddr;
10822  01      
10823  01      //#line 97
10824  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10825  02      //#line 97
10826  02          myAddr = ActiveMessageAddressC__addr;
10827  02      //#line 97
10828  02          __nesc_atomic_end(__nesc_atomic); }
10829  01        return myAddr;
10830  01      }
10831  00      
10832  00      //# 82 "/opt/atos/tos/lib/atos/utils/QueueExC.nc"
10833  00      static  /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t /*AMResourceCenterC.RfMacBaseSe
             -ndC.QueueExC*/QueueExC__0__QueueEx__element(uint8_t idx)
10834  00      {
10835  01        /* atomic removed: atomic calls only */
10836  01        {
10837  02          idx += /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__head;
10838  02          idx %= 4;
10839  02          {
10840  03            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue_t __nesc_temp = 
10841  03      //#line 88
10842  03            /*AMResourceCenterC.RfMacBaseSendC.QueueExC*/QueueExC__0__queue[idx];
10843  03      
10844  03      //#line 88
10845  03            return __nesc_temp;
10846  03          }
10847  02        }
10848  01      }
10849  00      
10850  00      //# 264 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 192 

10851  00      static   error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id)
10852  00      {
10853  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10854  02      //#line 266
10855  02          {
10856  03      //#line 266
10857  03            {
10858  04              unsigned char __nesc_temp = 
10859  04      //#line 266
10860  04              SchedulerBasicP__pushTask(id) ? 0 : EBUSY;
10861  04      
10862  04              {
10863  05      //#line 266
10864  05                __nesc_atomic_end(__nesc_atomic); 
10865  05      //#line 266
10866  05                return __nesc_temp;
10867  05              }
10868  04            }
10869  03          }
10870  02      //#line 269
10871  02          __nesc_atomic_end(__nesc_atomic); }
10872  01      }
10873  00      
10874  00      //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
10875  00      static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__1__signalDone(message_t *msg, error_t result)
10876  00      {
10877  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10878  02          {
10879  03            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
             -rySendP__1__m_sending) 
10880  03              {
10881  04                {
10882  05      //#line 30
10883  05                  __nesc_atomic_end(__nesc_atomic); 
10884  05      //#line 30
10885  05                  return;
10886  05                }
10887  04              }
10888  03          }
10889  02      //#line 33
10890  02          __nesc_atomic_end(__nesc_atomic); }
10891  01      
10892  01      
10893  01      
10894  01        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__
             -1__AMSend__sendDone(msg, result);
10895  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10896  02      //#line 38
10897  02          /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP
             -__1__m_sending = FALSE;
10898  02      //#line 38
10899  02          __nesc_atomic_end(__nesc_atomic); }
10900  01      }
10901  00      
10902  00      
10903  00      
10904  00      static error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__doSend(message_t *msg)
10905  00      {
10906  01        return /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__1__SubAMSend__send(/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRet
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 193 

             -rySendP__1__AMPacket__destination(msg), msg, /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySend
             -P*/RfReliableMacRetrySendP__1__Packet__payloadLength(msg));
10907  01      }
10908  00      
10909  00      //# 139 "/opt/atos/tos/lib/atos/net/AtosMac/AM/RfPacketP.nc"
10910  00      static  void *RfPacketP__Packet__getPayload(message_t *msg, uint8_t *len)
10911  00      {
10912  01        if (len != (void *)0) 
10913  01          {
10914  02            *len = RfPacketP__Packet__payloadLength(msg);
10915  02          }
10916  01      
10917  01        return (uint8_t *)msg->_data;
10918  01      }
10919  00      
10920  00      //# 183 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
10921  00      static  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startOneShot(uint8_t num, uin
             -t32_t dt)
10922  00      {
10923  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
10924  02          {
10925  03            {
10926  04      //#line 187
10927  04              {
10928  05      //#line 187
10929  05                if (1 >= uart_debug_level) {
10930  06      //#line 187
10931  06                    {
10932  07      //#line 187
10933  07                      sprintf(uart_debug_buf, "VirtualizeTimerC.Timer.startOneShot dt=%ld\n", dt);
10934  07                    }
10935  06      //#line 187
10936  06                    ATOS_DEBUG_UART_PRINT();
10937  06                  }
10938  05              }
10939  04            }
10940  03      //#line 187
10941  03            ;
10942  03            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(num, /*HilTimerMilliC.Virtualize
             -TimerC*/VirtualizeTimerC__0__TimerFrom__getNow(), dt, TRUE);
10943  03          }
10944  02      //#line 189
10945  02          __nesc_atomic_end(__nesc_atomic); }
10946  01      }
10947  00      
10948  00      //# 55 "/opt/atos/tos/lib/atos/common/AtosDebugUart.h"
10949  00      static void ATOS_DEBUG_UART_PRINT(void)
10950  00      {
10951  01        int i = 0;
10952  01      
10953  01      //#line 58
10954  01        while (i < 256 && uart_debug_buf[i] != '\0') 
10955  01          {
10956  02            ATOS_DEBUG_UART_PUTC(uart_debug_buf[i++]);
10957  02          }
10958  01      }
10959  00      
10960  00      //# 57 "/opt/atos/tos/chips/cc2530/usart/uart0.h"
10961  00      static void uart0PutChar(char c)
10962  00      {
10963  01        uint16_t i;
10964  01      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 194 

10965  01        for (i = 0; i < 10000; i++) 
10966  01          {
10967  02            if (!(U0CSR & 0x01)) {
10968  03              break;
10969  03              }
10970  02          }
10971  01      //#line 66
10972  01        U0DBUF = c;
10973  01      
10974  01        for (i = 0; i < 10000; i++) 
10975  01          {
10976  02            if (!(U0CSR & 0x01)) {
10977  03              break;
10978  03              }
10979  02          }
10980  01      }
10981  00      
10982  00      //# 161 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
10983  00      static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(uint8_t num, uint32_t t0, 
             -uint32_t dt, bool isoneshot)
10984  00      {
10985  01        /* atomic removed: atomic calls only */
10986  01        {
10987  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtualize
             -TimerC*/VirtualizeTimerC__0__m_timers[num];
10988  02      
10989  02      //#line 166
10990  02          timer->t0 = t0;
10991  02          timer->dt = dt;
10992  02          timer->isoneshot = isoneshot;
10993  02          timer->isrunning = TRUE;
10994  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask();
10995  02        }
10996  01      }
10997  00      
10998  00      //# 69 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
10999  00      static   /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Tra
             -nsformCounterC__0__Counter__get(void)
11000  00      {
11001  01        /* atomic removed: atomic calls only */
11002  01        {
11003  02          /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type rv = 0;
11004  02          /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type high = /*CounterMilli32C.Transfor
             -m*/TransformCounterC__0__m_upper;
11005  02          /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type low = /*CounterMilli32C.Transform*/
             -TransformCounterC__0__CounterFrom__get();
11006  02      
11007  02          if (/*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending()) 
11008  02            {
11009  03      
11010  03      
11011  03      
11012  03      
11013  03      
11014  03      
11015  03              high++;
11016  03              low = /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__get();
11017  03            }
11018  02      
11019  02          {
11020  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type high_to = high;
11021  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type low_to = low >> /*CounterMilli32C.T
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 195 

             -ransform*/TransformCounterC__0__LOW_SHIFT_RIGHT;
11022  03      
11023  03      //#line 92
11024  03            rv = (high_to << /*CounterMilli32C.Transform*/TransformCounterC__0__HIGH_SHIFT_LEFT) | low_to;
11025  03          }
11026  02      
11027  02          {
11028  03            /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type __nesc_temp = 
11029  03      //#line 95
11030  03            rv;
11031  03      
11032  03      //#line 95
11033  03            return __nesc_temp;
11034  03          }
11035  02        }
11036  01      }
11037  00      
11038  00      //# 316 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
11039  00      static   uint16_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Counter__get(void)
11040  00      {
11041  01        /* atomic removed: atomic calls only */
11042  01        {
11043  02          uint16_t r;
11044  02      
11045  02          {
11046  03      //#line 322
11047  03            r = T1CNTL;
11048  03      //#line 322
11049  03            r += T1CNTH << 8;
11050  03          }
11051  02      //#line 322
11052  02          ;
11053  02      
11054  02          {
11055  03            unsigned short __nesc_temp = 
11056  03      //#line 324
11057  03            r;
11058  03      
11059  03      //#line 324
11060  03            return __nesc_temp;
11061  03          }
11062  02        }
11063  01      }
11064  00      
11065  00      //# 35 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
11066  00      static  void *RfReliableMacPacketP__Packet__getPayload(message_t *msg, uint8_t *len)
11067  00      {
11068  01        if (len != (void *)0) 
11069  01          {
11070  02            *len = RfReliableMacPacketP__Packet__payloadLength(msg);
11071  02          }
11072  01      
11073  01        return RfReliableMacPacketP__SubPacket__getPayload(msg, (void *)0) + sizeof(rf_rmac_header_t );
11074  01      }
11075  00      
11076  00      //# 102 "/opt/atos/tos/lib/atos/net/AtosNetStd/AtosNetStdP.nc"
11077  00      static int AtosNetStdP__indexOfTraceItem(anstd_trace_t *trace, uint16_t node_id)
11078  00      {
11079  01        uint8_t i;
11080  01      
11081  01      //#line 105
11082  01        for (i = 0; i < trace->total_count; ++i) 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 196 

11083  01          {
11084  02            if (trace->items[i].node_id == node_id) 
11085  02              {
11086  03                return i;
11087  03              }
11088  02          }
11089  01      
11090  01        return -1;
11091  01      }
11092  00      
11093  00      static void AtosNetStdP__traceBackward(message_t *msg, anstd_trace_ack_t *trace_ack, int index)
11094  00      {
11095  01        uint16_t node_id = 0xFFFF;
11096  01      
11097  01      //#line 119
11098  01        memcpy(&AtosNetStdP__m_send_msg, msg, sizeof AtosNetStdP__m_send_msg);
11099  01      
11100  01        if (index > 0) 
11101  01          {
11102  02            node_id = trace_ack->items[index - 1].node_id;
11103  02            AtosNetStdP__AMSend__send(node_id, &AtosNetStdP__m_send_msg, AtosNetStdP__Packet__payloadLength(&At
             -osNetStdP__m_send_msg));
11104  02          }
11105  01      }
11106  00      
11107  00      //# 74 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
11108  00      static  error_t /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableM
             -acRetrySendP__1__AMSend__send(am_addr_t addr, message_t *msg, uint8_t len)
11109  00      {
11110  01        error_t result;
11111  01      
11112  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11113  02          {
11114  03            rf_rmac_header_t *header = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetryS
             -endP*/RfReliableMacRetrySendP__1__PacketEx__getPacketHeader(msg);
11115  03            rf_meta_data_t *meta_data = (rf_meta_data_t *)msg->meta_data;
11116  03      
11117  03            if (/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending) 
11118  03              {
11119  04                {
11120  05                  unsigned char __nesc_temp = 
11121  05      //#line 85
11122  05                  FAIL;
11123  05      
11124  05                  {
11125  06      //#line 85
11126  06                    __nesc_atomic_end(__nesc_atomic); 
11127  06      //#line 85
11128  06                    return __nesc_temp;
11129  06                  }
11130  05                }
11131  04              }
11132  03            header->ack_req = addr != 0xFFFF;
11133  03      
11134  03            __nesc_hton_int8((unsigned char *)&meta_data->ack, FALSE);
11135  03      
11136  03            header->dsn = rf_rmac_dsn;
11137  03      
11138  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__1__AMPacket__setDestination(msg, addr);
11139  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 197 

             -dP__1__Packet__setPayloadLength(msg, len);
11140  03      
11141  03      
11142  03            result = /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMa
             -cRetrySendP__1__doSend(msg);
11143  03      
11144  03            if (result == 0) 
11145  03              {
11146  04                rf_rmac_dsn++;
11147  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_sending = TRUE;
11148  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_msg = msg;
11149  04                /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetr
             -ySendP__1__m_retry_times = 0;
11150  04              }
11151  03      
11152  03            {
11153  04              unsigned char __nesc_temp = 
11154  04      //#line 109
11155  04              result;
11156  04      
11157  04              {
11158  05      //#line 109
11159  05                __nesc_atomic_end(__nesc_atomic); 
11160  05      //#line 109
11161  05                return __nesc_temp;
11162  05              }
11163  04            }
11164  03          }
11165  02      //#line 112
11166  02          __nesc_atomic_end(__nesc_atomic); }
11167  01      }
11168  00      
11169  00      //# 67 "/opt/tinyos-2.x/tos/interfaces/Packet.nc"
11170  00      static  uint8_t AtosNetStdP__Packet__payloadLength(message_t *arg_0x7eb25e90){
11171  01      //#line 67
11172  01        unsigned char result;
11173  01      //#line 67
11174  01      
11175  01      //#line 67
11176  01        result = RfReliableMacPacketP__Packet__payloadLength(arg_0x7eb25e90);
11177  01      //#line 67
11178  01      
11179  01      //#line 67
11180  01        return result;
11181  01      //#line 67
11182  01      }
11183  00      //#line 67
11184  00      //# 64 "/opt/atos/tos/lib/atos/net/AtosMac/macbase/RfMacBaseCsmaP.nc"
11185  00      static void RfMacBaseCsmaP__signalDone(error_t result)
11186  00      {
11187  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11188  02          {
11189  03            RfMacBaseCsmaP__m_result = result;
11190  03          }
11191  02      //#line 69
11192  02          __nesc_atomic_end(__nesc_atomic); }
11193  01      
11194  01        RfMacBaseCsmaP__signalDoneTask__postTask();
11195  01      }
11196  00      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 198 

11197  00      //# 76 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResourceCenterP.nc"
11198  00      static   void AMResourceCenterP__AMResource__default__sendDone(uint8_t resource_id, message_t *msg, error
             -_t error)
11199  00      {
11200  01      }
11201  00      
11202  00      //# 7 "/opt/atos/tos/lib/atos/net/AtosMac/AM/AMResource.nc"
11203  00      static  void AMResourceCenterP__AMResource__sendDone(uint8_t arg_0x7e5f3dd8, message_t *arg_0x7e6080a8, e
             -rror_t arg_0x7e608230){
11204  01      //#line 7
11205  01        switch (arg_0x7e5f3dd8) {
11206  02      //#line 7
11207  02          case /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC__0
             -__AM_RESOURCE_ID:
11208  02      //#line 7
11209  02            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AMRes
             -ourceP__0__AMResource__sendDone(arg_0x7e6080a8, arg_0x7e608230);
11210  02      //#line 7
11211  02            break;
11212  02      //#line 7
11213  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC*/AMResourceC
             -__2__AM_RESOURCE_ID:
11214  02      //#line 7
11215  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.AMResourceC.AMResourceP*/AM
             -ResourceP__1__AMResource__sendDone(arg_0x7e6080a8, arg_0x7e608230);
11216  02      //#line 7
11217  02            break;
11218  02      //#line 7
11219  02          case /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__3__AM_RESOURCE
             -_ID:
11220  02      //#line 7
11221  02            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__2__AM
             -Resource__sendDone(arg_0x7e6080a8, arg_0x7e608230);
11222  02      //#line 7
11223  02            break;
11224  02      //#line 7
11225  02          case /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC*/AMResourceC__1__AM_RESOURCE_ID
             -:
11226  02      //#line 7
11227  02            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacReceiveC.AMResourceC.AMResourceP*/AMResourceP__3__AMRes
             -ource__sendDone(arg_0x7e6080a8, arg_0x7e608230);
11228  02      //#line 7
11229  02            break;
11230  02      //#line 7
11231  02          default:
11232  02      //#line 7
11233  02            AMResourceCenterP__AMResource__default__sendDone(arg_0x7e5f3dd8, arg_0x7e6080a8, arg_0x7e608230);
11234  02      //#line 7
11235  02            break;
11236  02      //#line 7
11237  02          }
11238  01      //#line 7
11239  01      }
11240  00      //#line 7
11241  00      //# 51 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacSendP.nc"
11242  00      static void /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/R
             -fReliableMacSendP__1__signalDone(message_t *msg, error_t result)
11243  00      {
11244  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11245  02          {
11246  03            if (!/*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/Rf
             -ReliableMacSendP__1__m_sending) 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 199 

11247  03              {
11248  04                {
11249  05      //#line 57
11250  05                  __nesc_atomic_end(__nesc_atomic); 
11251  05      //#line 57
11252  05                  return;
11253  05                }
11254  04              }
11255  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__TimeoutTimer__stop();
11256  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__AckTimer__stop();
11257  03      
11258  03      
11259  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__m_msg = msg;
11260  03            /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRelia
             -bleMacSendP__1__m_result = result;
11261  03          }
11262  02      //#line 66
11263  02          __nesc_atomic_end(__nesc_atomic); }
11264  01      
11265  01        /*AtosNetStdC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableM
             -acSendP__1__signalDoneTask__postTask();
11266  01      }
11267  00      
11268  00      //#line 51
11269  00      static void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRe
             -liableMacSendP__0__signalDone(message_t *msg, error_t result)
11270  00      {
11271  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11272  02          {
11273  03            if (!/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfRel
             -iableMacSendP__0__m_sending) 
11274  03              {
11275  04                {
11276  05      //#line 57
11277  05                  __nesc_atomic_end(__nesc_atomic); 
11278  05      //#line 57
11279  05                  return;
11280  05                }
11281  04              }
11282  03            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__0__TimeoutTimer__stop();
11283  03            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__0__AckTimer__stop();
11284  03      
11285  03      
11286  03            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__0__m_msg = msg;
11287  03            /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliable
             -MacSendP__0__m_result = result;
11288  03          }
11289  02      //#line 66
11290  02          __nesc_atomic_end(__nesc_atomic); }
11291  01      
11292  01        /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacSendC.RfReliableMacSendP*/RfReliableMacS
             -endP__0__signalDoneTask__postTask();
11293  01      }
11294  00      
11295  00      //# 96 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
11296  00      static void /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__set_alarm(void)
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 200 

11297  00      {
11298  01        /* atomic removed: atomic calls only */
11299  01        {
11300  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type now = /*RfMacBaseCsmaC.Ala
             -rm32khz32C.Transform*/TransformAlarmC__1__Counter__get();
11301  02      //#line 100
11302  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type expires;
11303  02      //#line 100
11304  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type remaining;
11305  02      
11306  02      
11307  02      
11308  02          expires = /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 + /*RfMacBaseCsmaC.Alarm
             -32khz32C.Transform*/TransformAlarmC__1__m_dt;
11309  02      
11310  02      
11311  02          remaining = (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__to_size_type )(expires - n
             -ow);
11312  02      
11313  02      
11314  02          if (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 <= now) 
11315  02            {
11316  03              if (expires >= /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 && 
11317  03              expires <= now) {
11318  04                remaining = 0;
11319  04                }
11320  03            }
11321  02          else {
11322  03              if (expires >= /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 || 
11323  03              expires <= now) {
11324  04                remaining = 0;
11325  04                }
11326  03            }
11327  02          if (remaining > /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY) 
11328  02            {
11329  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 = now + /*RfMacBaseCsmaC.Alarm
             -32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
11330  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = remaining - /*RfMacBaseCsmaC
             -.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
11331  03              remaining = /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__MAX_DELAY;
11332  03            }
11333  02          else 
11334  02            {
11335  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_t0 += /*RfMacBaseCsmaC.Alarm32khz
             -32C.Transform*/TransformAlarmC__1__m_dt;
11336  03              /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__m_dt = 0;
11337  03            }
11338  02      
11339  02          /*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__AlarmFrom__startAt((/*RfMacBaseCsmaC.Al
             -arm32khz32C.Transform*/TransformAlarmC__1__from_size_type )now << 0, 
11340  02          (/*RfMacBaseCsmaC.Alarm32khz32C.Transform*/TransformAlarmC__1__from_size_type )remaining << 0);
11341  02        }
11342  01      }
11343  00      
11344  00      //# 69 "/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc"
11345  00      static   /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type /*Counter32khz32C.Transf
             -ormCounterC*/TransformCounterC__1__Counter__get(void)
11346  00      {
11347  01        /* atomic removed: atomic calls only */
11348  01        {
11349  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type rv = 0;
11350  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__upper_count_type high = /*Counter32khz32C.
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 201 

             -TransformCounterC*/TransformCounterC__1__m_upper;
11351  02          /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__from_size_type low = /*Counter32khz32C.Tra
             -nsformCounterC*/TransformCounterC__1__CounterFrom__get();
11352  02      
11353  02          if (/*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__isOverflowPending()) 
11354  02            {
11355  03      
11356  03      
11357  03      
11358  03      
11359  03      
11360  03      
11361  03              high++;
11362  03              low = /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__CounterFrom__get();
11363  03            }
11364  02      
11365  02          {
11366  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type high_to = high;
11367  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type low_to = low >> /*Counter32
             -khz32C.TransformCounterC*/TransformCounterC__1__LOW_SHIFT_RIGHT;
11368  03      
11369  03      //#line 92
11370  03            rv = (high_to << /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__HIGH_SHIFT_LEFT) | low_
             -to;
11371  03          }
11372  02      
11373  02          {
11374  03            /*Counter32khz32C.TransformCounterC*/TransformCounterC__1__to_size_type __nesc_temp = 
11375  03      //#line 95
11376  03            rv;
11377  03      
11378  03      //#line 95
11379  03            return __nesc_temp;
11380  03          }
11381  02        }
11382  01      }
11383  00      
11384  00      //# 69 "/opt/atos/tos/chips/cc2530/random/CC2530RandomLfsrP.nc"
11385  00      static   uint16_t CC2530RandomLfsrP__Random__rand16(void)
11386  00      //#line 69
11387  00      {
11388  01        uint16_t result;
11389  01      
11390  01        /* atomic removed: atomic calls only */
11391  01        ADCCON1 = (ADCCON1 & ~((1 << 3) | (1 << 2))) | (1 << 2);
11392  01      
11393  01        result = RNDH << 8;
11394  01        result += RNDL;
11395  01        return result;
11396  01      }
11397  00      
11398  00      //# 24 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacRetrySendP.nc"
11399  00      static void /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetry
             -SendP__0__signalDone(message_t *msg, error_t result)
11400  00      {
11401  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11402  02          {
11403  03            if (!/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetryS
             -endP__0__m_sending) 
11404  03              {
11405  04                {
11406  05      //#line 30
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 202 

11407  05                  __nesc_atomic_end(__nesc_atomic); 
11408  05      //#line 30
11409  05                  return;
11410  05                }
11411  04              }
11412  03          }
11413  02      //#line 33
11414  02          __nesc_atomic_end(__nesc_atomic); }
11415  01      
11416  01      
11417  01      
11418  01        /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0__
             -AMSend__sendDone(msg, result);
11419  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11420  02      //#line 38
11421  02          /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySendP__0
             -__m_sending = FALSE;
11422  02      //#line 38
11423  02          __nesc_atomic_end(__nesc_atomic); }
11424  01      }
11425  00      
11426  00      
11427  00      
11428  00      static error_t /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRe
             -trySendP__0__doSend(message_t *msg)
11429  00      {
11430  01        return /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySen
             -dP__0__SubAMSend__send(/*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReliableMacRetrySend
             -P__0__AMPacket__destination(msg), msg, /*DigBaseC.PlatformMacC.RfMacC.RfReliableMacSendC.RfReliableMacRetrySendP*/RfReli
             -ableMacRetrySendP__0__Packet__payloadLength(msg));
11431  01      }
11432  00      
11433  00      //# 61 "/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc"
11434  00      static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(uint32_t now)
11435  00      {
11436  01        /* atomic removed: atomic calls only */
11437  01        {
11438  02          uint8_t num;
11439  02      
11440  02          for (num = 0; num < /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS; num++) 
11441  02            {
11442  03              /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtua
             -lizeTimerC*/VirtualizeTimerC__0__m_timers[num];
11443  03      
11444  03              if (timer->isrunning) 
11445  03                {
11446  04                  uint32_t elapsed = now - timer->t0;
11447  04      
11448  04                  if (elapsed >= timer->dt) 
11449  04                    {
11450  05                      if (timer->isoneshot) 
11451  05                        {
11452  06                          timer->isrunning = FALSE;
11453  06                        }
11454  05                      else 
11455  05                        {
11456  06      
11457  06                          timer->t0 = now - elapsed % timer->dt;
11458  06                        }
11459  05      
11460  05                      {
11461  06      //#line 87
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 203 

11462  06                        {
11463  07      //#line 87
11464  07                          if (1 >= uart_debug_level) {
11465  08      //#line 87
11466  08                              {
11467  09      //#line 87
11468  09                                sprintf(uart_debug_buf, "fireTimers %d, now=0x%lx,elapsed=0x%lx, dt=0x%lx,t0=0x
             -%lx\n", (int )num, elapsed, now, timer->dt, timer->t0);
11469  09                              }
11470  08      //#line 87
11471  08                              ATOS_DEBUG_UART_PRINT();
11472  08                            }
11473  07                        }
11474  06                      }
11475  05      //#line 87
11476  05                      ;
11477  05      
11478  05                      /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(num);
11479  05                    }
11480  04                }
11481  03            }
11482  02      
11483  02          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask();
11484  02        }
11485  01      }
11486  00      
11487  00      //# 96 "/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc"
11488  00      static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm(void)
11489  00      {
11490  01        /* atomic removed: atomic calls only */
11491  01        {
11492  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type now = /*HilTimerMilliC.Ala
             -rmMilli32C.Transform*/TransformAlarmC__0__Counter__get();
11493  02      //#line 100
11494  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type expires;
11495  02      //#line 100
11496  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type remaining;
11497  02      
11498  02      
11499  02      
11500  02          expires = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 + /*HilTimerMilliC.Alarm
             -Milli32C.Transform*/TransformAlarmC__0__m_dt;
11501  02      
11502  02      
11503  02          remaining = (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type )(expires - n
             -ow);
11504  02      
11505  02      
11506  02          if (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 <= now) 
11507  02            {
11508  03              if (expires >= /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 && 
11509  03              expires <= now) {
11510  04                remaining = 0;
11511  04                }
11512  03            }
11513  02          else {
11514  03              if (expires >= /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 || 
11515  03              expires <= now) {
11516  04                remaining = 0;
11517  04                }
11518  03            }
11519  02          if (remaining > /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY) 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 204 

11520  02            {
11521  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 = now + /*HilTimerMilliC.Alarm
             -Milli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11522  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = remaining - /*HilTimerMilliC
             -.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11523  03              remaining = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
11524  03            }
11525  02          else 
11526  02            {
11527  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 += /*HilTimerMilliC.AlarmMilli
             -32C.Transform*/TransformAlarmC__0__m_dt;
11528  03              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = 0;
11529  03            }
11530  02      
11531  02          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt((/*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__from_size_type )now << 5, 
11532  02          (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type )remaining << 5);
11533  02        }
11534  01      }
11535  00      
11536  00      //# 38 "/opt/atos/tos/chips/cc2530/timer/hardware/HplCC2530Timer1P.nc"
11537  00      static  error_t /*HplCC2530Timer1C.HplCC2530Timer1P*/HplCC2530Timer1P__0__Init__init(void)
11538  00      {
11539  01        /* atomic removed: atomic calls only */
11540  01        {
11541  02          T1CCTL0 = 0;
11542  02          T1CCTL1 = 0;
11543  02          T1CCTL2 = 0;
11544  02          ((uint8_t xdata *)0)[0x62A3] = 0;
11545  02          ((uint8_t xdata *)0)[0x62A4] = 0;
11546  02      
11547  02          T1CNTL = 0;
11548  02      
11549  02      
11550  02          CLKCON = (CLKCON & ~CC2530_CLKCON_TICKSPD_MASK) | CC2530_TICKF_DIV_8;
11551  02      
11552  02      
11553  02      
11554  02          T1CTL = (T1CTL & ~CC2530_T1CTL_DIV_MASK) | CC2530_TIMER1_DIV_128;
11555  02      
11556  02      
11557  02      
11558  02          T1CTL = (T1CTL & ~CC2530_T1CTL_MODE_MASK) | CC2530_TIMER1_MODE_FREE;
11559  02      
11560  02      
11561  02          T1STAT = 0;
11562  02      
11563  02      
11564  02          TIMIF |= 1 << CC2530_TIMIF_OVFIM;
11565  02          T1IE = 1;
11566  02        }
11567  01      
11568  01        return 0;
11569  01      }
11570  00      
11571  00      //# 22 "/opt/atos/tos/lib/atos/kernel/TopTask/TopTaskMgrP.nc"
11572  00      static  bool TopTaskMgrP__TopTaskMgr__hasTasks(void)
11573  00      {
11574  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11575  02          {
11576  03            uint8_t i;
11577  03      
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 205 

11578  03            for (i = 0; i < TopTaskMgrP__TOP_TASK_COUNT; ++i) 
11579  03              {
11580  04                if (TopTaskMgrP__m_task_flag[i]) 
11581  04                  {
11582  05                    {
11583  06                      unsigned char __nesc_temp = 
11584  06      //#line 32
11585  06                      TRUE;
11586  06      
11587  06                      {
11588  07      //#line 32
11589  07                        __nesc_atomic_end(__nesc_atomic); 
11590  07      //#line 32
11591  07                        return __nesc_temp;
11592  07                      }
11593  06                    }
11594  05                  }
11595  04              }
11596  03      //#line 36
11597  03            {
11598  04              unsigned char __nesc_temp = 
11599  04      //#line 36
11600  04              FALSE;
11601  04      
11602  04              {
11603  05      //#line 36
11604  05                __nesc_atomic_end(__nesc_atomic); 
11605  05      //#line 36
11606  05                return __nesc_temp;
11607  05              }
11608  04            }
11609  03          }
11610  02      //#line 39
11611  02          __nesc_atomic_end(__nesc_atomic); }
11612  01      }
11613  00      
11614  00      //# 61 "/opt/atos/tos/chips/rf2530/hardware/txrx/RfHardwareRxP.nc"
11615  00      static bool /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__readRfBuf(uint8_t *_data, uint8_t length)
11616  00      {
11617  01        while (length > 0) 
11618  01          {
11619  02            if (/*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head == /*RfHardwareRxC.RfHardwareRxP*/R
             -fHardwareRxP__0__rxbuf_tail) 
11620  02              {
11621  03                return FALSE;
11622  03              }
11623  02      
11624  02            {
11625  03      //#line 70
11626  03              *_data = /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf__data[/*RfHardwareRxC.RfHardwareR
             -xP*/RfHardwareRxP__0__rxbuf_head & ((1 << 8) - 1)];
11627  03      //#line 70
11628  03              /*RfHardwareRxC.RfHardwareRxP*/RfHardwareRxP__0__rxbuf_head = (/*RfHardwareRxC.RfHardwareRxP*/RfH
             -ardwareRxP__0__rxbuf_head + 1) & ((1 << 8) - 1);
11629  03            }
11630  02      //#line 70
11631  02            ;
11632  02            _data++;
11633  02            length--;
11634  02          }
11635  01      
11636  01        return TRUE;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 206 

11637  01      }
11638  00      
11639  00      //# 56 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacPacketP.nc"
11640  00      static  bool RfReliableMacPacketP__PacketEx__isValidPacket(message_t *msg)
11641  00      {
11642  01        if (!RfReliableMacPacketP__SubPacketEx__isValidPacket(msg)) 
11643  01          {
11644  02            return FALSE;
11645  02          }
11646  01      
11647  01        return RfReliableMacPacketP__SubPacket__payloadLength(msg) >= RfReliableMacPacketP__PacketEx__packetHea
             -derSize();
11648  01      }
11649  00      
11650  00      //# 21 "/opt/atos/tos/lib/atos/net/AtosMac/mac/RfReliableMacAckP.nc"
11651  00      static  uint8_t RfReliableMacAckP__RfReliableMacAck__fillAckMessage(message_t *receive_msg, uint8_t recei
             -ve_dsn, message_t *ack_msg, rf_ack_t *ack)
11652  00      {
11653  01        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
11654  02          {
11655  03            RfReliableMacAckP__fillAckMessageDefault(receive_msg, receive_dsn, ack_msg, ack);
11656  03            RfReliableMacAckP__RfReliableMacAckEvent__fillAckMessage(receive_msg, receive_dsn, ack_msg, ack);
11657  03      
11658  03            {
11659  04              unsigned char __nesc_temp = 
11660  04      //#line 28
11661  04              sizeof(rf_ack_t );
11662  04      
11663  04              {
11664  05      //#line 28
11665  05                __nesc_atomic_end(__nesc_atomic); 
11666  05      //#line 28
11667  05                return __nesc_temp;
11668  05              }
11669  04            }
11670  03          }
11671  02      //#line 31
11672  02          __nesc_atomic_end(__nesc_atomic); }
11673  01      }
11674  00      
11675  00      //# 51 "/opt/atos/tos/lib/atos/utils/DsnFilterCenterP.nc"
11676  00      static bool /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__filterDsn(uint16_t addr, uint8_t fi
             -eld_id, uint8_t dsn)
11677  00      {
11678  01        /* atomic removed: atomic calls only */
11679  01        {
11680  02          int index = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__indexOfAddress(addr);
11681  02      
11682  02          field_id %= 1;
11683  02      
11684  02          if (index < 0) 
11685  02            {
11686  03              index = /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__findNextAddress();
11687  03            }
11688  02      
11689  02          if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[index] == addr) 
11690  02            {
11691  03              if (/*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[field_id][index] == ds
             -n) 
11692  03                {
11693  04                  {
11694  05                    unsigned char __nesc_temp = 
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 207 

11695  05      //#line 68
11696  05                    FALSE;
11697  05      
11698  05      //#line 68
11699  05                    return __nesc_temp;
11700  05                  }
11701  04                }
11702  03            }
11703  02          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_address[index] = addr;
11704  02          /*DsnFilterCenterC.DsnFilterCenterP*/DsnFilterCenterP__0__m_filter_dsn[field_id][index] = dsn;
11705  02      
11706  02          {
11707  03            unsigned char __nesc_temp = 
11708  03      //#line 75
11709  03            TRUE;
11710  03      
11711  03      //#line 75
11712  03            return __nesc_temp;
11713  03          }
11714  02        }
11715  01      }
11716  00      
11717  00      //# 22 "/opt/atos/tos/platforms/antc5/interrupt/PlatformInterruptC.nc"
11718  00      void __vector_0(void) interrupt 0
11719  00      {
11720  01        EA = 0;
11721  01        PlatformInterruptC__INT_RFERR__fired();
11722  01        EA = 1;
11723  01      }
11724  00      
11725  00      
11726  00      
11727  00      
11728  00      
11729  00      
11730  00      
11731  00      void __vector_16(void) interrupt 16
11732  00      {
11733  01        EA = 0;
11734  01        PlatformInterruptC__INT_RF__fired();
11735  01        EA = 1;
11736  01      }
11737  00      
11738  00      //#line 55
11739  00      void __vector_9(void) interrupt 9
11740  00      {
11741  01        EA = 0;
11742  01        PlatformInterruptC__INT_TIM1__fired();
11743  01        EA = 1;
11744  01      }
11745  00      
11746  00      
11747  00      
11748  00      
11749  00      
11750  00      
11751  00      
11752  00      
11753  00      void __vector_2(void) interrupt 2
11754  00      {
11755  01        EA = 0;
11756  01        PlatformInterruptC__INT_UART0_RX__fired();
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 208 

11757  01        EA = 1;
11758  01      }
11759  00      
11760  00      
11761  00      
11762  00      
11763  00      
11764  00      
11765  00      void __vector_7(void) interrupt 7
11766  00      {
11767  01        EA = 0;
11768  01        PlatformInterruptC__INT_UART0_TX__fired();
11769  01        EA = 1;
11770  01      }
11771  00      
11772  00      
11773  00      
11774  00      
11775  00      
11776  00      
11777  00      
11778  00      void __vector_3(void) interrupt 3
11779  00      {
11780  01        EA = 0;
11781  01        PlatformInterruptC__INT_UART1_RX__fired();
11782  01        EA = 1;
11783  01      }
11784  00      
11785  00      
11786  00      
11787  00      
11788  00      
11789  00      
11790  00      void __vector_14(void) interrupt 14
11791  00      {
11792  01        EA = 0;
11793  01        PlatformInterruptC__INT_UART1_TX__fired();
11794  01        EA = 1;
11795  01      }
11796  00      
11797  00      
11798  00      
11799  00      
11800  00      
11801  00      
11802  00      
11803  00      void __vector_5(void) interrupt 5
11804  00      {
11805  01        EA = 0;
11806  01        PlatformInterruptC__INT_ST__fired();
11807  01        EA = 1;
11808  01      }
11809  00      
11810  00      
11811  00      
11812  00      
11813  00      
11814  00      
11815  00      
11816  00      void __vector_13(void) interrupt 13
11817  00      {
11818  01        EA = 0;
C51 COMPILER V9.01   APP                                                                   05/23/2018 09:43:06 PAGE 209 

11819  01        PlatformInterruptC__INT_P0__fired();
11820  01        EA = 1;
11821  01      }
11822  00      
11823  00      void __vector_15(void) interrupt 15
11824  00      {
11825  01        EA = 0;
11826  01        PlatformInterruptC__INT_P1__fired();
11827  01        EA = 1;
11828  01      }
11829  00      


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  20781    ----
   CONSTANT SIZE    =    808    ----
   XDATA SIZE       =   1840     920
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
